[{"url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/NoneCompressor.java", "rawCode": "/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage com.facebook.presto.rcfile;\n\nimport java.util.function.Supplier;\n\nclass NoneCompressor\n        implements RcFileCompressor\n{\n    @Override\n    public CompressedSliceOutput createCompressedSliceOutput(int minChunkSize, int maxChunkSize)\n    {\n        return new NoneCompressedSliceOutputSupplier(minChunkSize, maxChunkSize).get();\n    }\n\n    private static class NoneCompressedSliceOutputSupplier\n            implements Supplier<CompressedSliceOutput>\n    {\n        private final ChunkedSliceOutput chunkedSliceOutput;\n\n        private NoneCompressedSliceOutputSupplier(int minChunkSize, int maxChunkSize)\n        {\n            chunkedSliceOutput = new ChunkedSliceOutput(minChunkSize, maxChunkSize);\n        }\n\n        @Override\n        public CompressedSliceOutput get()\n        {\n            chunkedSliceOutput.reset();\n            return new CompressedSliceOutput(chunkedSliceOutput, chunkedSliceOutput, this, () -> {});\n        }\n    }\n}\n", "methodName": "RcFileCompressor$CompressedSliceOutput NoneCompressor.createCompressedSliceOutput(int,int)", "exampleID": 0, "dataset": "infer", "filepath": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/NoneCompressor.java", "source": "com.facebook.presto.rcfile.ChunkedSliceOutput", "sourceLine": 24, "qualifier": "Resource of type $$com.facebook.presto.rcfile.ChunkedSliceOutput/$ acquired by call to @@NoneCompressor$NoneCompressedSliceOutputSupplier(...)/@ is not released", "steps": [{"line": 38, "source": "com.facebook.presto.rcfile.ChunkedSliceOutput", "filepath": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/NoneCompressor.java", "methodName": "NoneCompressor.NoneCompressor$NoneCompressedSliceOutputSupplier", "exampleID": 1}], "line_number": 24, "records": [{"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/NoneCompressor.java", "line_number": 32, "column_number": -1, "description": "start of procedure NoneCompressor$NoneCompressedSliceOutputSupplier(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "NoneCompressor$NoneCompressedSliceOutputSupplier.<init>(int,int)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.NoneCompressor$NoneCompressedSliceOutputSupplier.<init>(int,int).f03370793b7a6fa92153b2fdeea392c6"}], "snippet": "        private NoneCompressedSliceOutputSupplier(int minChunkSize, int maxChunkSize)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/NoneCompressor.java", "methodName": "NoneCompressor$NoneCompressedSliceOutputSupplier"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/NoneCompressor.java", "line_number": 33, "column_number": -1, "description": "", "node_tags": [], "snippet": "        {", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/NoneCompressor.java", "methodName": "NoneCompressor$NoneCompressedSliceOutputSupplier"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/NoneCompressor.java", "line_number": 34, "column_number": -1, "description": "", "node_tags": [], "snippet": "            chunkedSliceOutput = new ChunkedSliceOutput(minChunkSize, maxChunkSize);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/NoneCompressor.java", "methodName": "NoneCompressor$NoneCompressedSliceOutputSupplier"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 65, "column_number": -1, "description": "start of procedure ChunkedSliceOutput(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "ChunkedSliceOutput.<init>(int,int)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.ChunkedSliceOutput.<init>(int,int).dcc3ef3d7139493265a20a0db2acddab"}], "snippet": "    public ChunkedSliceOutput(int minChunkSize, int maxChunkSize)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 66, "column_number": -1, "description": "Skipping SliceOutput(): unknown method", "node_tags": [], "snippet": "    {", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 52, "column_number": -1, "description": "", "node_tags": [], "snippet": "    private final List<Slice> closedSlices = new ArrayList<>();", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 67, "column_number": -1, "description": "", "node_tags": [], "snippet": "        this.chunkSupplier = new ChunkSupplier(minChunkSize, maxChunkSize);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 354, "column_number": -1, "description": "start of procedure ChunkedSliceOutput$ChunkSupplier(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "ChunkedSliceOutput$ChunkSupplier.<init>(int,int)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.ChunkedSliceOutput$ChunkSupplier.<init>(int,int).6c64b5dd5303403757eb03242b60311c"}], "snippet": "        public ChunkSupplier(int minChunkSize, int maxChunkSize)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput$ChunkSupplier"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 355, "column_number": -1, "description": "", "node_tags": [], "snippet": "        {", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput$ChunkSupplier"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 349, "column_number": -1, "description": "", "node_tags": [], "snippet": "        private final List<byte[]> bufferPool = new ArrayList<>();", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput$ChunkSupplier"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 350, "column_number": -1, "description": "", "node_tags": [], "snippet": "        private final List<byte[]> usedBuffers = new ArrayList<>();", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput$ChunkSupplier"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 356, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "            checkArgument(minChunkSize >= MINIMUM_CHUNK_SIZE, \"minimum chunk size of \" + MINIMUM_CHUNK_SIZE + \" required\");", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput$ChunkSupplier"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 357, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "            checkArgument(maxChunkSize <= MAXIMUM_CHUNK_SIZE, \"maximum chunk size of \" + MAXIMUM_CHUNK_SIZE + \" required\");", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput$ChunkSupplier"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 358, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "            checkArgument(minChunkSize <= maxChunkSize, \"minimum chunk size must be less than maximum chunk size\");", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput$ChunkSupplier"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 360, "column_number": -1, "description": "", "node_tags": [], "snippet": "            this.currentSize = minChunkSize;", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput$ChunkSupplier"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 361, "column_number": -1, "description": "", "node_tags": [], "snippet": "            this.maxChunkSize = maxChunkSize;", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput$ChunkSupplier"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 362, "column_number": -1, "description": "return from a call to ChunkedSliceOutput$ChunkSupplier.<init>(int,int)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "ChunkedSliceOutput$ChunkSupplier.<init>(int,int)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.ChunkedSliceOutput$ChunkSupplier.<init>(int,int).6c64b5dd5303403757eb03242b60311c"}], "snippet": "        }", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput$ChunkSupplier"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 67, "column_number": -1, "description": "", "node_tags": [], "snippet": "        this.chunkSupplier = new ChunkSupplier(minChunkSize, maxChunkSize);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 69, "column_number": -1, "description": "", "node_tags": [], "snippet": "        this.buffer = chunkSupplier.get();", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 370, "column_number": -1, "description": "start of procedure get()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "byte[] ChunkedSliceOutput$ChunkSupplier.get()"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.ChunkedSliceOutput$ChunkSupplier.get():byte[].77d224f45f2101d77750ac4d709293f2"}], "snippet": "        public byte[] get()", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "methodName": "get"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 373, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "            if (bufferPool.isEmpty()) {", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "methodName": "get"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 374, "column_number": -1, "description": "", "node_tags": [], "snippet": "                currentSize = min(multiplyExact(currentSize, 2), maxChunkSize);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "methodName": "get"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 375, "column_number": -1, "description": "", "node_tags": [], "snippet": "                buffer = new byte[currentSize];", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "methodName": "get"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 381, "column_number": -1, "description": "Skipping add(...): unknown method", "node_tags": [], "snippet": "            usedBuffers.add(buffer);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "methodName": "get"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 382, "column_number": -1, "description": "return from a call to byte[] ChunkedSliceOutput$ChunkSupplier.get()", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "byte[] ChunkedSliceOutput$ChunkSupplier.get()"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.ChunkedSliceOutput$ChunkSupplier.get():byte[].77d224f45f2101d77750ac4d709293f2"}], "snippet": "            return buffer;", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "methodName": "get"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 69, "column_number": -1, "description": "", "node_tags": [], "snippet": "        this.buffer = chunkSupplier.get();", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 70, "column_number": -1, "description": "", "node_tags": [], "snippet": "        this.slice = Slices.wrappedBuffer(buffer);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 71, "column_number": -1, "description": "return from a call to ChunkedSliceOutput.<init>(int,int)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "ChunkedSliceOutput.<init>(int,int)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.ChunkedSliceOutput.<init>(int,int).dcc3ef3d7139493265a20a0db2acddab"}], "snippet": "    }", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/NoneCompressor.java", "line_number": 34, "column_number": -1, "description": "", "node_tags": [], "snippet": "            chunkedSliceOutput = new ChunkedSliceOutput(minChunkSize, maxChunkSize);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/NoneCompressor.java", "methodName": "NoneCompressor$NoneCompressedSliceOutputSupplier"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/NoneCompressor.java", "line_number": 35, "column_number": -1, "description": "return from a call to NoneCompressor$NoneCompressedSliceOutputSupplier.<init>(int,int)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "NoneCompressor$NoneCompressedSliceOutputSupplier.<init>(int,int)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.NoneCompressor$NoneCompressedSliceOutputSupplier.<init>(int,int).f03370793b7a6fa92153b2fdeea392c6"}], "snippet": "        }", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/NoneCompressor.java", "methodName": "NoneCompressor$NoneCompressedSliceOutputSupplier"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/NoneCompressor.java", "line_number": 38, "column_number": -1, "description": "Definition of get()", "node_tags": [], "snippet": "        public CompressedSliceOutput get()", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/NoneCompressor.java", "methodName": "get"}], "combined_records": [{"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/NoneCompressor.java", "line_number": 34, "column_number": -1, "description": "start of procedure NoneCompressor$NoneCompressedSliceOutputSupplier(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "NoneCompressor$NoneCompressedSliceOutputSupplier.<init>(int,int)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.NoneCompressor$NoneCompressedSliceOutputSupplier.<init>(int,int).f03370793b7a6fa92153b2fdeea392c6"}], "snippet": "30.\n31.        private NoneCompressedSliceOutputSupplier(int minChunkSize, int maxChunkSize)\n32.>         {\n33.>             chunkedSliceOutput = new ChunkedSliceOutput(minChunkSize, maxChunkSize);\n34.        }\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/NoneCompressor.java", "methodName": "NoneCompressor$NoneCompressedSliceOutputSupplier", "line_numbers": [32, 33, 34]}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 67, "column_number": -1, "description": "start of procedure ChunkedSliceOutput(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "ChunkedSliceOutput.<init>(int,int)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.ChunkedSliceOutput.<init>(int,int).dcc3ef3d7139493265a20a0db2acddab"}], "snippet": "50.\n51.    private final List<Slice> closedSlices = new ArrayList<>();\n52.>     private long closedSlicesRetainedSize;\n53.\n54.    /**\n55.     * Offset of buffer within stream.\n56.     */\n57.    private long streamOffset;\n58.\n59.    /**\n60.     * Current position for writing in buffer.\n61.     */\n62.    private int bufferPosition;\n63.\n64.    public ChunkedSliceOutput(int minChunkSize, int maxChunkSize)\n65.>     {\n66.>         this.chunkSupplier = new ChunkSupplier(minChunkSize, maxChunkSize);\n67.> \n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput", "line_numbers": [65, 66, 52, 67]}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 362, "column_number": -1, "description": "start of procedure ChunkedSliceOutput$ChunkSupplier(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "ChunkedSliceOutput$ChunkSupplier.<init>(int,int)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.ChunkedSliceOutput$ChunkSupplier.<init>(int,int).6c64b5dd5303403757eb03242b60311c"}], "snippet": "347.\n348.        private final List<byte[]> bufferPool = new ArrayList<>();\n349.>         private final List<byte[]> usedBuffers = new ArrayList<>();\n350.> \n351.        private int currentSize;\n352.\n353.        public ChunkSupplier(int minChunkSize, int maxChunkSize)\n354.>         {\n355.>             checkArgument(minChunkSize >= MINIMUM_CHUNK_SIZE, \"minimum chunk size of \" + MINIMUM_CHUNK_SIZE + \" required\");\n356.>             checkArgument(maxChunkSize <= MAXIMUM_CHUNK_SIZE, \"maximum chunk size of \" + MAXIMUM_CHUNK_SIZE + \" required\");\n357.>             checkArgument(minChunkSize <= maxChunkSize, \"minimum chunk size must be less than maximum chunk size\");\n358.> \n359.            this.currentSize = minChunkSize;\n360.>             this.maxChunkSize = maxChunkSize;\n361.        }\n362.> \n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput$ChunkSupplier", "line_numbers": [354, 355, 349, 350, 356, 357, 358, 360, 361, 362]}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 69, "column_number": -1, "description": "", "node_tags": [], "snippet": "65.    {\n66.        this.chunkSupplier = new ChunkSupplier(minChunkSize, maxChunkSize);\n67.> \n68.        this.buffer = chunkSupplier.get();\n69.>         this.slice = Slices.wrappedBuffer(buffer);\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput", "line_numbers": [67, 69]}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 382, "column_number": -1, "description": "start of procedure get()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "byte[] ChunkedSliceOutput$ChunkSupplier.get()"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.ChunkedSliceOutput$ChunkSupplier.get():byte[].77d224f45f2101d77750ac4d709293f2"}], "snippet": "368.\n369.        public byte[] get()\n370.>         {\n371.            byte[] buffer;\n372.            if (bufferPool.isEmpty()) {\n373.>                 currentSize = min(multiplyExact(currentSize, 2), maxChunkSize);\n374.>                 buffer = new byte[currentSize];\n375.            }\n376.            else {\n377.                buffer = bufferPool.remove(0);\n378.                currentSize = buffer.length;\n379.            }\n380.            usedBuffers.add(buffer);\n381.>             return buffer;\n382.        }\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "methodName": "get", "line_numbers": [370, 373, 374, 375, 381, 382]}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 71, "column_number": -1, "description": "", "node_tags": [], "snippet": "67.\n68.        this.buffer = chunkSupplier.get();\n69.>         this.slice = Slices.wrappedBuffer(buffer);\n70.    }\n71.> \n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput", "line_numbers": [69, 70, 71]}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/NoneCompressor.java", "line_number": 35, "column_number": -1, "description": "", "node_tags": [], "snippet": "32.        {\n33.            chunkedSliceOutput = new ChunkedSliceOutput(minChunkSize, maxChunkSize);\n34.        }\n35.> \n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/NoneCompressor.java", "methodName": "NoneCompressor$NoneCompressedSliceOutputSupplier", "line_numbers": [34, 35]}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/NoneCompressor.java", "line_number": 38, "column_number": -1, "description": "Definition of get()", "node_tags": [], "snippet": "36.        @Override\n37.        public CompressedSliceOutput get()\n38.>         {\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/NoneCompressor.java", "methodName": "get", "line_numbers": [38]}], "infer_explore": [{"level": 0, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/NoneCompressor.java", "line_number": 22, "column_number": -1, "description": "start of procedure createCompressedSliceOutput(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "RcFileCompressor$CompressedSliceOutput NoneCompressor.createCompressedSliceOutput(int,int)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.NoneCompressor.createCompressedSliceOutput(int,int):com.facebook.presto.r.92ce986196d8260c2e74f5b5eb3640af"}], "snippet": "19. {\n20.     @Override\n21. >     public CompressedSliceOutput createCompressedSliceOutput(int minChunkSize, int maxChunkSize)\n22.     {\n23.         return new NoneCompressedSliceOutputSupplier(minChunkSize, maxChunkSize).get();\n"}, {"level": 0, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/NoneCompressor.java", "line_number": 24, "column_number": -1, "description": "", "node_tags": [], "snippet": "21.     public CompressedSliceOutput createCompressedSliceOutput(int minChunkSize, int maxChunkSize)\n22.     {\n23. >         return new NoneCompressedSliceOutputSupplier(minChunkSize, maxChunkSize).get();\n24.     }\n25. \n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/NoneCompressor.java", "line_number": 32, "column_number": -1, "description": "start of procedure NoneCompressor$NoneCompressedSliceOutputSupplier(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "NoneCompressor$NoneCompressedSliceOutputSupplier.<init>(int,int)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.NoneCompressor$NoneCompressedSliceOutputSupplier.<init>(int,int).f03370793b7a6fa92153b2fdeea392c6"}], "snippet": "29.         private final ChunkedSliceOutput chunkedSliceOutput;\n30. \n31. >         private NoneCompressedSliceOutputSupplier(int minChunkSize, int maxChunkSize)\n32.         {\n33.             chunkedSliceOutput = new ChunkedSliceOutput(minChunkSize, maxChunkSize);\n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/NoneCompressor.java", "line_number": 33, "column_number": -1, "description": "", "node_tags": [], "snippet": "30. \n31.         private NoneCompressedSliceOutputSupplier(int minChunkSize, int maxChunkSize)\n32. >         {\n33.             chunkedSliceOutput = new ChunkedSliceOutput(minChunkSize, maxChunkSize);\n34.         }\n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/NoneCompressor.java", "line_number": 34, "column_number": -1, "description": "", "node_tags": [], "snippet": "31.         private NoneCompressedSliceOutputSupplier(int minChunkSize, int maxChunkSize)\n32.         {\n33. >             chunkedSliceOutput = new ChunkedSliceOutput(minChunkSize, maxChunkSize);\n34.         }\n35. \n"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 65, "column_number": -1, "description": "start of procedure ChunkedSliceOutput(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "ChunkedSliceOutput.<init>(int,int)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.ChunkedSliceOutput.<init>(int,int).dcc3ef3d7139493265a20a0db2acddab"}], "snippet": "62.     private int bufferPosition;\n63. \n64. >     public ChunkedSliceOutput(int minChunkSize, int maxChunkSize)\n65.     {\n66.         this.chunkSupplier = new ChunkSupplier(minChunkSize, maxChunkSize);\n"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 66, "column_number": -1, "description": "Skipping SliceOutput(): unknown method", "node_tags": [], "snippet": "63. \n64.     public ChunkedSliceOutput(int minChunkSize, int maxChunkSize)\n65. >     {\n66.         this.chunkSupplier = new ChunkSupplier(minChunkSize, maxChunkSize);\n67. \n"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 52, "column_number": -1, "description": "", "node_tags": [], "snippet": "49.     private byte[] buffer;\n50. \n51. >     private final List<Slice> closedSlices = new ArrayList<>();\n52.     private long closedSlicesRetainedSize;\n53. \n"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 67, "column_number": -1, "description": "", "node_tags": [], "snippet": "64.     public ChunkedSliceOutput(int minChunkSize, int maxChunkSize)\n65.     {\n66. >         this.chunkSupplier = new ChunkSupplier(minChunkSize, maxChunkSize);\n67. \n68.         this.buffer = chunkSupplier.get();\n"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 354, "column_number": -1, "description": "start of procedure ChunkedSliceOutput$ChunkSupplier(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "ChunkedSliceOutput$ChunkSupplier.<init>(int,int)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.ChunkedSliceOutput$ChunkSupplier.<init>(int,int).6c64b5dd5303403757eb03242b60311c"}], "snippet": "351.         private int currentSize;\n352. \n353. >         public ChunkSupplier(int minChunkSize, int maxChunkSize)\n354.         {\n355.             checkArgument(minChunkSize >= MINIMUM_CHUNK_SIZE, \"minimum chunk size of \" + MINIMUM_CHUNK_SIZE + \" required\");\n"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 355, "column_number": -1, "description": "", "node_tags": [], "snippet": "352. \n353.         public ChunkSupplier(int minChunkSize, int maxChunkSize)\n354. >         {\n355.             checkArgument(minChunkSize >= MINIMUM_CHUNK_SIZE, \"minimum chunk size of \" + MINIMUM_CHUNK_SIZE + \" required\");\n356.             checkArgument(maxChunkSize <= MAXIMUM_CHUNK_SIZE, \"maximum chunk size of \" + MAXIMUM_CHUNK_SIZE + \" required\");\n"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 349, "column_number": -1, "description": "", "node_tags": [], "snippet": "346.         private final int maxChunkSize;\n347. \n348. >         private final List<byte[]> bufferPool = new ArrayList<>();\n349.         private final List<byte[]> usedBuffers = new ArrayList<>();\n350. \n"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 350, "column_number": -1, "description": "", "node_tags": [], "snippet": "347. \n348.         private final List<byte[]> bufferPool = new ArrayList<>();\n349. >         private final List<byte[]> usedBuffers = new ArrayList<>();\n350. \n351.         private int currentSize;\n"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 356, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "353.         public ChunkSupplier(int minChunkSize, int maxChunkSize)\n354.         {\n355. >             checkArgument(minChunkSize >= MINIMUM_CHUNK_SIZE, \"minimum chunk size of \" + MINIMUM_CHUNK_SIZE + \" required\");\n356.             checkArgument(maxChunkSize <= MAXIMUM_CHUNK_SIZE, \"maximum chunk size of \" + MAXIMUM_CHUNK_SIZE + \" required\");\n357.             checkArgument(minChunkSize <= maxChunkSize, \"minimum chunk size must be less than maximum chunk size\");\n"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 357, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "354.         {\n355.             checkArgument(minChunkSize >= MINIMUM_CHUNK_SIZE, \"minimum chunk size of \" + MINIMUM_CHUNK_SIZE + \" required\");\n356. >             checkArgument(maxChunkSize <= MAXIMUM_CHUNK_SIZE, \"maximum chunk size of \" + MAXIMUM_CHUNK_SIZE + \" required\");\n357.             checkArgument(minChunkSize <= maxChunkSize, \"minimum chunk size must be less than maximum chunk size\");\n358. \n"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 358, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "355.             checkArgument(minChunkSize >= MINIMUM_CHUNK_SIZE, \"minimum chunk size of \" + MINIMUM_CHUNK_SIZE + \" required\");\n356.             checkArgument(maxChunkSize <= MAXIMUM_CHUNK_SIZE, \"maximum chunk size of \" + MAXIMUM_CHUNK_SIZE + \" required\");\n357. >             checkArgument(minChunkSize <= maxChunkSize, \"minimum chunk size must be less than maximum chunk size\");\n358. \n359.             this.currentSize = minChunkSize;\n"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 360, "column_number": -1, "description": "", "node_tags": [], "snippet": "357.             checkArgument(minChunkSize <= maxChunkSize, \"minimum chunk size must be less than maximum chunk size\");\n358. \n359. >             this.currentSize = minChunkSize;\n360.             this.maxChunkSize = maxChunkSize;\n361.         }\n"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 361, "column_number": -1, "description": "", "node_tags": [], "snippet": "358. \n359.             this.currentSize = minChunkSize;\n360. >             this.maxChunkSize = maxChunkSize;\n361.         }\n362. \n"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 362, "column_number": -1, "description": "return from a call to ChunkedSliceOutput$ChunkSupplier.<init>(int,int)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "ChunkedSliceOutput$ChunkSupplier.<init>(int,int)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.ChunkedSliceOutput$ChunkSupplier.<init>(int,int).6c64b5dd5303403757eb03242b60311c"}], "snippet": "359.             this.currentSize = minChunkSize;\n360.             this.maxChunkSize = maxChunkSize;\n361. >         }\n362. \n363.         public void reset()\n"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 67, "column_number": -1, "description": "", "node_tags": [], "snippet": "64.     public ChunkedSliceOutput(int minChunkSize, int maxChunkSize)\n65.     {\n66. >         this.chunkSupplier = new ChunkSupplier(minChunkSize, maxChunkSize);\n67. \n68.         this.buffer = chunkSupplier.get();\n"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 69, "column_number": -1, "description": "", "node_tags": [], "snippet": "66.         this.chunkSupplier = new ChunkSupplier(minChunkSize, maxChunkSize);\n67. \n68. >         this.buffer = chunkSupplier.get();\n69.         this.slice = Slices.wrappedBuffer(buffer);\n70.     }\n"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 370, "column_number": -1, "description": "start of procedure get()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "byte[] ChunkedSliceOutput$ChunkSupplier.get()"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.ChunkedSliceOutput$ChunkSupplier.get():byte[].77d224f45f2101d77750ac4d709293f2"}], "snippet": "367.         }\n368. \n369. >         public byte[] get()\n370.         {\n371.             byte[] buffer;\n"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 373, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "370.         {\n371.             byte[] buffer;\n372. >             if (bufferPool.isEmpty()) {\n373.                 currentSize = min(multiplyExact(currentSize, 2), maxChunkSize);\n374.                 buffer = new byte[currentSize];\n"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 374, "column_number": -1, "description": "", "node_tags": [], "snippet": "371.             byte[] buffer;\n372.             if (bufferPool.isEmpty()) {\n373. >                 currentSize = min(multiplyExact(currentSize, 2), maxChunkSize);\n374.                 buffer = new byte[currentSize];\n375.             }\n"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 375, "column_number": -1, "description": "", "node_tags": [], "snippet": "372.             if (bufferPool.isEmpty()) {\n373.                 currentSize = min(multiplyExact(currentSize, 2), maxChunkSize);\n374. >                 buffer = new byte[currentSize];\n375.             }\n376.             else {\n"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 381, "column_number": -1, "description": "Skipping add(...): unknown method", "node_tags": [], "snippet": "378.                 currentSize = buffer.length;\n379.             }\n380. >             usedBuffers.add(buffer);\n381.             return buffer;\n382.         }\n"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 382, "column_number": -1, "description": "return from a call to byte[] ChunkedSliceOutput$ChunkSupplier.get()", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "byte[] ChunkedSliceOutput$ChunkSupplier.get()"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.ChunkedSliceOutput$ChunkSupplier.get():byte[].77d224f45f2101d77750ac4d709293f2"}], "snippet": "379.             }\n380.             usedBuffers.add(buffer);\n381. >             return buffer;\n382.         }\n383.     }\n"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 69, "column_number": -1, "description": "", "node_tags": [], "snippet": "66.         this.chunkSupplier = new ChunkSupplier(minChunkSize, maxChunkSize);\n67. \n68. >         this.buffer = chunkSupplier.get();\n69.         this.slice = Slices.wrappedBuffer(buffer);\n70.     }\n"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 70, "column_number": -1, "description": "", "node_tags": [], "snippet": "67. \n68.         this.buffer = chunkSupplier.get();\n69. >         this.slice = Slices.wrappedBuffer(buffer);\n70.     }\n71. \n"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 71, "column_number": -1, "description": "return from a call to ChunkedSliceOutput.<init>(int,int)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "ChunkedSliceOutput.<init>(int,int)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.ChunkedSliceOutput.<init>(int,int).dcc3ef3d7139493265a20a0db2acddab"}], "snippet": "68.         this.buffer = chunkSupplier.get();\n69.         this.slice = Slices.wrappedBuffer(buffer);\n70. >     }\n71. \n72.     public List<Slice> getSlices()\n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/NoneCompressor.java", "line_number": 34, "column_number": -1, "description": "", "node_tags": [], "snippet": "31.         private NoneCompressedSliceOutputSupplier(int minChunkSize, int maxChunkSize)\n32.         {\n33. >             chunkedSliceOutput = new ChunkedSliceOutput(minChunkSize, maxChunkSize);\n34.         }\n35. \n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/NoneCompressor.java", "line_number": 35, "column_number": -1, "description": "return from a call to NoneCompressor$NoneCompressedSliceOutputSupplier.<init>(int,int)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "NoneCompressor$NoneCompressedSliceOutputSupplier.<init>(int,int)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.NoneCompressor$NoneCompressedSliceOutputSupplier.<init>(int,int).f03370793b7a6fa92153b2fdeea392c6"}], "snippet": "32.         {\n33.             chunkedSliceOutput = new ChunkedSliceOutput(minChunkSize, maxChunkSize);\n34. >         }\n35. \n36.         @Override\n"}, {"level": 0, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/NoneCompressor.java", "line_number": 24, "column_number": -1, "description": "Skipping get(): empty list of specs", "node_tags": [], "snippet": "21.     public CompressedSliceOutput createCompressedSliceOutput(int minChunkSize, int maxChunkSize)\n22.     {\n23. >         return new NoneCompressedSliceOutputSupplier(minChunkSize, maxChunkSize).get();\n24.     }\n25. \n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/NoneCompressor.java", "line_number": 38, "column_number": -1, "description": "Definition of get()", "node_tags": [], "snippet": "35. \n36.         @Override\n37. >         public CompressedSliceOutput get()\n38.         {\n39.             chunkedSliceOutput.reset();\n"}]}, {"url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-spi/src/test/java/com/facebook/presto/spi/block/TestVariableWidthBlockEncoding.java", "rawCode": "/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage com.facebook.presto.spi.block;\n\nimport com.facebook.presto.spi.type.Type;\nimport io.airlift.slice.DynamicSliceOutput;\nimport org.testng.annotations.Test;\n\nimport static com.facebook.presto.spi.block.TestingSession.SESSION;\nimport static com.facebook.presto.spi.type.VarcharType.VARCHAR;\nimport static org.testng.Assert.assertEquals;\n\npublic class TestVariableWidthBlockEncoding\n{\n    @Test\n    public void testRoundTrip()\n    {\n        BlockBuilder expectedBlockBuilder = VARCHAR.createBlockBuilder(new BlockBuilderStatus(), 4);\n        VARCHAR.writeString(expectedBlockBuilder, \"alice\");\n        VARCHAR.writeString(expectedBlockBuilder, \"bob\");\n        VARCHAR.writeString(expectedBlockBuilder, \"charlie\");\n        VARCHAR.writeString(expectedBlockBuilder, \"dave\");\n        Block expectedBlock = expectedBlockBuilder.build();\n\n        DynamicSliceOutput sliceOutput = new DynamicSliceOutput(1024);\n        BlockEncoding blockEncoding = new VariableWidthBlockEncoding();\n        blockEncoding.writeBlock(sliceOutput, expectedBlock);\n        Block actualBlock = blockEncoding.readBlock(sliceOutput.slice().getInput());\n        assertBlockEquals(VARCHAR, actualBlock, expectedBlock);\n    }\n\n    private static void assertBlockEquals(Type type, Block actual, Block expected)\n    {\n        for (int position = 0; position < actual.getPositionCount(); position++) {\n            assertEquals(type.getObjectValue(SESSION, actual, position), type.getObjectValue(SESSION, expected, position));\n        }\n    }\n}\n", "methodName": "void TestVariableWidthBlockEncoding.testRoundTrip()", "exampleID": 2, "dataset": "infer", "filepath": "presto-spi/src/test/java/com/facebook/presto/spi/block/TestVariableWidthBlockEncoding.java", "source": "io.airlift.slice.DynamicSliceOutput", "sourceLine": 36, "qualifier": "Resource of type $$io.airlift.slice.DynamicSliceOutput/$ acquired by call to @@new()/@ is not released", "steps": [{"line": 26, "source": "io.airlift.slice.DynamicSliceOutput", "filepath": "presto-spi/src/main/java/com/facebook/presto/spi/block/VariableWidthBlockEncoding.java", "methodName": "VariableWidthBlockEncoding.VariableWidthBlockEncoding", "exampleID": 3}], "line_number": 36, "records": [{"level": 1, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/block/VariableWidthBlockEncoding.java", "line_number": 26, "column_number": -1, "description": "start of procedure VariableWidthBlockEncoding()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "VariableWidthBlockEncoding.<init>()"}, {"tag": "name_id", "value": "com.facebook.presto.spi.block.VariableWidthBlockEncoding.<init>().580ee2c88a7213fe4e503b616d9bcdea"}], "snippet": "public class VariableWidthBlockEncoding", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-spi/src/main/java/com/facebook/presto/spi/block/VariableWidthBlockEncoding.java", "methodName": "VariableWidthBlockEncoding"}, {"level": 1, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/block/VariableWidthBlockEncoding.java", "line_number": 26, "column_number": -1, "description": "return from a call to VariableWidthBlockEncoding.<init>()", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "VariableWidthBlockEncoding.<init>()"}, {"tag": "name_id", "value": "com.facebook.presto.spi.block.VariableWidthBlockEncoding.<init>().580ee2c88a7213fe4e503b616d9bcdea"}], "snippet": "public class VariableWidthBlockEncoding", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-spi/src/main/java/com/facebook/presto/spi/block/VariableWidthBlockEncoding.java", "methodName": "VariableWidthBlockEncoding"}, {"level": 1, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/block/VariableWidthBlockEncoding.java", "line_number": 39, "column_number": -1, "description": "start of procedure writeBlock(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void VariableWidthBlockEncoding.writeBlock(DynamicSliceOutput,VariableWidthBlock)"}, {"tag": "name_id", "value": "com.facebook.presto.spi.block.VariableWidthBlockEncoding.writeBlock(io.airlift.slice.DynamicSliceOut.1ea20528a004719e0e1b82c3710c5e37"}], "snippet": "    public void writeBlock(SliceOutput sliceOutput, Block block)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-spi/src/main/java/com/facebook/presto/spi/block/VariableWidthBlockEncoding.java", "methodName": "writeBlock"}, {"level": 1, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/block/VariableWidthBlockEncoding.java", "line_number": 42, "column_number": -1, "description": "", "node_tags": [], "snippet": "        AbstractVariableWidthBlock variableWidthBlock = (AbstractVariableWidthBlock) block;", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-spi/src/main/java/com/facebook/presto/spi/block/VariableWidthBlockEncoding.java", "methodName": "writeBlock"}, {"level": 1, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/block/VariableWidthBlockEncoding.java", "line_number": 44, "column_number": -1, "description": "Skipping getPositionCount(): unknown method", "node_tags": [], "snippet": "        int positionCount = variableWidthBlock.getPositionCount();", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-spi/src/main/java/com/facebook/presto/spi/block/VariableWidthBlockEncoding.java", "methodName": "writeBlock"}, {"level": 1, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/block/VariableWidthBlockEncoding.java", "line_number": 45, "column_number": -1, "description": "Skipping appendInt(...): unknown method", "node_tags": [], "snippet": "        sliceOutput.appendInt(positionCount);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-spi/src/main/java/com/facebook/presto/spi/block/VariableWidthBlockEncoding.java", "methodName": "writeBlock"}, {"level": 1, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/block/VariableWidthBlockEncoding.java", "line_number": 48, "column_number": -1, "description": "", "node_tags": [], "snippet": "        int totalLength = 0;", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-spi/src/main/java/com/facebook/presto/spi/block/VariableWidthBlockEncoding.java", "methodName": "writeBlock"}, {"level": 1, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/block/VariableWidthBlockEncoding.java", "line_number": 49, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "        for (int position = 0; position < positionCount; position++) {", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-spi/src/main/java/com/facebook/presto/spi/block/VariableWidthBlockEncoding.java", "methodName": "writeBlock"}, {"level": 1, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/block/VariableWidthBlockEncoding.java", "line_number": 50, "column_number": -1, "description": "Skipping getSliceLength(...): unknown method", "node_tags": [], "snippet": "            int length = variableWidthBlock.getSliceLength(position);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-spi/src/main/java/com/facebook/presto/spi/block/VariableWidthBlockEncoding.java", "methodName": "writeBlock"}, {"level": 1, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/block/VariableWidthBlockEncoding.java", "line_number": 51, "column_number": -1, "description": "", "node_tags": [], "snippet": "            totalLength += length;", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-spi/src/main/java/com/facebook/presto/spi/block/VariableWidthBlockEncoding.java", "methodName": "writeBlock"}, {"level": 1, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/block/VariableWidthBlockEncoding.java", "line_number": 52, "column_number": -1, "description": "Skipping appendInt(...): unknown method", "node_tags": [], "snippet": "            sliceOutput.appendInt(totalLength);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-spi/src/main/java/com/facebook/presto/spi/block/VariableWidthBlockEncoding.java", "methodName": "writeBlock"}, {"level": 1, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/block/VariableWidthBlockEncoding.java", "line_number": 49, "column_number": -1, "description": "Taking false branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "false"}], "snippet": "        for (int position = 0; position < positionCount; position++) {", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-spi/src/main/java/com/facebook/presto/spi/block/VariableWidthBlockEncoding.java", "methodName": "writeBlock"}, {"level": 1, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/block/VariableWidthBlockEncoding.java", "line_number": 55, "column_number": -1, "description": "Skipping encodeNullsAsBits(...): empty list of specs", "node_tags": [], "snippet": "        encodeNullsAsBits(sliceOutput, variableWidthBlock);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-spi/src/main/java/com/facebook/presto/spi/block/VariableWidthBlockEncoding.java", "methodName": "writeBlock"}, {"level": 2, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/block/EncoderUtil.java", "line_number": 29, "column_number": -1, "description": "Definition of encodeNullsAsBits(...)", "node_tags": [], "snippet": "    public static void encodeNullsAsBits(SliceOutput sliceOutput, Block block)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-spi/src/main/java/com/facebook/presto/spi/block/EncoderUtil.java", "methodName": "encodeNullsAsBits"}, {"level": 1, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/block/VariableWidthBlockEncoding.java", "line_number": 58, "column_number": -1, "description": "Skipping appendInt(...): unknown method", "node_tags": [], "snippet": "                .appendInt(totalLength)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-spi/src/main/java/com/facebook/presto/spi/block/VariableWidthBlockEncoding.java", "methodName": "encodeNullsAsBits"}, {"level": 1, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/block/VariableWidthBlockEncoding.java", "line_number": 59, "column_number": -1, "description": "Skipping writeBytes(...): unknown method", "node_tags": [], "snippet": "                .writeBytes(variableWidthBlock.getRawSlice(0), variableWidthBlock.getPositionOffset(0), totalLength);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-spi/src/main/java/com/facebook/presto/spi/block/VariableWidthBlockEncoding.java", "methodName": "encodeNullsAsBits"}, {"level": 1, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/block/VariableWidthBlockEncoding.java", "line_number": 60, "column_number": -1, "description": "return from a call to void VariableWidthBlockEncoding.writeBlock(DynamicSliceOutput,VariableWidthBlock)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "void VariableWidthBlockEncoding.writeBlock(DynamicSliceOutput,VariableWidthBlock)"}, {"tag": "name_id", "value": "com.facebook.presto.spi.block.VariableWidthBlockEncoding.writeBlock(io.airlift.slice.DynamicSliceOut.1ea20528a004719e0e1b82c3710c5e37"}], "snippet": "    }", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-spi/src/main/java/com/facebook/presto/spi/block/VariableWidthBlockEncoding.java", "methodName": "encodeNullsAsBits"}], "combined_records": [{"level": 1, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/block/VariableWidthBlockEncoding.java", "line_number": 26, "column_number": -1, "description": "start of procedure VariableWidthBlockEncoding()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "VariableWidthBlockEncoding.<init>()"}, {"tag": "name_id", "value": "com.facebook.presto.spi.block.VariableWidthBlockEncoding.<init>().580ee2c88a7213fe4e503b616d9bcdea"}], "snippet": "24.\n25.public class VariableWidthBlockEncoding\n26.>         implements BlockEncoding\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-spi/src/main/java/com/facebook/presto/spi/block/VariableWidthBlockEncoding.java", "methodName": "VariableWidthBlockEncoding", "line_numbers": [26, 26]}, {"level": 1, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/block/VariableWidthBlockEncoding.java", "line_number": 55, "column_number": -1, "description": "start of procedure writeBlock(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void VariableWidthBlockEncoding.writeBlock(DynamicSliceOutput,VariableWidthBlock)"}, {"tag": "name_id", "value": "com.facebook.presto.spi.block.VariableWidthBlockEncoding.writeBlock(io.airlift.slice.DynamicSliceOut.1ea20528a004719e0e1b82c3710c5e37"}], "snippet": "37.    @Override\n38.    public void writeBlock(SliceOutput sliceOutput, Block block)\n39.>     {\n40.        // The down casts here are safe because it is the block itself the provides this encoding implementation.\n41.        AbstractVariableWidthBlock variableWidthBlock = (AbstractVariableWidthBlock) block;\n42.> \n43.        int positionCount = variableWidthBlock.getPositionCount();\n44.>         sliceOutput.appendInt(positionCount);\n45.> \n46.        // offsets\n47.        int totalLength = 0;\n48.>         for (int position = 0; position < positionCount; position++) {\n49.>             int length = variableWidthBlock.getSliceLength(position);\n50.>             totalLength += length;\n51.>             sliceOutput.appendInt(totalLength);\n52.        }\n53.\n54.        encodeNullsAsBits(sliceOutput, variableWidthBlock);\n55.> \n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-spi/src/main/java/com/facebook/presto/spi/block/VariableWidthBlockEncoding.java", "methodName": "writeBlock", "line_numbers": [39, 42, 44, 45, 48, 49, 50, 51, 52, 49, 55]}, {"level": 2, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/block/EncoderUtil.java", "line_number": 29, "column_number": -1, "description": "Definition of encodeNullsAsBits(...)", "node_tags": [], "snippet": "27.    @SuppressWarnings({\"NarrowingCompoundAssignment\", \"ImplicitNumericConversion\"})\n28.    public static void encodeNullsAsBits(SliceOutput sliceOutput, Block block)\n29.>     {\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-spi/src/main/java/com/facebook/presto/spi/block/EncoderUtil.java", "methodName": "encodeNullsAsBits", "line_numbers": [29]}, {"level": 1, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/block/VariableWidthBlockEncoding.java", "line_number": 60, "column_number": -1, "description": "Skipping appendInt(...): unknown method", "node_tags": [], "snippet": "56.        sliceOutput\n57.                .appendInt(totalLength)\n58.>                 .writeBytes(variableWidthBlock.getRawSlice(0), variableWidthBlock.getPositionOffset(0), totalLength);\n59.    }\n60.> \n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-spi/src/main/java/com/facebook/presto/spi/block/VariableWidthBlockEncoding.java", "methodName": "encodeNullsAsBits", "line_numbers": [58, 59, 60]}], "infer_explore": [{"level": 0, "filename": "presto-spi/src/test/java/com/facebook/presto/spi/block/TestVariableWidthBlockEncoding.java", "line_number": 27, "column_number": -1, "description": "start of procedure testRoundTrip()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void TestVariableWidthBlockEncoding.testRoundTrip()"}, {"tag": "name_id", "value": "com.facebook.presto.spi.block.TestVariableWidthBlockEncoding.testRoundTrip():void.08b2ab752bd79eca9ba2b35106ce3cdf"}], "snippet": "24. {\n25.     @Test\n26. >     public void testRoundTrip()\n27.     {\n28.         BlockBuilder expectedBlockBuilder = VARCHAR.createBlockBuilder(new BlockBuilderStatus(), 4);\n"}, {"level": 0, "filename": "presto-spi/src/test/java/com/facebook/presto/spi/block/TestVariableWidthBlockEncoding.java", "line_number": 29, "column_number": -1, "description": "", "node_tags": [], "snippet": "26.     public void testRoundTrip()\n27.     {\n28. >         BlockBuilder expectedBlockBuilder = VARCHAR.createBlockBuilder(new BlockBuilderStatus(), 4);\n29.         VARCHAR.writeString(expectedBlockBuilder, \"alice\");\n30.         VARCHAR.writeString(expectedBlockBuilder, \"bob\");\n"}, {"level": 1, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/block/BlockBuilderStatus.java", "line_number": 34, "column_number": -1, "description": "start of procedure BlockBuilderStatus()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "BlockBuilderStatus.<init>()"}, {"tag": "name_id", "value": "com.facebook.presto.spi.block.BlockBuilderStatus.<init>().bf5bc83bba5af2cccb6e570c33a0c2d4"}], "snippet": "31.     private int currentSize;\n32. \n33. >     public BlockBuilderStatus()\n34.     {\n35.         // When this constructor is used, this class has no observable internal state (except getMaxBlockSizeInBytes).\n"}, {"level": 1, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/block/BlockBuilderStatus.java", "line_number": 38, "column_number": -1, "description": "", "node_tags": [], "snippet": "35.         // When this constructor is used, this class has no observable internal state (except getMaxBlockSizeInBytes).\n36.         // TODO: this constructor essentially constructs a black hole. This constructor and all its usage should probably be removed.\n37. >         this(new PageBuilderStatus(DEFAULT_MAX_PAGE_SIZE_IN_BYTES, DEFAULT_MAX_BLOCK_SIZE_IN_BYTES), DEFAULT_MAX_BLOCK_SIZE_IN_BYTES);\n38.     }\n39. \n"}, {"level": 2, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/block/PageBuilderStatus.java", "line_number": 33, "column_number": -1, "description": "start of procedure PageBuilderStatus(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "PageBuilderStatus.<init>(int,int)"}, {"tag": "name_id", "value": "com.facebook.presto.spi.block.PageBuilderStatus.<init>(int,int).ba5293c3ce9b1f8b200e7ab25c1e9179"}], "snippet": "30.     }\n31. \n32. >     public PageBuilderStatus(int maxPageSizeInBytes, int maxBlockSizeInBytes)\n33.     {\n34.         this.maxPageSizeInBytes = maxPageSizeInBytes;\n"}, {"level": 2, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/block/PageBuilderStatus.java", "line_number": 34, "column_number": -1, "description": "", "node_tags": [], "snippet": "31. \n32.     public PageBuilderStatus(int maxPageSizeInBytes, int maxBlockSizeInBytes)\n33. >     {\n34.         this.maxPageSizeInBytes = maxPageSizeInBytes;\n35.         this.maxBlockSizeInBytes = maxBlockSizeInBytes;\n"}, {"level": 2, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/block/PageBuilderStatus.java", "line_number": 35, "column_number": -1, "description": "", "node_tags": [], "snippet": "32.     public PageBuilderStatus(int maxPageSizeInBytes, int maxBlockSizeInBytes)\n33.     {\n34. >         this.maxPageSizeInBytes = maxPageSizeInBytes;\n35.         this.maxBlockSizeInBytes = maxBlockSizeInBytes;\n36.     }\n"}, {"level": 2, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/block/PageBuilderStatus.java", "line_number": 36, "column_number": -1, "description": "", "node_tags": [], "snippet": "33.     {\n34.         this.maxPageSizeInBytes = maxPageSizeInBytes;\n35. >         this.maxBlockSizeInBytes = maxBlockSizeInBytes;\n36.     }\n37. \n"}, {"level": 2, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/block/PageBuilderStatus.java", "line_number": 37, "column_number": -1, "description": "return from a call to PageBuilderStatus.<init>(int,int)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "PageBuilderStatus.<init>(int,int)"}, {"tag": "name_id", "value": "com.facebook.presto.spi.block.PageBuilderStatus.<init>(int,int).ba5293c3ce9b1f8b200e7ab25c1e9179"}], "snippet": "34.         this.maxPageSizeInBytes = maxPageSizeInBytes;\n35.         this.maxBlockSizeInBytes = maxBlockSizeInBytes;\n36. >     }\n37. \n38.     public BlockBuilderStatus createBlockBuilderStatus()\n"}, {"level": 1, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/block/BlockBuilderStatus.java", "line_number": 38, "column_number": -1, "description": "", "node_tags": [], "snippet": "35.         // When this constructor is used, this class has no observable internal state (except getMaxBlockSizeInBytes).\n36.         // TODO: this constructor essentially constructs a black hole. This constructor and all its usage should probably be removed.\n37. >         this(new PageBuilderStatus(DEFAULT_MAX_PAGE_SIZE_IN_BYTES, DEFAULT_MAX_BLOCK_SIZE_IN_BYTES), DEFAULT_MAX_BLOCK_SIZE_IN_BYTES);\n38.     }\n39. \n"}, {"level": 2, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/block/BlockBuilderStatus.java", "line_number": 41, "column_number": -1, "description": "start of procedure BlockBuilderStatus(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "BlockBuilderStatus.<init>(PageBuilderStatus,int)"}, {"tag": "name_id", "value": "com.facebook.presto.spi.block.BlockBuilderStatus.<init>(com.facebook.presto.spi.block.PageBuilderSta.1da551eba95b4a15dfb9dbb32cbcbbf5"}], "snippet": "38.     }\n39. \n40. >     BlockBuilderStatus(PageBuilderStatus pageBuilderStatus, int maxBlockSizeInBytes)\n41.     {\n42.         this.pageBuilderStatus = requireNonNull(pageBuilderStatus, \"pageBuilderStatus must not be null\");\n"}, {"level": 2, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/block/BlockBuilderStatus.java", "line_number": 42, "column_number": -1, "description": "", "node_tags": [], "snippet": "39. \n40.     BlockBuilderStatus(PageBuilderStatus pageBuilderStatus, int maxBlockSizeInBytes)\n41. >     {\n42.         this.pageBuilderStatus = requireNonNull(pageBuilderStatus, \"pageBuilderStatus must not be null\");\n43.         this.maxBlockSizeInBytes = maxBlockSizeInBytes;\n"}, {"level": 2, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/block/BlockBuilderStatus.java", "line_number": 43, "column_number": -1, "description": "", "node_tags": [], "snippet": "40.     BlockBuilderStatus(PageBuilderStatus pageBuilderStatus, int maxBlockSizeInBytes)\n41.     {\n42. >         this.pageBuilderStatus = requireNonNull(pageBuilderStatus, \"pageBuilderStatus must not be null\");\n43.         this.maxBlockSizeInBytes = maxBlockSizeInBytes;\n44.     }\n"}, {"level": 2, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/block/BlockBuilderStatus.java", "line_number": 44, "column_number": -1, "description": "", "node_tags": [], "snippet": "41.     {\n42.         this.pageBuilderStatus = requireNonNull(pageBuilderStatus, \"pageBuilderStatus must not be null\");\n43. >         this.maxBlockSizeInBytes = maxBlockSizeInBytes;\n44.     }\n45. \n"}, {"level": 2, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/block/BlockBuilderStatus.java", "line_number": 45, "column_number": -1, "description": "return from a call to BlockBuilderStatus.<init>(PageBuilderStatus,int)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "BlockBuilderStatus.<init>(PageBuilderStatus,int)"}, {"tag": "name_id", "value": "com.facebook.presto.spi.block.BlockBuilderStatus.<init>(com.facebook.presto.spi.block.PageBuilderSta.1da551eba95b4a15dfb9dbb32cbcbbf5"}], "snippet": "42.         this.pageBuilderStatus = requireNonNull(pageBuilderStatus, \"pageBuilderStatus must not be null\");\n43.         this.maxBlockSizeInBytes = maxBlockSizeInBytes;\n44. >     }\n45. \n46.     public int getMaxBlockSizeInBytes()\n"}, {"level": 1, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/block/BlockBuilderStatus.java", "line_number": 39, "column_number": -1, "description": "return from a call to BlockBuilderStatus.<init>()", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "BlockBuilderStatus.<init>()"}, {"tag": "name_id", "value": "com.facebook.presto.spi.block.BlockBuilderStatus.<init>().bf5bc83bba5af2cccb6e570c33a0c2d4"}], "snippet": "36.         // TODO: this constructor essentially constructs a black hole. This constructor and all its usage should probably be removed.\n37.         this(new PageBuilderStatus(DEFAULT_MAX_PAGE_SIZE_IN_BYTES, DEFAULT_MAX_BLOCK_SIZE_IN_BYTES), DEFAULT_MAX_BLOCK_SIZE_IN_BYTES);\n38. >     }\n39. \n40.     BlockBuilderStatus(PageBuilderStatus pageBuilderStatus, int maxBlockSizeInBytes)\n"}, {"level": 0, "filename": "presto-spi/src/test/java/com/facebook/presto/spi/block/TestVariableWidthBlockEncoding.java", "line_number": 29, "column_number": -1, "description": "", "node_tags": [], "snippet": "26.     public void testRoundTrip()\n27.     {\n28. >         BlockBuilder expectedBlockBuilder = VARCHAR.createBlockBuilder(new BlockBuilderStatus(), 4);\n29.         VARCHAR.writeString(expectedBlockBuilder, \"alice\");\n30.         VARCHAR.writeString(expectedBlockBuilder, \"bob\");\n"}, {"level": 1, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/type/AbstractVariableWidthType.java", "line_number": 55, "column_number": -1, "description": "start of procedure createBlockBuilder(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "BlockBuilder AbstractVariableWidthType.createBlockBuilder(BlockBuilderStatus,int)"}, {"tag": "name_id", "value": "com.facebook.presto.spi.type.AbstractVariableWidthType.createBlockBuilder(com.facebook.presto.spi.bl.a4dac440857d8e4f9b6fb8b2d63ca4f3"}], "snippet": "52.     public BlockBuilder createBlockBuilder(BlockBuilderStatus blockBuilderStatus, int expectedEntries)\n53.     {\n54. >         return createBlockBuilder(blockBuilderStatus, expectedEntries, EXPECTED_BYTES_PER_ENTRY);\n55.     }\n56. }\n"}, {"level": 2, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/type/AbstractVariableWidthType.java", "line_number": 34, "column_number": -1, "description": "start of procedure createBlockBuilder(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "BlockBuilder AbstractVariableWidthType.createBlockBuilder(BlockBuilderStatus,int,int)"}, {"tag": "name_id", "value": "com.facebook.presto.spi.type.AbstractVariableWidthType.createBlockBuilder(com.facebook.presto.spi.bl.c09b9f8f656b827a054242538327a99c"}], "snippet": "31. \n32.     @Override\n33. >     public BlockBuilder createBlockBuilder(BlockBuilderStatus blockBuilderStatus, int expectedEntries, int expectedBytesPerEntry)\n34.     {\n35.         int maxBlockSizeInBytes;\n"}, {"level": 2, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/type/AbstractVariableWidthType.java", "line_number": 37, "column_number": -1, "description": "Taking false branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "false"}], "snippet": "34.     {\n35.         int maxBlockSizeInBytes;\n36. >         if (blockBuilderStatus == null) {\n37.             maxBlockSizeInBytes = BlockBuilderStatus.DEFAULT_MAX_BLOCK_SIZE_IN_BYTES;\n38.         }\n"}, {"level": 2, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/type/AbstractVariableWidthType.java", "line_number": 41, "column_number": -1, "description": "", "node_tags": [], "snippet": "38.         }\n39.         else {\n40. >             maxBlockSizeInBytes = blockBuilderStatus.getMaxBlockSizeInBytes();\n41.         }\n42. \n"}, {"level": 3, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/block/BlockBuilderStatus.java", "line_number": 47, "column_number": -1, "description": "start of procedure getMaxBlockSizeInBytes()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "int BlockBuilderStatus.getMaxBlockSizeInBytes()"}, {"tag": "name_id", "value": "com.facebook.presto.spi.block.BlockBuilderStatus.getMaxBlockSizeInBytes():int.a614a77fabf3209cb78894c1dcef4d35"}], "snippet": "44.     }\n45. \n46. >     public int getMaxBlockSizeInBytes()\n47.     {\n48.         return maxBlockSizeInBytes;\n"}, {"level": 3, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/block/BlockBuilderStatus.java", "line_number": 49, "column_number": -1, "description": "return from a call to int BlockBuilderStatus.getMaxBlockSizeInBytes()", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "int BlockBuilderStatus.getMaxBlockSizeInBytes()"}, {"tag": "name_id", "value": "com.facebook.presto.spi.block.BlockBuilderStatus.getMaxBlockSizeInBytes():int.a614a77fabf3209cb78894c1dcef4d35"}], "snippet": "46.     public int getMaxBlockSizeInBytes()\n47.     {\n48. >         return maxBlockSizeInBytes;\n49.     }\n50. \n"}, {"level": 2, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/type/AbstractVariableWidthType.java", "line_number": 45, "column_number": -1, "description": "", "node_tags": [], "snippet": "42. \n43.         // it is guaranteed Math.min will not overflow; safe to cast\n44. >         int expectedBytes = (int) min((long) expectedEntries * expectedBytesPerEntry, maxBlockSizeInBytes);\n45.         return new VariableWidthBlockBuilder(\n46.                 blockBuilderStatus,\n"}, {"level": 2, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/type/AbstractVariableWidthType.java", "line_number": 46, "column_number": -1, "description": "Taking false branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "false"}], "snippet": "43.         // it is guaranteed Math.min will not overflow; safe to cast\n44.         int expectedBytes = (int) min((long) expectedEntries * expectedBytesPerEntry, maxBlockSizeInBytes);\n45. >         return new VariableWidthBlockBuilder(\n46.                 blockBuilderStatus,\n47.                 expectedBytesPerEntry == 0 ? expectedEntries : Math.min(expectedEntries, maxBlockSizeInBytes / expectedBytesPerEntry),\n"}, {"level": 2, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/type/AbstractVariableWidthType.java", "line_number": 48, "column_number": -1, "description": "", "node_tags": [], "snippet": "45.         return new VariableWidthBlockBuilder(\n46.                 blockBuilderStatus,\n47. >                 expectedBytesPerEntry == 0 ? expectedEntries : Math.min(expectedEntries, maxBlockSizeInBytes / expectedBytesPerEntry),\n48.                 expectedBytes);\n49.     }\n"}, {"level": 3, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/block/VariableWidthBlockBuilder.java", "line_number": 65, "column_number": -1, "description": "start of procedure VariableWidthBlockBuilder(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "VariableWidthBlockBuilder.<init>(BlockBuilderStatus,int,int)"}, {"tag": "name_id", "value": "com.facebook.presto.spi.block.VariableWidthBlockBuilder.<init>(com.facebook.presto.spi.block.BlockBu.bba3b198164bc70af4373f9e5be4b58f"}], "snippet": "62.     private long arraysRetainedSizeInBytes;\n63. \n64. >     public VariableWidthBlockBuilder(@Nullable BlockBuilderStatus blockBuilderStatus, int expectedEntries, int expectedBytes)\n65.     {\n66.         this.blockBuilderStatus = blockBuilderStatus;\n"}, {"level": 3, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/block/VariableWidthBlockBuilder.java", "line_number": 66, "column_number": -1, "description": "", "node_tags": [], "snippet": "63. \n64.     public VariableWidthBlockBuilder(@Nullable BlockBuilderStatus blockBuilderStatus, int expectedEntries, int expectedBytes)\n65. >     {\n66.         this.blockBuilderStatus = blockBuilderStatus;\n67. \n"}, {"level": 4, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/block/AbstractVariableWidthBlock.java", "line_number": 22, "column_number": -1, "description": "start of procedure AbstractVariableWidthBlock()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "AbstractVariableWidthBlock.<init>()"}, {"tag": "name_id", "value": "com.facebook.presto.spi.block.AbstractVariableWidthBlock.<init>().95f1bfe8a00ba740327ade25afec1e54"}], "snippet": "19. import static io.airlift.slice.Slices.EMPTY_SLICE;\n20. \n21. > public abstract class AbstractVariableWidthBlock\n22.         implements Block\n23. {\n"}, {"level": 4, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/block/AbstractVariableWidthBlock.java", "line_number": 22, "column_number": -1, "description": "return from a call to AbstractVariableWidthBlock.<init>()", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "AbstractVariableWidthBlock.<init>()"}, {"tag": "name_id", "value": "com.facebook.presto.spi.block.AbstractVariableWidthBlock.<init>().95f1bfe8a00ba740327ade25afec1e54"}], "snippet": "19. import static io.airlift.slice.Slices.EMPTY_SLICE;\n20. \n21. > public abstract class AbstractVariableWidthBlock\n22.         implements Block\n23. {\n"}, {"level": 3, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/block/VariableWidthBlockBuilder.java", "line_number": 54, "column_number": -1, "description": "", "node_tags": [], "snippet": "51.     private int initialSliceOutputSize;\n52. \n53. >     private SliceOutput sliceOutput = new DynamicSliceOutput(0);\n54. \n55.     // it is assumed that the offsets array is one position longer than the valueIsNull array\n"}, {"level": 3, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/block/VariableWidthBlockBuilder.java", "line_number": 57, "column_number": -1, "description": "", "node_tags": [], "snippet": "54. \n55.     // it is assumed that the offsets array is one position longer than the valueIsNull array\n56. >     private boolean[] valueIsNull = new boolean[0];\n57.     private int[] offsets = new int[1];\n58. \n"}, {"level": 3, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/block/VariableWidthBlockBuilder.java", "line_number": 58, "column_number": -1, "description": "", "node_tags": [], "snippet": "55.     // it is assumed that the offsets array is one position longer than the valueIsNull array\n56.     private boolean[] valueIsNull = new boolean[0];\n57. >     private int[] offsets = new int[1];\n58. \n59.     private int positions;\n"}, {"level": 3, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/block/VariableWidthBlockBuilder.java", "line_number": 67, "column_number": -1, "description": "", "node_tags": [], "snippet": "64.     public VariableWidthBlockBuilder(@Nullable BlockBuilderStatus blockBuilderStatus, int expectedEntries, int expectedBytes)\n65.     {\n66. >         this.blockBuilderStatus = blockBuilderStatus;\n67. \n68.         initialEntryCount = expectedEntries;\n"}, {"level": 3, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/block/VariableWidthBlockBuilder.java", "line_number": 69, "column_number": -1, "description": "", "node_tags": [], "snippet": "66.         this.blockBuilderStatus = blockBuilderStatus;\n67. \n68. >         initialEntryCount = expectedEntries;\n69.         initialSliceOutputSize = min(expectedBytes, MAX_ARRAY_SIZE);\n70. \n"}, {"level": 3, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/block/VariableWidthBlockBuilder.java", "line_number": 70, "column_number": -1, "description": "", "node_tags": [], "snippet": "67. \n68.         initialEntryCount = expectedEntries;\n69. >         initialSliceOutputSize = min(expectedBytes, MAX_ARRAY_SIZE);\n70. \n71.         updateArraysDataSize();\n"}, {"level": 3, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/block/VariableWidthBlockBuilder.java", "line_number": 72, "column_number": -1, "description": "", "node_tags": [], "snippet": "69.         initialSliceOutputSize = min(expectedBytes, MAX_ARRAY_SIZE);\n70. \n71. >         updateArraysDataSize();\n72.     }\n73. \n"}, {"level": 4, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/block/VariableWidthBlockBuilder.java", "line_number": 280, "column_number": -1, "description": "start of procedure updateArraysDataSize()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void VariableWidthBlockBuilder.updateArraysDataSize()"}, {"tag": "name_id", "value": "com.facebook.presto.spi.block.VariableWidthBlockBuilder.updateArraysDataSize():void.1420784a769bf88f35a08dfbf366b500"}], "snippet": "277.     }\n278. \n279. >     private void updateArraysDataSize()\n280.     {\n281.         arraysRetainedSizeInBytes = sizeOf(valueIsNull) + sizeOf(offsets);\n"}, {"level": 4, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/block/VariableWidthBlockBuilder.java", "line_number": 282, "column_number": -1, "description": "", "node_tags": [], "snippet": "279.     private void updateArraysDataSize()\n280.     {\n281. >         arraysRetainedSizeInBytes = sizeOf(valueIsNull) + sizeOf(offsets);\n282.     }\n283. \n"}, {"level": 4, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/block/VariableWidthBlockBuilder.java", "line_number": 283, "column_number": -1, "description": "return from a call to void VariableWidthBlockBuilder.updateArraysDataSize()", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "void VariableWidthBlockBuilder.updateArraysDataSize()"}, {"tag": "name_id", "value": "com.facebook.presto.spi.block.VariableWidthBlockBuilder.updateArraysDataSize():void.1420784a769bf88f35a08dfbf366b500"}], "snippet": "280.     {\n281.         arraysRetainedSizeInBytes = sizeOf(valueIsNull) + sizeOf(offsets);\n282. >     }\n283. \n284.     @Override\n"}, {"level": 3, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/block/VariableWidthBlockBuilder.java", "line_number": 73, "column_number": -1, "description": "return from a call to VariableWidthBlockBuilder.<init>(BlockBuilderStatus,int,int)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "VariableWidthBlockBuilder.<init>(BlockBuilderStatus,int,int)"}, {"tag": "name_id", "value": "com.facebook.presto.spi.block.VariableWidthBlockBuilder.<init>(com.facebook.presto.spi.block.BlockBu.bba3b198164bc70af4373f9e5be4b58f"}], "snippet": "70. \n71.         updateArraysDataSize();\n72. >     }\n73. \n74.     @Override\n"}, {"level": 2, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/type/AbstractVariableWidthType.java", "line_number": 46, "column_number": -1, "description": "return from a call to BlockBuilder AbstractVariableWidthType.createBlockBuilder(BlockBuilderStatus,int,int)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "BlockBuilder AbstractVariableWidthType.createBlockBuilder(BlockBuilderStatus,int,int)"}, {"tag": "name_id", "value": "com.facebook.presto.spi.type.AbstractVariableWidthType.createBlockBuilder(com.facebook.presto.spi.bl.c09b9f8f656b827a054242538327a99c"}], "snippet": "43.         // it is guaranteed Math.min will not overflow; safe to cast\n44.         int expectedBytes = (int) min((long) expectedEntries * expectedBytesPerEntry, maxBlockSizeInBytes);\n45. >         return new VariableWidthBlockBuilder(\n46.                 blockBuilderStatus,\n47.                 expectedBytesPerEntry == 0 ? expectedEntries : Math.min(expectedEntries, maxBlockSizeInBytes / expectedBytesPerEntry),\n"}, {"level": 1, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/type/AbstractVariableWidthType.java", "line_number": 55, "column_number": -1, "description": "return from a call to BlockBuilder AbstractVariableWidthType.createBlockBuilder(BlockBuilderStatus,int)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "BlockBuilder AbstractVariableWidthType.createBlockBuilder(BlockBuilderStatus,int)"}, {"tag": "name_id", "value": "com.facebook.presto.spi.type.AbstractVariableWidthType.createBlockBuilder(com.facebook.presto.spi.bl.a4dac440857d8e4f9b6fb8b2d63ca4f3"}], "snippet": "52.     public BlockBuilder createBlockBuilder(BlockBuilderStatus blockBuilderStatus, int expectedEntries)\n53.     {\n54. >         return createBlockBuilder(blockBuilderStatus, expectedEntries, EXPECTED_BYTES_PER_ENTRY);\n55.     }\n56. }\n"}, {"level": 0, "filename": "presto-spi/src/test/java/com/facebook/presto/spi/block/TestVariableWidthBlockEncoding.java", "line_number": 30, "column_number": -1, "description": "", "node_tags": [], "snippet": "27.     {\n28.         BlockBuilder expectedBlockBuilder = VARCHAR.createBlockBuilder(new BlockBuilderStatus(), 4);\n29. >         VARCHAR.writeString(expectedBlockBuilder, \"alice\");\n30.         VARCHAR.writeString(expectedBlockBuilder, \"bob\");\n31.         VARCHAR.writeString(expectedBlockBuilder, \"charlie\");\n"}, {"level": 1, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/type/VarcharType.java", "line_number": 152, "column_number": -1, "description": "start of procedure writeString(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void VarcharType.writeString(VariableWidthBlockBuilder,String)"}, {"tag": "name_id", "value": "com.facebook.presto.spi.type.VarcharType.writeString(com.facebook.presto.spi.block.VariableWidthBloc.4d4dd2cf32fb8d9815a23bfee18e615e"}], "snippet": "149.     }\n150. \n151. >     public void writeString(BlockBuilder blockBuilder, String value)\n152.     {\n153.         writeSlice(blockBuilder, Slices.utf8Slice(value));\n"}, {"level": 1, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/type/VarcharType.java", "line_number": 154, "column_number": -1, "description": "", "node_tags": [], "snippet": "151.     public void writeString(BlockBuilder blockBuilder, String value)\n152.     {\n153. >         writeSlice(blockBuilder, Slices.utf8Slice(value));\n154.     }\n155. \n"}, {"level": 2, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/type/VarcharType.java", "line_number": 160, "column_number": -1, "description": "start of procedure writeSlice(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void VarcharType.writeSlice(BlockBuilder,Slice)"}, {"tag": "name_id", "value": "com.facebook.presto.spi.type.VarcharType.writeSlice(com.facebook.presto.spi.block.BlockBuilder,io.ai.7943ce209d9e90dfc4b847f99e7920ae"}], "snippet": "157.     public void writeSlice(BlockBuilder blockBuilder, Slice value)\n158.     {\n159. >         writeSlice(blockBuilder, value, 0, value.length());\n160.     }\n161. \n"}, {"level": 3, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/type/VarcharType.java", "line_number": 164, "column_number": -1, "description": "start of procedure writeSlice(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void VarcharType.writeSlice(BlockBuilder,Slice,int,int)"}, {"tag": "name_id", "value": "com.facebook.presto.spi.type.VarcharType.writeSlice(com.facebook.presto.spi.block.BlockBuilder,io.ai.81879ae94e517428124ee263dfaac5c1"}], "snippet": "161. \n162.     @Override\n163. >     public void writeSlice(BlockBuilder blockBuilder, Slice value, int offset, int length)\n164.     {\n165.         blockBuilder.writeBytes(value, offset, length).closeEntry();\n"}, {"level": 3, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/type/VarcharType.java", "line_number": 166, "column_number": -1, "description": "Skipping closeEntry(): abstract method", "node_tags": [], "snippet": "163.     public void writeSlice(BlockBuilder blockBuilder, Slice value, int offset, int length)\n164.     {\n165. >         blockBuilder.writeBytes(value, offset, length).closeEntry();\n166.     }\n167. \n"}, {"level": 3, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/type/VarcharType.java", "line_number": 167, "column_number": -1, "description": "return from a call to void VarcharType.writeSlice(BlockBuilder,Slice,int,int)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "void VarcharType.writeSlice(BlockBuilder,Slice,int,int)"}, {"tag": "name_id", "value": "com.facebook.presto.spi.type.VarcharType.writeSlice(com.facebook.presto.spi.block.BlockBuilder,io.ai.81879ae94e517428124ee263dfaac5c1"}], "snippet": "164.     {\n165.         blockBuilder.writeBytes(value, offset, length).closeEntry();\n166. >     }\n167. \n168.     @Override\n"}, {"level": 2, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/type/VarcharType.java", "line_number": 161, "column_number": -1, "description": "return from a call to void VarcharType.writeSlice(BlockBuilder,Slice)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "void VarcharType.writeSlice(BlockBuilder,Slice)"}, {"tag": "name_id", "value": "com.facebook.presto.spi.type.VarcharType.writeSlice(com.facebook.presto.spi.block.BlockBuilder,io.ai.7943ce209d9e90dfc4b847f99e7920ae"}], "snippet": "158.     {\n159.         writeSlice(blockBuilder, value, 0, value.length());\n160. >     }\n161. \n162.     @Override\n"}, {"level": 1, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/type/VarcharType.java", "line_number": 155, "column_number": -1, "description": "return from a call to void VarcharType.writeString(VariableWidthBlockBuilder,String)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "void VarcharType.writeString(VariableWidthBlockBuilder,String)"}, {"tag": "name_id", "value": "com.facebook.presto.spi.type.VarcharType.writeString(com.facebook.presto.spi.block.VariableWidthBloc.4d4dd2cf32fb8d9815a23bfee18e615e"}], "snippet": "152.     {\n153.         writeSlice(blockBuilder, Slices.utf8Slice(value));\n154. >     }\n155. \n156.     @Override\n"}, {"level": 0, "filename": "presto-spi/src/test/java/com/facebook/presto/spi/block/TestVariableWidthBlockEncoding.java", "line_number": 31, "column_number": -1, "description": "", "node_tags": [], "snippet": "28.         BlockBuilder expectedBlockBuilder = VARCHAR.createBlockBuilder(new BlockBuilderStatus(), 4);\n29.         VARCHAR.writeString(expectedBlockBuilder, \"alice\");\n30. >         VARCHAR.writeString(expectedBlockBuilder, \"bob\");\n31.         VARCHAR.writeString(expectedBlockBuilder, \"charlie\");\n32.         VARCHAR.writeString(expectedBlockBuilder, \"dave\");\n"}, {"level": 1, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/type/VarcharType.java", "line_number": 152, "column_number": -1, "description": "start of procedure writeString(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void VarcharType.writeString(VariableWidthBlockBuilder,String)"}, {"tag": "name_id", "value": "com.facebook.presto.spi.type.VarcharType.writeString(com.facebook.presto.spi.block.VariableWidthBloc.4d4dd2cf32fb8d9815a23bfee18e615e"}], "snippet": "149.     }\n150. \n151. >     public void writeString(BlockBuilder blockBuilder, String value)\n152.     {\n153.         writeSlice(blockBuilder, Slices.utf8Slice(value));\n"}, {"level": 1, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/type/VarcharType.java", "line_number": 154, "column_number": -1, "description": "", "node_tags": [], "snippet": "151.     public void writeString(BlockBuilder blockBuilder, String value)\n152.     {\n153. >         writeSlice(blockBuilder, Slices.utf8Slice(value));\n154.     }\n155. \n"}, {"level": 2, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/type/VarcharType.java", "line_number": 160, "column_number": -1, "description": "start of procedure writeSlice(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void VarcharType.writeSlice(BlockBuilder,Slice)"}, {"tag": "name_id", "value": "com.facebook.presto.spi.type.VarcharType.writeSlice(com.facebook.presto.spi.block.BlockBuilder,io.ai.7943ce209d9e90dfc4b847f99e7920ae"}], "snippet": "157.     public void writeSlice(BlockBuilder blockBuilder, Slice value)\n158.     {\n159. >         writeSlice(blockBuilder, value, 0, value.length());\n160.     }\n161. \n"}, {"level": 3, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/type/VarcharType.java", "line_number": 164, "column_number": -1, "description": "start of procedure writeSlice(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void VarcharType.writeSlice(BlockBuilder,Slice,int,int)"}, {"tag": "name_id", "value": "com.facebook.presto.spi.type.VarcharType.writeSlice(com.facebook.presto.spi.block.BlockBuilder,io.ai.81879ae94e517428124ee263dfaac5c1"}], "snippet": "161. \n162.     @Override\n163. >     public void writeSlice(BlockBuilder blockBuilder, Slice value, int offset, int length)\n164.     {\n165.         blockBuilder.writeBytes(value, offset, length).closeEntry();\n"}, {"level": 3, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/type/VarcharType.java", "line_number": 166, "column_number": -1, "description": "Skipping closeEntry(): abstract method", "node_tags": [], "snippet": "163.     public void writeSlice(BlockBuilder blockBuilder, Slice value, int offset, int length)\n164.     {\n165. >         blockBuilder.writeBytes(value, offset, length).closeEntry();\n166.     }\n167. \n"}, {"level": 3, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/type/VarcharType.java", "line_number": 167, "column_number": -1, "description": "return from a call to void VarcharType.writeSlice(BlockBuilder,Slice,int,int)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "void VarcharType.writeSlice(BlockBuilder,Slice,int,int)"}, {"tag": "name_id", "value": "com.facebook.presto.spi.type.VarcharType.writeSlice(com.facebook.presto.spi.block.BlockBuilder,io.ai.81879ae94e517428124ee263dfaac5c1"}], "snippet": "164.     {\n165.         blockBuilder.writeBytes(value, offset, length).closeEntry();\n166. >     }\n167. \n168.     @Override\n"}, {"level": 2, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/type/VarcharType.java", "line_number": 161, "column_number": -1, "description": "return from a call to void VarcharType.writeSlice(BlockBuilder,Slice)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "void VarcharType.writeSlice(BlockBuilder,Slice)"}, {"tag": "name_id", "value": "com.facebook.presto.spi.type.VarcharType.writeSlice(com.facebook.presto.spi.block.BlockBuilder,io.ai.7943ce209d9e90dfc4b847f99e7920ae"}], "snippet": "158.     {\n159.         writeSlice(blockBuilder, value, 0, value.length());\n160. >     }\n161. \n162.     @Override\n"}, {"level": 1, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/type/VarcharType.java", "line_number": 155, "column_number": -1, "description": "return from a call to void VarcharType.writeString(VariableWidthBlockBuilder,String)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "void VarcharType.writeString(VariableWidthBlockBuilder,String)"}, {"tag": "name_id", "value": "com.facebook.presto.spi.type.VarcharType.writeString(com.facebook.presto.spi.block.VariableWidthBloc.4d4dd2cf32fb8d9815a23bfee18e615e"}], "snippet": "152.     {\n153.         writeSlice(blockBuilder, Slices.utf8Slice(value));\n154. >     }\n155. \n156.     @Override\n"}, {"level": 0, "filename": "presto-spi/src/test/java/com/facebook/presto/spi/block/TestVariableWidthBlockEncoding.java", "line_number": 32, "column_number": -1, "description": "", "node_tags": [], "snippet": "29.         VARCHAR.writeString(expectedBlockBuilder, \"alice\");\n30.         VARCHAR.writeString(expectedBlockBuilder, \"bob\");\n31. >         VARCHAR.writeString(expectedBlockBuilder, \"charlie\");\n32.         VARCHAR.writeString(expectedBlockBuilder, \"dave\");\n33.         Block expectedBlock = expectedBlockBuilder.build();\n"}, {"level": 1, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/type/VarcharType.java", "line_number": 152, "column_number": -1, "description": "start of procedure writeString(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void VarcharType.writeString(VariableWidthBlockBuilder,String)"}, {"tag": "name_id", "value": "com.facebook.presto.spi.type.VarcharType.writeString(com.facebook.presto.spi.block.VariableWidthBloc.4d4dd2cf32fb8d9815a23bfee18e615e"}], "snippet": "149.     }\n150. \n151. >     public void writeString(BlockBuilder blockBuilder, String value)\n152.     {\n153.         writeSlice(blockBuilder, Slices.utf8Slice(value));\n"}, {"level": 1, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/type/VarcharType.java", "line_number": 154, "column_number": -1, "description": "", "node_tags": [], "snippet": "151.     public void writeString(BlockBuilder blockBuilder, String value)\n152.     {\n153. >         writeSlice(blockBuilder, Slices.utf8Slice(value));\n154.     }\n155. \n"}, {"level": 2, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/type/VarcharType.java", "line_number": 160, "column_number": -1, "description": "start of procedure writeSlice(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void VarcharType.writeSlice(BlockBuilder,Slice)"}, {"tag": "name_id", "value": "com.facebook.presto.spi.type.VarcharType.writeSlice(com.facebook.presto.spi.block.BlockBuilder,io.ai.7943ce209d9e90dfc4b847f99e7920ae"}], "snippet": "157.     public void writeSlice(BlockBuilder blockBuilder, Slice value)\n158.     {\n159. >         writeSlice(blockBuilder, value, 0, value.length());\n160.     }\n161. \n"}, {"level": 3, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/type/VarcharType.java", "line_number": 164, "column_number": -1, "description": "start of procedure writeSlice(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void VarcharType.writeSlice(BlockBuilder,Slice,int,int)"}, {"tag": "name_id", "value": "com.facebook.presto.spi.type.VarcharType.writeSlice(com.facebook.presto.spi.block.BlockBuilder,io.ai.81879ae94e517428124ee263dfaac5c1"}], "snippet": "161. \n162.     @Override\n163. >     public void writeSlice(BlockBuilder blockBuilder, Slice value, int offset, int length)\n164.     {\n165.         blockBuilder.writeBytes(value, offset, length).closeEntry();\n"}, {"level": 3, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/type/VarcharType.java", "line_number": 166, "column_number": -1, "description": "Skipping closeEntry(): abstract method", "node_tags": [], "snippet": "163.     public void writeSlice(BlockBuilder blockBuilder, Slice value, int offset, int length)\n164.     {\n165. >         blockBuilder.writeBytes(value, offset, length).closeEntry();\n166.     }\n167. \n"}, {"level": 3, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/type/VarcharType.java", "line_number": 167, "column_number": -1, "description": "return from a call to void VarcharType.writeSlice(BlockBuilder,Slice,int,int)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "void VarcharType.writeSlice(BlockBuilder,Slice,int,int)"}, {"tag": "name_id", "value": "com.facebook.presto.spi.type.VarcharType.writeSlice(com.facebook.presto.spi.block.BlockBuilder,io.ai.81879ae94e517428124ee263dfaac5c1"}], "snippet": "164.     {\n165.         blockBuilder.writeBytes(value, offset, length).closeEntry();\n166. >     }\n167. \n168.     @Override\n"}, {"level": 2, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/type/VarcharType.java", "line_number": 161, "column_number": -1, "description": "return from a call to void VarcharType.writeSlice(BlockBuilder,Slice)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "void VarcharType.writeSlice(BlockBuilder,Slice)"}, {"tag": "name_id", "value": "com.facebook.presto.spi.type.VarcharType.writeSlice(com.facebook.presto.spi.block.BlockBuilder,io.ai.7943ce209d9e90dfc4b847f99e7920ae"}], "snippet": "158.     {\n159.         writeSlice(blockBuilder, value, 0, value.length());\n160. >     }\n161. \n162.     @Override\n"}, {"level": 1, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/type/VarcharType.java", "line_number": 155, "column_number": -1, "description": "return from a call to void VarcharType.writeString(VariableWidthBlockBuilder,String)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "void VarcharType.writeString(VariableWidthBlockBuilder,String)"}, {"tag": "name_id", "value": "com.facebook.presto.spi.type.VarcharType.writeString(com.facebook.presto.spi.block.VariableWidthBloc.4d4dd2cf32fb8d9815a23bfee18e615e"}], "snippet": "152.     {\n153.         writeSlice(blockBuilder, Slices.utf8Slice(value));\n154. >     }\n155. \n156.     @Override\n"}, {"level": 0, "filename": "presto-spi/src/test/java/com/facebook/presto/spi/block/TestVariableWidthBlockEncoding.java", "line_number": 33, "column_number": -1, "description": "", "node_tags": [], "snippet": "30.         VARCHAR.writeString(expectedBlockBuilder, \"bob\");\n31.         VARCHAR.writeString(expectedBlockBuilder, \"charlie\");\n32. >         VARCHAR.writeString(expectedBlockBuilder, \"dave\");\n33.         Block expectedBlock = expectedBlockBuilder.build();\n34. \n"}, {"level": 1, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/type/VarcharType.java", "line_number": 152, "column_number": -1, "description": "start of procedure writeString(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void VarcharType.writeString(VariableWidthBlockBuilder,String)"}, {"tag": "name_id", "value": "com.facebook.presto.spi.type.VarcharType.writeString(com.facebook.presto.spi.block.VariableWidthBloc.4d4dd2cf32fb8d9815a23bfee18e615e"}], "snippet": "149.     }\n150. \n151. >     public void writeString(BlockBuilder blockBuilder, String value)\n152.     {\n153.         writeSlice(blockBuilder, Slices.utf8Slice(value));\n"}, {"level": 1, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/type/VarcharType.java", "line_number": 154, "column_number": -1, "description": "", "node_tags": [], "snippet": "151.     public void writeString(BlockBuilder blockBuilder, String value)\n152.     {\n153. >         writeSlice(blockBuilder, Slices.utf8Slice(value));\n154.     }\n155. \n"}, {"level": 2, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/type/VarcharType.java", "line_number": 160, "column_number": -1, "description": "start of procedure writeSlice(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void VarcharType.writeSlice(BlockBuilder,Slice)"}, {"tag": "name_id", "value": "com.facebook.presto.spi.type.VarcharType.writeSlice(com.facebook.presto.spi.block.BlockBuilder,io.ai.7943ce209d9e90dfc4b847f99e7920ae"}], "snippet": "157.     public void writeSlice(BlockBuilder blockBuilder, Slice value)\n158.     {\n159. >         writeSlice(blockBuilder, value, 0, value.length());\n160.     }\n161. \n"}, {"level": 3, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/type/VarcharType.java", "line_number": 164, "column_number": -1, "description": "start of procedure writeSlice(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void VarcharType.writeSlice(BlockBuilder,Slice,int,int)"}, {"tag": "name_id", "value": "com.facebook.presto.spi.type.VarcharType.writeSlice(com.facebook.presto.spi.block.BlockBuilder,io.ai.81879ae94e517428124ee263dfaac5c1"}], "snippet": "161. \n162.     @Override\n163. >     public void writeSlice(BlockBuilder blockBuilder, Slice value, int offset, int length)\n164.     {\n165.         blockBuilder.writeBytes(value, offset, length).closeEntry();\n"}, {"level": 3, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/type/VarcharType.java", "line_number": 166, "column_number": -1, "description": "Skipping closeEntry(): abstract method", "node_tags": [], "snippet": "163.     public void writeSlice(BlockBuilder blockBuilder, Slice value, int offset, int length)\n164.     {\n165. >         blockBuilder.writeBytes(value, offset, length).closeEntry();\n166.     }\n167. \n"}, {"level": 3, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/type/VarcharType.java", "line_number": 167, "column_number": -1, "description": "return from a call to void VarcharType.writeSlice(BlockBuilder,Slice,int,int)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "void VarcharType.writeSlice(BlockBuilder,Slice,int,int)"}, {"tag": "name_id", "value": "com.facebook.presto.spi.type.VarcharType.writeSlice(com.facebook.presto.spi.block.BlockBuilder,io.ai.81879ae94e517428124ee263dfaac5c1"}], "snippet": "164.     {\n165.         blockBuilder.writeBytes(value, offset, length).closeEntry();\n166. >     }\n167. \n168.     @Override\n"}, {"level": 2, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/type/VarcharType.java", "line_number": 161, "column_number": -1, "description": "return from a call to void VarcharType.writeSlice(BlockBuilder,Slice)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "void VarcharType.writeSlice(BlockBuilder,Slice)"}, {"tag": "name_id", "value": "com.facebook.presto.spi.type.VarcharType.writeSlice(com.facebook.presto.spi.block.BlockBuilder,io.ai.7943ce209d9e90dfc4b847f99e7920ae"}], "snippet": "158.     {\n159.         writeSlice(blockBuilder, value, 0, value.length());\n160. >     }\n161. \n162.     @Override\n"}, {"level": 1, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/type/VarcharType.java", "line_number": 155, "column_number": -1, "description": "return from a call to void VarcharType.writeString(VariableWidthBlockBuilder,String)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "void VarcharType.writeString(VariableWidthBlockBuilder,String)"}, {"tag": "name_id", "value": "com.facebook.presto.spi.type.VarcharType.writeString(com.facebook.presto.spi.block.VariableWidthBloc.4d4dd2cf32fb8d9815a23bfee18e615e"}], "snippet": "152.     {\n153.         writeSlice(blockBuilder, Slices.utf8Slice(value));\n154. >     }\n155. \n156.     @Override\n"}, {"level": 0, "filename": "presto-spi/src/test/java/com/facebook/presto/spi/block/TestVariableWidthBlockEncoding.java", "line_number": 34, "column_number": -1, "description": "", "node_tags": [], "snippet": "31.         VARCHAR.writeString(expectedBlockBuilder, \"charlie\");\n32.         VARCHAR.writeString(expectedBlockBuilder, \"dave\");\n33. >         Block expectedBlock = expectedBlockBuilder.build();\n34. \n35.         DynamicSliceOutput sliceOutput = new DynamicSliceOutput(1024);\n"}, {"level": 1, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/block/VariableWidthBlockBuilder.java", "line_number": 318, "column_number": -1, "description": "start of procedure build()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "Block VariableWidthBlockBuilder.build()"}, {"tag": "name_id", "value": "com.facebook.presto.spi.block.VariableWidthBlockBuilder.build():com.facebook.presto.spi.block.Block.8703ed58c09d31eaa0516bfc65960655"}], "snippet": "315. \n316.     @Override\n317. >     public Block build()\n318.     {\n319.         if (currentEntrySize > 0) {\n"}, {"level": 1, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/block/VariableWidthBlockBuilder.java", "line_number": 320, "column_number": -1, "description": "Taking false branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "false"}], "snippet": "317.     public Block build()\n318.     {\n319. >         if (currentEntrySize > 0) {\n320.             throw new IllegalStateException(\"Current entry must be closed before the block can be built\");\n321.         }\n"}, {"level": 1, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/block/VariableWidthBlockBuilder.java", "line_number": 323, "column_number": -1, "description": "", "node_tags": [], "snippet": "320.             throw new IllegalStateException(\"Current entry must be closed before the block can be built\");\n321.         }\n322. >         return new VariableWidthBlock(positions, sliceOutput.slice(), offsets, valueIsNull);\n323.     }\n324. \n"}, {"level": 2, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/block/VariableWidthBlock.java", "line_number": 45, "column_number": -1, "description": "start of procedure VariableWidthBlock(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "VariableWidthBlock.<init>(int,Slice,int[],boolean[])"}, {"tag": "name_id", "value": "com.facebook.presto.spi.block.VariableWidthBlock.<init>(int,io.airlift.slice.Slice,int[],boolean[]).273e3d999c1ce455d92e2f9bad37acd9"}], "snippet": "42.     private final long sizeInBytes;\n43. \n44. >     public VariableWidthBlock(int positionCount, Slice slice, int[] offsets, boolean[] valueIsNull)\n45.     {\n46.         this(0, positionCount, slice, offsets, valueIsNull);\n"}, {"level": 2, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/block/VariableWidthBlock.java", "line_number": 47, "column_number": -1, "description": "", "node_tags": [], "snippet": "44.     public VariableWidthBlock(int positionCount, Slice slice, int[] offsets, boolean[] valueIsNull)\n45.     {\n46. >         this(0, positionCount, slice, offsets, valueIsNull);\n47.     }\n48. \n"}, {"level": 3, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/block/VariableWidthBlock.java", "line_number": 50, "column_number": -1, "description": "start of procedure VariableWidthBlock(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "VariableWidthBlock.<init>(int,int,Slice,int[],boolean[])"}, {"tag": "name_id", "value": "com.facebook.presto.spi.block.VariableWidthBlock.<init>(int,int,io.airlift.slice.Slice,int[],boolean.521993f34b9b5881957a1435e8f95d24"}], "snippet": "47.     }\n48. \n49. >     VariableWidthBlock(int arrayOffset, int positionCount, Slice slice, int[] offsets, boolean[] valueIsNull)\n50.     {\n51.         if (arrayOffset < 0) {\n"}, {"level": 3, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/block/VariableWidthBlock.java", "line_number": 51, "column_number": -1, "description": "", "node_tags": [], "snippet": "48. \n49.     VariableWidthBlock(int arrayOffset, int positionCount, Slice slice, int[] offsets, boolean[] valueIsNull)\n50. >     {\n51.         if (arrayOffset < 0) {\n52.             throw new IllegalArgumentException(\"arrayOffset is negative\");\n"}, {"level": 4, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/block/AbstractVariableWidthBlock.java", "line_number": 22, "column_number": -1, "description": "start of procedure AbstractVariableWidthBlock()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "AbstractVariableWidthBlock.<init>()"}, {"tag": "name_id", "value": "com.facebook.presto.spi.block.AbstractVariableWidthBlock.<init>().95f1bfe8a00ba740327ade25afec1e54"}], "snippet": "19. import static io.airlift.slice.Slices.EMPTY_SLICE;\n20. \n21. > public abstract class AbstractVariableWidthBlock\n22.         implements Block\n23. {\n"}, {"level": 4, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/block/AbstractVariableWidthBlock.java", "line_number": 22, "column_number": -1, "description": "return from a call to AbstractVariableWidthBlock.<init>()", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "AbstractVariableWidthBlock.<init>()"}, {"tag": "name_id", "value": "com.facebook.presto.spi.block.AbstractVariableWidthBlock.<init>().95f1bfe8a00ba740327ade25afec1e54"}], "snippet": "19. import static io.airlift.slice.Slices.EMPTY_SLICE;\n20. \n21. > public abstract class AbstractVariableWidthBlock\n22.         implements Block\n23. {\n"}, {"level": 3, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/block/VariableWidthBlock.java", "line_number": 52, "column_number": -1, "description": "Taking false branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "false"}], "snippet": "49.     VariableWidthBlock(int arrayOffset, int positionCount, Slice slice, int[] offsets, boolean[] valueIsNull)\n50.     {\n51. >         if (arrayOffset < 0) {\n52.             throw new IllegalArgumentException(\"arrayOffset is negative\");\n53.         }\n"}, {"level": 3, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/block/VariableWidthBlock.java", "line_number": 55, "column_number": -1, "description": "", "node_tags": [], "snippet": "52.             throw new IllegalArgumentException(\"arrayOffset is negative\");\n53.         }\n54. >         this.arrayOffset = arrayOffset;\n55.         if (positionCount < 0) {\n56.             throw new IllegalArgumentException(\"positionCount is negative\");\n"}, {"level": 3, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/block/VariableWidthBlock.java", "line_number": 56, "column_number": -1, "description": "Taking false branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "false"}], "snippet": "53.         }\n54.         this.arrayOffset = arrayOffset;\n55. >         if (positionCount < 0) {\n56.             throw new IllegalArgumentException(\"positionCount is negative\");\n57.         }\n"}, {"level": 3, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/block/VariableWidthBlock.java", "line_number": 59, "column_number": -1, "description": "", "node_tags": [], "snippet": "56.             throw new IllegalArgumentException(\"positionCount is negative\");\n57.         }\n58. >         this.positionCount = positionCount;\n59. \n60.         if (slice == null) {\n"}, {"level": 3, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/block/VariableWidthBlock.java", "line_number": 61, "column_number": -1, "description": "Taking false branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "false"}], "snippet": "58.         this.positionCount = positionCount;\n59. \n60. >         if (slice == null) {\n61.             throw new IllegalArgumentException(\"slice is null\");\n62.         }\n"}, {"level": 3, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/block/VariableWidthBlock.java", "line_number": 64, "column_number": -1, "description": "", "node_tags": [], "snippet": "61.             throw new IllegalArgumentException(\"slice is null\");\n62.         }\n63. >         this.slice = slice;\n64. \n65.         if (offsets.length - arrayOffset < (positionCount + 1)) {\n"}, {"level": 3, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/block/VariableWidthBlock.java", "line_number": 66, "column_number": -1, "description": "Taking false branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "false"}], "snippet": "63.         this.slice = slice;\n64. \n65. >         if (offsets.length - arrayOffset < (positionCount + 1)) {\n66.             throw new IllegalArgumentException(\"offsets length is less than positionCount\");\n67.         }\n"}, {"level": 3, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/block/VariableWidthBlock.java", "line_number": 69, "column_number": -1, "description": "", "node_tags": [], "snippet": "66.             throw new IllegalArgumentException(\"offsets length is less than positionCount\");\n67.         }\n68. >         this.offsets = offsets;\n69. \n70.         if (valueIsNull.length - arrayOffset < positionCount) {\n"}, {"level": 3, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/block/VariableWidthBlock.java", "line_number": 71, "column_number": -1, "description": "Taking false branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "false"}], "snippet": "68.         this.offsets = offsets;\n69. \n70. >         if (valueIsNull.length - arrayOffset < positionCount) {\n71.             throw new IllegalArgumentException(\"valueIsNull length is less than positionCount\");\n72.         }\n"}, {"level": 3, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/block/VariableWidthBlock.java", "line_number": 74, "column_number": -1, "description": "", "node_tags": [], "snippet": "71.             throw new IllegalArgumentException(\"valueIsNull length is less than positionCount\");\n72.         }\n73. >         this.valueIsNull = valueIsNull;\n74. \n75.         sizeInBytes = offsets[arrayOffset + positionCount] - offsets[arrayOffset] + ((Integer.BYTES + Byte.BYTES) * (long) positionCount);\n"}, {"level": 3, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/block/VariableWidthBlock.java", "line_number": 76, "column_number": -1, "description": "", "node_tags": [], "snippet": "73.         this.valueIsNull = valueIsNull;\n74. \n75. >         sizeInBytes = offsets[arrayOffset + positionCount] - offsets[arrayOffset] + ((Integer.BYTES + Byte.BYTES) * (long) positionCount);\n76.         retainedSizeInBytes = INSTANCE_SIZE + slice.getRetainedSize() + sizeOf(valueIsNull) + sizeOf(offsets);\n77.     }\n"}, {"level": 3, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/block/VariableWidthBlock.java", "line_number": 77, "column_number": -1, "description": "", "node_tags": [], "snippet": "74. \n75.         sizeInBytes = offsets[arrayOffset + positionCount] - offsets[arrayOffset] + ((Integer.BYTES + Byte.BYTES) * (long) positionCount);\n76. >         retainedSizeInBytes = INSTANCE_SIZE + slice.getRetainedSize() + sizeOf(valueIsNull) + sizeOf(offsets);\n77.     }\n78. \n"}, {"level": 3, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/block/VariableWidthBlock.java", "line_number": 78, "column_number": -1, "description": "return from a call to VariableWidthBlock.<init>(int,int,Slice,int[],boolean[])", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "VariableWidthBlock.<init>(int,int,Slice,int[],boolean[])"}, {"tag": "name_id", "value": "com.facebook.presto.spi.block.VariableWidthBlock.<init>(int,int,io.airlift.slice.Slice,int[],boolean.521993f34b9b5881957a1435e8f95d24"}], "snippet": "75.         sizeInBytes = offsets[arrayOffset + positionCount] - offsets[arrayOffset] + ((Integer.BYTES + Byte.BYTES) * (long) positionCount);\n76.         retainedSizeInBytes = INSTANCE_SIZE + slice.getRetainedSize() + sizeOf(valueIsNull) + sizeOf(offsets);\n77. >     }\n78. \n79.     @Override\n"}, {"level": 2, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/block/VariableWidthBlock.java", "line_number": 48, "column_number": -1, "description": "return from a call to VariableWidthBlock.<init>(int,Slice,int[],boolean[])", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "VariableWidthBlock.<init>(int,Slice,int[],boolean[])"}, {"tag": "name_id", "value": "com.facebook.presto.spi.block.VariableWidthBlock.<init>(int,io.airlift.slice.Slice,int[],boolean[]).273e3d999c1ce455d92e2f9bad37acd9"}], "snippet": "45.     {\n46.         this(0, positionCount, slice, offsets, valueIsNull);\n47. >     }\n48. \n49.     VariableWidthBlock(int arrayOffset, int positionCount, Slice slice, int[] offsets, boolean[] valueIsNull)\n"}, {"level": 1, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/block/VariableWidthBlockBuilder.java", "line_number": 323, "column_number": -1, "description": "return from a call to Block VariableWidthBlockBuilder.build()", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "Block VariableWidthBlockBuilder.build()"}, {"tag": "name_id", "value": "com.facebook.presto.spi.block.VariableWidthBlockBuilder.build():com.facebook.presto.spi.block.Block.8703ed58c09d31eaa0516bfc65960655"}], "snippet": "320.             throw new IllegalStateException(\"Current entry must be closed before the block can be built\");\n321.         }\n322. >         return new VariableWidthBlock(positions, sliceOutput.slice(), offsets, valueIsNull);\n323.     }\n324. \n"}, {"level": 0, "filename": "presto-spi/src/test/java/com/facebook/presto/spi/block/TestVariableWidthBlockEncoding.java", "line_number": 36, "column_number": -1, "description": "Skipping DynamicSliceOutput(...): unknown method", "node_tags": [], "snippet": "33.         Block expectedBlock = expectedBlockBuilder.build();\n34. \n35. >         DynamicSliceOutput sliceOutput = new DynamicSliceOutput(1024);\n36.         BlockEncoding blockEncoding = new VariableWidthBlockEncoding();\n37.         blockEncoding.writeBlock(sliceOutput, expectedBlock);\n"}, {"level": 0, "filename": "presto-spi/src/test/java/com/facebook/presto/spi/block/TestVariableWidthBlockEncoding.java", "line_number": 37, "column_number": -1, "description": "", "node_tags": [], "snippet": "34. \n35.         DynamicSliceOutput sliceOutput = new DynamicSliceOutput(1024);\n36. >         BlockEncoding blockEncoding = new VariableWidthBlockEncoding();\n37.         blockEncoding.writeBlock(sliceOutput, expectedBlock);\n38.         Block actualBlock = blockEncoding.readBlock(sliceOutput.slice().getInput());\n"}, {"level": 1, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/block/VariableWidthBlockEncoding.java", "line_number": 26, "column_number": -1, "description": "start of procedure VariableWidthBlockEncoding()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "VariableWidthBlockEncoding.<init>()"}, {"tag": "name_id", "value": "com.facebook.presto.spi.block.VariableWidthBlockEncoding.<init>().580ee2c88a7213fe4e503b616d9bcdea"}], "snippet": "23. import static io.airlift.slice.SizeOf.SIZE_OF_INT;\n24. \n25. > public class VariableWidthBlockEncoding\n26.         implements BlockEncoding\n27. {\n"}, {"level": 1, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/block/VariableWidthBlockEncoding.java", "line_number": 26, "column_number": -1, "description": "return from a call to VariableWidthBlockEncoding.<init>()", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "VariableWidthBlockEncoding.<init>()"}, {"tag": "name_id", "value": "com.facebook.presto.spi.block.VariableWidthBlockEncoding.<init>().580ee2c88a7213fe4e503b616d9bcdea"}], "snippet": "23. import static io.airlift.slice.SizeOf.SIZE_OF_INT;\n24. \n25. > public class VariableWidthBlockEncoding\n26.         implements BlockEncoding\n27. {\n"}, {"level": 0, "filename": "presto-spi/src/test/java/com/facebook/presto/spi/block/TestVariableWidthBlockEncoding.java", "line_number": 38, "column_number": -1, "description": "", "node_tags": [], "snippet": "35.         DynamicSliceOutput sliceOutput = new DynamicSliceOutput(1024);\n36.         BlockEncoding blockEncoding = new VariableWidthBlockEncoding();\n37. >         blockEncoding.writeBlock(sliceOutput, expectedBlock);\n38.         Block actualBlock = blockEncoding.readBlock(sliceOutput.slice().getInput());\n39.         assertBlockEquals(VARCHAR, actualBlock, expectedBlock);\n"}, {"level": 1, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/block/VariableWidthBlockEncoding.java", "line_number": 39, "column_number": -1, "description": "start of procedure writeBlock(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void VariableWidthBlockEncoding.writeBlock(DynamicSliceOutput,VariableWidthBlock)"}, {"tag": "name_id", "value": "com.facebook.presto.spi.block.VariableWidthBlockEncoding.writeBlock(io.airlift.slice.DynamicSliceOut.1ea20528a004719e0e1b82c3710c5e37"}], "snippet": "36. \n37.     @Override\n38. >     public void writeBlock(SliceOutput sliceOutput, Block block)\n39.     {\n40.         // The down casts here are safe because it is the block itself the provides this encoding implementation.\n"}, {"level": 1, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/block/VariableWidthBlockEncoding.java", "line_number": 42, "column_number": -1, "description": "", "node_tags": [], "snippet": "39.     {\n40.         // The down casts here are safe because it is the block itself the provides this encoding implementation.\n41. >         AbstractVariableWidthBlock variableWidthBlock = (AbstractVariableWidthBlock) block;\n42. \n43.         int positionCount = variableWidthBlock.getPositionCount();\n"}, {"level": 1, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/block/VariableWidthBlockEncoding.java", "line_number": 44, "column_number": -1, "description": "Skipping getPositionCount(): unknown method", "node_tags": [], "snippet": "41.         AbstractVariableWidthBlock variableWidthBlock = (AbstractVariableWidthBlock) block;\n42. \n43. >         int positionCount = variableWidthBlock.getPositionCount();\n44.         sliceOutput.appendInt(positionCount);\n45. \n"}, {"level": 1, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/block/VariableWidthBlockEncoding.java", "line_number": 45, "column_number": -1, "description": "Skipping appendInt(...): unknown method", "node_tags": [], "snippet": "42. \n43.         int positionCount = variableWidthBlock.getPositionCount();\n44. >         sliceOutput.appendInt(positionCount);\n45. \n46.         // offsets\n"}, {"level": 1, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/block/VariableWidthBlockEncoding.java", "line_number": 48, "column_number": -1, "description": "", "node_tags": [], "snippet": "45. \n46.         // offsets\n47. >         int totalLength = 0;\n48.         for (int position = 0; position < positionCount; position++) {\n49.             int length = variableWidthBlock.getSliceLength(position);\n"}, {"level": 1, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/block/VariableWidthBlockEncoding.java", "line_number": 49, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "46.         // offsets\n47.         int totalLength = 0;\n48. >         for (int position = 0; position < positionCount; position++) {\n49.             int length = variableWidthBlock.getSliceLength(position);\n50.             totalLength += length;\n"}, {"level": 1, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/block/VariableWidthBlockEncoding.java", "line_number": 50, "column_number": -1, "description": "Skipping getSliceLength(...): unknown method", "node_tags": [], "snippet": "47.         int totalLength = 0;\n48.         for (int position = 0; position < positionCount; position++) {\n49. >             int length = variableWidthBlock.getSliceLength(position);\n50.             totalLength += length;\n51.             sliceOutput.appendInt(totalLength);\n"}, {"level": 1, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/block/VariableWidthBlockEncoding.java", "line_number": 51, "column_number": -1, "description": "", "node_tags": [], "snippet": "48.         for (int position = 0; position < positionCount; position++) {\n49.             int length = variableWidthBlock.getSliceLength(position);\n50. >             totalLength += length;\n51.             sliceOutput.appendInt(totalLength);\n52.         }\n"}, {"level": 1, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/block/VariableWidthBlockEncoding.java", "line_number": 52, "column_number": -1, "description": "Skipping appendInt(...): unknown method", "node_tags": [], "snippet": "49.             int length = variableWidthBlock.getSliceLength(position);\n50.             totalLength += length;\n51. >             sliceOutput.appendInt(totalLength);\n52.         }\n53. \n"}, {"level": 1, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/block/VariableWidthBlockEncoding.java", "line_number": 49, "column_number": -1, "description": "Taking false branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "false"}], "snippet": "46.         // offsets\n47.         int totalLength = 0;\n48. >         for (int position = 0; position < positionCount; position++) {\n49.             int length = variableWidthBlock.getSliceLength(position);\n50.             totalLength += length;\n"}, {"level": 1, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/block/VariableWidthBlockEncoding.java", "line_number": 55, "column_number": -1, "description": "Skipping encodeNullsAsBits(...): empty list of specs", "node_tags": [], "snippet": "52.         }\n53. \n54. >         encodeNullsAsBits(sliceOutput, variableWidthBlock);\n55. \n56.         sliceOutput\n"}, {"level": 2, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/block/EncoderUtil.java", "line_number": 29, "column_number": -1, "description": "Definition of encodeNullsAsBits(...)", "node_tags": [], "snippet": "26.      */\n27.     @SuppressWarnings({\"NarrowingCompoundAssignment\", \"ImplicitNumericConversion\"})\n28. >     public static void encodeNullsAsBits(SliceOutput sliceOutput, Block block)\n29.     {\n30.         int positionCount = block.getPositionCount();\n"}, {"level": 1, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/block/VariableWidthBlockEncoding.java", "line_number": 58, "column_number": -1, "description": "Skipping appendInt(...): unknown method", "node_tags": [], "snippet": "55. \n56.         sliceOutput\n57. >                 .appendInt(totalLength)\n58.                 .writeBytes(variableWidthBlock.getRawSlice(0), variableWidthBlock.getPositionOffset(0), totalLength);\n59.     }\n"}, {"level": 1, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/block/VariableWidthBlockEncoding.java", "line_number": 59, "column_number": -1, "description": "Skipping writeBytes(...): unknown method", "node_tags": [], "snippet": "56.         sliceOutput\n57.                 .appendInt(totalLength)\n58. >                 .writeBytes(variableWidthBlock.getRawSlice(0), variableWidthBlock.getPositionOffset(0), totalLength);\n59.     }\n60. \n"}, {"level": 1, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/block/VariableWidthBlockEncoding.java", "line_number": 60, "column_number": -1, "description": "return from a call to void VariableWidthBlockEncoding.writeBlock(DynamicSliceOutput,VariableWidthBlock)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "void VariableWidthBlockEncoding.writeBlock(DynamicSliceOutput,VariableWidthBlock)"}, {"tag": "name_id", "value": "com.facebook.presto.spi.block.VariableWidthBlockEncoding.writeBlock(io.airlift.slice.DynamicSliceOut.1ea20528a004719e0e1b82c3710c5e37"}], "snippet": "57.                 .appendInt(totalLength)\n58.                 .writeBytes(variableWidthBlock.getRawSlice(0), variableWidthBlock.getPositionOffset(0), totalLength);\n59. >     }\n60. \n61.     @Override\n"}, {"level": 0, "filename": "presto-spi/src/test/java/com/facebook/presto/spi/block/TestVariableWidthBlockEncoding.java", "line_number": 39, "column_number": -1, "description": "Skipping slice(): unknown method", "node_tags": [], "snippet": "36.         BlockEncoding blockEncoding = new VariableWidthBlockEncoding();\n37.         blockEncoding.writeBlock(sliceOutput, expectedBlock);\n38. >         Block actualBlock = blockEncoding.readBlock(sliceOutput.slice().getInput());\n39.         assertBlockEquals(VARCHAR, actualBlock, expectedBlock);\n40.     }\n"}]}, {"url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-spi/src/test/java/com/facebook/presto/spi/type/TestTypeSerde.java", "rawCode": "/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage com.facebook.presto.spi.type;\n\nimport io.airlift.slice.DynamicSliceOutput;\nimport org.testng.annotations.Test;\n\nimport static com.facebook.presto.spi.type.BooleanType.BOOLEAN;\nimport static com.facebook.presto.spi.type.TypeSerde.readType;\nimport static com.facebook.presto.spi.type.TypeSerde.writeType;\nimport static org.testng.Assert.assertEquals;\n\npublic class TestTypeSerde\n{\n    @Test\n    public void testRoundTrip()\n    {\n        DynamicSliceOutput sliceOutput = new DynamicSliceOutput(1024);\n        writeType(sliceOutput, BOOLEAN);\n        Type actualType = readType(new TestingTypeManager(), sliceOutput.slice().getInput());\n        assertEquals(actualType, BOOLEAN);\n    }\n}\n", "methodName": "void TestTypeSerde.testRoundTrip()", "exampleID": 4, "dataset": "infer", "filepath": "presto-spi/src/test/java/com/facebook/presto/spi/type/TestTypeSerde.java", "source": "io.airlift.slice.DynamicSliceOutput", "sourceLine": 29, "qualifier": "Resource of type $$io.airlift.slice.DynamicSliceOutput/$ acquired by call to @@new()/@ is not released", "steps": [{"line": 28, "source": "io.airlift.slice.DynamicSliceOutput", "filepath": "presto-spi/src/main/java/com/facebook/presto/spi/type/TypeSerde.java", "methodName": "TypeSerde.writeType", "exampleID": 5}], "line_number": 29, "records": [{"level": 1, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/type/TypeSerde.java", "line_number": 28, "column_number": -1, "description": "start of procedure writeType(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void TypeSerde.writeType(DynamicSliceOutput,Type)"}, {"tag": "name_id", "value": "com.facebook.presto.spi.type.TypeSerde.writeType(io.airlift.slice.DynamicSliceOutput,com.facebook.pr.9bb0d0704165d26862bcb243c0371648"}], "snippet": "    public static void writeType(SliceOutput sliceOutput, Type type)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-spi/src/main/java/com/facebook/presto/spi/type/TypeSerde.java", "methodName": "writeType"}, {"level": 1, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/type/TypeSerde.java", "line_number": 30, "column_number": -1, "description": "Taking false branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "false"}], "snippet": "        if (sliceOutput == null) {", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-spi/src/main/java/com/facebook/presto/spi/type/TypeSerde.java", "methodName": "writeType"}, {"level": 1, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/type/TypeSerde.java", "line_number": 33, "column_number": -1, "description": "Taking false branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "false"}], "snippet": "        if (type == null) {", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-spi/src/main/java/com/facebook/presto/spi/type/TypeSerde.java", "methodName": "writeType"}, {"level": 1, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/type/TypeSerde.java", "line_number": 37, "column_number": -1, "description": "", "node_tags": [], "snippet": "        writeLengthPrefixedString(sliceOutput, type.getTypeSignature().toString());", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-spi/src/main/java/com/facebook/presto/spi/type/TypeSerde.java", "methodName": "writeType"}, {"level": 2, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/type/AbstractType.java", "line_number": 37, "column_number": -1, "description": "start of procedure getTypeSignature()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "TypeSignature AbstractType.getTypeSignature()"}, {"tag": "name_id", "value": "com.facebook.presto.spi.type.AbstractType.getTypeSignature():com.facebook.presto.spi.type.TypeSignat.27f260095b0fdcf1945de3d2c1a5cfcd"}], "snippet": "    public final TypeSignature getTypeSignature()", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-spi/src/main/java/com/facebook/presto/spi/type/AbstractType.java", "methodName": "getTypeSignature"}, {"level": 2, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/type/AbstractType.java", "line_number": 39, "column_number": -1, "description": "return from a call to TypeSignature AbstractType.getTypeSignature()", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "TypeSignature AbstractType.getTypeSignature()"}, {"tag": "name_id", "value": "com.facebook.presto.spi.type.AbstractType.getTypeSignature():com.facebook.presto.spi.type.TypeSignat.27f260095b0fdcf1945de3d2c1a5cfcd"}], "snippet": "        return signature;", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-spi/src/main/java/com/facebook/presto/spi/type/AbstractType.java", "methodName": "getTypeSignature"}, {"level": 1, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/type/TypeSerde.java", "line_number": 37, "column_number": -1, "description": "Skipping toString(): empty list of specs", "node_tags": [], "snippet": "        writeLengthPrefixedString(sliceOutput, type.getTypeSignature().toString());", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-spi/src/main/java/com/facebook/presto/spi/type/TypeSerde.java", "methodName": "writeType"}, {"level": 2, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/type/TypeSignature.java", "line_number": 334, "column_number": -1, "description": "Definition of toString()", "node_tags": [], "snippet": "    public String toString()", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-spi/src/main/java/com/facebook/presto/spi/type/TypeSignature.java", "methodName": "toString"}, {"level": 1, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/type/TypeSerde.java", "line_number": 37, "column_number": -1, "description": "", "node_tags": [], "snippet": "        writeLengthPrefixedString(sliceOutput, type.getTypeSignature().toString());", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-spi/src/main/java/com/facebook/presto/spi/type/TypeSerde.java", "methodName": "toString"}, {"level": 2, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/type/TypeSerde.java", "line_number": 62, "column_number": -1, "description": "start of procedure writeLengthPrefixedString(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void TypeSerde.writeLengthPrefixedString(SliceOutput,String)"}, {"tag": "name_id", "value": "com.facebook.presto.spi.type.TypeSerde.writeLengthPrefixedString(io.airlift.slice.SliceOutput,java.l.35fd913003c508527ec9e74521dcb9c8"}], "snippet": "    private static void writeLengthPrefixedString(SliceOutput output, String string)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-spi/src/main/java/com/facebook/presto/spi/type/TypeSerde.java", "methodName": "writeLengthPrefixedString"}, {"level": 2, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/type/TypeSerde.java", "line_number": 64, "column_number": -1, "description": "Skipping getBytes(...): unknown method", "node_tags": [], "snippet": "        byte[] bytes = string.getBytes(UTF_8);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-spi/src/main/java/com/facebook/presto/spi/type/TypeSerde.java", "methodName": "writeLengthPrefixedString"}, {"level": 2, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/type/TypeSerde.java", "line_number": 65, "column_number": -1, "description": "Skipping writeInt(...): unknown method", "node_tags": [], "snippet": "        output.writeInt(bytes.length);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-spi/src/main/java/com/facebook/presto/spi/type/TypeSerde.java", "methodName": "writeLengthPrefixedString"}, {"level": 2, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/type/TypeSerde.java", "line_number": 66, "column_number": -1, "description": "Skipping writeBytes(...): unknown method", "node_tags": [], "snippet": "        output.writeBytes(bytes);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-spi/src/main/java/com/facebook/presto/spi/type/TypeSerde.java", "methodName": "writeLengthPrefixedString"}, {"level": 2, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/type/TypeSerde.java", "line_number": 67, "column_number": -1, "description": "return from a call to void TypeSerde.writeLengthPrefixedString(SliceOutput,String)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "void TypeSerde.writeLengthPrefixedString(SliceOutput,String)"}, {"tag": "name_id", "value": "com.facebook.presto.spi.type.TypeSerde.writeLengthPrefixedString(io.airlift.slice.SliceOutput,java.l.35fd913003c508527ec9e74521dcb9c8"}], "snippet": "    }", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-spi/src/main/java/com/facebook/presto/spi/type/TypeSerde.java", "methodName": "writeLengthPrefixedString"}, {"level": 1, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/type/TypeSerde.java", "line_number": 38, "column_number": -1, "description": "return from a call to void TypeSerde.writeType(DynamicSliceOutput,Type)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "void TypeSerde.writeType(DynamicSliceOutput,Type)"}, {"tag": "name_id", "value": "com.facebook.presto.spi.type.TypeSerde.writeType(io.airlift.slice.DynamicSliceOutput,com.facebook.pr.9bb0d0704165d26862bcb243c0371648"}], "snippet": "    }", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-spi/src/main/java/com/facebook/presto/spi/type/TypeSerde.java", "methodName": "toString"}, {"level": 1, "filename": "presto-spi/src/test/java/com/facebook/presto/spi/type/TestingTypeManager.java", "line_number": 34, "column_number": -1, "description": "start of procedure TestingTypeManager()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "TestingTypeManager.<init>()"}, {"tag": "name_id", "value": "com.facebook.presto.spi.type.TestingTypeManager.<init>().198d0f4058daeb12e16e9444d503fd7d"}], "snippet": "public class TestingTypeManager", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-spi/src/test/java/com/facebook/presto/spi/type/TestingTypeManager.java", "methodName": "TestingTypeManager"}, {"level": 1, "filename": "presto-spi/src/test/java/com/facebook/presto/spi/type/TestingTypeManager.java", "line_number": 34, "column_number": -1, "description": "return from a call to TestingTypeManager.<init>()", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "TestingTypeManager.<init>()"}, {"tag": "name_id", "value": "com.facebook.presto.spi.type.TestingTypeManager.<init>().198d0f4058daeb12e16e9444d503fd7d"}], "snippet": "public class TestingTypeManager", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-spi/src/test/java/com/facebook/presto/spi/type/TestingTypeManager.java", "methodName": "TestingTypeManager"}], "combined_records": [{"level": 1, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/type/TypeSerde.java", "line_number": 37, "column_number": -1, "description": "start of procedure writeType(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void TypeSerde.writeType(DynamicSliceOutput,Type)"}, {"tag": "name_id", "value": "com.facebook.presto.spi.type.TypeSerde.writeType(io.airlift.slice.DynamicSliceOutput,com.facebook.pr.9bb0d0704165d26862bcb243c0371648"}], "snippet": "26.\n27.    public static void writeType(SliceOutput sliceOutput, Type type)\n28.>     {\n29.        if (sliceOutput == null) {\n30.>             throw new NullPointerException(\"sliceOutput is null\");\n31.        }\n32.        if (type == null) {\n33.>             throw new NullPointerException(\"type is null\");\n34.        }\n35.\n36.        writeLengthPrefixedString(sliceOutput, type.getTypeSignature().toString());\n37.    }\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-spi/src/main/java/com/facebook/presto/spi/type/TypeSerde.java", "methodName": "writeType", "line_numbers": [28, 30, 33, 37]}, {"level": 2, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/type/AbstractType.java", "line_number": 39, "column_number": -1, "description": "start of procedure getTypeSignature()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "TypeSignature AbstractType.getTypeSignature()"}, {"tag": "name_id", "value": "com.facebook.presto.spi.type.AbstractType.getTypeSignature():com.facebook.presto.spi.type.TypeSignat.27f260095b0fdcf1945de3d2c1a5cfcd"}], "snippet": "35.    @Override\n36.    public final TypeSignature getTypeSignature()\n37.>     {\n38.        return signature;\n39.    }\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-spi/src/main/java/com/facebook/presto/spi/type/AbstractType.java", "methodName": "getTypeSignature", "line_numbers": [37, 39]}, {"level": 1, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/type/TypeSerde.java", "line_number": 37, "column_number": -1, "description": "Skipping toString(): empty list of specs", "node_tags": [], "snippet": "35.\n36.        writeLengthPrefixedString(sliceOutput, type.getTypeSignature().toString());\n37.    }\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-spi/src/main/java/com/facebook/presto/spi/type/TypeSerde.java", "methodName": "writeType", "line_numbers": [37]}, {"level": 2, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/type/TypeSignature.java", "line_number": 334, "column_number": -1, "description": "Definition of toString()", "node_tags": [], "snippet": "332.    @JsonValue\n333.    public String toString()\n334.>     {\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-spi/src/main/java/com/facebook/presto/spi/type/TypeSignature.java", "methodName": "toString", "line_numbers": [334]}, {"level": 1, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/type/TypeSerde.java", "line_number": 37, "column_number": -1, "description": "", "node_tags": [], "snippet": "35.\n36.        writeLengthPrefixedString(sliceOutput, type.getTypeSignature().toString());\n37.    }\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-spi/src/main/java/com/facebook/presto/spi/type/TypeSerde.java", "methodName": "toString", "line_numbers": [37]}, {"level": 2, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/type/TypeSerde.java", "line_number": 67, "column_number": -1, "description": "start of procedure writeLengthPrefixedString(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void TypeSerde.writeLengthPrefixedString(SliceOutput,String)"}, {"tag": "name_id", "value": "com.facebook.presto.spi.type.TypeSerde.writeLengthPrefixedString(io.airlift.slice.SliceOutput,java.l.35fd913003c508527ec9e74521dcb9c8"}], "snippet": "60.\n61.    private static void writeLengthPrefixedString(SliceOutput output, String string)\n62.>     {\n63.        byte[] bytes = string.getBytes(UTF_8);\n64.>         output.writeInt(bytes.length);\n65.>         output.writeBytes(bytes);\n66.    }\n67.}\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-spi/src/main/java/com/facebook/presto/spi/type/TypeSerde.java", "methodName": "writeLengthPrefixedString", "line_numbers": [62, 64, 65, 66, 67]}, {"level": 1, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/type/TypeSerde.java", "line_number": 38, "column_number": -1, "description": "return from a call to void TypeSerde.writeType(DynamicSliceOutput,Type)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "void TypeSerde.writeType(DynamicSliceOutput,Type)"}, {"tag": "name_id", "value": "com.facebook.presto.spi.type.TypeSerde.writeType(io.airlift.slice.DynamicSliceOutput,com.facebook.pr.9bb0d0704165d26862bcb243c0371648"}], "snippet": "36.        writeLengthPrefixedString(sliceOutput, type.getTypeSignature().toString());\n37.    }\n38.> \n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-spi/src/main/java/com/facebook/presto/spi/type/TypeSerde.java", "methodName": "toString", "line_numbers": [38]}, {"level": 1, "filename": "presto-spi/src/test/java/com/facebook/presto/spi/type/TestingTypeManager.java", "line_number": 34, "column_number": -1, "description": "start of procedure TestingTypeManager()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "TestingTypeManager.<init>()"}, {"tag": "name_id", "value": "com.facebook.presto.spi.type.TestingTypeManager.<init>().198d0f4058daeb12e16e9444d503fd7d"}], "snippet": "32.\n33.public class TestingTypeManager\n34.>         implements TypeManager\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-spi/src/test/java/com/facebook/presto/spi/type/TestingTypeManager.java", "methodName": "TestingTypeManager", "line_numbers": [34, 34]}], "infer_explore": [{"level": 0, "filename": "presto-spi/src/test/java/com/facebook/presto/spi/type/TestTypeSerde.java", "line_number": 27, "column_number": -1, "description": "start of procedure testRoundTrip()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void TestTypeSerde.testRoundTrip()"}, {"tag": "name_id", "value": "com.facebook.presto.spi.type.TestTypeSerde.testRoundTrip():void.bc290ba5e4713e4998ebacb78497f829"}], "snippet": "24. {\n25.     @Test\n26. >     public void testRoundTrip()\n27.     {\n28.         DynamicSliceOutput sliceOutput = new DynamicSliceOutput(1024);\n"}, {"level": 0, "filename": "presto-spi/src/test/java/com/facebook/presto/spi/type/TestTypeSerde.java", "line_number": 29, "column_number": -1, "description": "Skipping DynamicSliceOutput(...): unknown method", "node_tags": [], "snippet": "26.     public void testRoundTrip()\n27.     {\n28. >         DynamicSliceOutput sliceOutput = new DynamicSliceOutput(1024);\n29.         writeType(sliceOutput, BOOLEAN);\n30.         Type actualType = readType(new TestingTypeManager(), sliceOutput.slice().getInput());\n"}, {"level": 0, "filename": "presto-spi/src/test/java/com/facebook/presto/spi/type/TestTypeSerde.java", "line_number": 30, "column_number": -1, "description": "", "node_tags": [], "snippet": "27.     {\n28.         DynamicSliceOutput sliceOutput = new DynamicSliceOutput(1024);\n29. >         writeType(sliceOutput, BOOLEAN);\n30.         Type actualType = readType(new TestingTypeManager(), sliceOutput.slice().getInput());\n31.         assertEquals(actualType, BOOLEAN);\n"}, {"level": 1, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/type/TypeSerde.java", "line_number": 28, "column_number": -1, "description": "start of procedure writeType(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void TypeSerde.writeType(DynamicSliceOutput,Type)"}, {"tag": "name_id", "value": "com.facebook.presto.spi.type.TypeSerde.writeType(io.airlift.slice.DynamicSliceOutput,com.facebook.pr.9bb0d0704165d26862bcb243c0371648"}], "snippet": "25.     }\n26. \n27. >     public static void writeType(SliceOutput sliceOutput, Type type)\n28.     {\n29.         if (sliceOutput == null) {\n"}, {"level": 1, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/type/TypeSerde.java", "line_number": 30, "column_number": -1, "description": "Taking false branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "false"}], "snippet": "27.     public static void writeType(SliceOutput sliceOutput, Type type)\n28.     {\n29. >         if (sliceOutput == null) {\n30.             throw new NullPointerException(\"sliceOutput is null\");\n31.         }\n"}, {"level": 1, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/type/TypeSerde.java", "line_number": 33, "column_number": -1, "description": "Taking false branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "false"}], "snippet": "30.             throw new NullPointerException(\"sliceOutput is null\");\n31.         }\n32. >         if (type == null) {\n33.             throw new NullPointerException(\"type is null\");\n34.         }\n"}, {"level": 1, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/type/TypeSerde.java", "line_number": 37, "column_number": -1, "description": "", "node_tags": [], "snippet": "34.         }\n35. \n36. >         writeLengthPrefixedString(sliceOutput, type.getTypeSignature().toString());\n37.     }\n38. \n"}, {"level": 2, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/type/AbstractType.java", "line_number": 37, "column_number": -1, "description": "start of procedure getTypeSignature()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "TypeSignature AbstractType.getTypeSignature()"}, {"tag": "name_id", "value": "com.facebook.presto.spi.type.AbstractType.getTypeSignature():com.facebook.presto.spi.type.TypeSignat.27f260095b0fdcf1945de3d2c1a5cfcd"}], "snippet": "34. \n35.     @Override\n36. >     public final TypeSignature getTypeSignature()\n37.     {\n38.         return signature;\n"}, {"level": 2, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/type/AbstractType.java", "line_number": 39, "column_number": -1, "description": "return from a call to TypeSignature AbstractType.getTypeSignature()", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "TypeSignature AbstractType.getTypeSignature()"}, {"tag": "name_id", "value": "com.facebook.presto.spi.type.AbstractType.getTypeSignature():com.facebook.presto.spi.type.TypeSignat.27f260095b0fdcf1945de3d2c1a5cfcd"}], "snippet": "36.     public final TypeSignature getTypeSignature()\n37.     {\n38. >         return signature;\n39.     }\n40. \n"}, {"level": 1, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/type/TypeSerde.java", "line_number": 37, "column_number": -1, "description": "Skipping toString(): empty list of specs", "node_tags": [], "snippet": "34.         }\n35. \n36. >         writeLengthPrefixedString(sliceOutput, type.getTypeSignature().toString());\n37.     }\n38. \n"}, {"level": 2, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/type/TypeSignature.java", "line_number": 334, "column_number": -1, "description": "Definition of toString()", "node_tags": [], "snippet": "331.     @Override\n332.     @JsonValue\n333. >     public String toString()\n334.     {\n335.         // TODO: remove these hacks\n"}, {"level": 1, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/type/TypeSerde.java", "line_number": 37, "column_number": -1, "description": "", "node_tags": [], "snippet": "34.         }\n35. \n36. >         writeLengthPrefixedString(sliceOutput, type.getTypeSignature().toString());\n37.     }\n38. \n"}, {"level": 2, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/type/TypeSerde.java", "line_number": 62, "column_number": -1, "description": "start of procedure writeLengthPrefixedString(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void TypeSerde.writeLengthPrefixedString(SliceOutput,String)"}, {"tag": "name_id", "value": "com.facebook.presto.spi.type.TypeSerde.writeLengthPrefixedString(io.airlift.slice.SliceOutput,java.l.35fd913003c508527ec9e74521dcb9c8"}], "snippet": "59.     }\n60. \n61. >     private static void writeLengthPrefixedString(SliceOutput output, String string)\n62.     {\n63.         byte[] bytes = string.getBytes(UTF_8);\n"}, {"level": 2, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/type/TypeSerde.java", "line_number": 64, "column_number": -1, "description": "Skipping getBytes(...): unknown method", "node_tags": [], "snippet": "61.     private static void writeLengthPrefixedString(SliceOutput output, String string)\n62.     {\n63. >         byte[] bytes = string.getBytes(UTF_8);\n64.         output.writeInt(bytes.length);\n65.         output.writeBytes(bytes);\n"}, {"level": 2, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/type/TypeSerde.java", "line_number": 65, "column_number": -1, "description": "Skipping writeInt(...): unknown method", "node_tags": [], "snippet": "62.     {\n63.         byte[] bytes = string.getBytes(UTF_8);\n64. >         output.writeInt(bytes.length);\n65.         output.writeBytes(bytes);\n66.     }\n"}, {"level": 2, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/type/TypeSerde.java", "line_number": 66, "column_number": -1, "description": "Skipping writeBytes(...): unknown method", "node_tags": [], "snippet": "63.         byte[] bytes = string.getBytes(UTF_8);\n64.         output.writeInt(bytes.length);\n65. >         output.writeBytes(bytes);\n66.     }\n67. }\n"}, {"level": 2, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/type/TypeSerde.java", "line_number": 67, "column_number": -1, "description": "return from a call to void TypeSerde.writeLengthPrefixedString(SliceOutput,String)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "void TypeSerde.writeLengthPrefixedString(SliceOutput,String)"}, {"tag": "name_id", "value": "com.facebook.presto.spi.type.TypeSerde.writeLengthPrefixedString(io.airlift.slice.SliceOutput,java.l.35fd913003c508527ec9e74521dcb9c8"}], "snippet": "64.         output.writeInt(bytes.length);\n65.         output.writeBytes(bytes);\n66. >     }\n67. }\n68. \n"}, {"level": 1, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/type/TypeSerde.java", "line_number": 38, "column_number": -1, "description": "return from a call to void TypeSerde.writeType(DynamicSliceOutput,Type)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "void TypeSerde.writeType(DynamicSliceOutput,Type)"}, {"tag": "name_id", "value": "com.facebook.presto.spi.type.TypeSerde.writeType(io.airlift.slice.DynamicSliceOutput,com.facebook.pr.9bb0d0704165d26862bcb243c0371648"}], "snippet": "35. \n36.         writeLengthPrefixedString(sliceOutput, type.getTypeSignature().toString());\n37. >     }\n38. \n39.     public static Type readType(TypeManager typeManager, SliceInput sliceInput)\n"}, {"level": 0, "filename": "presto-spi/src/test/java/com/facebook/presto/spi/type/TestTypeSerde.java", "line_number": 31, "column_number": -1, "description": "", "node_tags": [], "snippet": "28.         DynamicSliceOutput sliceOutput = new DynamicSliceOutput(1024);\n29.         writeType(sliceOutput, BOOLEAN);\n30. >         Type actualType = readType(new TestingTypeManager(), sliceOutput.slice().getInput());\n31.         assertEquals(actualType, BOOLEAN);\n32.     }\n"}, {"level": 1, "filename": "presto-spi/src/test/java/com/facebook/presto/spi/type/TestingTypeManager.java", "line_number": 34, "column_number": -1, "description": "start of procedure TestingTypeManager()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "TestingTypeManager.<init>()"}, {"tag": "name_id", "value": "com.facebook.presto.spi.type.TestingTypeManager.<init>().198d0f4058daeb12e16e9444d503fd7d"}], "snippet": "31. import static com.facebook.presto.spi.type.VarcharType.VARCHAR;\n32. \n33. > public class TestingTypeManager\n34.         implements TypeManager\n35. {\n"}, {"level": 1, "filename": "presto-spi/src/test/java/com/facebook/presto/spi/type/TestingTypeManager.java", "line_number": 34, "column_number": -1, "description": "return from a call to TestingTypeManager.<init>()", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "TestingTypeManager.<init>()"}, {"tag": "name_id", "value": "com.facebook.presto.spi.type.TestingTypeManager.<init>().198d0f4058daeb12e16e9444d503fd7d"}], "snippet": "31. import static com.facebook.presto.spi.type.VarcharType.VARCHAR;\n32. \n33. > public class TestingTypeManager\n34.         implements TypeManager\n35. {\n"}, {"level": 0, "filename": "presto-spi/src/test/java/com/facebook/presto/spi/type/TestTypeSerde.java", "line_number": 31, "column_number": -1, "description": "Skipping slice(): unknown method", "node_tags": [], "snippet": "28.         DynamicSliceOutput sliceOutput = new DynamicSliceOutput(1024);\n29.         writeType(sliceOutput, BOOLEAN);\n30. >         Type actualType = readType(new TestingTypeManager(), sliceOutput.slice().getInput());\n31.         assertEquals(actualType, BOOLEAN);\n32.     }\n"}]}, {"url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-spi/src/test/java/com/facebook/presto/spi/type/TestTypeSerde.java", "rawCode": "/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage com.facebook.presto.spi.type;\n\nimport io.airlift.slice.DynamicSliceOutput;\nimport org.testng.annotations.Test;\n\nimport static com.facebook.presto.spi.type.BooleanType.BOOLEAN;\nimport static com.facebook.presto.spi.type.TypeSerde.readType;\nimport static com.facebook.presto.spi.type.TypeSerde.writeType;\nimport static org.testng.Assert.assertEquals;\n\npublic class TestTypeSerde\n{\n    @Test\n    public void testRoundTrip()\n    {\n        DynamicSliceOutput sliceOutput = new DynamicSliceOutput(1024);\n        writeType(sliceOutput, BOOLEAN);\n        Type actualType = readType(new TestingTypeManager(), sliceOutput.slice().getInput());\n        assertEquals(actualType, BOOLEAN);\n    }\n}\n", "methodName": "void TestTypeSerde.testRoundTrip()", "exampleID": 6, "dataset": "infer", "filepath": "presto-spi/src/test/java/com/facebook/presto/spi/type/TestTypeSerde.java", "source": "io.airlift.slice.DynamicSliceOutput", "sourceLine": 29, "qualifier": "Resource of type $$io.airlift.slice.DynamicSliceOutput/$ acquired by call to @@new()/@ is not released", "steps": [{"line": 28, "source": "io.airlift.slice.DynamicSliceOutput", "filepath": "presto-spi/src/main/java/com/facebook/presto/spi/type/TypeSerde.java", "methodName": "TypeSerde.writeType", "exampleID": 7}], "line_number": 29, "records": [{"level": 1, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/type/TypeSerde.java", "line_number": 28, "column_number": -1, "description": "start of procedure writeType(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void TypeSerde.writeType(DynamicSliceOutput,Type)"}, {"tag": "name_id", "value": "com.facebook.presto.spi.type.TypeSerde.writeType(io.airlift.slice.DynamicSliceOutput,com.facebook.pr.9bb0d0704165d26862bcb243c0371648"}], "snippet": "    public static void writeType(SliceOutput sliceOutput, Type type)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-spi/src/main/java/com/facebook/presto/spi/type/TypeSerde.java", "methodName": "writeType"}, {"level": 1, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/type/TypeSerde.java", "line_number": 30, "column_number": -1, "description": "Taking false branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "false"}], "snippet": "        if (sliceOutput == null) {", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-spi/src/main/java/com/facebook/presto/spi/type/TypeSerde.java", "methodName": "writeType"}, {"level": 1, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/type/TypeSerde.java", "line_number": 33, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "        if (type == null) {", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-spi/src/main/java/com/facebook/presto/spi/type/TypeSerde.java", "methodName": "writeType"}, {"level": 1, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/type/TypeSerde.java", "line_number": 34, "column_number": -1, "description": "", "node_tags": [], "snippet": "            throw new NullPointerException(\"type is null\");", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-spi/src/main/java/com/facebook/presto/spi/type/TypeSerde.java", "methodName": "writeType"}, {"level": 1, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/type/TypeSerde.java", "line_number": 38, "column_number": -1, "description": "exception java.lang.NullPointerException", "node_tags": [{"tag": "name", "value": "java.lang.NullPointerException"}, {"tag": "kind", "value": "exception"}], "snippet": "    }", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-spi/src/main/java/com/facebook/presto/spi/type/TypeSerde.java", "methodName": "writeType"}, {"level": 1, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/type/TypeSerde.java", "line_number": 38, "column_number": -1, "description": "return from a call to void TypeSerde.writeType(DynamicSliceOutput,Type)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "void TypeSerde.writeType(DynamicSliceOutput,Type)"}, {"tag": "name_id", "value": "com.facebook.presto.spi.type.TypeSerde.writeType(io.airlift.slice.DynamicSliceOutput,com.facebook.pr.9bb0d0704165d26862bcb243c0371648"}], "snippet": "    }", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-spi/src/main/java/com/facebook/presto/spi/type/TypeSerde.java", "methodName": "writeType"}], "combined_records": [{"level": 1, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/type/TypeSerde.java", "line_number": 38, "column_number": -1, "description": "start of procedure writeType(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void TypeSerde.writeType(DynamicSliceOutput,Type)"}, {"tag": "name_id", "value": "com.facebook.presto.spi.type.TypeSerde.writeType(io.airlift.slice.DynamicSliceOutput,com.facebook.pr.9bb0d0704165d26862bcb243c0371648"}], "snippet": "26.\n27.    public static void writeType(SliceOutput sliceOutput, Type type)\n28.>     {\n29.        if (sliceOutput == null) {\n30.>             throw new NullPointerException(\"sliceOutput is null\");\n31.        }\n32.        if (type == null) {\n33.>             throw new NullPointerException(\"type is null\");\n34.        }\n35.\n36.        writeLengthPrefixedString(sliceOutput, type.getTypeSignature().toString());\n37.    }\n38.> \n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-spi/src/main/java/com/facebook/presto/spi/type/TypeSerde.java", "methodName": "writeType", "line_numbers": [28, 30, 33, 34, 38, 38]}], "infer_explore": [{"level": 0, "filename": "presto-spi/src/test/java/com/facebook/presto/spi/type/TestTypeSerde.java", "line_number": 27, "column_number": -1, "description": "start of procedure testRoundTrip()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void TestTypeSerde.testRoundTrip()"}, {"tag": "name_id", "value": "com.facebook.presto.spi.type.TestTypeSerde.testRoundTrip():void.bc290ba5e4713e4998ebacb78497f829"}], "snippet": "24. {\n25.     @Test\n26. >     public void testRoundTrip()\n27.     {\n28.         DynamicSliceOutput sliceOutput = new DynamicSliceOutput(1024);\n"}, {"level": 0, "filename": "presto-spi/src/test/java/com/facebook/presto/spi/type/TestTypeSerde.java", "line_number": 29, "column_number": -1, "description": "Skipping DynamicSliceOutput(...): unknown method", "node_tags": [], "snippet": "26.     public void testRoundTrip()\n27.     {\n28. >         DynamicSliceOutput sliceOutput = new DynamicSliceOutput(1024);\n29.         writeType(sliceOutput, BOOLEAN);\n30.         Type actualType = readType(new TestingTypeManager(), sliceOutput.slice().getInput());\n"}, {"level": 0, "filename": "presto-spi/src/test/java/com/facebook/presto/spi/type/TestTypeSerde.java", "line_number": 30, "column_number": -1, "description": "", "node_tags": [], "snippet": "27.     {\n28.         DynamicSliceOutput sliceOutput = new DynamicSliceOutput(1024);\n29. >         writeType(sliceOutput, BOOLEAN);\n30.         Type actualType = readType(new TestingTypeManager(), sliceOutput.slice().getInput());\n31.         assertEquals(actualType, BOOLEAN);\n"}, {"level": 1, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/type/TypeSerde.java", "line_number": 28, "column_number": -1, "description": "start of procedure writeType(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void TypeSerde.writeType(DynamicSliceOutput,Type)"}, {"tag": "name_id", "value": "com.facebook.presto.spi.type.TypeSerde.writeType(io.airlift.slice.DynamicSliceOutput,com.facebook.pr.9bb0d0704165d26862bcb243c0371648"}], "snippet": "25.     }\n26. \n27. >     public static void writeType(SliceOutput sliceOutput, Type type)\n28.     {\n29.         if (sliceOutput == null) {\n"}, {"level": 1, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/type/TypeSerde.java", "line_number": 30, "column_number": -1, "description": "Taking false branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "false"}], "snippet": "27.     public static void writeType(SliceOutput sliceOutput, Type type)\n28.     {\n29. >         if (sliceOutput == null) {\n30.             throw new NullPointerException(\"sliceOutput is null\");\n31.         }\n"}, {"level": 1, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/type/TypeSerde.java", "line_number": 33, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "30.             throw new NullPointerException(\"sliceOutput is null\");\n31.         }\n32. >         if (type == null) {\n33.             throw new NullPointerException(\"type is null\");\n34.         }\n"}, {"level": 1, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/type/TypeSerde.java", "line_number": 34, "column_number": -1, "description": "", "node_tags": [], "snippet": "31.         }\n32.         if (type == null) {\n33. >             throw new NullPointerException(\"type is null\");\n34.         }\n35. \n"}, {"level": 1, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/type/TypeSerde.java", "line_number": 38, "column_number": -1, "description": "exception java.lang.NullPointerException", "node_tags": [{"tag": "name", "value": "java.lang.NullPointerException"}, {"tag": "kind", "value": "exception"}], "snippet": "35. \n36.         writeLengthPrefixedString(sliceOutput, type.getTypeSignature().toString());\n37. >     }\n38. \n39.     public static Type readType(TypeManager typeManager, SliceInput sliceInput)\n"}, {"level": 1, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/type/TypeSerde.java", "line_number": 38, "column_number": -1, "description": "return from a call to void TypeSerde.writeType(DynamicSliceOutput,Type)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "void TypeSerde.writeType(DynamicSliceOutput,Type)"}, {"tag": "name_id", "value": "com.facebook.presto.spi.type.TypeSerde.writeType(io.airlift.slice.DynamicSliceOutput,com.facebook.pr.9bb0d0704165d26862bcb243c0371648"}], "snippet": "35. \n36.         writeLengthPrefixedString(sliceOutput, type.getTypeSignature().toString());\n37. >     }\n38. \n39.     public static Type readType(TypeManager typeManager, SliceInput sliceInput)\n"}, {"level": 0, "filename": "presto-spi/src/test/java/com/facebook/presto/spi/type/TestTypeSerde.java", "line_number": 33, "column_number": -1, "description": "", "node_tags": [], "snippet": "30.         Type actualType = readType(new TestingTypeManager(), sliceOutput.slice().getInput());\n31.         assertEquals(actualType, BOOLEAN);\n32. >     }\n33. }\n34. \n"}]}, {"url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/metadata/CompressedMetadataWriter.java", "rawCode": "/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage com.facebook.presto.orc.metadata;\n\nimport com.facebook.presto.orc.OrcOutputBuffer;\nimport io.airlift.slice.SliceOutput;\n\nimport java.io.IOException;\nimport java.util.List;\n\npublic class CompressedMetadataWriter\n        implements MetadataWriter\n{\n    private final MetadataWriter metadataWriter;\n    private final OrcOutputBuffer buffer;\n\n    public CompressedMetadataWriter(MetadataWriter metadataWriter, CompressionKind compression, int bufferSize)\n    {\n        this.metadataWriter = metadataWriter;\n        this.buffer = new OrcOutputBuffer(compression, bufferSize);\n    }\n\n    @Override\n    public List<Integer> getOrcMetadataVersion()\n    {\n        return metadataWriter.getOrcMetadataVersion();\n    }\n\n    @Override\n    public int writePostscript(SliceOutput output, int footerLength, int metadataLength, CompressionKind compression, int compressionBlockSize)\n            throws IOException\n    {\n        // postscript is not compressed\n        return metadataWriter.writePostscript(output, footerLength, metadataLength, compression, compressionBlockSize);\n    }\n\n    @Override\n    public int writeMetadata(SliceOutput output, Metadata metadata)\n            throws IOException\n    {\n        buffer.reset();\n        metadataWriter.writeMetadata(buffer, metadata);\n        return buffer.writeDataTo(output);\n    }\n\n    @Override\n    public int writeFooter(SliceOutput output, Footer footer)\n            throws IOException\n    {\n        buffer.reset();\n        metadataWriter.writeFooter(buffer, footer);\n        return buffer.writeDataTo(output);\n    }\n\n    @Override\n    public int writeStripeFooter(SliceOutput output, StripeFooter footer)\n            throws IOException\n    {\n        buffer.reset();\n        metadataWriter.writeStripeFooter(buffer, footer);\n        return buffer.writeDataTo(output);\n    }\n\n    @Override\n    public int writeRowIndexes(SliceOutput output, List<RowGroupIndex> rowGroupIndexes)\n            throws IOException\n    {\n        buffer.reset();\n        metadataWriter.writeRowIndexes(buffer, rowGroupIndexes);\n        return buffer.writeDataTo(output);\n    }\n\n    @Override\n    public MetadataReader getMetadataReader()\n    {\n        return metadataWriter.getMetadataReader();\n    }\n}\n", "methodName": "CompressedMetadataWriter.<init>(MetadataWriter,CompressionKind,int)", "exampleID": 8, "dataset": "infer", "filepath": "presto-orc/src/main/java/com/facebook/presto/orc/metadata/CompressedMetadataWriter.java", "source": "com.facebook.presto.orc.OrcOutputBuffer", "sourceLine": 31, "qualifier": "Resource of type $$com.facebook.presto.orc.OrcOutputBuffer/$ acquired by call to @@OrcOutputBuffer(...)/@ is not released", "steps": [{"line": 68, "source": "com.facebook.presto.orc.OrcOutputBuffer", "filepath": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "methodName": "OrcOutputBuffer.OrcOutputBuffer", "exampleID": 9}], "line_number": 31, "records": [{"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "line_number": 68, "column_number": -1, "description": "start of procedure OrcOutputBuffer(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "OrcOutputBuffer.<init>(CompressionKind,int)"}, {"tag": "name_id", "value": "com.facebook.presto.orc.OrcOutputBuffer.<init>(com.facebook.presto.orc.metadata.CompressionKind,int).6845406b196c465a01d7308c262b5dde"}], "snippet": "    public OrcOutputBuffer(CompressionKind compression, int bufferSize)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "methodName": "OrcOutputBuffer"}, {"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "line_number": 69, "column_number": -1, "description": "Skipping SliceOutput(): unknown method", "node_tags": [], "snippet": "    {", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "methodName": "OrcOutputBuffer"}, {"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "line_number": 70, "column_number": -1, "description": "Skipping requireNonNull(...): unknown method", "node_tags": [], "snippet": "        requireNonNull(compression, \"compression is null\");", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "methodName": "OrcOutputBuffer"}, {"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "line_number": 71, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "        checkArgument(bufferSize >= MINIMUM_BUFFER_SIZE, \"minimum buffer size of \" + MINIMUM_BUFFER_SIZE + \" required\");", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "methodName": "OrcOutputBuffer"}, {"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "line_number": 73, "column_number": -1, "description": "", "node_tags": [], "snippet": "        this.buffer = new byte[bufferSize];", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "methodName": "OrcOutputBuffer"}, {"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "line_number": 74, "column_number": -1, "description": "", "node_tags": [], "snippet": "        this.slice = Slices.wrappedBuffer(buffer);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "methodName": "OrcOutputBuffer"}, {"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "line_number": 76, "column_number": -1, "description": "", "node_tags": [], "snippet": "        compressedOutputStream = new ChunkedSliceOutput(MINIMUM_OUTPUT_BUFFER_CHUNK_SIZE, MAXIMUM_OUTPUT_BUFFER_CHUNK_SIZE);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "methodName": "OrcOutputBuffer"}, {"level": 2, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 65, "column_number": -1, "description": "start of procedure ChunkedSliceOutput(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "ChunkedSliceOutput.<init>(int,int)"}, {"tag": "name_id", "value": "com.facebook.presto.orc.ChunkedSliceOutput.<init>(int,int).ef32f7ee9f89d6c5fcb961226d8fff21"}], "snippet": "    public ChunkedSliceOutput(int minChunkSize, int maxChunkSize)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput"}, {"level": 2, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 66, "column_number": -1, "description": "Skipping SliceOutput(): unknown method", "node_tags": [], "snippet": "    {", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput"}, {"level": 2, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 52, "column_number": -1, "description": "", "node_tags": [], "snippet": "    private final List<Slice> closedSlices = new ArrayList<>();", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput"}, {"level": 2, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 67, "column_number": -1, "description": "", "node_tags": [], "snippet": "        this.chunkSupplier = new ChunkSupplier(minChunkSize, maxChunkSize);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput"}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 354, "column_number": -1, "description": "start of procedure ChunkedSliceOutput$ChunkSupplier(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "ChunkedSliceOutput$ChunkSupplier.<init>(int,int)"}, {"tag": "name_id", "value": "com.facebook.presto.orc.ChunkedSliceOutput$ChunkSupplier.<init>(int,int).c5a93fc3ccf9127a26c485b20096a08b"}], "snippet": "        public ChunkSupplier(int minChunkSize, int maxChunkSize)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput$ChunkSupplier"}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 355, "column_number": -1, "description": "", "node_tags": [], "snippet": "        {", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput$ChunkSupplier"}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 349, "column_number": -1, "description": "", "node_tags": [], "snippet": "        private final List<byte[]> bufferPool = new ArrayList<>();", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput$ChunkSupplier"}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 350, "column_number": -1, "description": "", "node_tags": [], "snippet": "        private final List<byte[]> usedBuffers = new ArrayList<>();", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput$ChunkSupplier"}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 356, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "            checkArgument(minChunkSize >= MINIMUM_CHUNK_SIZE, \"minimum chunk size of \" + MINIMUM_CHUNK_SIZE + \" required\");", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput$ChunkSupplier"}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 357, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "            checkArgument(maxChunkSize <= MAXIMUM_CHUNK_SIZE, \"maximum chunk size of \" + MAXIMUM_CHUNK_SIZE + \" required\");", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput$ChunkSupplier"}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 358, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "            checkArgument(minChunkSize <= maxChunkSize, \"minimum chunk size must be less than maximum chunk size\");", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput$ChunkSupplier"}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 360, "column_number": -1, "description": "", "node_tags": [], "snippet": "            this.currentSize = minChunkSize;", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput$ChunkSupplier"}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 361, "column_number": -1, "description": "", "node_tags": [], "snippet": "            this.maxChunkSize = maxChunkSize;", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput$ChunkSupplier"}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 362, "column_number": -1, "description": "return from a call to ChunkedSliceOutput$ChunkSupplier.<init>(int,int)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "ChunkedSliceOutput$ChunkSupplier.<init>(int,int)"}, {"tag": "name_id", "value": "com.facebook.presto.orc.ChunkedSliceOutput$ChunkSupplier.<init>(int,int).c5a93fc3ccf9127a26c485b20096a08b"}], "snippet": "        }", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput$ChunkSupplier"}, {"level": 2, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 67, "column_number": -1, "description": "", "node_tags": [], "snippet": "        this.chunkSupplier = new ChunkSupplier(minChunkSize, maxChunkSize);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput"}, {"level": 2, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 69, "column_number": -1, "description": "", "node_tags": [], "snippet": "        this.buffer = chunkSupplier.get();", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput"}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 370, "column_number": -1, "description": "start of procedure get()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "byte[] ChunkedSliceOutput$ChunkSupplier.get()"}, {"tag": "name_id", "value": "com.facebook.presto.orc.ChunkedSliceOutput$ChunkSupplier.get():byte[].43328c56c6952a613ae94f32a43bbdb0"}], "snippet": "        public byte[] get()", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "methodName": "get"}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 373, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "            if (bufferPool.isEmpty()) {", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "methodName": "get"}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 374, "column_number": -1, "description": "", "node_tags": [], "snippet": "                currentSize = min(multiplyExact(currentSize, 2), maxChunkSize);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "methodName": "get"}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 375, "column_number": -1, "description": "", "node_tags": [], "snippet": "                buffer = new byte[currentSize];", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "methodName": "get"}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 381, "column_number": -1, "description": "Skipping add(...): unknown method", "node_tags": [], "snippet": "            usedBuffers.add(buffer);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "methodName": "get"}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 382, "column_number": -1, "description": "return from a call to byte[] ChunkedSliceOutput$ChunkSupplier.get()", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "byte[] ChunkedSliceOutput$ChunkSupplier.get()"}, {"tag": "name_id", "value": "com.facebook.presto.orc.ChunkedSliceOutput$ChunkSupplier.get():byte[].43328c56c6952a613ae94f32a43bbdb0"}], "snippet": "            return buffer;", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "methodName": "get"}, {"level": 2, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 69, "column_number": -1, "description": "", "node_tags": [], "snippet": "        this.buffer = chunkSupplier.get();", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput"}, {"level": 2, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 70, "column_number": -1, "description": "", "node_tags": [], "snippet": "        this.slice = Slices.wrappedBuffer(buffer);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput"}, {"level": 2, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 71, "column_number": -1, "description": "return from a call to ChunkedSliceOutput.<init>(int,int)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "ChunkedSliceOutput.<init>(int,int)"}, {"tag": "name_id", "value": "com.facebook.presto.orc.ChunkedSliceOutput.<init>(int,int).ef32f7ee9f89d6c5fcb961226d8fff21"}], "snippet": "    }", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput"}, {"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "line_number": 76, "column_number": -1, "description": "", "node_tags": [], "snippet": "        compressedOutputStream = new ChunkedSliceOutput(MINIMUM_OUTPUT_BUFFER_CHUNK_SIZE, MAXIMUM_OUTPUT_BUFFER_CHUNK_SIZE);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "methodName": "OrcOutputBuffer"}, {"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "line_number": 78, "column_number": -1, "description": "Taking false branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "false"}], "snippet": "        if (compression == CompressionKind.NONE) {", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "methodName": "OrcOutputBuffer"}, {"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "line_number": 82, "column_number": -1, "description": "Taking false branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "false"}], "snippet": "        else if (compression == CompressionKind.SNAPPY) {", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "methodName": "OrcOutputBuffer"}, {"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "line_number": 86, "column_number": -1, "description": "Taking false branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "false"}], "snippet": "        else if (compression == CompressionKind.ZLIB) {", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "methodName": "OrcOutputBuffer"}, {"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "line_number": 91, "column_number": -1, "description": "", "node_tags": [], "snippet": "            throw new IllegalArgumentException(\"Unsupported compression \" + compression);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "methodName": "OrcOutputBuffer"}, {"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "line_number": 93, "column_number": -1, "description": "exception java.lang.IllegalArgumentException", "node_tags": [{"tag": "name", "value": "java.lang.IllegalArgumentException"}, {"tag": "kind", "value": "exception"}], "snippet": "    }", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "methodName": "OrcOutputBuffer"}, {"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "line_number": 93, "column_number": -1, "description": "return from a call to OrcOutputBuffer.<init>(CompressionKind,int)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "OrcOutputBuffer.<init>(CompressionKind,int)"}, {"tag": "name_id", "value": "com.facebook.presto.orc.OrcOutputBuffer.<init>(com.facebook.presto.orc.metadata.CompressionKind,int).6845406b196c465a01d7308c262b5dde"}], "snippet": "    }", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "methodName": "OrcOutputBuffer"}], "combined_records": [{"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "line_number": 76, "column_number": -1, "description": "start of procedure OrcOutputBuffer(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "OrcOutputBuffer.<init>(CompressionKind,int)"}, {"tag": "name_id", "value": "com.facebook.presto.orc.OrcOutputBuffer.<init>(com.facebook.presto.orc.metadata.CompressionKind,int).6845406b196c465a01d7308c262b5dde"}], "snippet": "66.\n67.    public OrcOutputBuffer(CompressionKind compression, int bufferSize)\n68.>     {\n69.>         requireNonNull(compression, \"compression is null\");\n70.>         checkArgument(bufferSize >= MINIMUM_BUFFER_SIZE, \"minimum buffer size of \" + MINIMUM_BUFFER_SIZE + \" required\");\n71.> \n72.        this.buffer = new byte[bufferSize];\n73.>         this.slice = Slices.wrappedBuffer(buffer);\n74.> \n75.        compressedOutputStream = new ChunkedSliceOutput(MINIMUM_OUTPUT_BUFFER_CHUNK_SIZE, MAXIMUM_OUTPUT_BUFFER_CHUNK_SIZE);\n76.> \n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "methodName": "OrcOutputBuffer", "line_numbers": [68, 69, 70, 71, 73, 74, 76]}, {"level": 2, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 67, "column_number": -1, "description": "start of procedure ChunkedSliceOutput(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "ChunkedSliceOutput.<init>(int,int)"}, {"tag": "name_id", "value": "com.facebook.presto.orc.ChunkedSliceOutput.<init>(int,int).ef32f7ee9f89d6c5fcb961226d8fff21"}], "snippet": "50.\n51.    private final List<Slice> closedSlices = new ArrayList<>();\n52.>     private long closedSlicesRetainedSize;\n53.\n54.    /**\n55.     * Offset of buffer within stream.\n56.     */\n57.    private long streamOffset;\n58.\n59.    /**\n60.     * Current position for writing in buffer.\n61.     */\n62.    private int bufferPosition;\n63.\n64.    public ChunkedSliceOutput(int minChunkSize, int maxChunkSize)\n65.>     {\n66.>         this.chunkSupplier = new ChunkSupplier(minChunkSize, maxChunkSize);\n67.> \n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput", "line_numbers": [65, 66, 52, 67]}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 362, "column_number": -1, "description": "start of procedure ChunkedSliceOutput$ChunkSupplier(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "ChunkedSliceOutput$ChunkSupplier.<init>(int,int)"}, {"tag": "name_id", "value": "com.facebook.presto.orc.ChunkedSliceOutput$ChunkSupplier.<init>(int,int).c5a93fc3ccf9127a26c485b20096a08b"}], "snippet": "347.\n348.        private final List<byte[]> bufferPool = new ArrayList<>();\n349.>         private final List<byte[]> usedBuffers = new ArrayList<>();\n350.> \n351.        private int currentSize;\n352.\n353.        public ChunkSupplier(int minChunkSize, int maxChunkSize)\n354.>         {\n355.>             checkArgument(minChunkSize >= MINIMUM_CHUNK_SIZE, \"minimum chunk size of \" + MINIMUM_CHUNK_SIZE + \" required\");\n356.>             checkArgument(maxChunkSize <= MAXIMUM_CHUNK_SIZE, \"maximum chunk size of \" + MAXIMUM_CHUNK_SIZE + \" required\");\n357.>             checkArgument(minChunkSize <= maxChunkSize, \"minimum chunk size must be less than maximum chunk size\");\n358.> \n359.            this.currentSize = minChunkSize;\n360.>             this.maxChunkSize = maxChunkSize;\n361.        }\n362.> \n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput$ChunkSupplier", "line_numbers": [354, 355, 349, 350, 356, 357, 358, 360, 361, 362]}, {"level": 2, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 69, "column_number": -1, "description": "", "node_tags": [], "snippet": "65.    {\n66.        this.chunkSupplier = new ChunkSupplier(minChunkSize, maxChunkSize);\n67.> \n68.        this.buffer = chunkSupplier.get();\n69.>         this.slice = Slices.wrappedBuffer(buffer);\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput", "line_numbers": [67, 69]}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 382, "column_number": -1, "description": "start of procedure get()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "byte[] ChunkedSliceOutput$ChunkSupplier.get()"}, {"tag": "name_id", "value": "com.facebook.presto.orc.ChunkedSliceOutput$ChunkSupplier.get():byte[].43328c56c6952a613ae94f32a43bbdb0"}], "snippet": "368.\n369.        public byte[] get()\n370.>         {\n371.            byte[] buffer;\n372.            if (bufferPool.isEmpty()) {\n373.>                 currentSize = min(multiplyExact(currentSize, 2), maxChunkSize);\n374.>                 buffer = new byte[currentSize];\n375.            }\n376.            else {\n377.                buffer = bufferPool.remove(0);\n378.                currentSize = buffer.length;\n379.            }\n380.            usedBuffers.add(buffer);\n381.>             return buffer;\n382.        }\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "methodName": "get", "line_numbers": [370, 373, 374, 375, 381, 382]}, {"level": 2, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 71, "column_number": -1, "description": "", "node_tags": [], "snippet": "67.\n68.        this.buffer = chunkSupplier.get();\n69.>         this.slice = Slices.wrappedBuffer(buffer);\n70.    }\n71.> \n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput", "line_numbers": [69, 70, 71]}, {"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "line_number": 93, "column_number": -1, "description": "", "node_tags": [], "snippet": "74.\n75.        compressedOutputStream = new ChunkedSliceOutput(MINIMUM_OUTPUT_BUFFER_CHUNK_SIZE, MAXIMUM_OUTPUT_BUFFER_CHUNK_SIZE);\n76.> \n77.        if (compression == CompressionKind.NONE) {\n78.>             this.compressor = null;\n79.            this.compressionBuffer = new byte[0];\n80.        }\n81.        else if (compression == CompressionKind.SNAPPY) {\n82.>             this.compressor = new SnappyCompressor();\n83.            this.compressionBuffer = new byte[compressor.maxCompressedLength(bufferSize)];\n84.        }\n85.        else if (compression == CompressionKind.ZLIB) {\n86.>             this.compressor = new DeflateCompressor();\n87.            this.compressionBuffer = new byte[compressor.maxCompressedLength(bufferSize)];\n88.        }\n89.        else {\n90.            throw new IllegalArgumentException(\"Unsupported compression \" + compression);\n91.        }\n92.    }\n93.> \n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "methodName": "OrcOutputBuffer", "line_numbers": [76, 78, 82, 86, 91, 93, 93]}], "infer_explore": [{"level": 0, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/metadata/CompressedMetadataWriter.java", "line_number": 28, "column_number": -1, "description": "start of procedure CompressedMetadataWriter(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "CompressedMetadataWriter.<init>(MetadataWriter,CompressionKind,int)"}, {"tag": "name_id", "value": "com.facebook.presto.orc.metadata.CompressedMetadataWriter.<init>(com.facebook.presto.orc.metadata.Me.77bd615474d21f90f8cba6fa8e15160f"}], "snippet": "25.     private final OrcOutputBuffer buffer;\n26. \n27. >     public CompressedMetadataWriter(MetadataWriter metadataWriter, CompressionKind compression, int bufferSize)\n28.     {\n29.         this.metadataWriter = metadataWriter;\n"}, {"level": 0, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/metadata/CompressedMetadataWriter.java", "line_number": 29, "column_number": -1, "description": "", "node_tags": [], "snippet": "26. \n27.     public CompressedMetadataWriter(MetadataWriter metadataWriter, CompressionKind compression, int bufferSize)\n28. >     {\n29.         this.metadataWriter = metadataWriter;\n30.         this.buffer = new OrcOutputBuffer(compression, bufferSize);\n"}, {"level": 0, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/metadata/CompressedMetadataWriter.java", "line_number": 30, "column_number": -1, "description": "", "node_tags": [], "snippet": "27.     public CompressedMetadataWriter(MetadataWriter metadataWriter, CompressionKind compression, int bufferSize)\n28.     {\n29. >         this.metadataWriter = metadataWriter;\n30.         this.buffer = new OrcOutputBuffer(compression, bufferSize);\n31.     }\n"}, {"level": 0, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/metadata/CompressedMetadataWriter.java", "line_number": 31, "column_number": -1, "description": "", "node_tags": [], "snippet": "28.     {\n29.         this.metadataWriter = metadataWriter;\n30. >         this.buffer = new OrcOutputBuffer(compression, bufferSize);\n31.     }\n32. \n"}, {"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "line_number": 68, "column_number": -1, "description": "start of procedure OrcOutputBuffer(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "OrcOutputBuffer.<init>(CompressionKind,int)"}, {"tag": "name_id", "value": "com.facebook.presto.orc.OrcOutputBuffer.<init>(com.facebook.presto.orc.metadata.CompressionKind,int).6845406b196c465a01d7308c262b5dde"}], "snippet": "65.     private int bufferPosition;\n66. \n67. >     public OrcOutputBuffer(CompressionKind compression, int bufferSize)\n68.     {\n69.         requireNonNull(compression, \"compression is null\");\n"}, {"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "line_number": 69, "column_number": -1, "description": "Skipping SliceOutput(): unknown method", "node_tags": [], "snippet": "66. \n67.     public OrcOutputBuffer(CompressionKind compression, int bufferSize)\n68. >     {\n69.         requireNonNull(compression, \"compression is null\");\n70.         checkArgument(bufferSize >= MINIMUM_BUFFER_SIZE, \"minimum buffer size of \" + MINIMUM_BUFFER_SIZE + \" required\");\n"}, {"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "line_number": 70, "column_number": -1, "description": "Skipping requireNonNull(...): unknown method", "node_tags": [], "snippet": "67.     public OrcOutputBuffer(CompressionKind compression, int bufferSize)\n68.     {\n69. >         requireNonNull(compression, \"compression is null\");\n70.         checkArgument(bufferSize >= MINIMUM_BUFFER_SIZE, \"minimum buffer size of \" + MINIMUM_BUFFER_SIZE + \" required\");\n71. \n"}, {"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "line_number": 71, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "68.     {\n69.         requireNonNull(compression, \"compression is null\");\n70. >         checkArgument(bufferSize >= MINIMUM_BUFFER_SIZE, \"minimum buffer size of \" + MINIMUM_BUFFER_SIZE + \" required\");\n71. \n72.         this.buffer = new byte[bufferSize];\n"}, {"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "line_number": 73, "column_number": -1, "description": "", "node_tags": [], "snippet": "70.         checkArgument(bufferSize >= MINIMUM_BUFFER_SIZE, \"minimum buffer size of \" + MINIMUM_BUFFER_SIZE + \" required\");\n71. \n72. >         this.buffer = new byte[bufferSize];\n73.         this.slice = Slices.wrappedBuffer(buffer);\n74. \n"}, {"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "line_number": 74, "column_number": -1, "description": "", "node_tags": [], "snippet": "71. \n72.         this.buffer = new byte[bufferSize];\n73. >         this.slice = Slices.wrappedBuffer(buffer);\n74. \n75.         compressedOutputStream = new ChunkedSliceOutput(MINIMUM_OUTPUT_BUFFER_CHUNK_SIZE, MAXIMUM_OUTPUT_BUFFER_CHUNK_SIZE);\n"}, {"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "line_number": 76, "column_number": -1, "description": "", "node_tags": [], "snippet": "73.         this.slice = Slices.wrappedBuffer(buffer);\n74. \n75. >         compressedOutputStream = new ChunkedSliceOutput(MINIMUM_OUTPUT_BUFFER_CHUNK_SIZE, MAXIMUM_OUTPUT_BUFFER_CHUNK_SIZE);\n76. \n77.         if (compression == CompressionKind.NONE) {\n"}, {"level": 2, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 65, "column_number": -1, "description": "start of procedure ChunkedSliceOutput(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "ChunkedSliceOutput.<init>(int,int)"}, {"tag": "name_id", "value": "com.facebook.presto.orc.ChunkedSliceOutput.<init>(int,int).ef32f7ee9f89d6c5fcb961226d8fff21"}], "snippet": "62.     private int bufferPosition;\n63. \n64. >     public ChunkedSliceOutput(int minChunkSize, int maxChunkSize)\n65.     {\n66.         this.chunkSupplier = new ChunkSupplier(minChunkSize, maxChunkSize);\n"}, {"level": 2, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 66, "column_number": -1, "description": "Skipping SliceOutput(): unknown method", "node_tags": [], "snippet": "63. \n64.     public ChunkedSliceOutput(int minChunkSize, int maxChunkSize)\n65. >     {\n66.         this.chunkSupplier = new ChunkSupplier(minChunkSize, maxChunkSize);\n67. \n"}, {"level": 2, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 52, "column_number": -1, "description": "", "node_tags": [], "snippet": "49.     private byte[] buffer;\n50. \n51. >     private final List<Slice> closedSlices = new ArrayList<>();\n52.     private long closedSlicesRetainedSize;\n53. \n"}, {"level": 2, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 67, "column_number": -1, "description": "", "node_tags": [], "snippet": "64.     public ChunkedSliceOutput(int minChunkSize, int maxChunkSize)\n65.     {\n66. >         this.chunkSupplier = new ChunkSupplier(minChunkSize, maxChunkSize);\n67. \n68.         this.buffer = chunkSupplier.get();\n"}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 354, "column_number": -1, "description": "start of procedure ChunkedSliceOutput$ChunkSupplier(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "ChunkedSliceOutput$ChunkSupplier.<init>(int,int)"}, {"tag": "name_id", "value": "com.facebook.presto.orc.ChunkedSliceOutput$ChunkSupplier.<init>(int,int).c5a93fc3ccf9127a26c485b20096a08b"}], "snippet": "351.         private int currentSize;\n352. \n353. >         public ChunkSupplier(int minChunkSize, int maxChunkSize)\n354.         {\n355.             checkArgument(minChunkSize >= MINIMUM_CHUNK_SIZE, \"minimum chunk size of \" + MINIMUM_CHUNK_SIZE + \" required\");\n"}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 355, "column_number": -1, "description": "", "node_tags": [], "snippet": "352. \n353.         public ChunkSupplier(int minChunkSize, int maxChunkSize)\n354. >         {\n355.             checkArgument(minChunkSize >= MINIMUM_CHUNK_SIZE, \"minimum chunk size of \" + MINIMUM_CHUNK_SIZE + \" required\");\n356.             checkArgument(maxChunkSize <= MAXIMUM_CHUNK_SIZE, \"maximum chunk size of \" + MAXIMUM_CHUNK_SIZE + \" required\");\n"}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 349, "column_number": -1, "description": "", "node_tags": [], "snippet": "346.         private final int maxChunkSize;\n347. \n348. >         private final List<byte[]> bufferPool = new ArrayList<>();\n349.         private final List<byte[]> usedBuffers = new ArrayList<>();\n350. \n"}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 350, "column_number": -1, "description": "", "node_tags": [], "snippet": "347. \n348.         private final List<byte[]> bufferPool = new ArrayList<>();\n349. >         private final List<byte[]> usedBuffers = new ArrayList<>();\n350. \n351.         private int currentSize;\n"}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 356, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "353.         public ChunkSupplier(int minChunkSize, int maxChunkSize)\n354.         {\n355. >             checkArgument(minChunkSize >= MINIMUM_CHUNK_SIZE, \"minimum chunk size of \" + MINIMUM_CHUNK_SIZE + \" required\");\n356.             checkArgument(maxChunkSize <= MAXIMUM_CHUNK_SIZE, \"maximum chunk size of \" + MAXIMUM_CHUNK_SIZE + \" required\");\n357.             checkArgument(minChunkSize <= maxChunkSize, \"minimum chunk size must be less than maximum chunk size\");\n"}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 357, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "354.         {\n355.             checkArgument(minChunkSize >= MINIMUM_CHUNK_SIZE, \"minimum chunk size of \" + MINIMUM_CHUNK_SIZE + \" required\");\n356. >             checkArgument(maxChunkSize <= MAXIMUM_CHUNK_SIZE, \"maximum chunk size of \" + MAXIMUM_CHUNK_SIZE + \" required\");\n357.             checkArgument(minChunkSize <= maxChunkSize, \"minimum chunk size must be less than maximum chunk size\");\n358. \n"}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 358, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "355.             checkArgument(minChunkSize >= MINIMUM_CHUNK_SIZE, \"minimum chunk size of \" + MINIMUM_CHUNK_SIZE + \" required\");\n356.             checkArgument(maxChunkSize <= MAXIMUM_CHUNK_SIZE, \"maximum chunk size of \" + MAXIMUM_CHUNK_SIZE + \" required\");\n357. >             checkArgument(minChunkSize <= maxChunkSize, \"minimum chunk size must be less than maximum chunk size\");\n358. \n359.             this.currentSize = minChunkSize;\n"}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 360, "column_number": -1, "description": "", "node_tags": [], "snippet": "357.             checkArgument(minChunkSize <= maxChunkSize, \"minimum chunk size must be less than maximum chunk size\");\n358. \n359. >             this.currentSize = minChunkSize;\n360.             this.maxChunkSize = maxChunkSize;\n361.         }\n"}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 361, "column_number": -1, "description": "", "node_tags": [], "snippet": "358. \n359.             this.currentSize = minChunkSize;\n360. >             this.maxChunkSize = maxChunkSize;\n361.         }\n362. \n"}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 362, "column_number": -1, "description": "return from a call to ChunkedSliceOutput$ChunkSupplier.<init>(int,int)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "ChunkedSliceOutput$ChunkSupplier.<init>(int,int)"}, {"tag": "name_id", "value": "com.facebook.presto.orc.ChunkedSliceOutput$ChunkSupplier.<init>(int,int).c5a93fc3ccf9127a26c485b20096a08b"}], "snippet": "359.             this.currentSize = minChunkSize;\n360.             this.maxChunkSize = maxChunkSize;\n361. >         }\n362. \n363.         public void reset()\n"}, {"level": 2, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 67, "column_number": -1, "description": "", "node_tags": [], "snippet": "64.     public ChunkedSliceOutput(int minChunkSize, int maxChunkSize)\n65.     {\n66. >         this.chunkSupplier = new ChunkSupplier(minChunkSize, maxChunkSize);\n67. \n68.         this.buffer = chunkSupplier.get();\n"}, {"level": 2, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 69, "column_number": -1, "description": "", "node_tags": [], "snippet": "66.         this.chunkSupplier = new ChunkSupplier(minChunkSize, maxChunkSize);\n67. \n68. >         this.buffer = chunkSupplier.get();\n69.         this.slice = Slices.wrappedBuffer(buffer);\n70.     }\n"}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 370, "column_number": -1, "description": "start of procedure get()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "byte[] ChunkedSliceOutput$ChunkSupplier.get()"}, {"tag": "name_id", "value": "com.facebook.presto.orc.ChunkedSliceOutput$ChunkSupplier.get():byte[].43328c56c6952a613ae94f32a43bbdb0"}], "snippet": "367.         }\n368. \n369. >         public byte[] get()\n370.         {\n371.             byte[] buffer;\n"}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 373, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "370.         {\n371.             byte[] buffer;\n372. >             if (bufferPool.isEmpty()) {\n373.                 currentSize = min(multiplyExact(currentSize, 2), maxChunkSize);\n374.                 buffer = new byte[currentSize];\n"}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 374, "column_number": -1, "description": "", "node_tags": [], "snippet": "371.             byte[] buffer;\n372.             if (bufferPool.isEmpty()) {\n373. >                 currentSize = min(multiplyExact(currentSize, 2), maxChunkSize);\n374.                 buffer = new byte[currentSize];\n375.             }\n"}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 375, "column_number": -1, "description": "", "node_tags": [], "snippet": "372.             if (bufferPool.isEmpty()) {\n373.                 currentSize = min(multiplyExact(currentSize, 2), maxChunkSize);\n374. >                 buffer = new byte[currentSize];\n375.             }\n376.             else {\n"}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 381, "column_number": -1, "description": "Skipping add(...): unknown method", "node_tags": [], "snippet": "378.                 currentSize = buffer.length;\n379.             }\n380. >             usedBuffers.add(buffer);\n381.             return buffer;\n382.         }\n"}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 382, "column_number": -1, "description": "return from a call to byte[] ChunkedSliceOutput$ChunkSupplier.get()", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "byte[] ChunkedSliceOutput$ChunkSupplier.get()"}, {"tag": "name_id", "value": "com.facebook.presto.orc.ChunkedSliceOutput$ChunkSupplier.get():byte[].43328c56c6952a613ae94f32a43bbdb0"}], "snippet": "379.             }\n380.             usedBuffers.add(buffer);\n381. >             return buffer;\n382.         }\n383.     }\n"}, {"level": 2, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 69, "column_number": -1, "description": "", "node_tags": [], "snippet": "66.         this.chunkSupplier = new ChunkSupplier(minChunkSize, maxChunkSize);\n67. \n68. >         this.buffer = chunkSupplier.get();\n69.         this.slice = Slices.wrappedBuffer(buffer);\n70.     }\n"}, {"level": 2, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 70, "column_number": -1, "description": "", "node_tags": [], "snippet": "67. \n68.         this.buffer = chunkSupplier.get();\n69. >         this.slice = Slices.wrappedBuffer(buffer);\n70.     }\n71. \n"}, {"level": 2, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 71, "column_number": -1, "description": "return from a call to ChunkedSliceOutput.<init>(int,int)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "ChunkedSliceOutput.<init>(int,int)"}, {"tag": "name_id", "value": "com.facebook.presto.orc.ChunkedSliceOutput.<init>(int,int).ef32f7ee9f89d6c5fcb961226d8fff21"}], "snippet": "68.         this.buffer = chunkSupplier.get();\n69.         this.slice = Slices.wrappedBuffer(buffer);\n70. >     }\n71. \n72.     public List<Slice> getSlices()\n"}, {"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "line_number": 76, "column_number": -1, "description": "", "node_tags": [], "snippet": "73.         this.slice = Slices.wrappedBuffer(buffer);\n74. \n75. >         compressedOutputStream = new ChunkedSliceOutput(MINIMUM_OUTPUT_BUFFER_CHUNK_SIZE, MAXIMUM_OUTPUT_BUFFER_CHUNK_SIZE);\n76. \n77.         if (compression == CompressionKind.NONE) {\n"}, {"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "line_number": 78, "column_number": -1, "description": "Taking false branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "false"}], "snippet": "75.         compressedOutputStream = new ChunkedSliceOutput(MINIMUM_OUTPUT_BUFFER_CHUNK_SIZE, MAXIMUM_OUTPUT_BUFFER_CHUNK_SIZE);\n76. \n77. >         if (compression == CompressionKind.NONE) {\n78.             this.compressor = null;\n79.             this.compressionBuffer = new byte[0];\n"}, {"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "line_number": 82, "column_number": -1, "description": "Taking false branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "false"}], "snippet": "79.             this.compressionBuffer = new byte[0];\n80.         }\n81. >         else if (compression == CompressionKind.SNAPPY) {\n82.             this.compressor = new SnappyCompressor();\n83.             this.compressionBuffer = new byte[compressor.maxCompressedLength(bufferSize)];\n"}, {"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "line_number": 86, "column_number": -1, "description": "Taking false branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "false"}], "snippet": "83.             this.compressionBuffer = new byte[compressor.maxCompressedLength(bufferSize)];\n84.         }\n85. >         else if (compression == CompressionKind.ZLIB) {\n86.             this.compressor = new DeflateCompressor();\n87.             this.compressionBuffer = new byte[compressor.maxCompressedLength(bufferSize)];\n"}, {"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "line_number": 91, "column_number": -1, "description": "", "node_tags": [], "snippet": "88.         }\n89.         else {\n90. >             throw new IllegalArgumentException(\"Unsupported compression \" + compression);\n91.         }\n92.     }\n"}, {"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "line_number": 93, "column_number": -1, "description": "exception java.lang.IllegalArgumentException", "node_tags": [{"tag": "name", "value": "java.lang.IllegalArgumentException"}, {"tag": "kind", "value": "exception"}], "snippet": "90.             throw new IllegalArgumentException(\"Unsupported compression \" + compression);\n91.         }\n92. >     }\n93. \n94.     public int writeDataTo(SliceOutput outputStream)\n"}, {"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "line_number": 93, "column_number": -1, "description": "return from a call to OrcOutputBuffer.<init>(CompressionKind,int)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "OrcOutputBuffer.<init>(CompressionKind,int)"}, {"tag": "name_id", "value": "com.facebook.presto.orc.OrcOutputBuffer.<init>(com.facebook.presto.orc.metadata.CompressionKind,int).6845406b196c465a01d7308c262b5dde"}], "snippet": "90.             throw new IllegalArgumentException(\"Unsupported compression \" + compression);\n91.         }\n92. >     }\n93. \n94.     public int writeDataTo(SliceOutput outputStream)\n"}]}, {"url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestBufferedOutputStreamSliceOutput.java", "rawCode": "/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage com.facebook.presto.rcfile;\n\nimport io.airlift.slice.Slice;\nimport io.airlift.slice.Slices;\nimport org.testng.annotations.Test;\n\nimport java.io.ByteArrayOutputStream;\n\nimport static io.airlift.testing.Assertions.assertLessThanOrEqual;\nimport static org.testng.Assert.assertEquals;\n\npublic class TestBufferedOutputStreamSliceOutput\n{\n    @Test\n    public void testWriteBytes()\n            throws Exception\n    {\n        // fill up some input bytes\n        int length = 65536;\n        byte[] inputArray = new byte[length];\n        for (int i = 0; i < length; i++) {\n            inputArray[i] = (byte) (i % 128);\n        }\n\n        // pick some offsets to make the inputs into different chunks\n        int[] offsets = {0, 100, 545, 1024, 2049, 2050, 2051, 2151, 10480, 20042, 20100, 40001, 65536};\n\n        // check byte array version\n        MockOutputStream byteOutputStream = new MockOutputStream(length);\n        BufferedOutputStreamSliceOutput output = new BufferedOutputStreamSliceOutput(byteOutputStream);\n        for (int i = 0; i < offsets.length - 1; i++) {\n            output.writeBytes(inputArray, offsets[i], offsets[i + 1] - offsets[i]);\n        }\n        // ignore the last flush size check\n        output.flush();\n        assertEquals(byteOutputStream.toByteArray(), inputArray);\n        byteOutputStream.close();\n\n        // check slice version\n        byteOutputStream = new MockOutputStream(length);\n        Slice inputSlice = Slices.wrappedBuffer(inputArray);\n        output = new BufferedOutputStreamSliceOutput(byteOutputStream);\n        for (int i = 0; i < offsets.length - 1; i++) {\n            output.writeBytes(inputSlice, offsets[i], offsets[i + 1] - offsets[i]);\n        }\n        // ignore the last flush size check\n        output.flush();\n        assertEquals(byteOutputStream.toByteArray(), inputArray);\n        byteOutputStream.close();\n    }\n\n    private class MockOutputStream\n            extends ByteArrayOutputStream\n    {\n        public MockOutputStream(int length)\n        {\n            super(length);\n        }\n\n        @Override\n        public void write(byte[] source, int sourceIndex, int length)\n        {\n            assertLessThanOrEqual(length, 4096);\n            super.write(source, sourceIndex, length);\n        }\n    }\n}\n", "methodName": "void TestBufferedOutputStreamSliceOutput.testWriteBytes()", "exampleID": 10, "dataset": "infer", "filepath": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestBufferedOutputStreamSliceOutput.java", "source": "com.facebook.presto.rcfile.BufferedOutputStreamSliceOutput", "sourceLine": 43, "qualifier": "Resource of type $$com.facebook.presto.rcfile.BufferedOutputStreamSliceOutput/$ acquired by call to @@BufferedOutputStreamSliceOutput(...)/@ is not released", "steps": [{"line": 55, "source": "com.facebook.presto.rcfile.BufferedOutputStreamSliceOutput", "filepath": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "methodName": "BufferedOutputStreamSliceOutput.BufferedOutputStreamSliceOutput", "exampleID": 11}], "line_number": 43, "records": [{"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 55, "column_number": -1, "description": "start of procedure BufferedOutputStreamSliceOutput(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "BufferedOutputStreamSliceOutput.<init>(TestBufferedOutputStreamSliceOutput$MockOutputStream)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.BufferedOutputStreamSliceOutput.<init>(com.facebook.presto.rcfile.TestBuf.144fd397fd86df2a7316cc1e6002a9b6"}], "snippet": "    public BufferedOutputStreamSliceOutput(OutputStream outputStream)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "methodName": "BufferedOutputStreamSliceOutput"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 56, "column_number": -1, "description": "Skipping SliceOutput(): unknown method", "node_tags": [], "snippet": "    {", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "methodName": "BufferedOutputStreamSliceOutput"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 57, "column_number": -1, "description": "Taking false branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "false"}], "snippet": "        if (outputStream == null) {", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "methodName": "BufferedOutputStreamSliceOutput"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 61, "column_number": -1, "description": "", "node_tags": [], "snippet": "        this.outputStream = outputStream;", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "methodName": "BufferedOutputStreamSliceOutput"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 62, "column_number": -1, "description": "", "node_tags": [], "snippet": "        this.buffer = new byte[CHUNK_SIZE];", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "methodName": "BufferedOutputStreamSliceOutput"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 63, "column_number": -1, "description": "", "node_tags": [], "snippet": "        this.slice = Slices.wrappedBuffer(buffer);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "methodName": "BufferedOutputStreamSliceOutput"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 64, "column_number": -1, "description": "return from a call to BufferedOutputStreamSliceOutput.<init>(TestBufferedOutputStreamSliceOutput$MockOutputStream)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "BufferedOutputStreamSliceOutput.<init>(TestBufferedOutputStreamSliceOutput$MockOutputStream)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.BufferedOutputStreamSliceOutput.<init>(com.facebook.presto.rcfile.TestBuf.144fd397fd86df2a7316cc1e6002a9b6"}], "snippet": "    }", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "methodName": "BufferedOutputStreamSliceOutput"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 210, "column_number": -1, "description": "Definition of writeBytes(...)", "node_tags": [], "snippet": "    public void writeBytes(byte[] source, int sourceIndex, int length)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "methodName": "writeBytes"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 210, "column_number": -1, "description": "Definition of writeBytes(...)", "node_tags": [], "snippet": "    public void writeBytes(byte[] source, int sourceIndex, int length)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "methodName": "writeBytes"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 210, "column_number": -1, "description": "Definition of writeBytes(...)", "node_tags": [], "snippet": "    public void writeBytes(byte[] source, int sourceIndex, int length)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "methodName": "writeBytes"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 210, "column_number": -1, "description": "Definition of writeBytes(...)", "node_tags": [], "snippet": "    public void writeBytes(byte[] source, int sourceIndex, int length)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "methodName": "writeBytes"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 210, "column_number": -1, "description": "Definition of writeBytes(...)", "node_tags": [], "snippet": "    public void writeBytes(byte[] source, int sourceIndex, int length)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "methodName": "writeBytes"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 210, "column_number": -1, "description": "Definition of writeBytes(...)", "node_tags": [], "snippet": "    public void writeBytes(byte[] source, int sourceIndex, int length)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "methodName": "writeBytes"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 210, "column_number": -1, "description": "Definition of writeBytes(...)", "node_tags": [], "snippet": "    public void writeBytes(byte[] source, int sourceIndex, int length)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "methodName": "writeBytes"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 210, "column_number": -1, "description": "Definition of writeBytes(...)", "node_tags": [], "snippet": "    public void writeBytes(byte[] source, int sourceIndex, int length)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "methodName": "writeBytes"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 210, "column_number": -1, "description": "Definition of writeBytes(...)", "node_tags": [], "snippet": "    public void writeBytes(byte[] source, int sourceIndex, int length)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "methodName": "writeBytes"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 210, "column_number": -1, "description": "Definition of writeBytes(...)", "node_tags": [], "snippet": "    public void writeBytes(byte[] source, int sourceIndex, int length)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "methodName": "writeBytes"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 210, "column_number": -1, "description": "Definition of writeBytes(...)", "node_tags": [], "snippet": "    public void writeBytes(byte[] source, int sourceIndex, int length)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "methodName": "writeBytes"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 70, "column_number": -1, "description": "start of procedure flush()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void BufferedOutputStreamSliceOutput.flush()"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.BufferedOutputStreamSliceOutput.flush():void.98343ac4672f160d86df7574e60587d4"}], "snippet": "        flushBufferToOutputStream();", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "methodName": "flush"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 367, "column_number": -1, "description": "start of procedure flushBufferToOutputStream()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void BufferedOutputStreamSliceOutput.flushBufferToOutputStream()"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.BufferedOutputStreamSliceOutput.flushBufferToOutputStream():void.e30c055c2761aa810e7734e3ded54da2"}], "snippet": "    private void flushBufferToOutputStream()", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "methodName": "flushBufferToOutputStream"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 369, "column_number": -1, "description": "", "node_tags": [], "snippet": "        writeToOutputStream(buffer, 0, bufferPosition);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "methodName": "flushBufferToOutputStream"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 374, "column_number": -1, "description": "start of procedure writeToOutputStream(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void BufferedOutputStreamSliceOutput.writeToOutputStream(byte[],int,int)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.BufferedOutputStreamSliceOutput.writeToOutputStream(byte[],int,int):void.2797a53a110ea20e9f90894616be1cd6"}], "snippet": "    private void writeToOutputStream(byte[] source, int sourceIndex, int length)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "methodName": "writeToOutputStream"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 377, "column_number": -1, "description": "", "node_tags": [], "snippet": "            outputStream.write(source, sourceIndex, length);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "methodName": "writeToOutputStream"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 382, "column_number": -1, "description": "return from a call to void BufferedOutputStreamSliceOutput.writeToOutputStream(byte[],int,int)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "void BufferedOutputStreamSliceOutput.writeToOutputStream(byte[],int,int)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.BufferedOutputStreamSliceOutput.writeToOutputStream(byte[],int,int):void.2797a53a110ea20e9f90894616be1cd6"}], "snippet": "    }", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "methodName": "writeToOutputStream"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 370, "column_number": -1, "description": "", "node_tags": [], "snippet": "        bufferOffset += bufferPosition;", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "methodName": "flushBufferToOutputStream"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 371, "column_number": -1, "description": "", "node_tags": [], "snippet": "        bufferPosition = 0;", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "methodName": "flushBufferToOutputStream"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 372, "column_number": -1, "description": "return from a call to void BufferedOutputStreamSliceOutput.flushBufferToOutputStream()", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "void BufferedOutputStreamSliceOutput.flushBufferToOutputStream()"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.BufferedOutputStreamSliceOutput.flushBufferToOutputStream():void.e30c055c2761aa810e7734e3ded54da2"}], "snippet": "    }", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "methodName": "flushBufferToOutputStream"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 71, "column_number": -1, "description": "", "node_tags": [], "snippet": "        outputStream.flush();", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "methodName": "flush"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 72, "column_number": -1, "description": "return from a call to void BufferedOutputStreamSliceOutput.flush()", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "void BufferedOutputStreamSliceOutput.flush()"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.BufferedOutputStreamSliceOutput.flush():void.98343ac4672f160d86df7574e60587d4"}], "snippet": "    }", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "methodName": "flush"}], "combined_records": [{"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 64, "column_number": -1, "description": "start of procedure BufferedOutputStreamSliceOutput(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "BufferedOutputStreamSliceOutput.<init>(TestBufferedOutputStreamSliceOutput$MockOutputStream)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.BufferedOutputStreamSliceOutput.<init>(com.facebook.presto.rcfile.TestBuf.144fd397fd86df2a7316cc1e6002a9b6"}], "snippet": "53.\n54.    public BufferedOutputStreamSliceOutput(OutputStream outputStream)\n55.>     {\n56.>         if (outputStream == null) {\n57.>             throw new NullPointerException(\"outputStream is null\");\n58.        }\n59.\n60.        this.outputStream = outputStream;\n61.>         this.buffer = new byte[CHUNK_SIZE];\n62.>         this.slice = Slices.wrappedBuffer(buffer);\n63.    }\n64.> \n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "methodName": "BufferedOutputStreamSliceOutput", "line_numbers": [55, 56, 57, 61, 62, 63, 64]}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 210, "column_number": -1, "description": "Definition of writeBytes(...)", "node_tags": [], "snippet": "208.    @Override\n209.    public void writeBytes(byte[] source, int sourceIndex, int length)\n210.>     {\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "methodName": "writeBytes", "line_numbers": [210, 210, 210, 210, 210, 210, 210, 210, 210, 210, 210]}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 70, "column_number": -1, "description": "start of procedure flush()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void BufferedOutputStreamSliceOutput.flush()"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.BufferedOutputStreamSliceOutput.flush():void.98343ac4672f160d86df7574e60587d4"}], "snippet": "68.    {\n69.        flushBufferToOutputStream();\n70.>         outputStream.flush();\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "methodName": "flush", "line_numbers": [70]}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 369, "column_number": -1, "description": "start of procedure flushBufferToOutputStream()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void BufferedOutputStreamSliceOutput.flushBufferToOutputStream()"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.BufferedOutputStreamSliceOutput.flushBufferToOutputStream():void.e30c055c2761aa810e7734e3ded54da2"}], "snippet": "365.\n366.    private void flushBufferToOutputStream()\n367.>     {\n368.        writeToOutputStream(buffer, 0, bufferPosition);\n369.>         bufferOffset += bufferPosition;\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "methodName": "flushBufferToOutputStream", "line_numbers": [367, 369]}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 382, "column_number": -1, "description": "start of procedure writeToOutputStream(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void BufferedOutputStreamSliceOutput.writeToOutputStream(byte[],int,int)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.BufferedOutputStreamSliceOutput.writeToOutputStream(byte[],int,int):void.2797a53a110ea20e9f90894616be1cd6"}], "snippet": "372.\n373.    private void writeToOutputStream(byte[] source, int sourceIndex, int length)\n374.>     {\n375.        try {\n376.            outputStream.write(source, sourceIndex, length);\n377.        }\n378.        catch (IOException e) {\n379.            throw new UncheckedIOException(e);\n380.        }\n381.    }\n382.> \n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "methodName": "writeToOutputStream", "line_numbers": [374, 377, 382]}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 372, "column_number": -1, "description": "", "node_tags": [], "snippet": "368.        writeToOutputStream(buffer, 0, bufferPosition);\n369.        bufferOffset += bufferPosition;\n370.>         bufferPosition = 0;\n371.    }\n372.> \n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "methodName": "flushBufferToOutputStream", "line_numbers": [370, 371, 372]}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 72, "column_number": -1, "description": "", "node_tags": [], "snippet": "69.        flushBufferToOutputStream();\n70.        outputStream.flush();\n71.    }\n72.> \n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "methodName": "flush", "line_numbers": [71, 72]}], "infer_explore": [{"level": 0, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestBufferedOutputStreamSliceOutput.java", "line_number": 28, "column_number": -1, "description": "start of procedure testWriteBytes()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void TestBufferedOutputStreamSliceOutput.testWriteBytes()"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.TestBufferedOutputStreamSliceOutput.testWriteBytes():void.612f354828839289cb7df1ecefad3f09"}], "snippet": "25. {\n26.     @Test\n27. >     public void testWriteBytes()\n28.             throws Exception\n29.     {\n"}, {"level": 0, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestBufferedOutputStreamSliceOutput.java", "line_number": 32, "column_number": -1, "description": "", "node_tags": [], "snippet": "29.     {\n30.         // fill up some input bytes\n31. >         int length = 65536;\n32.         byte[] inputArray = new byte[length];\n33.         for (int i = 0; i < length; i++) {\n"}, {"level": 0, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestBufferedOutputStreamSliceOutput.java", "line_number": 33, "column_number": -1, "description": "", "node_tags": [], "snippet": "30.         // fill up some input bytes\n31.         int length = 65536;\n32. >         byte[] inputArray = new byte[length];\n33.         for (int i = 0; i < length; i++) {\n34.             inputArray[i] = (byte) (i % 128);\n"}, {"level": 0, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestBufferedOutputStreamSliceOutput.java", "line_number": 34, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "31.         int length = 65536;\n32.         byte[] inputArray = new byte[length];\n33. >         for (int i = 0; i < length; i++) {\n34.             inputArray[i] = (byte) (i % 128);\n35.         }\n"}, {"level": 0, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestBufferedOutputStreamSliceOutput.java", "line_number": 35, "column_number": -1, "description": "", "node_tags": [], "snippet": "32.         byte[] inputArray = new byte[length];\n33.         for (int i = 0; i < length; i++) {\n34. >             inputArray[i] = (byte) (i % 128);\n35.         }\n36. \n"}, {"level": 0, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestBufferedOutputStreamSliceOutput.java", "line_number": 34, "column_number": -1, "description": "Taking false branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "false"}], "snippet": "31.         int length = 65536;\n32.         byte[] inputArray = new byte[length];\n33. >         for (int i = 0; i < length; i++) {\n34.             inputArray[i] = (byte) (i % 128);\n35.         }\n"}, {"level": 0, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestBufferedOutputStreamSliceOutput.java", "line_number": 39, "column_number": -1, "description": "", "node_tags": [], "snippet": "36. \n37.         // pick some offsets to make the inputs into different chunks\n38. >         int[] offsets = {0, 100, 545, 1024, 2049, 2050, 2051, 2151, 10480, 20042, 20100, 40001, 65536};\n39. \n40.         // check byte array version\n"}, {"level": 0, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestBufferedOutputStreamSliceOutput.java", "line_number": 42, "column_number": -1, "description": "", "node_tags": [], "snippet": "39. \n40.         // check byte array version\n41. >         MockOutputStream byteOutputStream = new MockOutputStream(length);\n42.         BufferedOutputStreamSliceOutput output = new BufferedOutputStreamSliceOutput(byteOutputStream);\n43.         for (int i = 0; i < offsets.length - 1; i++) {\n"}, {"level": 1, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestBufferedOutputStreamSliceOutput.java", "line_number": 68, "column_number": -1, "description": "start of procedure TestBufferedOutputStreamSliceOutput$MockOutputStream(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "TestBufferedOutputStreamSliceOutput$MockOutputStream.<init>(TestBufferedOutputStreamSliceOutput,int)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.TestBufferedOutputStreamSliceOutput$MockOutputStream.<init>(com.facebook..6f107823f8830a31d363569b768a6a82"}], "snippet": "65.             extends ByteArrayOutputStream\n66.     {\n67. >         public MockOutputStream(int length)\n68.         {\n69.             super(length);\n"}, {"level": 1, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestBufferedOutputStreamSliceOutput.java", "line_number": 69, "column_number": -1, "description": "", "node_tags": [], "snippet": "66.     {\n67.         public MockOutputStream(int length)\n68. >         {\n69.             super(length);\n70.         }\n"}, {"level": 1, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestBufferedOutputStreamSliceOutput.java", "line_number": 70, "column_number": -1, "description": "", "node_tags": [], "snippet": "67.         public MockOutputStream(int length)\n68.         {\n69. >             super(length);\n70.         }\n71. \n"}, {"level": 1, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestBufferedOutputStreamSliceOutput.java", "line_number": 71, "column_number": -1, "description": "return from a call to TestBufferedOutputStreamSliceOutput$MockOutputStream.<init>(TestBufferedOutputStreamSliceOutput,int)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "TestBufferedOutputStreamSliceOutput$MockOutputStream.<init>(TestBufferedOutputStreamSliceOutput,int)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.TestBufferedOutputStreamSliceOutput$MockOutputStream.<init>(com.facebook..6f107823f8830a31d363569b768a6a82"}], "snippet": "68.         {\n69.             super(length);\n70. >         }\n71. \n72.         @Override\n"}, {"level": 0, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestBufferedOutputStreamSliceOutput.java", "line_number": 43, "column_number": -1, "description": "", "node_tags": [], "snippet": "40.         // check byte array version\n41.         MockOutputStream byteOutputStream = new MockOutputStream(length);\n42. >         BufferedOutputStreamSliceOutput output = new BufferedOutputStreamSliceOutput(byteOutputStream);\n43.         for (int i = 0; i < offsets.length - 1; i++) {\n44.             output.writeBytes(inputArray, offsets[i], offsets[i + 1] - offsets[i]);\n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 55, "column_number": -1, "description": "start of procedure BufferedOutputStreamSliceOutput(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "BufferedOutputStreamSliceOutput.<init>(TestBufferedOutputStreamSliceOutput$MockOutputStream)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.BufferedOutputStreamSliceOutput.<init>(com.facebook.presto.rcfile.TestBuf.144fd397fd86df2a7316cc1e6002a9b6"}], "snippet": "52.     private int bufferPosition;\n53. \n54. >     public BufferedOutputStreamSliceOutput(OutputStream outputStream)\n55.     {\n56.         if (outputStream == null) {\n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 56, "column_number": -1, "description": "Skipping SliceOutput(): unknown method", "node_tags": [], "snippet": "53. \n54.     public BufferedOutputStreamSliceOutput(OutputStream outputStream)\n55. >     {\n56.         if (outputStream == null) {\n57.             throw new NullPointerException(\"outputStream is null\");\n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 57, "column_number": -1, "description": "Taking false branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "false"}], "snippet": "54.     public BufferedOutputStreamSliceOutput(OutputStream outputStream)\n55.     {\n56. >         if (outputStream == null) {\n57.             throw new NullPointerException(\"outputStream is null\");\n58.         }\n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 61, "column_number": -1, "description": "", "node_tags": [], "snippet": "58.         }\n59. \n60. >         this.outputStream = outputStream;\n61.         this.buffer = new byte[CHUNK_SIZE];\n62.         this.slice = Slices.wrappedBuffer(buffer);\n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 62, "column_number": -1, "description": "", "node_tags": [], "snippet": "59. \n60.         this.outputStream = outputStream;\n61. >         this.buffer = new byte[CHUNK_SIZE];\n62.         this.slice = Slices.wrappedBuffer(buffer);\n63.     }\n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 63, "column_number": -1, "description": "", "node_tags": [], "snippet": "60.         this.outputStream = outputStream;\n61.         this.buffer = new byte[CHUNK_SIZE];\n62. >         this.slice = Slices.wrappedBuffer(buffer);\n63.     }\n64. \n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 64, "column_number": -1, "description": "return from a call to BufferedOutputStreamSliceOutput.<init>(TestBufferedOutputStreamSliceOutput$MockOutputStream)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "BufferedOutputStreamSliceOutput.<init>(TestBufferedOutputStreamSliceOutput$MockOutputStream)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.BufferedOutputStreamSliceOutput.<init>(com.facebook.presto.rcfile.TestBuf.144fd397fd86df2a7316cc1e6002a9b6"}], "snippet": "61.         this.buffer = new byte[CHUNK_SIZE];\n62.         this.slice = Slices.wrappedBuffer(buffer);\n63. >     }\n64. \n65.     @Override\n"}, {"level": 0, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestBufferedOutputStreamSliceOutput.java", "line_number": 44, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "41.         MockOutputStream byteOutputStream = new MockOutputStream(length);\n42.         BufferedOutputStreamSliceOutput output = new BufferedOutputStreamSliceOutput(byteOutputStream);\n43. >         for (int i = 0; i < offsets.length - 1; i++) {\n44.             output.writeBytes(inputArray, offsets[i], offsets[i + 1] - offsets[i]);\n45.         }\n"}, {"level": 0, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestBufferedOutputStreamSliceOutput.java", "line_number": 45, "column_number": -1, "description": "Skipping writeBytes(...): empty list of specs", "node_tags": [], "snippet": "42.         BufferedOutputStreamSliceOutput output = new BufferedOutputStreamSliceOutput(byteOutputStream);\n43.         for (int i = 0; i < offsets.length - 1; i++) {\n44. >             output.writeBytes(inputArray, offsets[i], offsets[i + 1] - offsets[i]);\n45.         }\n46.         // ignore the last flush size check\n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 210, "column_number": -1, "description": "Definition of writeBytes(...)", "node_tags": [], "snippet": "207. \n208.     @Override\n209. >     public void writeBytes(byte[] source, int sourceIndex, int length)\n210.     {\n211.         if (length >= CHUNK_SIZE) {\n"}, {"level": 0, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestBufferedOutputStreamSliceOutput.java", "line_number": 44, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "41.         MockOutputStream byteOutputStream = new MockOutputStream(length);\n42.         BufferedOutputStreamSliceOutput output = new BufferedOutputStreamSliceOutput(byteOutputStream);\n43. >         for (int i = 0; i < offsets.length - 1; i++) {\n44.             output.writeBytes(inputArray, offsets[i], offsets[i + 1] - offsets[i]);\n45.         }\n"}, {"level": 0, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestBufferedOutputStreamSliceOutput.java", "line_number": 45, "column_number": -1, "description": "Skipping writeBytes(...): empty list of specs", "node_tags": [], "snippet": "42.         BufferedOutputStreamSliceOutput output = new BufferedOutputStreamSliceOutput(byteOutputStream);\n43.         for (int i = 0; i < offsets.length - 1; i++) {\n44. >             output.writeBytes(inputArray, offsets[i], offsets[i + 1] - offsets[i]);\n45.         }\n46.         // ignore the last flush size check\n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 210, "column_number": -1, "description": "Definition of writeBytes(...)", "node_tags": [], "snippet": "207. \n208.     @Override\n209. >     public void writeBytes(byte[] source, int sourceIndex, int length)\n210.     {\n211.         if (length >= CHUNK_SIZE) {\n"}, {"level": 0, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestBufferedOutputStreamSliceOutput.java", "line_number": 44, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "41.         MockOutputStream byteOutputStream = new MockOutputStream(length);\n42.         BufferedOutputStreamSliceOutput output = new BufferedOutputStreamSliceOutput(byteOutputStream);\n43. >         for (int i = 0; i < offsets.length - 1; i++) {\n44.             output.writeBytes(inputArray, offsets[i], offsets[i + 1] - offsets[i]);\n45.         }\n"}, {"level": 0, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestBufferedOutputStreamSliceOutput.java", "line_number": 45, "column_number": -1, "description": "Skipping writeBytes(...): empty list of specs", "node_tags": [], "snippet": "42.         BufferedOutputStreamSliceOutput output = new BufferedOutputStreamSliceOutput(byteOutputStream);\n43.         for (int i = 0; i < offsets.length - 1; i++) {\n44. >             output.writeBytes(inputArray, offsets[i], offsets[i + 1] - offsets[i]);\n45.         }\n46.         // ignore the last flush size check\n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 210, "column_number": -1, "description": "Definition of writeBytes(...)", "node_tags": [], "snippet": "207. \n208.     @Override\n209. >     public void writeBytes(byte[] source, int sourceIndex, int length)\n210.     {\n211.         if (length >= CHUNK_SIZE) {\n"}, {"level": 0, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestBufferedOutputStreamSliceOutput.java", "line_number": 44, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "41.         MockOutputStream byteOutputStream = new MockOutputStream(length);\n42.         BufferedOutputStreamSliceOutput output = new BufferedOutputStreamSliceOutput(byteOutputStream);\n43. >         for (int i = 0; i < offsets.length - 1; i++) {\n44.             output.writeBytes(inputArray, offsets[i], offsets[i + 1] - offsets[i]);\n45.         }\n"}, {"level": 0, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestBufferedOutputStreamSliceOutput.java", "line_number": 45, "column_number": -1, "description": "Skipping writeBytes(...): empty list of specs", "node_tags": [], "snippet": "42.         BufferedOutputStreamSliceOutput output = new BufferedOutputStreamSliceOutput(byteOutputStream);\n43.         for (int i = 0; i < offsets.length - 1; i++) {\n44. >             output.writeBytes(inputArray, offsets[i], offsets[i + 1] - offsets[i]);\n45.         }\n46.         // ignore the last flush size check\n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 210, "column_number": -1, "description": "Definition of writeBytes(...)", "node_tags": [], "snippet": "207. \n208.     @Override\n209. >     public void writeBytes(byte[] source, int sourceIndex, int length)\n210.     {\n211.         if (length >= CHUNK_SIZE) {\n"}, {"level": 0, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestBufferedOutputStreamSliceOutput.java", "line_number": 44, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "41.         MockOutputStream byteOutputStream = new MockOutputStream(length);\n42.         BufferedOutputStreamSliceOutput output = new BufferedOutputStreamSliceOutput(byteOutputStream);\n43. >         for (int i = 0; i < offsets.length - 1; i++) {\n44.             output.writeBytes(inputArray, offsets[i], offsets[i + 1] - offsets[i]);\n45.         }\n"}, {"level": 0, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestBufferedOutputStreamSliceOutput.java", "line_number": 45, "column_number": -1, "description": "Skipping writeBytes(...): empty list of specs", "node_tags": [], "snippet": "42.         BufferedOutputStreamSliceOutput output = new BufferedOutputStreamSliceOutput(byteOutputStream);\n43.         for (int i = 0; i < offsets.length - 1; i++) {\n44. >             output.writeBytes(inputArray, offsets[i], offsets[i + 1] - offsets[i]);\n45.         }\n46.         // ignore the last flush size check\n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 210, "column_number": -1, "description": "Definition of writeBytes(...)", "node_tags": [], "snippet": "207. \n208.     @Override\n209. >     public void writeBytes(byte[] source, int sourceIndex, int length)\n210.     {\n211.         if (length >= CHUNK_SIZE) {\n"}, {"level": 0, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestBufferedOutputStreamSliceOutput.java", "line_number": 44, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "41.         MockOutputStream byteOutputStream = new MockOutputStream(length);\n42.         BufferedOutputStreamSliceOutput output = new BufferedOutputStreamSliceOutput(byteOutputStream);\n43. >         for (int i = 0; i < offsets.length - 1; i++) {\n44.             output.writeBytes(inputArray, offsets[i], offsets[i + 1] - offsets[i]);\n45.         }\n"}, {"level": 0, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestBufferedOutputStreamSliceOutput.java", "line_number": 45, "column_number": -1, "description": "Skipping writeBytes(...): empty list of specs", "node_tags": [], "snippet": "42.         BufferedOutputStreamSliceOutput output = new BufferedOutputStreamSliceOutput(byteOutputStream);\n43.         for (int i = 0; i < offsets.length - 1; i++) {\n44. >             output.writeBytes(inputArray, offsets[i], offsets[i + 1] - offsets[i]);\n45.         }\n46.         // ignore the last flush size check\n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 210, "column_number": -1, "description": "Definition of writeBytes(...)", "node_tags": [], "snippet": "207. \n208.     @Override\n209. >     public void writeBytes(byte[] source, int sourceIndex, int length)\n210.     {\n211.         if (length >= CHUNK_SIZE) {\n"}, {"level": 0, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestBufferedOutputStreamSliceOutput.java", "line_number": 44, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "41.         MockOutputStream byteOutputStream = new MockOutputStream(length);\n42.         BufferedOutputStreamSliceOutput output = new BufferedOutputStreamSliceOutput(byteOutputStream);\n43. >         for (int i = 0; i < offsets.length - 1; i++) {\n44.             output.writeBytes(inputArray, offsets[i], offsets[i + 1] - offsets[i]);\n45.         }\n"}, {"level": 0, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestBufferedOutputStreamSliceOutput.java", "line_number": 45, "column_number": -1, "description": "Skipping writeBytes(...): empty list of specs", "node_tags": [], "snippet": "42.         BufferedOutputStreamSliceOutput output = new BufferedOutputStreamSliceOutput(byteOutputStream);\n43.         for (int i = 0; i < offsets.length - 1; i++) {\n44. >             output.writeBytes(inputArray, offsets[i], offsets[i + 1] - offsets[i]);\n45.         }\n46.         // ignore the last flush size check\n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 210, "column_number": -1, "description": "Definition of writeBytes(...)", "node_tags": [], "snippet": "207. \n208.     @Override\n209. >     public void writeBytes(byte[] source, int sourceIndex, int length)\n210.     {\n211.         if (length >= CHUNK_SIZE) {\n"}, {"level": 0, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestBufferedOutputStreamSliceOutput.java", "line_number": 44, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "41.         MockOutputStream byteOutputStream = new MockOutputStream(length);\n42.         BufferedOutputStreamSliceOutput output = new BufferedOutputStreamSliceOutput(byteOutputStream);\n43. >         for (int i = 0; i < offsets.length - 1; i++) {\n44.             output.writeBytes(inputArray, offsets[i], offsets[i + 1] - offsets[i]);\n45.         }\n"}, {"level": 0, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestBufferedOutputStreamSliceOutput.java", "line_number": 45, "column_number": -1, "description": "Skipping writeBytes(...): empty list of specs", "node_tags": [], "snippet": "42.         BufferedOutputStreamSliceOutput output = new BufferedOutputStreamSliceOutput(byteOutputStream);\n43.         for (int i = 0; i < offsets.length - 1; i++) {\n44. >             output.writeBytes(inputArray, offsets[i], offsets[i + 1] - offsets[i]);\n45.         }\n46.         // ignore the last flush size check\n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 210, "column_number": -1, "description": "Definition of writeBytes(...)", "node_tags": [], "snippet": "207. \n208.     @Override\n209. >     public void writeBytes(byte[] source, int sourceIndex, int length)\n210.     {\n211.         if (length >= CHUNK_SIZE) {\n"}, {"level": 0, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestBufferedOutputStreamSliceOutput.java", "line_number": 44, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "41.         MockOutputStream byteOutputStream = new MockOutputStream(length);\n42.         BufferedOutputStreamSliceOutput output = new BufferedOutputStreamSliceOutput(byteOutputStream);\n43. >         for (int i = 0; i < offsets.length - 1; i++) {\n44.             output.writeBytes(inputArray, offsets[i], offsets[i + 1] - offsets[i]);\n45.         }\n"}, {"level": 0, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestBufferedOutputStreamSliceOutput.java", "line_number": 45, "column_number": -1, "description": "Skipping writeBytes(...): empty list of specs", "node_tags": [], "snippet": "42.         BufferedOutputStreamSliceOutput output = new BufferedOutputStreamSliceOutput(byteOutputStream);\n43.         for (int i = 0; i < offsets.length - 1; i++) {\n44. >             output.writeBytes(inputArray, offsets[i], offsets[i + 1] - offsets[i]);\n45.         }\n46.         // ignore the last flush size check\n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 210, "column_number": -1, "description": "Definition of writeBytes(...)", "node_tags": [], "snippet": "207. \n208.     @Override\n209. >     public void writeBytes(byte[] source, int sourceIndex, int length)\n210.     {\n211.         if (length >= CHUNK_SIZE) {\n"}, {"level": 0, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestBufferedOutputStreamSliceOutput.java", "line_number": 44, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "41.         MockOutputStream byteOutputStream = new MockOutputStream(length);\n42.         BufferedOutputStreamSliceOutput output = new BufferedOutputStreamSliceOutput(byteOutputStream);\n43. >         for (int i = 0; i < offsets.length - 1; i++) {\n44.             output.writeBytes(inputArray, offsets[i], offsets[i + 1] - offsets[i]);\n45.         }\n"}, {"level": 0, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestBufferedOutputStreamSliceOutput.java", "line_number": 45, "column_number": -1, "description": "Skipping writeBytes(...): empty list of specs", "node_tags": [], "snippet": "42.         BufferedOutputStreamSliceOutput output = new BufferedOutputStreamSliceOutput(byteOutputStream);\n43.         for (int i = 0; i < offsets.length - 1; i++) {\n44. >             output.writeBytes(inputArray, offsets[i], offsets[i + 1] - offsets[i]);\n45.         }\n46.         // ignore the last flush size check\n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 210, "column_number": -1, "description": "Definition of writeBytes(...)", "node_tags": [], "snippet": "207. \n208.     @Override\n209. >     public void writeBytes(byte[] source, int sourceIndex, int length)\n210.     {\n211.         if (length >= CHUNK_SIZE) {\n"}, {"level": 0, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestBufferedOutputStreamSliceOutput.java", "line_number": 44, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "41.         MockOutputStream byteOutputStream = new MockOutputStream(length);\n42.         BufferedOutputStreamSliceOutput output = new BufferedOutputStreamSliceOutput(byteOutputStream);\n43. >         for (int i = 0; i < offsets.length - 1; i++) {\n44.             output.writeBytes(inputArray, offsets[i], offsets[i + 1] - offsets[i]);\n45.         }\n"}, {"level": 0, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestBufferedOutputStreamSliceOutput.java", "line_number": 45, "column_number": -1, "description": "Skipping writeBytes(...): empty list of specs", "node_tags": [], "snippet": "42.         BufferedOutputStreamSliceOutput output = new BufferedOutputStreamSliceOutput(byteOutputStream);\n43.         for (int i = 0; i < offsets.length - 1; i++) {\n44. >             output.writeBytes(inputArray, offsets[i], offsets[i + 1] - offsets[i]);\n45.         }\n46.         // ignore the last flush size check\n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 210, "column_number": -1, "description": "Definition of writeBytes(...)", "node_tags": [], "snippet": "207. \n208.     @Override\n209. >     public void writeBytes(byte[] source, int sourceIndex, int length)\n210.     {\n211.         if (length >= CHUNK_SIZE) {\n"}, {"level": 0, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestBufferedOutputStreamSliceOutput.java", "line_number": 44, "column_number": -1, "description": "Taking false branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "false"}], "snippet": "41.         MockOutputStream byteOutputStream = new MockOutputStream(length);\n42.         BufferedOutputStreamSliceOutput output = new BufferedOutputStreamSliceOutput(byteOutputStream);\n43. >         for (int i = 0; i < offsets.length - 1; i++) {\n44.             output.writeBytes(inputArray, offsets[i], offsets[i + 1] - offsets[i]);\n45.         }\n"}, {"level": 0, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestBufferedOutputStreamSliceOutput.java", "line_number": 48, "column_number": -1, "description": "", "node_tags": [], "snippet": "45.         }\n46.         // ignore the last flush size check\n47. >         output.flush();\n48.         assertEquals(byteOutputStream.toByteArray(), inputArray);\n49.         byteOutputStream.close();\n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 70, "column_number": -1, "description": "start of procedure flush()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void BufferedOutputStreamSliceOutput.flush()"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.BufferedOutputStreamSliceOutput.flush():void.98343ac4672f160d86df7574e60587d4"}], "snippet": "67.             throws IOException\n68.     {\n69. >         flushBufferToOutputStream();\n70.         outputStream.flush();\n71.     }\n"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 367, "column_number": -1, "description": "start of procedure flushBufferToOutputStream()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void BufferedOutputStreamSliceOutput.flushBufferToOutputStream()"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.BufferedOutputStreamSliceOutput.flushBufferToOutputStream():void.e30c055c2761aa810e7734e3ded54da2"}], "snippet": "364.     }\n365. \n366. >     private void flushBufferToOutputStream()\n367.     {\n368.         writeToOutputStream(buffer, 0, bufferPosition);\n"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 369, "column_number": -1, "description": "", "node_tags": [], "snippet": "366.     private void flushBufferToOutputStream()\n367.     {\n368. >         writeToOutputStream(buffer, 0, bufferPosition);\n369.         bufferOffset += bufferPosition;\n370.         bufferPosition = 0;\n"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 374, "column_number": -1, "description": "start of procedure writeToOutputStream(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void BufferedOutputStreamSliceOutput.writeToOutputStream(byte[],int,int)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.BufferedOutputStreamSliceOutput.writeToOutputStream(byte[],int,int):void.2797a53a110ea20e9f90894616be1cd6"}], "snippet": "371.     }\n372. \n373. >     private void writeToOutputStream(byte[] source, int sourceIndex, int length)\n374.     {\n375.         try {\n"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 377, "column_number": -1, "description": "", "node_tags": [], "snippet": "374.     {\n375.         try {\n376. >             outputStream.write(source, sourceIndex, length);\n377.         }\n378.         catch (IOException e) {\n"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 382, "column_number": -1, "description": "return from a call to void BufferedOutputStreamSliceOutput.writeToOutputStream(byte[],int,int)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "void BufferedOutputStreamSliceOutput.writeToOutputStream(byte[],int,int)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.BufferedOutputStreamSliceOutput.writeToOutputStream(byte[],int,int):void.2797a53a110ea20e9f90894616be1cd6"}], "snippet": "379.             throw new UncheckedIOException(e);\n380.         }\n381. >     }\n382. \n383.     private void writeToOutputStream(Slice source, int sourceIndex, int length)\n"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 370, "column_number": -1, "description": "", "node_tags": [], "snippet": "367.     {\n368.         writeToOutputStream(buffer, 0, bufferPosition);\n369. >         bufferOffset += bufferPosition;\n370.         bufferPosition = 0;\n371.     }\n"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 371, "column_number": -1, "description": "", "node_tags": [], "snippet": "368.         writeToOutputStream(buffer, 0, bufferPosition);\n369.         bufferOffset += bufferPosition;\n370. >         bufferPosition = 0;\n371.     }\n372. \n"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 372, "column_number": -1, "description": "return from a call to void BufferedOutputStreamSliceOutput.flushBufferToOutputStream()", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "void BufferedOutputStreamSliceOutput.flushBufferToOutputStream()"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.BufferedOutputStreamSliceOutput.flushBufferToOutputStream():void.e30c055c2761aa810e7734e3ded54da2"}], "snippet": "369.         bufferOffset += bufferPosition;\n370.         bufferPosition = 0;\n371. >     }\n372. \n373.     private void writeToOutputStream(byte[] source, int sourceIndex, int length)\n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 71, "column_number": -1, "description": "", "node_tags": [], "snippet": "68.     {\n69.         flushBufferToOutputStream();\n70. >         outputStream.flush();\n71.     }\n72. \n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 72, "column_number": -1, "description": "return from a call to void BufferedOutputStreamSliceOutput.flush()", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "void BufferedOutputStreamSliceOutput.flush()"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.BufferedOutputStreamSliceOutput.flush():void.98343ac4672f160d86df7574e60587d4"}], "snippet": "69.         flushBufferToOutputStream();\n70.         outputStream.flush();\n71. >     }\n72. \n73.     @Override\n"}]}, {"url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestBufferedOutputStreamSliceOutput.java", "rawCode": "/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage com.facebook.presto.rcfile;\n\nimport io.airlift.slice.Slice;\nimport io.airlift.slice.Slices;\nimport org.testng.annotations.Test;\n\nimport java.io.ByteArrayOutputStream;\n\nimport static io.airlift.testing.Assertions.assertLessThanOrEqual;\nimport static org.testng.Assert.assertEquals;\n\npublic class TestBufferedOutputStreamSliceOutput\n{\n    @Test\n    public void testWriteBytes()\n            throws Exception\n    {\n        // fill up some input bytes\n        int length = 65536;\n        byte[] inputArray = new byte[length];\n        for (int i = 0; i < length; i++) {\n            inputArray[i] = (byte) (i % 128);\n        }\n\n        // pick some offsets to make the inputs into different chunks\n        int[] offsets = {0, 100, 545, 1024, 2049, 2050, 2051, 2151, 10480, 20042, 20100, 40001, 65536};\n\n        // check byte array version\n        MockOutputStream byteOutputStream = new MockOutputStream(length);\n        BufferedOutputStreamSliceOutput output = new BufferedOutputStreamSliceOutput(byteOutputStream);\n        for (int i = 0; i < offsets.length - 1; i++) {\n            output.writeBytes(inputArray, offsets[i], offsets[i + 1] - offsets[i]);\n        }\n        // ignore the last flush size check\n        output.flush();\n        assertEquals(byteOutputStream.toByteArray(), inputArray);\n        byteOutputStream.close();\n\n        // check slice version\n        byteOutputStream = new MockOutputStream(length);\n        Slice inputSlice = Slices.wrappedBuffer(inputArray);\n        output = new BufferedOutputStreamSliceOutput(byteOutputStream);\n        for (int i = 0; i < offsets.length - 1; i++) {\n            output.writeBytes(inputSlice, offsets[i], offsets[i + 1] - offsets[i]);\n        }\n        // ignore the last flush size check\n        output.flush();\n        assertEquals(byteOutputStream.toByteArray(), inputArray);\n        byteOutputStream.close();\n    }\n\n    private class MockOutputStream\n            extends ByteArrayOutputStream\n    {\n        public MockOutputStream(int length)\n        {\n            super(length);\n        }\n\n        @Override\n        public void write(byte[] source, int sourceIndex, int length)\n        {\n            assertLessThanOrEqual(length, 4096);\n            super.write(source, sourceIndex, length);\n        }\n    }\n}\n", "methodName": "void TestBufferedOutputStreamSliceOutput.testWriteBytes()", "exampleID": 12, "dataset": "infer", "filepath": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestBufferedOutputStreamSliceOutput.java", "source": "com.facebook.presto.rcfile.TestBufferedOutputStreamSliceOutput$MockOutputStream", "sourceLine": 42, "qualifier": "Resource of type $$com.facebook.presto.rcfile.TestBufferedOutputStreamSliceOutput$MockOutputStream/$ acquired by call to @@new()/@ is not released", "steps": [{"line": 68, "source": "com.facebook.presto.rcfile.TestBufferedOutputStreamSliceOutput$MockOutputStream", "filepath": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestBufferedOutputStreamSliceOutput.java", "methodName": "TestBufferedOutputStreamSliceOutput.TestBufferedOutputStreamSliceOutput$MockOutputStream", "exampleID": 13}], "line_number": 42, "records": [{"level": 1, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestBufferedOutputStreamSliceOutput.java", "line_number": 68, "column_number": -1, "description": "start of procedure TestBufferedOutputStreamSliceOutput$MockOutputStream(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "TestBufferedOutputStreamSliceOutput$MockOutputStream.<init>(TestBufferedOutputStreamSliceOutput,int)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.TestBufferedOutputStreamSliceOutput$MockOutputStream.<init>(com.facebook..6f107823f8830a31d363569b768a6a82"}], "snippet": "        public MockOutputStream(int length)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestBufferedOutputStreamSliceOutput.java", "methodName": "TestBufferedOutputStreamSliceOutput$MockOutputStream"}, {"level": 1, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestBufferedOutputStreamSliceOutput.java", "line_number": 69, "column_number": -1, "description": "", "node_tags": [], "snippet": "        {", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestBufferedOutputStreamSliceOutput.java", "methodName": "TestBufferedOutputStreamSliceOutput$MockOutputStream"}, {"level": 1, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestBufferedOutputStreamSliceOutput.java", "line_number": 70, "column_number": -1, "description": "", "node_tags": [], "snippet": "            super(length);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestBufferedOutputStreamSliceOutput.java", "methodName": "TestBufferedOutputStreamSliceOutput$MockOutputStream"}, {"level": 1, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestBufferedOutputStreamSliceOutput.java", "line_number": 71, "column_number": -1, "description": "return from a call to TestBufferedOutputStreamSliceOutput$MockOutputStream.<init>(TestBufferedOutputStreamSliceOutput,int)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "TestBufferedOutputStreamSliceOutput$MockOutputStream.<init>(TestBufferedOutputStreamSliceOutput,int)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.TestBufferedOutputStreamSliceOutput$MockOutputStream.<init>(com.facebook..6f107823f8830a31d363569b768a6a82"}], "snippet": "        }", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestBufferedOutputStreamSliceOutput.java", "methodName": "TestBufferedOutputStreamSliceOutput$MockOutputStream"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 55, "column_number": -1, "description": "start of procedure BufferedOutputStreamSliceOutput(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "BufferedOutputStreamSliceOutput.<init>(TestBufferedOutputStreamSliceOutput$MockOutputStream)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.BufferedOutputStreamSliceOutput.<init>(com.facebook.presto.rcfile.TestBuf.144fd397fd86df2a7316cc1e6002a9b6"}], "snippet": "    public BufferedOutputStreamSliceOutput(OutputStream outputStream)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "methodName": "BufferedOutputStreamSliceOutput"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 56, "column_number": -1, "description": "Skipping SliceOutput(): unknown method", "node_tags": [], "snippet": "    {", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "methodName": "BufferedOutputStreamSliceOutput"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 57, "column_number": -1, "description": "Taking false branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "false"}], "snippet": "        if (outputStream == null) {", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "methodName": "BufferedOutputStreamSliceOutput"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 61, "column_number": -1, "description": "", "node_tags": [], "snippet": "        this.outputStream = outputStream;", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "methodName": "BufferedOutputStreamSliceOutput"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 62, "column_number": -1, "description": "", "node_tags": [], "snippet": "        this.buffer = new byte[CHUNK_SIZE];", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "methodName": "BufferedOutputStreamSliceOutput"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 63, "column_number": -1, "description": "", "node_tags": [], "snippet": "        this.slice = Slices.wrappedBuffer(buffer);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "methodName": "BufferedOutputStreamSliceOutput"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 64, "column_number": -1, "description": "return from a call to BufferedOutputStreamSliceOutput.<init>(TestBufferedOutputStreamSliceOutput$MockOutputStream)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "BufferedOutputStreamSliceOutput.<init>(TestBufferedOutputStreamSliceOutput$MockOutputStream)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.BufferedOutputStreamSliceOutput.<init>(com.facebook.presto.rcfile.TestBuf.144fd397fd86df2a7316cc1e6002a9b6"}], "snippet": "    }", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "methodName": "BufferedOutputStreamSliceOutput"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 210, "column_number": -1, "description": "Definition of writeBytes(...)", "node_tags": [], "snippet": "    public void writeBytes(byte[] source, int sourceIndex, int length)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "methodName": "writeBytes"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 210, "column_number": -1, "description": "Definition of writeBytes(...)", "node_tags": [], "snippet": "    public void writeBytes(byte[] source, int sourceIndex, int length)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "methodName": "writeBytes"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 210, "column_number": -1, "description": "Definition of writeBytes(...)", "node_tags": [], "snippet": "    public void writeBytes(byte[] source, int sourceIndex, int length)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "methodName": "writeBytes"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 210, "column_number": -1, "description": "Definition of writeBytes(...)", "node_tags": [], "snippet": "    public void writeBytes(byte[] source, int sourceIndex, int length)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "methodName": "writeBytes"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 210, "column_number": -1, "description": "Definition of writeBytes(...)", "node_tags": [], "snippet": "    public void writeBytes(byte[] source, int sourceIndex, int length)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "methodName": "writeBytes"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 210, "column_number": -1, "description": "Definition of writeBytes(...)", "node_tags": [], "snippet": "    public void writeBytes(byte[] source, int sourceIndex, int length)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "methodName": "writeBytes"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 210, "column_number": -1, "description": "Definition of writeBytes(...)", "node_tags": [], "snippet": "    public void writeBytes(byte[] source, int sourceIndex, int length)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "methodName": "writeBytes"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 210, "column_number": -1, "description": "Definition of writeBytes(...)", "node_tags": [], "snippet": "    public void writeBytes(byte[] source, int sourceIndex, int length)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "methodName": "writeBytes"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 210, "column_number": -1, "description": "Definition of writeBytes(...)", "node_tags": [], "snippet": "    public void writeBytes(byte[] source, int sourceIndex, int length)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "methodName": "writeBytes"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 210, "column_number": -1, "description": "Definition of writeBytes(...)", "node_tags": [], "snippet": "    public void writeBytes(byte[] source, int sourceIndex, int length)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "methodName": "writeBytes"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 210, "column_number": -1, "description": "Definition of writeBytes(...)", "node_tags": [], "snippet": "    public void writeBytes(byte[] source, int sourceIndex, int length)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "methodName": "writeBytes"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 70, "column_number": -1, "description": "start of procedure flush()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void BufferedOutputStreamSliceOutput.flush()"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.BufferedOutputStreamSliceOutput.flush():void.98343ac4672f160d86df7574e60587d4"}], "snippet": "        flushBufferToOutputStream();", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "methodName": "flush"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 367, "column_number": -1, "description": "start of procedure flushBufferToOutputStream()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void BufferedOutputStreamSliceOutput.flushBufferToOutputStream()"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.BufferedOutputStreamSliceOutput.flushBufferToOutputStream():void.e30c055c2761aa810e7734e3ded54da2"}], "snippet": "    private void flushBufferToOutputStream()", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "methodName": "flushBufferToOutputStream"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 369, "column_number": -1, "description": "", "node_tags": [], "snippet": "        writeToOutputStream(buffer, 0, bufferPosition);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "methodName": "flushBufferToOutputStream"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 374, "column_number": -1, "description": "start of procedure writeToOutputStream(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void BufferedOutputStreamSliceOutput.writeToOutputStream(byte[],int,int)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.BufferedOutputStreamSliceOutput.writeToOutputStream(byte[],int,int):void.2797a53a110ea20e9f90894616be1cd6"}], "snippet": "    private void writeToOutputStream(byte[] source, int sourceIndex, int length)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "methodName": "writeToOutputStream"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 377, "column_number": -1, "description": "", "node_tags": [], "snippet": "            outputStream.write(source, sourceIndex, length);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "methodName": "writeToOutputStream"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 382, "column_number": -1, "description": "return from a call to void BufferedOutputStreamSliceOutput.writeToOutputStream(byte[],int,int)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "void BufferedOutputStreamSliceOutput.writeToOutputStream(byte[],int,int)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.BufferedOutputStreamSliceOutput.writeToOutputStream(byte[],int,int):void.2797a53a110ea20e9f90894616be1cd6"}], "snippet": "    }", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "methodName": "writeToOutputStream"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 370, "column_number": -1, "description": "", "node_tags": [], "snippet": "        bufferOffset += bufferPosition;", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "methodName": "flushBufferToOutputStream"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 371, "column_number": -1, "description": "", "node_tags": [], "snippet": "        bufferPosition = 0;", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "methodName": "flushBufferToOutputStream"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 372, "column_number": -1, "description": "return from a call to void BufferedOutputStreamSliceOutput.flushBufferToOutputStream()", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "void BufferedOutputStreamSliceOutput.flushBufferToOutputStream()"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.BufferedOutputStreamSliceOutput.flushBufferToOutputStream():void.e30c055c2761aa810e7734e3ded54da2"}], "snippet": "    }", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "methodName": "flushBufferToOutputStream"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 71, "column_number": -1, "description": "", "node_tags": [], "snippet": "        outputStream.flush();", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "methodName": "flush"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 72, "column_number": -1, "description": "return from a call to void BufferedOutputStreamSliceOutput.flush()", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "void BufferedOutputStreamSliceOutput.flush()"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.BufferedOutputStreamSliceOutput.flush():void.98343ac4672f160d86df7574e60587d4"}], "snippet": "    }", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "methodName": "flush"}], "combined_records": [{"level": 1, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestBufferedOutputStreamSliceOutput.java", "line_number": 71, "column_number": -1, "description": "start of procedure TestBufferedOutputStreamSliceOutput$MockOutputStream(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "TestBufferedOutputStreamSliceOutput$MockOutputStream.<init>(TestBufferedOutputStreamSliceOutput,int)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.TestBufferedOutputStreamSliceOutput$MockOutputStream.<init>(com.facebook..6f107823f8830a31d363569b768a6a82"}], "snippet": "66.    {\n67.        public MockOutputStream(int length)\n68.>         {\n69.>             super(length);\n70.        }\n71.> \n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestBufferedOutputStreamSliceOutput.java", "methodName": "TestBufferedOutputStreamSliceOutput$MockOutputStream", "line_numbers": [68, 69, 70, 71]}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 64, "column_number": -1, "description": "start of procedure BufferedOutputStreamSliceOutput(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "BufferedOutputStreamSliceOutput.<init>(TestBufferedOutputStreamSliceOutput$MockOutputStream)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.BufferedOutputStreamSliceOutput.<init>(com.facebook.presto.rcfile.TestBuf.144fd397fd86df2a7316cc1e6002a9b6"}], "snippet": "53.\n54.    public BufferedOutputStreamSliceOutput(OutputStream outputStream)\n55.>     {\n56.>         if (outputStream == null) {\n57.>             throw new NullPointerException(\"outputStream is null\");\n58.        }\n59.\n60.        this.outputStream = outputStream;\n61.>         this.buffer = new byte[CHUNK_SIZE];\n62.>         this.slice = Slices.wrappedBuffer(buffer);\n63.    }\n64.> \n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "methodName": "BufferedOutputStreamSliceOutput", "line_numbers": [55, 56, 57, 61, 62, 63, 64]}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 210, "column_number": -1, "description": "Definition of writeBytes(...)", "node_tags": [], "snippet": "208.    @Override\n209.    public void writeBytes(byte[] source, int sourceIndex, int length)\n210.>     {\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "methodName": "writeBytes", "line_numbers": [210, 210, 210, 210, 210, 210, 210, 210, 210, 210, 210]}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 70, "column_number": -1, "description": "start of procedure flush()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void BufferedOutputStreamSliceOutput.flush()"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.BufferedOutputStreamSliceOutput.flush():void.98343ac4672f160d86df7574e60587d4"}], "snippet": "68.    {\n69.        flushBufferToOutputStream();\n70.>         outputStream.flush();\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "methodName": "flush", "line_numbers": [70]}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 369, "column_number": -1, "description": "start of procedure flushBufferToOutputStream()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void BufferedOutputStreamSliceOutput.flushBufferToOutputStream()"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.BufferedOutputStreamSliceOutput.flushBufferToOutputStream():void.e30c055c2761aa810e7734e3ded54da2"}], "snippet": "365.\n366.    private void flushBufferToOutputStream()\n367.>     {\n368.        writeToOutputStream(buffer, 0, bufferPosition);\n369.>         bufferOffset += bufferPosition;\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "methodName": "flushBufferToOutputStream", "line_numbers": [367, 369]}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 382, "column_number": -1, "description": "start of procedure writeToOutputStream(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void BufferedOutputStreamSliceOutput.writeToOutputStream(byte[],int,int)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.BufferedOutputStreamSliceOutput.writeToOutputStream(byte[],int,int):void.2797a53a110ea20e9f90894616be1cd6"}], "snippet": "372.\n373.    private void writeToOutputStream(byte[] source, int sourceIndex, int length)\n374.>     {\n375.        try {\n376.            outputStream.write(source, sourceIndex, length);\n377.        }\n378.        catch (IOException e) {\n379.            throw new UncheckedIOException(e);\n380.        }\n381.    }\n382.> \n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "methodName": "writeToOutputStream", "line_numbers": [374, 377, 382]}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 372, "column_number": -1, "description": "", "node_tags": [], "snippet": "368.        writeToOutputStream(buffer, 0, bufferPosition);\n369.        bufferOffset += bufferPosition;\n370.>         bufferPosition = 0;\n371.    }\n372.> \n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "methodName": "flushBufferToOutputStream", "line_numbers": [370, 371, 372]}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 72, "column_number": -1, "description": "", "node_tags": [], "snippet": "69.        flushBufferToOutputStream();\n70.        outputStream.flush();\n71.    }\n72.> \n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "methodName": "flush", "line_numbers": [71, 72]}], "infer_explore": [{"level": 0, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestBufferedOutputStreamSliceOutput.java", "line_number": 28, "column_number": -1, "description": "start of procedure testWriteBytes()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void TestBufferedOutputStreamSliceOutput.testWriteBytes()"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.TestBufferedOutputStreamSliceOutput.testWriteBytes():void.612f354828839289cb7df1ecefad3f09"}], "snippet": "25. {\n26.     @Test\n27. >     public void testWriteBytes()\n28.             throws Exception\n29.     {\n"}, {"level": 0, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestBufferedOutputStreamSliceOutput.java", "line_number": 32, "column_number": -1, "description": "", "node_tags": [], "snippet": "29.     {\n30.         // fill up some input bytes\n31. >         int length = 65536;\n32.         byte[] inputArray = new byte[length];\n33.         for (int i = 0; i < length; i++) {\n"}, {"level": 0, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestBufferedOutputStreamSliceOutput.java", "line_number": 33, "column_number": -1, "description": "", "node_tags": [], "snippet": "30.         // fill up some input bytes\n31.         int length = 65536;\n32. >         byte[] inputArray = new byte[length];\n33.         for (int i = 0; i < length; i++) {\n34.             inputArray[i] = (byte) (i % 128);\n"}, {"level": 0, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestBufferedOutputStreamSliceOutput.java", "line_number": 34, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "31.         int length = 65536;\n32.         byte[] inputArray = new byte[length];\n33. >         for (int i = 0; i < length; i++) {\n34.             inputArray[i] = (byte) (i % 128);\n35.         }\n"}, {"level": 0, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestBufferedOutputStreamSliceOutput.java", "line_number": 35, "column_number": -1, "description": "", "node_tags": [], "snippet": "32.         byte[] inputArray = new byte[length];\n33.         for (int i = 0; i < length; i++) {\n34. >             inputArray[i] = (byte) (i % 128);\n35.         }\n36. \n"}, {"level": 0, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestBufferedOutputStreamSliceOutput.java", "line_number": 34, "column_number": -1, "description": "Taking false branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "false"}], "snippet": "31.         int length = 65536;\n32.         byte[] inputArray = new byte[length];\n33. >         for (int i = 0; i < length; i++) {\n34.             inputArray[i] = (byte) (i % 128);\n35.         }\n"}, {"level": 0, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestBufferedOutputStreamSliceOutput.java", "line_number": 39, "column_number": -1, "description": "", "node_tags": [], "snippet": "36. \n37.         // pick some offsets to make the inputs into different chunks\n38. >         int[] offsets = {0, 100, 545, 1024, 2049, 2050, 2051, 2151, 10480, 20042, 20100, 40001, 65536};\n39. \n40.         // check byte array version\n"}, {"level": 0, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestBufferedOutputStreamSliceOutput.java", "line_number": 42, "column_number": -1, "description": "", "node_tags": [], "snippet": "39. \n40.         // check byte array version\n41. >         MockOutputStream byteOutputStream = new MockOutputStream(length);\n42.         BufferedOutputStreamSliceOutput output = new BufferedOutputStreamSliceOutput(byteOutputStream);\n43.         for (int i = 0; i < offsets.length - 1; i++) {\n"}, {"level": 1, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestBufferedOutputStreamSliceOutput.java", "line_number": 68, "column_number": -1, "description": "start of procedure TestBufferedOutputStreamSliceOutput$MockOutputStream(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "TestBufferedOutputStreamSliceOutput$MockOutputStream.<init>(TestBufferedOutputStreamSliceOutput,int)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.TestBufferedOutputStreamSliceOutput$MockOutputStream.<init>(com.facebook..6f107823f8830a31d363569b768a6a82"}], "snippet": "65.             extends ByteArrayOutputStream\n66.     {\n67. >         public MockOutputStream(int length)\n68.         {\n69.             super(length);\n"}, {"level": 1, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestBufferedOutputStreamSliceOutput.java", "line_number": 69, "column_number": -1, "description": "", "node_tags": [], "snippet": "66.     {\n67.         public MockOutputStream(int length)\n68. >         {\n69.             super(length);\n70.         }\n"}, {"level": 1, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestBufferedOutputStreamSliceOutput.java", "line_number": 70, "column_number": -1, "description": "", "node_tags": [], "snippet": "67.         public MockOutputStream(int length)\n68.         {\n69. >             super(length);\n70.         }\n71. \n"}, {"level": 1, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestBufferedOutputStreamSliceOutput.java", "line_number": 71, "column_number": -1, "description": "return from a call to TestBufferedOutputStreamSliceOutput$MockOutputStream.<init>(TestBufferedOutputStreamSliceOutput,int)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "TestBufferedOutputStreamSliceOutput$MockOutputStream.<init>(TestBufferedOutputStreamSliceOutput,int)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.TestBufferedOutputStreamSliceOutput$MockOutputStream.<init>(com.facebook..6f107823f8830a31d363569b768a6a82"}], "snippet": "68.         {\n69.             super(length);\n70. >         }\n71. \n72.         @Override\n"}, {"level": 0, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestBufferedOutputStreamSliceOutput.java", "line_number": 43, "column_number": -1, "description": "", "node_tags": [], "snippet": "40.         // check byte array version\n41.         MockOutputStream byteOutputStream = new MockOutputStream(length);\n42. >         BufferedOutputStreamSliceOutput output = new BufferedOutputStreamSliceOutput(byteOutputStream);\n43.         for (int i = 0; i < offsets.length - 1; i++) {\n44.             output.writeBytes(inputArray, offsets[i], offsets[i + 1] - offsets[i]);\n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 55, "column_number": -1, "description": "start of procedure BufferedOutputStreamSliceOutput(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "BufferedOutputStreamSliceOutput.<init>(TestBufferedOutputStreamSliceOutput$MockOutputStream)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.BufferedOutputStreamSliceOutput.<init>(com.facebook.presto.rcfile.TestBuf.144fd397fd86df2a7316cc1e6002a9b6"}], "snippet": "52.     private int bufferPosition;\n53. \n54. >     public BufferedOutputStreamSliceOutput(OutputStream outputStream)\n55.     {\n56.         if (outputStream == null) {\n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 56, "column_number": -1, "description": "Skipping SliceOutput(): unknown method", "node_tags": [], "snippet": "53. \n54.     public BufferedOutputStreamSliceOutput(OutputStream outputStream)\n55. >     {\n56.         if (outputStream == null) {\n57.             throw new NullPointerException(\"outputStream is null\");\n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 57, "column_number": -1, "description": "Taking false branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "false"}], "snippet": "54.     public BufferedOutputStreamSliceOutput(OutputStream outputStream)\n55.     {\n56. >         if (outputStream == null) {\n57.             throw new NullPointerException(\"outputStream is null\");\n58.         }\n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 61, "column_number": -1, "description": "", "node_tags": [], "snippet": "58.         }\n59. \n60. >         this.outputStream = outputStream;\n61.         this.buffer = new byte[CHUNK_SIZE];\n62.         this.slice = Slices.wrappedBuffer(buffer);\n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 62, "column_number": -1, "description": "", "node_tags": [], "snippet": "59. \n60.         this.outputStream = outputStream;\n61. >         this.buffer = new byte[CHUNK_SIZE];\n62.         this.slice = Slices.wrappedBuffer(buffer);\n63.     }\n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 63, "column_number": -1, "description": "", "node_tags": [], "snippet": "60.         this.outputStream = outputStream;\n61.         this.buffer = new byte[CHUNK_SIZE];\n62. >         this.slice = Slices.wrappedBuffer(buffer);\n63.     }\n64. \n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 64, "column_number": -1, "description": "return from a call to BufferedOutputStreamSliceOutput.<init>(TestBufferedOutputStreamSliceOutput$MockOutputStream)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "BufferedOutputStreamSliceOutput.<init>(TestBufferedOutputStreamSliceOutput$MockOutputStream)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.BufferedOutputStreamSliceOutput.<init>(com.facebook.presto.rcfile.TestBuf.144fd397fd86df2a7316cc1e6002a9b6"}], "snippet": "61.         this.buffer = new byte[CHUNK_SIZE];\n62.         this.slice = Slices.wrappedBuffer(buffer);\n63. >     }\n64. \n65.     @Override\n"}, {"level": 0, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestBufferedOutputStreamSliceOutput.java", "line_number": 44, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "41.         MockOutputStream byteOutputStream = new MockOutputStream(length);\n42.         BufferedOutputStreamSliceOutput output = new BufferedOutputStreamSliceOutput(byteOutputStream);\n43. >         for (int i = 0; i < offsets.length - 1; i++) {\n44.             output.writeBytes(inputArray, offsets[i], offsets[i + 1] - offsets[i]);\n45.         }\n"}, {"level": 0, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestBufferedOutputStreamSliceOutput.java", "line_number": 45, "column_number": -1, "description": "Skipping writeBytes(...): empty list of specs", "node_tags": [], "snippet": "42.         BufferedOutputStreamSliceOutput output = new BufferedOutputStreamSliceOutput(byteOutputStream);\n43.         for (int i = 0; i < offsets.length - 1; i++) {\n44. >             output.writeBytes(inputArray, offsets[i], offsets[i + 1] - offsets[i]);\n45.         }\n46.         // ignore the last flush size check\n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 210, "column_number": -1, "description": "Definition of writeBytes(...)", "node_tags": [], "snippet": "207. \n208.     @Override\n209. >     public void writeBytes(byte[] source, int sourceIndex, int length)\n210.     {\n211.         if (length >= CHUNK_SIZE) {\n"}, {"level": 0, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestBufferedOutputStreamSliceOutput.java", "line_number": 44, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "41.         MockOutputStream byteOutputStream = new MockOutputStream(length);\n42.         BufferedOutputStreamSliceOutput output = new BufferedOutputStreamSliceOutput(byteOutputStream);\n43. >         for (int i = 0; i < offsets.length - 1; i++) {\n44.             output.writeBytes(inputArray, offsets[i], offsets[i + 1] - offsets[i]);\n45.         }\n"}, {"level": 0, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestBufferedOutputStreamSliceOutput.java", "line_number": 45, "column_number": -1, "description": "Skipping writeBytes(...): empty list of specs", "node_tags": [], "snippet": "42.         BufferedOutputStreamSliceOutput output = new BufferedOutputStreamSliceOutput(byteOutputStream);\n43.         for (int i = 0; i < offsets.length - 1; i++) {\n44. >             output.writeBytes(inputArray, offsets[i], offsets[i + 1] - offsets[i]);\n45.         }\n46.         // ignore the last flush size check\n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 210, "column_number": -1, "description": "Definition of writeBytes(...)", "node_tags": [], "snippet": "207. \n208.     @Override\n209. >     public void writeBytes(byte[] source, int sourceIndex, int length)\n210.     {\n211.         if (length >= CHUNK_SIZE) {\n"}, {"level": 0, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestBufferedOutputStreamSliceOutput.java", "line_number": 44, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "41.         MockOutputStream byteOutputStream = new MockOutputStream(length);\n42.         BufferedOutputStreamSliceOutput output = new BufferedOutputStreamSliceOutput(byteOutputStream);\n43. >         for (int i = 0; i < offsets.length - 1; i++) {\n44.             output.writeBytes(inputArray, offsets[i], offsets[i + 1] - offsets[i]);\n45.         }\n"}, {"level": 0, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestBufferedOutputStreamSliceOutput.java", "line_number": 45, "column_number": -1, "description": "Skipping writeBytes(...): empty list of specs", "node_tags": [], "snippet": "42.         BufferedOutputStreamSliceOutput output = new BufferedOutputStreamSliceOutput(byteOutputStream);\n43.         for (int i = 0; i < offsets.length - 1; i++) {\n44. >             output.writeBytes(inputArray, offsets[i], offsets[i + 1] - offsets[i]);\n45.         }\n46.         // ignore the last flush size check\n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 210, "column_number": -1, "description": "Definition of writeBytes(...)", "node_tags": [], "snippet": "207. \n208.     @Override\n209. >     public void writeBytes(byte[] source, int sourceIndex, int length)\n210.     {\n211.         if (length >= CHUNK_SIZE) {\n"}, {"level": 0, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestBufferedOutputStreamSliceOutput.java", "line_number": 44, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "41.         MockOutputStream byteOutputStream = new MockOutputStream(length);\n42.         BufferedOutputStreamSliceOutput output = new BufferedOutputStreamSliceOutput(byteOutputStream);\n43. >         for (int i = 0; i < offsets.length - 1; i++) {\n44.             output.writeBytes(inputArray, offsets[i], offsets[i + 1] - offsets[i]);\n45.         }\n"}, {"level": 0, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestBufferedOutputStreamSliceOutput.java", "line_number": 45, "column_number": -1, "description": "Skipping writeBytes(...): empty list of specs", "node_tags": [], "snippet": "42.         BufferedOutputStreamSliceOutput output = new BufferedOutputStreamSliceOutput(byteOutputStream);\n43.         for (int i = 0; i < offsets.length - 1; i++) {\n44. >             output.writeBytes(inputArray, offsets[i], offsets[i + 1] - offsets[i]);\n45.         }\n46.         // ignore the last flush size check\n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 210, "column_number": -1, "description": "Definition of writeBytes(...)", "node_tags": [], "snippet": "207. \n208.     @Override\n209. >     public void writeBytes(byte[] source, int sourceIndex, int length)\n210.     {\n211.         if (length >= CHUNK_SIZE) {\n"}, {"level": 0, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestBufferedOutputStreamSliceOutput.java", "line_number": 44, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "41.         MockOutputStream byteOutputStream = new MockOutputStream(length);\n42.         BufferedOutputStreamSliceOutput output = new BufferedOutputStreamSliceOutput(byteOutputStream);\n43. >         for (int i = 0; i < offsets.length - 1; i++) {\n44.             output.writeBytes(inputArray, offsets[i], offsets[i + 1] - offsets[i]);\n45.         }\n"}, {"level": 0, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestBufferedOutputStreamSliceOutput.java", "line_number": 45, "column_number": -1, "description": "Skipping writeBytes(...): empty list of specs", "node_tags": [], "snippet": "42.         BufferedOutputStreamSliceOutput output = new BufferedOutputStreamSliceOutput(byteOutputStream);\n43.         for (int i = 0; i < offsets.length - 1; i++) {\n44. >             output.writeBytes(inputArray, offsets[i], offsets[i + 1] - offsets[i]);\n45.         }\n46.         // ignore the last flush size check\n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 210, "column_number": -1, "description": "Definition of writeBytes(...)", "node_tags": [], "snippet": "207. \n208.     @Override\n209. >     public void writeBytes(byte[] source, int sourceIndex, int length)\n210.     {\n211.         if (length >= CHUNK_SIZE) {\n"}, {"level": 0, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestBufferedOutputStreamSliceOutput.java", "line_number": 44, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "41.         MockOutputStream byteOutputStream = new MockOutputStream(length);\n42.         BufferedOutputStreamSliceOutput output = new BufferedOutputStreamSliceOutput(byteOutputStream);\n43. >         for (int i = 0; i < offsets.length - 1; i++) {\n44.             output.writeBytes(inputArray, offsets[i], offsets[i + 1] - offsets[i]);\n45.         }\n"}, {"level": 0, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestBufferedOutputStreamSliceOutput.java", "line_number": 45, "column_number": -1, "description": "Skipping writeBytes(...): empty list of specs", "node_tags": [], "snippet": "42.         BufferedOutputStreamSliceOutput output = new BufferedOutputStreamSliceOutput(byteOutputStream);\n43.         for (int i = 0; i < offsets.length - 1; i++) {\n44. >             output.writeBytes(inputArray, offsets[i], offsets[i + 1] - offsets[i]);\n45.         }\n46.         // ignore the last flush size check\n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 210, "column_number": -1, "description": "Definition of writeBytes(...)", "node_tags": [], "snippet": "207. \n208.     @Override\n209. >     public void writeBytes(byte[] source, int sourceIndex, int length)\n210.     {\n211.         if (length >= CHUNK_SIZE) {\n"}, {"level": 0, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestBufferedOutputStreamSliceOutput.java", "line_number": 44, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "41.         MockOutputStream byteOutputStream = new MockOutputStream(length);\n42.         BufferedOutputStreamSliceOutput output = new BufferedOutputStreamSliceOutput(byteOutputStream);\n43. >         for (int i = 0; i < offsets.length - 1; i++) {\n44.             output.writeBytes(inputArray, offsets[i], offsets[i + 1] - offsets[i]);\n45.         }\n"}, {"level": 0, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestBufferedOutputStreamSliceOutput.java", "line_number": 45, "column_number": -1, "description": "Skipping writeBytes(...): empty list of specs", "node_tags": [], "snippet": "42.         BufferedOutputStreamSliceOutput output = new BufferedOutputStreamSliceOutput(byteOutputStream);\n43.         for (int i = 0; i < offsets.length - 1; i++) {\n44. >             output.writeBytes(inputArray, offsets[i], offsets[i + 1] - offsets[i]);\n45.         }\n46.         // ignore the last flush size check\n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 210, "column_number": -1, "description": "Definition of writeBytes(...)", "node_tags": [], "snippet": "207. \n208.     @Override\n209. >     public void writeBytes(byte[] source, int sourceIndex, int length)\n210.     {\n211.         if (length >= CHUNK_SIZE) {\n"}, {"level": 0, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestBufferedOutputStreamSliceOutput.java", "line_number": 44, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "41.         MockOutputStream byteOutputStream = new MockOutputStream(length);\n42.         BufferedOutputStreamSliceOutput output = new BufferedOutputStreamSliceOutput(byteOutputStream);\n43. >         for (int i = 0; i < offsets.length - 1; i++) {\n44.             output.writeBytes(inputArray, offsets[i], offsets[i + 1] - offsets[i]);\n45.         }\n"}, {"level": 0, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestBufferedOutputStreamSliceOutput.java", "line_number": 45, "column_number": -1, "description": "Skipping writeBytes(...): empty list of specs", "node_tags": [], "snippet": "42.         BufferedOutputStreamSliceOutput output = new BufferedOutputStreamSliceOutput(byteOutputStream);\n43.         for (int i = 0; i < offsets.length - 1; i++) {\n44. >             output.writeBytes(inputArray, offsets[i], offsets[i + 1] - offsets[i]);\n45.         }\n46.         // ignore the last flush size check\n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 210, "column_number": -1, "description": "Definition of writeBytes(...)", "node_tags": [], "snippet": "207. \n208.     @Override\n209. >     public void writeBytes(byte[] source, int sourceIndex, int length)\n210.     {\n211.         if (length >= CHUNK_SIZE) {\n"}, {"level": 0, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestBufferedOutputStreamSliceOutput.java", "line_number": 44, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "41.         MockOutputStream byteOutputStream = new MockOutputStream(length);\n42.         BufferedOutputStreamSliceOutput output = new BufferedOutputStreamSliceOutput(byteOutputStream);\n43. >         for (int i = 0; i < offsets.length - 1; i++) {\n44.             output.writeBytes(inputArray, offsets[i], offsets[i + 1] - offsets[i]);\n45.         }\n"}, {"level": 0, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestBufferedOutputStreamSliceOutput.java", "line_number": 45, "column_number": -1, "description": "Skipping writeBytes(...): empty list of specs", "node_tags": [], "snippet": "42.         BufferedOutputStreamSliceOutput output = new BufferedOutputStreamSliceOutput(byteOutputStream);\n43.         for (int i = 0; i < offsets.length - 1; i++) {\n44. >             output.writeBytes(inputArray, offsets[i], offsets[i + 1] - offsets[i]);\n45.         }\n46.         // ignore the last flush size check\n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 210, "column_number": -1, "description": "Definition of writeBytes(...)", "node_tags": [], "snippet": "207. \n208.     @Override\n209. >     public void writeBytes(byte[] source, int sourceIndex, int length)\n210.     {\n211.         if (length >= CHUNK_SIZE) {\n"}, {"level": 0, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestBufferedOutputStreamSliceOutput.java", "line_number": 44, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "41.         MockOutputStream byteOutputStream = new MockOutputStream(length);\n42.         BufferedOutputStreamSliceOutput output = new BufferedOutputStreamSliceOutput(byteOutputStream);\n43. >         for (int i = 0; i < offsets.length - 1; i++) {\n44.             output.writeBytes(inputArray, offsets[i], offsets[i + 1] - offsets[i]);\n45.         }\n"}, {"level": 0, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestBufferedOutputStreamSliceOutput.java", "line_number": 45, "column_number": -1, "description": "Skipping writeBytes(...): empty list of specs", "node_tags": [], "snippet": "42.         BufferedOutputStreamSliceOutput output = new BufferedOutputStreamSliceOutput(byteOutputStream);\n43.         for (int i = 0; i < offsets.length - 1; i++) {\n44. >             output.writeBytes(inputArray, offsets[i], offsets[i + 1] - offsets[i]);\n45.         }\n46.         // ignore the last flush size check\n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 210, "column_number": -1, "description": "Definition of writeBytes(...)", "node_tags": [], "snippet": "207. \n208.     @Override\n209. >     public void writeBytes(byte[] source, int sourceIndex, int length)\n210.     {\n211.         if (length >= CHUNK_SIZE) {\n"}, {"level": 0, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestBufferedOutputStreamSliceOutput.java", "line_number": 44, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "41.         MockOutputStream byteOutputStream = new MockOutputStream(length);\n42.         BufferedOutputStreamSliceOutput output = new BufferedOutputStreamSliceOutput(byteOutputStream);\n43. >         for (int i = 0; i < offsets.length - 1; i++) {\n44.             output.writeBytes(inputArray, offsets[i], offsets[i + 1] - offsets[i]);\n45.         }\n"}, {"level": 0, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestBufferedOutputStreamSliceOutput.java", "line_number": 45, "column_number": -1, "description": "Skipping writeBytes(...): empty list of specs", "node_tags": [], "snippet": "42.         BufferedOutputStreamSliceOutput output = new BufferedOutputStreamSliceOutput(byteOutputStream);\n43.         for (int i = 0; i < offsets.length - 1; i++) {\n44. >             output.writeBytes(inputArray, offsets[i], offsets[i + 1] - offsets[i]);\n45.         }\n46.         // ignore the last flush size check\n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 210, "column_number": -1, "description": "Definition of writeBytes(...)", "node_tags": [], "snippet": "207. \n208.     @Override\n209. >     public void writeBytes(byte[] source, int sourceIndex, int length)\n210.     {\n211.         if (length >= CHUNK_SIZE) {\n"}, {"level": 0, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestBufferedOutputStreamSliceOutput.java", "line_number": 44, "column_number": -1, "description": "Taking false branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "false"}], "snippet": "41.         MockOutputStream byteOutputStream = new MockOutputStream(length);\n42.         BufferedOutputStreamSliceOutput output = new BufferedOutputStreamSliceOutput(byteOutputStream);\n43. >         for (int i = 0; i < offsets.length - 1; i++) {\n44.             output.writeBytes(inputArray, offsets[i], offsets[i + 1] - offsets[i]);\n45.         }\n"}, {"level": 0, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestBufferedOutputStreamSliceOutput.java", "line_number": 48, "column_number": -1, "description": "", "node_tags": [], "snippet": "45.         }\n46.         // ignore the last flush size check\n47. >         output.flush();\n48.         assertEquals(byteOutputStream.toByteArray(), inputArray);\n49.         byteOutputStream.close();\n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 70, "column_number": -1, "description": "start of procedure flush()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void BufferedOutputStreamSliceOutput.flush()"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.BufferedOutputStreamSliceOutput.flush():void.98343ac4672f160d86df7574e60587d4"}], "snippet": "67.             throws IOException\n68.     {\n69. >         flushBufferToOutputStream();\n70.         outputStream.flush();\n71.     }\n"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 367, "column_number": -1, "description": "start of procedure flushBufferToOutputStream()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void BufferedOutputStreamSliceOutput.flushBufferToOutputStream()"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.BufferedOutputStreamSliceOutput.flushBufferToOutputStream():void.e30c055c2761aa810e7734e3ded54da2"}], "snippet": "364.     }\n365. \n366. >     private void flushBufferToOutputStream()\n367.     {\n368.         writeToOutputStream(buffer, 0, bufferPosition);\n"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 369, "column_number": -1, "description": "", "node_tags": [], "snippet": "366.     private void flushBufferToOutputStream()\n367.     {\n368. >         writeToOutputStream(buffer, 0, bufferPosition);\n369.         bufferOffset += bufferPosition;\n370.         bufferPosition = 0;\n"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 374, "column_number": -1, "description": "start of procedure writeToOutputStream(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void BufferedOutputStreamSliceOutput.writeToOutputStream(byte[],int,int)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.BufferedOutputStreamSliceOutput.writeToOutputStream(byte[],int,int):void.2797a53a110ea20e9f90894616be1cd6"}], "snippet": "371.     }\n372. \n373. >     private void writeToOutputStream(byte[] source, int sourceIndex, int length)\n374.     {\n375.         try {\n"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 377, "column_number": -1, "description": "", "node_tags": [], "snippet": "374.     {\n375.         try {\n376. >             outputStream.write(source, sourceIndex, length);\n377.         }\n378.         catch (IOException e) {\n"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 382, "column_number": -1, "description": "return from a call to void BufferedOutputStreamSliceOutput.writeToOutputStream(byte[],int,int)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "void BufferedOutputStreamSliceOutput.writeToOutputStream(byte[],int,int)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.BufferedOutputStreamSliceOutput.writeToOutputStream(byte[],int,int):void.2797a53a110ea20e9f90894616be1cd6"}], "snippet": "379.             throw new UncheckedIOException(e);\n380.         }\n381. >     }\n382. \n383.     private void writeToOutputStream(Slice source, int sourceIndex, int length)\n"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 370, "column_number": -1, "description": "", "node_tags": [], "snippet": "367.     {\n368.         writeToOutputStream(buffer, 0, bufferPosition);\n369. >         bufferOffset += bufferPosition;\n370.         bufferPosition = 0;\n371.     }\n"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 371, "column_number": -1, "description": "", "node_tags": [], "snippet": "368.         writeToOutputStream(buffer, 0, bufferPosition);\n369.         bufferOffset += bufferPosition;\n370. >         bufferPosition = 0;\n371.     }\n372. \n"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 372, "column_number": -1, "description": "return from a call to void BufferedOutputStreamSliceOutput.flushBufferToOutputStream()", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "void BufferedOutputStreamSliceOutput.flushBufferToOutputStream()"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.BufferedOutputStreamSliceOutput.flushBufferToOutputStream():void.e30c055c2761aa810e7734e3ded54da2"}], "snippet": "369.         bufferOffset += bufferPosition;\n370.         bufferPosition = 0;\n371. >     }\n372. \n373.     private void writeToOutputStream(byte[] source, int sourceIndex, int length)\n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 71, "column_number": -1, "description": "", "node_tags": [], "snippet": "68.     {\n69.         flushBufferToOutputStream();\n70. >         outputStream.flush();\n71.     }\n72. \n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 72, "column_number": -1, "description": "return from a call to void BufferedOutputStreamSliceOutput.flush()", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "void BufferedOutputStreamSliceOutput.flush()"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.BufferedOutputStreamSliceOutput.flush():void.98343ac4672f160d86df7574e60587d4"}], "snippet": "69.         flushBufferToOutputStream();\n70.         outputStream.flush();\n71. >     }\n72. \n73.     @Override\n"}, {"level": 0, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestBufferedOutputStreamSliceOutput.java", "line_number": 49, "column_number": -1, "description": "Skipping assertEquals(...): unknown method", "node_tags": [], "snippet": "46.         // ignore the last flush size check\n47.         output.flush();\n48. >         assertEquals(byteOutputStream.toByteArray(), inputArray);\n49.         byteOutputStream.close();\n50. \n"}, {"level": 0, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestBufferedOutputStreamSliceOutput.java", "line_number": 50, "column_number": -1, "description": "", "node_tags": [], "snippet": "47.         output.flush();\n48.         assertEquals(byteOutputStream.toByteArray(), inputArray);\n49. >         byteOutputStream.close();\n50. \n51.         // check slice version\n"}]}, {"url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/main/java/com/facebook/presto/cli/KeyReader.java", "rawCode": "/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage com.facebook.presto.cli;\n\nimport java.io.FileDescriptor;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\n\nimport static org.fusesource.jansi.internal.CLibrary.STDIN_FILENO;\nimport static org.fusesource.jansi.internal.CLibrary.isatty;\n\npublic final class KeyReader\n{\n    private KeyReader() {}\n\n    @SuppressWarnings(\"resource\")\n    public static int readKey()\n    {\n        if (!hasTerminal()) {\n            return -1;\n        }\n\n        try {\n            InputStream in = new FileInputStream(FileDescriptor.in);\n            if (in.available() > 0) {\n                return in.read();\n            }\n        }\n        catch (IOException e) {\n            // ignore errors reading keyboard input\n        }\n        return -1;\n    }\n\n    private static boolean hasTerminal()\n    {\n        try {\n            return isatty(STDIN_FILENO) == 1;\n        }\n        catch (Throwable e) {\n            return false;\n        }\n    }\n}\n", "methodName": "int KeyReader.readKey()", "exampleID": 14, "dataset": "infer", "filepath": "presto-cli/src/main/java/com/facebook/presto/cli/KeyReader.java", "source": "java.io.FileInputStream", "sourceLine": 36, "qualifier": "Resource of type $$java.io.FileInputStream/$ acquired by call to @@FileInputStream(...)/@ is not released", "steps": [{"line": 36, "source": "java.io.FileInputStream", "filepath": "presto-cli/src/main/java/com/facebook/presto/cli/KeyReader.java", "methodName": "int KeyReader.readKey()", "exampleID": 15}], "line_number": 36, "records": [], "combined_records": [], "infer_explore": [{"level": 0, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/KeyReader.java", "line_number": 29, "column_number": -1, "description": "start of procedure readKey()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "int KeyReader.readKey()"}, {"tag": "name_id", "value": "com.facebook.presto.cli.KeyReader.readKey():int.2468e81731148cec96979d899ffd1554"}], "snippet": "26. \n27.     @SuppressWarnings(\"resource\")\n28. >     public static int readKey()\n29.     {\n30.         if (!hasTerminal()) {\n"}, {"level": 0, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/KeyReader.java", "line_number": 31, "column_number": -1, "description": "", "node_tags": [], "snippet": "28.     public static int readKey()\n29.     {\n30. >         if (!hasTerminal()) {\n31.             return -1;\n32.         }\n"}, {"level": 1, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/KeyReader.java", "line_number": 47, "column_number": -1, "description": "start of procedure hasTerminal()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "boolean KeyReader.hasTerminal()"}, {"tag": "name_id", "value": "com.facebook.presto.cli.KeyReader.hasTerminal():boolean.f774b5444ee01923f7ab476bafcbca80"}], "snippet": "44.     }\n45. \n46. >     private static boolean hasTerminal()\n47.     {\n48.         try {\n"}, {"level": 1, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/KeyReader.java", "line_number": 50, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "47.     {\n48.         try {\n49. >             return isatty(STDIN_FILENO) == 1;\n50.         }\n51.         catch (Throwable e) {\n"}, {"level": 1, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/KeyReader.java", "line_number": 53, "column_number": -1, "description": "return from a call to boolean KeyReader.hasTerminal()", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "boolean KeyReader.hasTerminal()"}, {"tag": "name_id", "value": "com.facebook.presto.cli.KeyReader.hasTerminal():boolean.f774b5444ee01923f7ab476bafcbca80"}], "snippet": "50.         }\n51.         catch (Throwable e) {\n52. >             return false;\n53.         }\n54.     }\n"}, {"level": 0, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/KeyReader.java", "line_number": 31, "column_number": -1, "description": "Taking false branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "false"}], "snippet": "28.     public static int readKey()\n29.     {\n30. >         if (!hasTerminal()) {\n31.             return -1;\n32.         }\n"}, {"level": 0, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/KeyReader.java", "line_number": 36, "column_number": -1, "description": "", "node_tags": [], "snippet": "33. \n34.         try {\n35. >             InputStream in = new FileInputStream(FileDescriptor.in);\n36.             if (in.available() > 0) {\n37.                 return in.read();\n"}, {"level": 0, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/KeyReader.java", "line_number": 37, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "34.         try {\n35.             InputStream in = new FileInputStream(FileDescriptor.in);\n36. >             if (in.available() > 0) {\n37.                 return in.read();\n38.             }\n"}, {"level": 0, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/KeyReader.java", "line_number": 38, "column_number": -1, "description": "", "node_tags": [], "snippet": "35.             InputStream in = new FileInputStream(FileDescriptor.in);\n36.             if (in.available() > 0) {\n37. >                 return in.read();\n38.             }\n39.         }\n"}]}, {"url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/main/java/com/facebook/presto/cli/KeyReader.java", "rawCode": "/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage com.facebook.presto.cli;\n\nimport java.io.FileDescriptor;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\n\nimport static org.fusesource.jansi.internal.CLibrary.STDIN_FILENO;\nimport static org.fusesource.jansi.internal.CLibrary.isatty;\n\npublic final class KeyReader\n{\n    private KeyReader() {}\n\n    @SuppressWarnings(\"resource\")\n    public static int readKey()\n    {\n        if (!hasTerminal()) {\n            return -1;\n        }\n\n        try {\n            InputStream in = new FileInputStream(FileDescriptor.in);\n            if (in.available() > 0) {\n                return in.read();\n            }\n        }\n        catch (IOException e) {\n            // ignore errors reading keyboard input\n        }\n        return -1;\n    }\n\n    private static boolean hasTerminal()\n    {\n        try {\n            return isatty(STDIN_FILENO) == 1;\n        }\n        catch (Throwable e) {\n            return false;\n        }\n    }\n}\n", "methodName": "int KeyReader.readKey()", "exampleID": 16, "dataset": "infer", "filepath": "presto-cli/src/main/java/com/facebook/presto/cli/KeyReader.java", "source": "java.io.FileInputStream", "sourceLine": 36, "qualifier": "Resource of type $$java.io.FileInputStream/$ acquired by call to @@FileInputStream(...)/@ is not released", "steps": [{"line": 36, "source": "java.io.FileInputStream", "filepath": "presto-cli/src/main/java/com/facebook/presto/cli/KeyReader.java", "methodName": "int KeyReader.readKey()", "exampleID": 17}], "line_number": 36, "records": [], "combined_records": [], "infer_explore": [{"level": 0, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/KeyReader.java", "line_number": 29, "column_number": -1, "description": "start of procedure readKey()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "int KeyReader.readKey()"}, {"tag": "name_id", "value": "com.facebook.presto.cli.KeyReader.readKey():int.2468e81731148cec96979d899ffd1554"}], "snippet": "26. \n27.     @SuppressWarnings(\"resource\")\n28. >     public static int readKey()\n29.     {\n30.         if (!hasTerminal()) {\n"}, {"level": 0, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/KeyReader.java", "line_number": 31, "column_number": -1, "description": "", "node_tags": [], "snippet": "28.     public static int readKey()\n29.     {\n30. >         if (!hasTerminal()) {\n31.             return -1;\n32.         }\n"}, {"level": 1, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/KeyReader.java", "line_number": 47, "column_number": -1, "description": "start of procedure hasTerminal()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "boolean KeyReader.hasTerminal()"}, {"tag": "name_id", "value": "com.facebook.presto.cli.KeyReader.hasTerminal():boolean.f774b5444ee01923f7ab476bafcbca80"}], "snippet": "44.     }\n45. \n46. >     private static boolean hasTerminal()\n47.     {\n48.         try {\n"}, {"level": 1, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/KeyReader.java", "line_number": 50, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "47.     {\n48.         try {\n49. >             return isatty(STDIN_FILENO) == 1;\n50.         }\n51.         catch (Throwable e) {\n"}, {"level": 1, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/KeyReader.java", "line_number": 53, "column_number": -1, "description": "return from a call to boolean KeyReader.hasTerminal()", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "boolean KeyReader.hasTerminal()"}, {"tag": "name_id", "value": "com.facebook.presto.cli.KeyReader.hasTerminal():boolean.f774b5444ee01923f7ab476bafcbca80"}], "snippet": "50.         }\n51.         catch (Throwable e) {\n52. >             return false;\n53.         }\n54.     }\n"}, {"level": 0, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/KeyReader.java", "line_number": 31, "column_number": -1, "description": "Taking false branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "false"}], "snippet": "28.     public static int readKey()\n29.     {\n30. >         if (!hasTerminal()) {\n31.             return -1;\n32.         }\n"}, {"level": 0, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/KeyReader.java", "line_number": 36, "column_number": -1, "description": "", "node_tags": [], "snippet": "33. \n34.         try {\n35. >             InputStream in = new FileInputStream(FileDescriptor.in);\n36.             if (in.available() > 0) {\n37.                 return in.read();\n"}, {"level": 0, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/KeyReader.java", "line_number": 37, "column_number": -1, "description": "exception java.io.IOException", "node_tags": [{"tag": "name", "value": "java.io.IOException"}, {"tag": "kind", "value": "exception"}], "snippet": "34.         try {\n35.             InputStream in = new FileInputStream(FileDescriptor.in);\n36. >             if (in.available() > 0) {\n37.                 return in.read();\n38.             }\n"}, {"level": 0, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/KeyReader.java", "line_number": 41, "column_number": -1, "description": "", "node_tags": [], "snippet": "38.             }\n39.         }\n40. >         catch (IOException e) {\n41.             // ignore errors reading keyboard input\n42.         }\n"}]}, {"url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/test/java/com/facebook/presto/cli/TestCsvPrinter.java", "rawCode": "/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage com.facebook.presto.cli;\n\nimport com.google.common.collect.ImmutableList;\nimport org.testng.annotations.Test;\n\nimport java.io.IOException;\nimport java.io.StringWriter;\nimport java.util.List;\n\nimport static com.facebook.presto.cli.TestAlignedTablePrinter.row;\nimport static com.facebook.presto.cli.TestAlignedTablePrinter.rows;\nimport static org.testng.Assert.assertEquals;\n\npublic class TestCsvPrinter\n{\n    @Test\n    public void testCsvPrinting()\n            throws Exception\n    {\n        StringWriter writer = new StringWriter();\n        List<String> fieldNames = ImmutableList.of(\"first\", \"last\", \"quantity\");\n        OutputPrinter printer = new CsvPrinter(fieldNames, writer, true);\n\n        printer.printRows(rows(\n                row(\"hello\", \"world\", 123),\n                row(\"a\", null, 4.5),\n                row(\"some long\\ntext that\\ndoes not\\nfit on\\none line\", \"more\\ntext\", 4567),\n                row(\"bye\", \"done\", -15)),\n                true);\n        printer.finish();\n\n        String expected = \"\" +\n                \"\\\"first\\\",\\\"last\\\",\\\"quantity\\\"\\n\" +\n                \"\\\"hello\\\",\\\"world\\\",\\\"123\\\"\\n\" +\n                \"\\\"a\\\",\\\"\\\",\\\"4.5\\\"\\n\" +\n                \"\\\"some long\\n\" +\n                \"text that\\n\" +\n                \"does not\\n\" +\n                \"fit on\\n\" +\n                \"one line\\\",\\\"more\\n\" +\n                \"text\\\",\\\"4567\\\"\\n\" +\n                \"\\\"bye\\\",\\\"done\\\",\\\"-15\\\"\\n\";\n\n        assertEquals(writer.getBuffer().toString(), expected);\n    }\n\n    @Test\n    public void testCsvPrintingNoRows()\n            throws Exception\n    {\n        StringWriter writer = new StringWriter();\n        List<String> fieldNames = ImmutableList.of(\"first\", \"last\");\n        OutputPrinter printer = new CsvPrinter(fieldNames, writer, true);\n\n        printer.finish();\n\n        assertEquals(writer.getBuffer().toString(), \"\\\"first\\\",\\\"last\\\"\\n\");\n    }\n\n    @Test\n    public void testCsvPrintingNoHeader()\n            throws Exception\n    {\n        StringWriter writer = new StringWriter();\n        List<String> fieldNames = ImmutableList.of(\"first\", \"last\", \"quantity\");\n        OutputPrinter printer = new CsvPrinter(fieldNames, writer, false);\n\n        printer.printRows(rows(\n                row(\"hello\", \"world\", 123),\n                row(\"a\", null, 4.5)),\n                true);\n        printer.finish();\n\n        String expected = \"\" +\n                \"\\\"hello\\\",\\\"world\\\",\\\"123\\\"\\n\" +\n                \"\\\"a\\\",\\\"\\\",\\\"4.5\\\"\\n\";\n\n        assertEquals(writer.getBuffer().toString(), expected);\n    }\n\n    @Test\n    public void testCsvVarbinaryPrinting()\n            throws IOException\n    {\n        StringWriter writer = new StringWriter();\n        List<String> fieldNames = ImmutableList.of(\"first\", \"last\", \"quantity\");\n        OutputPrinter printer = new CsvPrinter(fieldNames, writer, false);\n\n        printer.printRows(rows(row(\"hello\".getBytes(), null, 123)), true);\n        printer.finish();\n\n        String expected = \"\\\"68 65 6c 6c 6f\\\",\\\"\\\",\\\"123\\\"\\n\";\n\n        assertEquals(writer.getBuffer().toString(), expected);\n    }\n}\n", "methodName": "void TestCsvPrinter.testCsvPrinting()", "exampleID": 18, "dataset": "infer", "filepath": "presto-cli/src/test/java/com/facebook/presto/cli/TestCsvPrinter.java", "source": "au.com.bytecode.opencsv.CSVWriter", "sourceLine": 35, "qualifier": "Resource of type $$au.com.bytecode.opencsv.CSVWriter/$ acquired by call to @@CsvPrinter(...)/@ is not released", "steps": [{"line": 34, "source": "au.com.bytecode.opencsv.CSVWriter", "filepath": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "methodName": "CsvPrinter.CsvPrinter", "exampleID": 19}], "line_number": 35, "records": [{"level": 1, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 34, "column_number": -1, "description": "start of procedure CsvPrinter(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "CsvPrinter.<init>(List,StringWriter,boolean)"}, {"tag": "name_id", "value": "com.facebook.presto.cli.CsvPrinter.<init>(java.util.List,java.io.StringWriter,boolean).a2c7cdc3d30ee46851a0c1556bdf6097"}], "snippet": "    public CsvPrinter(List<String> fieldNames, Writer writer, boolean header)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "methodName": "CsvPrinter"}, {"level": 1, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 35, "column_number": -1, "description": "", "node_tags": [], "snippet": "    {", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "methodName": "CsvPrinter"}, {"level": 1, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 36, "column_number": -1, "description": "Skipping requireNonNull(...): unknown method", "node_tags": [], "snippet": "        requireNonNull(fieldNames, \"fieldNames is null\");", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "methodName": "CsvPrinter"}, {"level": 1, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 37, "column_number": -1, "description": "Skipping requireNonNull(...): unknown method", "node_tags": [], "snippet": "        requireNonNull(writer, \"writer is null\");", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "methodName": "CsvPrinter"}, {"level": 1, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 38, "column_number": -1, "description": "", "node_tags": [], "snippet": "        this.fieldNames = ImmutableList.copyOf(fieldNames);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "methodName": "CsvPrinter"}, {"level": 1, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 39, "column_number": -1, "description": "", "node_tags": [], "snippet": "        this.writer = new CSVWriter(writer);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "methodName": "CsvPrinter"}, {"level": 1, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 40, "column_number": -1, "description": "", "node_tags": [], "snippet": "        this.needHeader = header;", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "methodName": "CsvPrinter"}, {"level": 1, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 41, "column_number": -1, "description": "return from a call to CsvPrinter.<init>(List,StringWriter,boolean)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "CsvPrinter.<init>(List,StringWriter,boolean)"}, {"tag": "name_id", "value": "com.facebook.presto.cli.CsvPrinter.<init>(java.util.List,java.io.StringWriter,boolean).a2c7cdc3d30ee46851a0c1556bdf6097"}], "snippet": "    }", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "methodName": "CsvPrinter"}, {"level": 1, "filename": "presto-cli/src/test/java/com/facebook/presto/cli/TestAlignedTablePrinter.java", "line_number": 156, "column_number": -1, "description": "start of procedure row(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "List TestAlignedTablePrinter.row(java.lang.Object[])"}, {"tag": "name_id", "value": "com.facebook.presto.cli.TestAlignedTablePrinter.row(java.lang.Object[]):java.util.List.65820bb178087f629412a2d0afe20b57"}], "snippet": "    static List<?> row(Object... values)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/test/java/com/facebook/presto/cli/TestAlignedTablePrinter.java", "methodName": "row"}, {"level": 1, "filename": "presto-cli/src/test/java/com/facebook/presto/cli/TestAlignedTablePrinter.java", "line_number": 158, "column_number": -1, "description": "return from a call to List TestAlignedTablePrinter.row(java.lang.Object[])", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "List TestAlignedTablePrinter.row(java.lang.Object[])"}, {"tag": "name_id", "value": "com.facebook.presto.cli.TestAlignedTablePrinter.row(java.lang.Object[]):java.util.List.65820bb178087f629412a2d0afe20b57"}], "snippet": "        return asList(values);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/test/java/com/facebook/presto/cli/TestAlignedTablePrinter.java", "methodName": "row"}, {"level": 1, "filename": "presto-cli/src/test/java/com/facebook/presto/cli/TestAlignedTablePrinter.java", "line_number": 156, "column_number": -1, "description": "start of procedure row(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "List TestAlignedTablePrinter.row(java.lang.Object[])"}, {"tag": "name_id", "value": "com.facebook.presto.cli.TestAlignedTablePrinter.row(java.lang.Object[]):java.util.List.65820bb178087f629412a2d0afe20b57"}], "snippet": "    static List<?> row(Object... values)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/test/java/com/facebook/presto/cli/TestAlignedTablePrinter.java", "methodName": "row"}, {"level": 1, "filename": "presto-cli/src/test/java/com/facebook/presto/cli/TestAlignedTablePrinter.java", "line_number": 158, "column_number": -1, "description": "return from a call to List TestAlignedTablePrinter.row(java.lang.Object[])", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "List TestAlignedTablePrinter.row(java.lang.Object[])"}, {"tag": "name_id", "value": "com.facebook.presto.cli.TestAlignedTablePrinter.row(java.lang.Object[]):java.util.List.65820bb178087f629412a2d0afe20b57"}], "snippet": "        return asList(values);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/test/java/com/facebook/presto/cli/TestAlignedTablePrinter.java", "methodName": "row"}, {"level": 1, "filename": "presto-cli/src/test/java/com/facebook/presto/cli/TestAlignedTablePrinter.java", "line_number": 156, "column_number": -1, "description": "start of procedure row(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "List TestAlignedTablePrinter.row(java.lang.Object[])"}, {"tag": "name_id", "value": "com.facebook.presto.cli.TestAlignedTablePrinter.row(java.lang.Object[]):java.util.List.65820bb178087f629412a2d0afe20b57"}], "snippet": "    static List<?> row(Object... values)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/test/java/com/facebook/presto/cli/TestAlignedTablePrinter.java", "methodName": "row"}, {"level": 1, "filename": "presto-cli/src/test/java/com/facebook/presto/cli/TestAlignedTablePrinter.java", "line_number": 158, "column_number": -1, "description": "return from a call to List TestAlignedTablePrinter.row(java.lang.Object[])", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "List TestAlignedTablePrinter.row(java.lang.Object[])"}, {"tag": "name_id", "value": "com.facebook.presto.cli.TestAlignedTablePrinter.row(java.lang.Object[]):java.util.List.65820bb178087f629412a2d0afe20b57"}], "snippet": "        return asList(values);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/test/java/com/facebook/presto/cli/TestAlignedTablePrinter.java", "methodName": "row"}, {"level": 1, "filename": "presto-cli/src/test/java/com/facebook/presto/cli/TestAlignedTablePrinter.java", "line_number": 156, "column_number": -1, "description": "start of procedure row(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "List TestAlignedTablePrinter.row(java.lang.Object[])"}, {"tag": "name_id", "value": "com.facebook.presto.cli.TestAlignedTablePrinter.row(java.lang.Object[]):java.util.List.65820bb178087f629412a2d0afe20b57"}], "snippet": "    static List<?> row(Object... values)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/test/java/com/facebook/presto/cli/TestAlignedTablePrinter.java", "methodName": "row"}, {"level": 1, "filename": "presto-cli/src/test/java/com/facebook/presto/cli/TestAlignedTablePrinter.java", "line_number": 158, "column_number": -1, "description": "return from a call to List TestAlignedTablePrinter.row(java.lang.Object[])", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "List TestAlignedTablePrinter.row(java.lang.Object[])"}, {"tag": "name_id", "value": "com.facebook.presto.cli.TestAlignedTablePrinter.row(java.lang.Object[]):java.util.List.65820bb178087f629412a2d0afe20b57"}], "snippet": "        return asList(values);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/test/java/com/facebook/presto/cli/TestAlignedTablePrinter.java", "methodName": "row"}, {"level": 1, "filename": "presto-cli/src/test/java/com/facebook/presto/cli/TestAlignedTablePrinter.java", "line_number": 163, "column_number": -1, "description": "start of procedure rows(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "List TestAlignedTablePrinter.rows(java.util.List[])"}, {"tag": "name_id", "value": "com.facebook.presto.cli.TestAlignedTablePrinter.rows(java.util.List[]):java.util.List.7236681773625b781a7b11791e975f7c"}], "snippet": "        return asList(rows);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/test/java/com/facebook/presto/cli/TestAlignedTablePrinter.java", "methodName": "rows"}, {"level": 1, "filename": "presto-cli/src/test/java/com/facebook/presto/cli/TestAlignedTablePrinter.java", "line_number": 163, "column_number": -1, "description": "return from a call to List TestAlignedTablePrinter.rows(java.util.List[])", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "List TestAlignedTablePrinter.rows(java.util.List[])"}, {"tag": "name_id", "value": "com.facebook.presto.cli.TestAlignedTablePrinter.rows(java.util.List[]):java.util.List.7236681773625b781a7b11791e975f7c"}], "snippet": "        return asList(rows);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/test/java/com/facebook/presto/cli/TestAlignedTablePrinter.java", "methodName": "rows"}, {"level": 1, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 44, "column_number": -1, "description": "start of procedure printRows(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void CsvPrinter.printRows(List,boolean)"}, {"tag": "name_id", "value": "com.facebook.presto.cli.CsvPrinter.printRows(java.util.List,boolean):void.cc86b2d35da0a7c58836393e6a4cc562"}], "snippet": "    public void printRows(List<List<?>> rows, boolean complete)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "methodName": "printRows"}, {"level": 1, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 47, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "        if (needHeader) {", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "methodName": "printRows"}, {"level": 1, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 48, "column_number": -1, "description": "", "node_tags": [], "snippet": "            needHeader = false;", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "methodName": "printRows"}, {"level": 1, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 49, "column_number": -1, "description": "Skipping toStrings(...): empty list of specs", "node_tags": [], "snippet": "            writer.writeNext(toStrings(fieldNames));", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "methodName": "printRows"}, {"level": 2, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 75, "column_number": -1, "description": "Definition of toStrings(...)", "node_tags": [], "snippet": "    private static String[] toStrings(List<?> values)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "methodName": "toStrings"}, {"level": 1, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 49, "column_number": -1, "description": "Skipping writeNext(...): unknown method", "node_tags": [], "snippet": "            writer.writeNext(toStrings(fieldNames));", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "methodName": "toStrings"}, {"level": 1, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 52, "column_number": -1, "description": "Taking false branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "false"}], "snippet": "        for (List<?> row : rows) {", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "methodName": "toStrings"}, {"level": 1, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 56, "column_number": -1, "description": "return from a call to void CsvPrinter.printRows(List,boolean)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "void CsvPrinter.printRows(List,boolean)"}, {"tag": "name_id", "value": "com.facebook.presto.cli.CsvPrinter.printRows(java.util.List,boolean):void.cc86b2d35da0a7c58836393e6a4cc562"}], "snippet": "    }", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "methodName": "toStrings"}, {"level": 1, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 59, "column_number": -1, "description": "start of procedure finish()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void CsvPrinter.finish()"}, {"tag": "name_id", "value": "com.facebook.presto.cli.CsvPrinter.finish():void.0478359c1c40bc46a672c0a0f1f39e92"}], "snippet": "    public void finish()", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "methodName": "finish"}, {"level": 1, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 62, "column_number": -1, "description": "", "node_tags": [], "snippet": "        printRows(ImmutableList.of(), true);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "methodName": "finish"}, {"level": 2, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 44, "column_number": -1, "description": "start of procedure printRows(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void CsvPrinter.printRows(ImmutableList,boolean)"}, {"tag": "name_id", "value": "com.facebook.presto.cli.CsvPrinter.printRows(com.google.common.collect.ImmutableList,boolean):void.12671130e91b1b31c2be323ac015f73d"}], "snippet": "    public void printRows(List<List<?>> rows, boolean complete)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "methodName": "printRows"}, {"level": 2, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 47, "column_number": -1, "description": "Taking false branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "false"}], "snippet": "        if (needHeader) {", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "methodName": "printRows"}, {"level": 2, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 52, "column_number": -1, "description": "Taking false branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "false"}], "snippet": "        for (List<?> row : rows) {", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "methodName": "printRows"}, {"level": 2, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 56, "column_number": -1, "description": "return from a call to void CsvPrinter.printRows(ImmutableList,boolean)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "void CsvPrinter.printRows(ImmutableList,boolean)"}, {"tag": "name_id", "value": "com.facebook.presto.cli.CsvPrinter.printRows(com.google.common.collect.ImmutableList,boolean):void.12671130e91b1b31c2be323ac015f73d"}], "snippet": "    }", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "methodName": "printRows"}, {"level": 1, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 63, "column_number": -1, "description": "Skipping flush(): unknown method", "node_tags": [], "snippet": "        writer.flush();", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "methodName": "finish"}, {"level": 1, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 64, "column_number": -1, "description": "", "node_tags": [], "snippet": "        checkError();", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "methodName": "finish"}, {"level": 2, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 70, "column_number": -1, "description": "start of procedure checkError()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void CsvPrinter.checkError()"}, {"tag": "name_id", "value": "com.facebook.presto.cli.CsvPrinter.checkError():void.55af11816780d6366ac0cb9d0e93f9da"}], "snippet": "        if (writer.checkError()) {", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "methodName": "checkError"}, {"level": 2, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 70, "column_number": -1, "description": "Taking false branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "false"}], "snippet": "        if (writer.checkError()) {", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "methodName": "checkError"}, {"level": 2, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 73, "column_number": -1, "description": "return from a call to void CsvPrinter.checkError()", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "void CsvPrinter.checkError()"}, {"tag": "name_id", "value": "com.facebook.presto.cli.CsvPrinter.checkError():void.55af11816780d6366ac0cb9d0e93f9da"}], "snippet": "    }", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "methodName": "checkError"}, {"level": 1, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 65, "column_number": -1, "description": "return from a call to void CsvPrinter.finish()", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "void CsvPrinter.finish()"}, {"tag": "name_id", "value": "com.facebook.presto.cli.CsvPrinter.finish():void.0478359c1c40bc46a672c0a0f1f39e92"}], "snippet": "    }", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "methodName": "finish"}], "combined_records": [{"level": 1, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 41, "column_number": -1, "description": "start of procedure CsvPrinter(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "CsvPrinter.<init>(List,StringWriter,boolean)"}, {"tag": "name_id", "value": "com.facebook.presto.cli.CsvPrinter.<init>(java.util.List,java.io.StringWriter,boolean).a2c7cdc3d30ee46851a0c1556bdf6097"}], "snippet": "32.\n33.    public CsvPrinter(List<String> fieldNames, Writer writer, boolean header)\n34.>     {\n35.>         requireNonNull(fieldNames, \"fieldNames is null\");\n36.>         requireNonNull(writer, \"writer is null\");\n37.>         this.fieldNames = ImmutableList.copyOf(fieldNames);\n38.>         this.writer = new CSVWriter(writer);\n39.>         this.needHeader = header;\n40.    }\n41.> \n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "methodName": "CsvPrinter", "line_numbers": [34, 35, 36, 37, 38, 39, 40, 41]}, {"level": 1, "filename": "presto-cli/src/test/java/com/facebook/presto/cli/TestAlignedTablePrinter.java", "line_number": 158, "column_number": -1, "description": "start of procedure row(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "List TestAlignedTablePrinter.row(java.lang.Object[])"}, {"tag": "name_id", "value": "com.facebook.presto.cli.TestAlignedTablePrinter.row(java.lang.Object[]):java.util.List.65820bb178087f629412a2d0afe20b57"}], "snippet": "154.\n155.    static List<?> row(Object... values)\n156.>     {\n157.        return asList(values);\n158.    }\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/test/java/com/facebook/presto/cli/TestAlignedTablePrinter.java", "methodName": "row", "line_numbers": [156, 158, 156, 158, 156, 158, 156, 158]}, {"level": 1, "filename": "presto-cli/src/test/java/com/facebook/presto/cli/TestAlignedTablePrinter.java", "line_number": 163, "column_number": -1, "description": "start of procedure rows(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "List TestAlignedTablePrinter.rows(java.util.List[])"}, {"tag": "name_id", "value": "com.facebook.presto.cli.TestAlignedTablePrinter.rows(java.util.List[]):java.util.List.7236681773625b781a7b11791e975f7c"}], "snippet": "161.    {\n162.        return asList(rows);\n163.    }\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/test/java/com/facebook/presto/cli/TestAlignedTablePrinter.java", "methodName": "rows", "line_numbers": [163, 163]}, {"level": 1, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 49, "column_number": -1, "description": "start of procedure printRows(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void CsvPrinter.printRows(List,boolean)"}, {"tag": "name_id", "value": "com.facebook.presto.cli.CsvPrinter.printRows(java.util.List,boolean):void.cc86b2d35da0a7c58836393e6a4cc562"}], "snippet": "42.    @Override\n43.    public void printRows(List<List<?>> rows, boolean complete)\n44.>             throws IOException\n45.    {\n46.        if (needHeader) {\n47.>             needHeader = false;\n48.>             writer.writeNext(toStrings(fieldNames));\n49.        }\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "methodName": "printRows", "line_numbers": [44, 47, 48, 49]}, {"level": 2, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 75, "column_number": -1, "description": "Definition of toStrings(...)", "node_tags": [], "snippet": "73.\n74.    private static String[] toStrings(List<?> values)\n75.>     {\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "methodName": "toStrings", "line_numbers": [75]}, {"level": 1, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 56, "column_number": -1, "description": "Skipping writeNext(...): unknown method", "node_tags": [], "snippet": "47.            needHeader = false;\n48.            writer.writeNext(toStrings(fieldNames));\n49.        }\n50.\n51.        for (List<?> row : rows) {\n52.>             writer.writeNext(toStrings(row));\n53.            checkError();\n54.        }\n55.    }\n56.> \n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "methodName": "toStrings", "line_numbers": [49, 52, 56]}, {"level": 1, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 62, "column_number": -1, "description": "start of procedure finish()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void CsvPrinter.finish()"}, {"tag": "name_id", "value": "com.facebook.presto.cli.CsvPrinter.finish():void.0478359c1c40bc46a672c0a0f1f39e92"}], "snippet": "57.    @Override\n58.    public void finish()\n59.>             throws IOException\n60.    {\n61.        printRows(ImmutableList.of(), true);\n62.>         writer.flush();\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "methodName": "finish", "line_numbers": [59, 62]}, {"level": 2, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 56, "column_number": -1, "description": "start of procedure printRows(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void CsvPrinter.printRows(ImmutableList,boolean)"}, {"tag": "name_id", "value": "com.facebook.presto.cli.CsvPrinter.printRows(com.google.common.collect.ImmutableList,boolean):void.12671130e91b1b31c2be323ac015f73d"}], "snippet": "42.    @Override\n43.    public void printRows(List<List<?>> rows, boolean complete)\n44.>             throws IOException\n45.    {\n46.        if (needHeader) {\n47.>             needHeader = false;\n48.            writer.writeNext(toStrings(fieldNames));\n49.        }\n50.\n51.        for (List<?> row : rows) {\n52.>             writer.writeNext(toStrings(row));\n53.            checkError();\n54.        }\n55.    }\n56.> \n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "methodName": "printRows", "line_numbers": [44, 47, 52, 56]}, {"level": 1, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 64, "column_number": -1, "description": "Skipping flush(): unknown method", "node_tags": [], "snippet": "61.        printRows(ImmutableList.of(), true);\n62.        writer.flush();\n63.>         checkError();\n64.    }\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "methodName": "finish", "line_numbers": [63, 64]}, {"level": 2, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 73, "column_number": -1, "description": "start of procedure checkError()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void CsvPrinter.checkError()"}, {"tag": "name_id", "value": "com.facebook.presto.cli.CsvPrinter.checkError():void.55af11816780d6366ac0cb9d0e93f9da"}], "snippet": "68.    {\n69.        if (writer.checkError()) {\n70.>             throw new IOException(\"error writing to output\");\n71.        }\n72.    }\n73.> \n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "methodName": "checkError", "line_numbers": [70, 70, 73]}, {"level": 1, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 65, "column_number": -1, "description": "return from a call to void CsvPrinter.finish()", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "void CsvPrinter.finish()"}, {"tag": "name_id", "value": "com.facebook.presto.cli.CsvPrinter.finish():void.0478359c1c40bc46a672c0a0f1f39e92"}], "snippet": "63.        checkError();\n64.    }\n65.> \n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "methodName": "finish", "line_numbers": [65]}], "infer_explore": [{"level": 0, "filename": "presto-cli/src/test/java/com/facebook/presto/cli/TestCsvPrinter.java", "line_number": 30, "column_number": -1, "description": "start of procedure testCsvPrinting()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void TestCsvPrinter.testCsvPrinting()"}, {"tag": "name_id", "value": "com.facebook.presto.cli.TestCsvPrinter.testCsvPrinting():void.47ad415e2b5a4adfb639f978ad2aae44"}], "snippet": "27. {\n28.     @Test\n29. >     public void testCsvPrinting()\n30.             throws Exception\n31.     {\n"}, {"level": 0, "filename": "presto-cli/src/test/java/com/facebook/presto/cli/TestCsvPrinter.java", "line_number": 33, "column_number": -1, "description": "", "node_tags": [], "snippet": "30.             throws Exception\n31.     {\n32. >         StringWriter writer = new StringWriter();\n33.         List<String> fieldNames = ImmutableList.of(\"first\", \"last\", \"quantity\");\n34.         OutputPrinter printer = new CsvPrinter(fieldNames, writer, true);\n"}, {"level": 0, "filename": "presto-cli/src/test/java/com/facebook/presto/cli/TestCsvPrinter.java", "line_number": 34, "column_number": -1, "description": "Skipping of(...): unknown method", "node_tags": [], "snippet": "31.     {\n32.         StringWriter writer = new StringWriter();\n33. >         List<String> fieldNames = ImmutableList.of(\"first\", \"last\", \"quantity\");\n34.         OutputPrinter printer = new CsvPrinter(fieldNames, writer, true);\n35. \n"}, {"level": 0, "filename": "presto-cli/src/test/java/com/facebook/presto/cli/TestCsvPrinter.java", "line_number": 35, "column_number": -1, "description": "", "node_tags": [], "snippet": "32.         StringWriter writer = new StringWriter();\n33.         List<String> fieldNames = ImmutableList.of(\"first\", \"last\", \"quantity\");\n34. >         OutputPrinter printer = new CsvPrinter(fieldNames, writer, true);\n35. \n36.         printer.printRows(rows(\n"}, {"level": 1, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 34, "column_number": -1, "description": "start of procedure CsvPrinter(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "CsvPrinter.<init>(List,StringWriter,boolean)"}, {"tag": "name_id", "value": "com.facebook.presto.cli.CsvPrinter.<init>(java.util.List,java.io.StringWriter,boolean).a2c7cdc3d30ee46851a0c1556bdf6097"}], "snippet": "31.     private boolean needHeader;\n32. \n33. >     public CsvPrinter(List<String> fieldNames, Writer writer, boolean header)\n34.     {\n35.         requireNonNull(fieldNames, \"fieldNames is null\");\n"}, {"level": 1, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 35, "column_number": -1, "description": "", "node_tags": [], "snippet": "32. \n33.     public CsvPrinter(List<String> fieldNames, Writer writer, boolean header)\n34. >     {\n35.         requireNonNull(fieldNames, \"fieldNames is null\");\n36.         requireNonNull(writer, \"writer is null\");\n"}, {"level": 1, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 36, "column_number": -1, "description": "Skipping requireNonNull(...): unknown method", "node_tags": [], "snippet": "33.     public CsvPrinter(List<String> fieldNames, Writer writer, boolean header)\n34.     {\n35. >         requireNonNull(fieldNames, \"fieldNames is null\");\n36.         requireNonNull(writer, \"writer is null\");\n37.         this.fieldNames = ImmutableList.copyOf(fieldNames);\n"}, {"level": 1, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 37, "column_number": -1, "description": "Skipping requireNonNull(...): unknown method", "node_tags": [], "snippet": "34.     {\n35.         requireNonNull(fieldNames, \"fieldNames is null\");\n36. >         requireNonNull(writer, \"writer is null\");\n37.         this.fieldNames = ImmutableList.copyOf(fieldNames);\n38.         this.writer = new CSVWriter(writer);\n"}, {"level": 1, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 38, "column_number": -1, "description": "", "node_tags": [], "snippet": "35.         requireNonNull(fieldNames, \"fieldNames is null\");\n36.         requireNonNull(writer, \"writer is null\");\n37. >         this.fieldNames = ImmutableList.copyOf(fieldNames);\n38.         this.writer = new CSVWriter(writer);\n39.         this.needHeader = header;\n"}, {"level": 1, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 39, "column_number": -1, "description": "", "node_tags": [], "snippet": "36.         requireNonNull(writer, \"writer is null\");\n37.         this.fieldNames = ImmutableList.copyOf(fieldNames);\n38. >         this.writer = new CSVWriter(writer);\n39.         this.needHeader = header;\n40.     }\n"}, {"level": 1, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 40, "column_number": -1, "description": "", "node_tags": [], "snippet": "37.         this.fieldNames = ImmutableList.copyOf(fieldNames);\n38.         this.writer = new CSVWriter(writer);\n39. >         this.needHeader = header;\n40.     }\n41. \n"}, {"level": 1, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 41, "column_number": -1, "description": "return from a call to CsvPrinter.<init>(List,StringWriter,boolean)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "CsvPrinter.<init>(List,StringWriter,boolean)"}, {"tag": "name_id", "value": "com.facebook.presto.cli.CsvPrinter.<init>(java.util.List,java.io.StringWriter,boolean).a2c7cdc3d30ee46851a0c1556bdf6097"}], "snippet": "38.         this.writer = new CSVWriter(writer);\n39.         this.needHeader = header;\n40. >     }\n41. \n42.     @Override\n"}, {"level": 0, "filename": "presto-cli/src/test/java/com/facebook/presto/cli/TestCsvPrinter.java", "line_number": 37, "column_number": -1, "description": "", "node_tags": [], "snippet": "34.         OutputPrinter printer = new CsvPrinter(fieldNames, writer, true);\n35. \n36. >         printer.printRows(rows(\n37.                 row(\"hello\", \"world\", 123),\n38.                 row(\"a\", null, 4.5),\n"}, {"level": 0, "filename": "presto-cli/src/test/java/com/facebook/presto/cli/TestCsvPrinter.java", "line_number": 38, "column_number": -1, "description": "", "node_tags": [], "snippet": "35. \n36.         printer.printRows(rows(\n37. >                 row(\"hello\", \"world\", 123),\n38.                 row(\"a\", null, 4.5),\n39.                 row(\"some long\\ntext that\\ndoes not\\nfit on\\none line\", \"more\\ntext\", 4567),\n"}, {"level": 1, "filename": "presto-cli/src/test/java/com/facebook/presto/cli/TestAlignedTablePrinter.java", "line_number": 156, "column_number": -1, "description": "start of procedure row(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "List TestAlignedTablePrinter.row(java.lang.Object[])"}, {"tag": "name_id", "value": "com.facebook.presto.cli.TestAlignedTablePrinter.row(java.lang.Object[]):java.util.List.65820bb178087f629412a2d0afe20b57"}], "snippet": "153.     }\n154. \n155. >     static List<?> row(Object... values)\n156.     {\n157.         return asList(values);\n"}, {"level": 1, "filename": "presto-cli/src/test/java/com/facebook/presto/cli/TestAlignedTablePrinter.java", "line_number": 158, "column_number": -1, "description": "return from a call to List TestAlignedTablePrinter.row(java.lang.Object[])", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "List TestAlignedTablePrinter.row(java.lang.Object[])"}, {"tag": "name_id", "value": "com.facebook.presto.cli.TestAlignedTablePrinter.row(java.lang.Object[]):java.util.List.65820bb178087f629412a2d0afe20b57"}], "snippet": "155.     static List<?> row(Object... values)\n156.     {\n157. >         return asList(values);\n158.     }\n159. \n"}, {"level": 0, "filename": "presto-cli/src/test/java/com/facebook/presto/cli/TestCsvPrinter.java", "line_number": 38, "column_number": -1, "description": "", "node_tags": [], "snippet": "35. \n36.         printer.printRows(rows(\n37. >                 row(\"hello\", \"world\", 123),\n38.                 row(\"a\", null, 4.5),\n39.                 row(\"some long\\ntext that\\ndoes not\\nfit on\\none line\", \"more\\ntext\", 4567),\n"}, {"level": 0, "filename": "presto-cli/src/test/java/com/facebook/presto/cli/TestCsvPrinter.java", "line_number": 39, "column_number": -1, "description": "", "node_tags": [], "snippet": "36.         printer.printRows(rows(\n37.                 row(\"hello\", \"world\", 123),\n38. >                 row(\"a\", null, 4.5),\n39.                 row(\"some long\\ntext that\\ndoes not\\nfit on\\none line\", \"more\\ntext\", 4567),\n40.                 row(\"bye\", \"done\", -15)),\n"}, {"level": 1, "filename": "presto-cli/src/test/java/com/facebook/presto/cli/TestAlignedTablePrinter.java", "line_number": 156, "column_number": -1, "description": "start of procedure row(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "List TestAlignedTablePrinter.row(java.lang.Object[])"}, {"tag": "name_id", "value": "com.facebook.presto.cli.TestAlignedTablePrinter.row(java.lang.Object[]):java.util.List.65820bb178087f629412a2d0afe20b57"}], "snippet": "153.     }\n154. \n155. >     static List<?> row(Object... values)\n156.     {\n157.         return asList(values);\n"}, {"level": 1, "filename": "presto-cli/src/test/java/com/facebook/presto/cli/TestAlignedTablePrinter.java", "line_number": 158, "column_number": -1, "description": "return from a call to List TestAlignedTablePrinter.row(java.lang.Object[])", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "List TestAlignedTablePrinter.row(java.lang.Object[])"}, {"tag": "name_id", "value": "com.facebook.presto.cli.TestAlignedTablePrinter.row(java.lang.Object[]):java.util.List.65820bb178087f629412a2d0afe20b57"}], "snippet": "155.     static List<?> row(Object... values)\n156.     {\n157. >         return asList(values);\n158.     }\n159. \n"}, {"level": 0, "filename": "presto-cli/src/test/java/com/facebook/presto/cli/TestCsvPrinter.java", "line_number": 39, "column_number": -1, "description": "", "node_tags": [], "snippet": "36.         printer.printRows(rows(\n37.                 row(\"hello\", \"world\", 123),\n38. >                 row(\"a\", null, 4.5),\n39.                 row(\"some long\\ntext that\\ndoes not\\nfit on\\none line\", \"more\\ntext\", 4567),\n40.                 row(\"bye\", \"done\", -15)),\n"}, {"level": 0, "filename": "presto-cli/src/test/java/com/facebook/presto/cli/TestCsvPrinter.java", "line_number": 40, "column_number": -1, "description": "", "node_tags": [], "snippet": "37.                 row(\"hello\", \"world\", 123),\n38.                 row(\"a\", null, 4.5),\n39. >                 row(\"some long\\ntext that\\ndoes not\\nfit on\\none line\", \"more\\ntext\", 4567),\n40.                 row(\"bye\", \"done\", -15)),\n41.                 true);\n"}, {"level": 1, "filename": "presto-cli/src/test/java/com/facebook/presto/cli/TestAlignedTablePrinter.java", "line_number": 156, "column_number": -1, "description": "start of procedure row(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "List TestAlignedTablePrinter.row(java.lang.Object[])"}, {"tag": "name_id", "value": "com.facebook.presto.cli.TestAlignedTablePrinter.row(java.lang.Object[]):java.util.List.65820bb178087f629412a2d0afe20b57"}], "snippet": "153.     }\n154. \n155. >     static List<?> row(Object... values)\n156.     {\n157.         return asList(values);\n"}, {"level": 1, "filename": "presto-cli/src/test/java/com/facebook/presto/cli/TestAlignedTablePrinter.java", "line_number": 158, "column_number": -1, "description": "return from a call to List TestAlignedTablePrinter.row(java.lang.Object[])", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "List TestAlignedTablePrinter.row(java.lang.Object[])"}, {"tag": "name_id", "value": "com.facebook.presto.cli.TestAlignedTablePrinter.row(java.lang.Object[]):java.util.List.65820bb178087f629412a2d0afe20b57"}], "snippet": "155.     static List<?> row(Object... values)\n156.     {\n157. >         return asList(values);\n158.     }\n159. \n"}, {"level": 0, "filename": "presto-cli/src/test/java/com/facebook/presto/cli/TestCsvPrinter.java", "line_number": 40, "column_number": -1, "description": "", "node_tags": [], "snippet": "37.                 row(\"hello\", \"world\", 123),\n38.                 row(\"a\", null, 4.5),\n39. >                 row(\"some long\\ntext that\\ndoes not\\nfit on\\none line\", \"more\\ntext\", 4567),\n40.                 row(\"bye\", \"done\", -15)),\n41.                 true);\n"}, {"level": 0, "filename": "presto-cli/src/test/java/com/facebook/presto/cli/TestCsvPrinter.java", "line_number": 41, "column_number": -1, "description": "", "node_tags": [], "snippet": "38.                 row(\"a\", null, 4.5),\n39.                 row(\"some long\\ntext that\\ndoes not\\nfit on\\none line\", \"more\\ntext\", 4567),\n40. >                 row(\"bye\", \"done\", -15)),\n41.                 true);\n42.         printer.finish();\n"}, {"level": 1, "filename": "presto-cli/src/test/java/com/facebook/presto/cli/TestAlignedTablePrinter.java", "line_number": 156, "column_number": -1, "description": "start of procedure row(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "List TestAlignedTablePrinter.row(java.lang.Object[])"}, {"tag": "name_id", "value": "com.facebook.presto.cli.TestAlignedTablePrinter.row(java.lang.Object[]):java.util.List.65820bb178087f629412a2d0afe20b57"}], "snippet": "153.     }\n154. \n155. >     static List<?> row(Object... values)\n156.     {\n157.         return asList(values);\n"}, {"level": 1, "filename": "presto-cli/src/test/java/com/facebook/presto/cli/TestAlignedTablePrinter.java", "line_number": 158, "column_number": -1, "description": "return from a call to List TestAlignedTablePrinter.row(java.lang.Object[])", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "List TestAlignedTablePrinter.row(java.lang.Object[])"}, {"tag": "name_id", "value": "com.facebook.presto.cli.TestAlignedTablePrinter.row(java.lang.Object[]):java.util.List.65820bb178087f629412a2d0afe20b57"}], "snippet": "155.     static List<?> row(Object... values)\n156.     {\n157. >         return asList(values);\n158.     }\n159. \n"}, {"level": 0, "filename": "presto-cli/src/test/java/com/facebook/presto/cli/TestCsvPrinter.java", "line_number": 41, "column_number": -1, "description": "", "node_tags": [], "snippet": "38.                 row(\"a\", null, 4.5),\n39.                 row(\"some long\\ntext that\\ndoes not\\nfit on\\none line\", \"more\\ntext\", 4567),\n40. >                 row(\"bye\", \"done\", -15)),\n41.                 true);\n42.         printer.finish();\n"}, {"level": 0, "filename": "presto-cli/src/test/java/com/facebook/presto/cli/TestCsvPrinter.java", "line_number": 37, "column_number": -1, "description": "", "node_tags": [], "snippet": "34.         OutputPrinter printer = new CsvPrinter(fieldNames, writer, true);\n35. \n36. >         printer.printRows(rows(\n37.                 row(\"hello\", \"world\", 123),\n38.                 row(\"a\", null, 4.5),\n"}, {"level": 1, "filename": "presto-cli/src/test/java/com/facebook/presto/cli/TestAlignedTablePrinter.java", "line_number": 163, "column_number": -1, "description": "start of procedure rows(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "List TestAlignedTablePrinter.rows(java.util.List[])"}, {"tag": "name_id", "value": "com.facebook.presto.cli.TestAlignedTablePrinter.rows(java.util.List[]):java.util.List.7236681773625b781a7b11791e975f7c"}], "snippet": "160.     static List<List<?>> rows(List<?>... rows)\n161.     {\n162. >         return asList(rows);\n163.     }\n164. \n"}, {"level": 1, "filename": "presto-cli/src/test/java/com/facebook/presto/cli/TestAlignedTablePrinter.java", "line_number": 163, "column_number": -1, "description": "return from a call to List TestAlignedTablePrinter.rows(java.util.List[])", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "List TestAlignedTablePrinter.rows(java.util.List[])"}, {"tag": "name_id", "value": "com.facebook.presto.cli.TestAlignedTablePrinter.rows(java.util.List[]):java.util.List.7236681773625b781a7b11791e975f7c"}], "snippet": "160.     static List<List<?>> rows(List<?>... rows)\n161.     {\n162. >         return asList(rows);\n163.     }\n164. \n"}, {"level": 0, "filename": "presto-cli/src/test/java/com/facebook/presto/cli/TestCsvPrinter.java", "line_number": 37, "column_number": -1, "description": "", "node_tags": [], "snippet": "34.         OutputPrinter printer = new CsvPrinter(fieldNames, writer, true);\n35. \n36. >         printer.printRows(rows(\n37.                 row(\"hello\", \"world\", 123),\n38.                 row(\"a\", null, 4.5),\n"}, {"level": 1, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 44, "column_number": -1, "description": "start of procedure printRows(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void CsvPrinter.printRows(List,boolean)"}, {"tag": "name_id", "value": "com.facebook.presto.cli.CsvPrinter.printRows(java.util.List,boolean):void.cc86b2d35da0a7c58836393e6a4cc562"}], "snippet": "41. \n42.     @Override\n43. >     public void printRows(List<List<?>> rows, boolean complete)\n44.             throws IOException\n45.     {\n"}, {"level": 1, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 47, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "44.             throws IOException\n45.     {\n46. >         if (needHeader) {\n47.             needHeader = false;\n48.             writer.writeNext(toStrings(fieldNames));\n"}, {"level": 1, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 48, "column_number": -1, "description": "", "node_tags": [], "snippet": "45.     {\n46.         if (needHeader) {\n47. >             needHeader = false;\n48.             writer.writeNext(toStrings(fieldNames));\n49.         }\n"}, {"level": 1, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 49, "column_number": -1, "description": "Skipping toStrings(...): empty list of specs", "node_tags": [], "snippet": "46.         if (needHeader) {\n47.             needHeader = false;\n48. >             writer.writeNext(toStrings(fieldNames));\n49.         }\n50. \n"}, {"level": 2, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 75, "column_number": -1, "description": "Definition of toStrings(...)", "node_tags": [], "snippet": "72.     }\n73. \n74. >     private static String[] toStrings(List<?> values)\n75.     {\n76.         String[] array = new String[values.size()];\n"}, {"level": 1, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 49, "column_number": -1, "description": "Skipping writeNext(...): unknown method", "node_tags": [], "snippet": "46.         if (needHeader) {\n47.             needHeader = false;\n48. >             writer.writeNext(toStrings(fieldNames));\n49.         }\n50. \n"}, {"level": 1, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 52, "column_number": -1, "description": "Taking false branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "false"}], "snippet": "49.         }\n50. \n51. >         for (List<?> row : rows) {\n52.             writer.writeNext(toStrings(row));\n53.             checkError();\n"}, {"level": 1, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 56, "column_number": -1, "description": "return from a call to void CsvPrinter.printRows(List,boolean)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "void CsvPrinter.printRows(List,boolean)"}, {"tag": "name_id", "value": "com.facebook.presto.cli.CsvPrinter.printRows(java.util.List,boolean):void.cc86b2d35da0a7c58836393e6a4cc562"}], "snippet": "53.             checkError();\n54.         }\n55. >     }\n56. \n57.     @Override\n"}, {"level": 0, "filename": "presto-cli/src/test/java/com/facebook/presto/cli/TestCsvPrinter.java", "line_number": 43, "column_number": -1, "description": "", "node_tags": [], "snippet": "40.                 row(\"bye\", \"done\", -15)),\n41.                 true);\n42. >         printer.finish();\n43. \n44.         String expected = \"\" +\n"}, {"level": 1, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 59, "column_number": -1, "description": "start of procedure finish()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void CsvPrinter.finish()"}, {"tag": "name_id", "value": "com.facebook.presto.cli.CsvPrinter.finish():void.0478359c1c40bc46a672c0a0f1f39e92"}], "snippet": "56. \n57.     @Override\n58. >     public void finish()\n59.             throws IOException\n60.     {\n"}, {"level": 1, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 62, "column_number": -1, "description": "", "node_tags": [], "snippet": "59.             throws IOException\n60.     {\n61. >         printRows(ImmutableList.of(), true);\n62.         writer.flush();\n63.         checkError();\n"}, {"level": 2, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 44, "column_number": -1, "description": "start of procedure printRows(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void CsvPrinter.printRows(ImmutableList,boolean)"}, {"tag": "name_id", "value": "com.facebook.presto.cli.CsvPrinter.printRows(com.google.common.collect.ImmutableList,boolean):void.12671130e91b1b31c2be323ac015f73d"}], "snippet": "41. \n42.     @Override\n43. >     public void printRows(List<List<?>> rows, boolean complete)\n44.             throws IOException\n45.     {\n"}, {"level": 2, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 47, "column_number": -1, "description": "Taking false branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "false"}], "snippet": "44.             throws IOException\n45.     {\n46. >         if (needHeader) {\n47.             needHeader = false;\n48.             writer.writeNext(toStrings(fieldNames));\n"}, {"level": 2, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 52, "column_number": -1, "description": "Taking false branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "false"}], "snippet": "49.         }\n50. \n51. >         for (List<?> row : rows) {\n52.             writer.writeNext(toStrings(row));\n53.             checkError();\n"}, {"level": 2, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 56, "column_number": -1, "description": "return from a call to void CsvPrinter.printRows(ImmutableList,boolean)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "void CsvPrinter.printRows(ImmutableList,boolean)"}, {"tag": "name_id", "value": "com.facebook.presto.cli.CsvPrinter.printRows(com.google.common.collect.ImmutableList,boolean):void.12671130e91b1b31c2be323ac015f73d"}], "snippet": "53.             checkError();\n54.         }\n55. >     }\n56. \n57.     @Override\n"}, {"level": 1, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 63, "column_number": -1, "description": "Skipping flush(): unknown method", "node_tags": [], "snippet": "60.     {\n61.         printRows(ImmutableList.of(), true);\n62. >         writer.flush();\n63.         checkError();\n64.     }\n"}, {"level": 1, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 64, "column_number": -1, "description": "", "node_tags": [], "snippet": "61.         printRows(ImmutableList.of(), true);\n62.         writer.flush();\n63. >         checkError();\n64.     }\n65. \n"}, {"level": 2, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 70, "column_number": -1, "description": "start of procedure checkError()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void CsvPrinter.checkError()"}, {"tag": "name_id", "value": "com.facebook.presto.cli.CsvPrinter.checkError():void.55af11816780d6366ac0cb9d0e93f9da"}], "snippet": "67.             throws IOException\n68.     {\n69. >         if (writer.checkError()) {\n70.             throw new IOException(\"error writing to output\");\n71.         }\n"}, {"level": 2, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 70, "column_number": -1, "description": "Taking false branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "false"}], "snippet": "67.             throws IOException\n68.     {\n69. >         if (writer.checkError()) {\n70.             throw new IOException(\"error writing to output\");\n71.         }\n"}, {"level": 2, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 73, "column_number": -1, "description": "return from a call to void CsvPrinter.checkError()", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "void CsvPrinter.checkError()"}, {"tag": "name_id", "value": "com.facebook.presto.cli.CsvPrinter.checkError():void.55af11816780d6366ac0cb9d0e93f9da"}], "snippet": "70.             throw new IOException(\"error writing to output\");\n71.         }\n72. >     }\n73. \n74.     private static String[] toStrings(List<?> values)\n"}, {"level": 1, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 65, "column_number": -1, "description": "return from a call to void CsvPrinter.finish()", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "void CsvPrinter.finish()"}, {"tag": "name_id", "value": "com.facebook.presto.cli.CsvPrinter.finish():void.0478359c1c40bc46a672c0a0f1f39e92"}], "snippet": "62.         writer.flush();\n63.         checkError();\n64. >     }\n65. \n66.     private void checkError()\n"}]}, {"url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/test/java/com/facebook/presto/cli/TestCsvPrinter.java", "rawCode": "/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage com.facebook.presto.cli;\n\nimport com.google.common.collect.ImmutableList;\nimport org.testng.annotations.Test;\n\nimport java.io.IOException;\nimport java.io.StringWriter;\nimport java.util.List;\n\nimport static com.facebook.presto.cli.TestAlignedTablePrinter.row;\nimport static com.facebook.presto.cli.TestAlignedTablePrinter.rows;\nimport static org.testng.Assert.assertEquals;\n\npublic class TestCsvPrinter\n{\n    @Test\n    public void testCsvPrinting()\n            throws Exception\n    {\n        StringWriter writer = new StringWriter();\n        List<String> fieldNames = ImmutableList.of(\"first\", \"last\", \"quantity\");\n        OutputPrinter printer = new CsvPrinter(fieldNames, writer, true);\n\n        printer.printRows(rows(\n                row(\"hello\", \"world\", 123),\n                row(\"a\", null, 4.5),\n                row(\"some long\\ntext that\\ndoes not\\nfit on\\none line\", \"more\\ntext\", 4567),\n                row(\"bye\", \"done\", -15)),\n                true);\n        printer.finish();\n\n        String expected = \"\" +\n                \"\\\"first\\\",\\\"last\\\",\\\"quantity\\\"\\n\" +\n                \"\\\"hello\\\",\\\"world\\\",\\\"123\\\"\\n\" +\n                \"\\\"a\\\",\\\"\\\",\\\"4.5\\\"\\n\" +\n                \"\\\"some long\\n\" +\n                \"text that\\n\" +\n                \"does not\\n\" +\n                \"fit on\\n\" +\n                \"one line\\\",\\\"more\\n\" +\n                \"text\\\",\\\"4567\\\"\\n\" +\n                \"\\\"bye\\\",\\\"done\\\",\\\"-15\\\"\\n\";\n\n        assertEquals(writer.getBuffer().toString(), expected);\n    }\n\n    @Test\n    public void testCsvPrintingNoRows()\n            throws Exception\n    {\n        StringWriter writer = new StringWriter();\n        List<String> fieldNames = ImmutableList.of(\"first\", \"last\");\n        OutputPrinter printer = new CsvPrinter(fieldNames, writer, true);\n\n        printer.finish();\n\n        assertEquals(writer.getBuffer().toString(), \"\\\"first\\\",\\\"last\\\"\\n\");\n    }\n\n    @Test\n    public void testCsvPrintingNoHeader()\n            throws Exception\n    {\n        StringWriter writer = new StringWriter();\n        List<String> fieldNames = ImmutableList.of(\"first\", \"last\", \"quantity\");\n        OutputPrinter printer = new CsvPrinter(fieldNames, writer, false);\n\n        printer.printRows(rows(\n                row(\"hello\", \"world\", 123),\n                row(\"a\", null, 4.5)),\n                true);\n        printer.finish();\n\n        String expected = \"\" +\n                \"\\\"hello\\\",\\\"world\\\",\\\"123\\\"\\n\" +\n                \"\\\"a\\\",\\\"\\\",\\\"4.5\\\"\\n\";\n\n        assertEquals(writer.getBuffer().toString(), expected);\n    }\n\n    @Test\n    public void testCsvVarbinaryPrinting()\n            throws IOException\n    {\n        StringWriter writer = new StringWriter();\n        List<String> fieldNames = ImmutableList.of(\"first\", \"last\", \"quantity\");\n        OutputPrinter printer = new CsvPrinter(fieldNames, writer, false);\n\n        printer.printRows(rows(row(\"hello\".getBytes(), null, 123)), true);\n        printer.finish();\n\n        String expected = \"\\\"68 65 6c 6c 6f\\\",\\\"\\\",\\\"123\\\"\\n\";\n\n        assertEquals(writer.getBuffer().toString(), expected);\n    }\n}\n", "methodName": "void TestCsvPrinter.testCsvPrinting()", "exampleID": 20, "dataset": "infer", "filepath": "presto-cli/src/test/java/com/facebook/presto/cli/TestCsvPrinter.java", "source": "au.com.bytecode.opencsv.CSVWriter", "sourceLine": 35, "qualifier": "Resource of type $$au.com.bytecode.opencsv.CSVWriter/$ acquired by call to @@CsvPrinter(...)/@ is not released", "steps": [{"line": 34, "source": "au.com.bytecode.opencsv.CSVWriter", "filepath": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "methodName": "CsvPrinter.CsvPrinter", "exampleID": 21}], "line_number": 35, "records": [{"level": 1, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 34, "column_number": -1, "description": "start of procedure CsvPrinter(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "CsvPrinter.<init>(List,StringWriter,boolean)"}, {"tag": "name_id", "value": "com.facebook.presto.cli.CsvPrinter.<init>(java.util.List,java.io.StringWriter,boolean).a2c7cdc3d30ee46851a0c1556bdf6097"}], "snippet": "    public CsvPrinter(List<String> fieldNames, Writer writer, boolean header)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "methodName": "CsvPrinter"}, {"level": 1, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 35, "column_number": -1, "description": "", "node_tags": [], "snippet": "    {", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "methodName": "CsvPrinter"}, {"level": 1, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 36, "column_number": -1, "description": "Skipping requireNonNull(...): unknown method", "node_tags": [], "snippet": "        requireNonNull(fieldNames, \"fieldNames is null\");", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "methodName": "CsvPrinter"}, {"level": 1, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 37, "column_number": -1, "description": "Skipping requireNonNull(...): unknown method", "node_tags": [], "snippet": "        requireNonNull(writer, \"writer is null\");", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "methodName": "CsvPrinter"}, {"level": 1, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 38, "column_number": -1, "description": "", "node_tags": [], "snippet": "        this.fieldNames = ImmutableList.copyOf(fieldNames);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "methodName": "CsvPrinter"}, {"level": 1, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 39, "column_number": -1, "description": "", "node_tags": [], "snippet": "        this.writer = new CSVWriter(writer);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "methodName": "CsvPrinter"}, {"level": 1, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 40, "column_number": -1, "description": "", "node_tags": [], "snippet": "        this.needHeader = header;", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "methodName": "CsvPrinter"}, {"level": 1, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 41, "column_number": -1, "description": "return from a call to CsvPrinter.<init>(List,StringWriter,boolean)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "CsvPrinter.<init>(List,StringWriter,boolean)"}, {"tag": "name_id", "value": "com.facebook.presto.cli.CsvPrinter.<init>(java.util.List,java.io.StringWriter,boolean).a2c7cdc3d30ee46851a0c1556bdf6097"}], "snippet": "    }", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "methodName": "CsvPrinter"}, {"level": 1, "filename": "presto-cli/src/test/java/com/facebook/presto/cli/TestAlignedTablePrinter.java", "line_number": 156, "column_number": -1, "description": "start of procedure row(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "List TestAlignedTablePrinter.row(java.lang.Object[])"}, {"tag": "name_id", "value": "com.facebook.presto.cli.TestAlignedTablePrinter.row(java.lang.Object[]):java.util.List.65820bb178087f629412a2d0afe20b57"}], "snippet": "    static List<?> row(Object... values)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/test/java/com/facebook/presto/cli/TestAlignedTablePrinter.java", "methodName": "row"}, {"level": 1, "filename": "presto-cli/src/test/java/com/facebook/presto/cli/TestAlignedTablePrinter.java", "line_number": 158, "column_number": -1, "description": "return from a call to List TestAlignedTablePrinter.row(java.lang.Object[])", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "List TestAlignedTablePrinter.row(java.lang.Object[])"}, {"tag": "name_id", "value": "com.facebook.presto.cli.TestAlignedTablePrinter.row(java.lang.Object[]):java.util.List.65820bb178087f629412a2d0afe20b57"}], "snippet": "        return asList(values);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/test/java/com/facebook/presto/cli/TestAlignedTablePrinter.java", "methodName": "row"}, {"level": 1, "filename": "presto-cli/src/test/java/com/facebook/presto/cli/TestAlignedTablePrinter.java", "line_number": 156, "column_number": -1, "description": "start of procedure row(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "List TestAlignedTablePrinter.row(java.lang.Object[])"}, {"tag": "name_id", "value": "com.facebook.presto.cli.TestAlignedTablePrinter.row(java.lang.Object[]):java.util.List.65820bb178087f629412a2d0afe20b57"}], "snippet": "    static List<?> row(Object... values)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/test/java/com/facebook/presto/cli/TestAlignedTablePrinter.java", "methodName": "row"}, {"level": 1, "filename": "presto-cli/src/test/java/com/facebook/presto/cli/TestAlignedTablePrinter.java", "line_number": 158, "column_number": -1, "description": "return from a call to List TestAlignedTablePrinter.row(java.lang.Object[])", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "List TestAlignedTablePrinter.row(java.lang.Object[])"}, {"tag": "name_id", "value": "com.facebook.presto.cli.TestAlignedTablePrinter.row(java.lang.Object[]):java.util.List.65820bb178087f629412a2d0afe20b57"}], "snippet": "        return asList(values);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/test/java/com/facebook/presto/cli/TestAlignedTablePrinter.java", "methodName": "row"}, {"level": 1, "filename": "presto-cli/src/test/java/com/facebook/presto/cli/TestAlignedTablePrinter.java", "line_number": 156, "column_number": -1, "description": "start of procedure row(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "List TestAlignedTablePrinter.row(java.lang.Object[])"}, {"tag": "name_id", "value": "com.facebook.presto.cli.TestAlignedTablePrinter.row(java.lang.Object[]):java.util.List.65820bb178087f629412a2d0afe20b57"}], "snippet": "    static List<?> row(Object... values)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/test/java/com/facebook/presto/cli/TestAlignedTablePrinter.java", "methodName": "row"}, {"level": 1, "filename": "presto-cli/src/test/java/com/facebook/presto/cli/TestAlignedTablePrinter.java", "line_number": 158, "column_number": -1, "description": "return from a call to List TestAlignedTablePrinter.row(java.lang.Object[])", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "List TestAlignedTablePrinter.row(java.lang.Object[])"}, {"tag": "name_id", "value": "com.facebook.presto.cli.TestAlignedTablePrinter.row(java.lang.Object[]):java.util.List.65820bb178087f629412a2d0afe20b57"}], "snippet": "        return asList(values);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/test/java/com/facebook/presto/cli/TestAlignedTablePrinter.java", "methodName": "row"}, {"level": 1, "filename": "presto-cli/src/test/java/com/facebook/presto/cli/TestAlignedTablePrinter.java", "line_number": 156, "column_number": -1, "description": "start of procedure row(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "List TestAlignedTablePrinter.row(java.lang.Object[])"}, {"tag": "name_id", "value": "com.facebook.presto.cli.TestAlignedTablePrinter.row(java.lang.Object[]):java.util.List.65820bb178087f629412a2d0afe20b57"}], "snippet": "    static List<?> row(Object... values)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/test/java/com/facebook/presto/cli/TestAlignedTablePrinter.java", "methodName": "row"}, {"level": 1, "filename": "presto-cli/src/test/java/com/facebook/presto/cli/TestAlignedTablePrinter.java", "line_number": 158, "column_number": -1, "description": "return from a call to List TestAlignedTablePrinter.row(java.lang.Object[])", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "List TestAlignedTablePrinter.row(java.lang.Object[])"}, {"tag": "name_id", "value": "com.facebook.presto.cli.TestAlignedTablePrinter.row(java.lang.Object[]):java.util.List.65820bb178087f629412a2d0afe20b57"}], "snippet": "        return asList(values);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/test/java/com/facebook/presto/cli/TestAlignedTablePrinter.java", "methodName": "row"}, {"level": 1, "filename": "presto-cli/src/test/java/com/facebook/presto/cli/TestAlignedTablePrinter.java", "line_number": 163, "column_number": -1, "description": "start of procedure rows(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "List TestAlignedTablePrinter.rows(java.util.List[])"}, {"tag": "name_id", "value": "com.facebook.presto.cli.TestAlignedTablePrinter.rows(java.util.List[]):java.util.List.7236681773625b781a7b11791e975f7c"}], "snippet": "        return asList(rows);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/test/java/com/facebook/presto/cli/TestAlignedTablePrinter.java", "methodName": "rows"}, {"level": 1, "filename": "presto-cli/src/test/java/com/facebook/presto/cli/TestAlignedTablePrinter.java", "line_number": 163, "column_number": -1, "description": "return from a call to List TestAlignedTablePrinter.rows(java.util.List[])", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "List TestAlignedTablePrinter.rows(java.util.List[])"}, {"tag": "name_id", "value": "com.facebook.presto.cli.TestAlignedTablePrinter.rows(java.util.List[]):java.util.List.7236681773625b781a7b11791e975f7c"}], "snippet": "        return asList(rows);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/test/java/com/facebook/presto/cli/TestAlignedTablePrinter.java", "methodName": "rows"}, {"level": 1, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 44, "column_number": -1, "description": "start of procedure printRows(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void CsvPrinter.printRows(List,boolean)"}, {"tag": "name_id", "value": "com.facebook.presto.cli.CsvPrinter.printRows(java.util.List,boolean):void.cc86b2d35da0a7c58836393e6a4cc562"}], "snippet": "    public void printRows(List<List<?>> rows, boolean complete)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "methodName": "printRows"}, {"level": 1, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 47, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "        if (needHeader) {", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "methodName": "printRows"}, {"level": 1, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 48, "column_number": -1, "description": "", "node_tags": [], "snippet": "            needHeader = false;", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "methodName": "printRows"}, {"level": 1, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 49, "column_number": -1, "description": "Skipping toStrings(...): empty list of specs", "node_tags": [], "snippet": "            writer.writeNext(toStrings(fieldNames));", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "methodName": "printRows"}, {"level": 2, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 75, "column_number": -1, "description": "Definition of toStrings(...)", "node_tags": [], "snippet": "    private static String[] toStrings(List<?> values)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "methodName": "toStrings"}, {"level": 1, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 49, "column_number": -1, "description": "Skipping writeNext(...): unknown method", "node_tags": [], "snippet": "            writer.writeNext(toStrings(fieldNames));", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "methodName": "toStrings"}, {"level": 1, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 52, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "        for (List<?> row : rows) {", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "methodName": "toStrings"}, {"level": 1, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 53, "column_number": -1, "description": "Skipping toStrings(...): empty list of specs", "node_tags": [], "snippet": "            writer.writeNext(toStrings(row));", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "methodName": "toStrings"}, {"level": 2, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 75, "column_number": -1, "description": "Definition of toStrings(...)", "node_tags": [], "snippet": "    private static String[] toStrings(List<?> values)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "methodName": "toStrings"}, {"level": 1, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 53, "column_number": -1, "description": "Skipping writeNext(...): unknown method", "node_tags": [], "snippet": "            writer.writeNext(toStrings(row));", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "methodName": "toStrings"}, {"level": 1, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 54, "column_number": -1, "description": "", "node_tags": [], "snippet": "            checkError();", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "methodName": "toStrings"}, {"level": 2, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 70, "column_number": -1, "description": "start of procedure checkError()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void CsvPrinter.checkError()"}, {"tag": "name_id", "value": "com.facebook.presto.cli.CsvPrinter.checkError():void.55af11816780d6366ac0cb9d0e93f9da"}], "snippet": "        if (writer.checkError()) {", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "methodName": "checkError"}, {"level": 2, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 70, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "        if (writer.checkError()) {", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "methodName": "checkError"}, {"level": 2, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 71, "column_number": -1, "description": "", "node_tags": [], "snippet": "            throw new IOException(\"error writing to output\");", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "methodName": "checkError"}, {"level": 2, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 73, "column_number": -1, "description": "exception java.io.IOException", "node_tags": [{"tag": "name", "value": "java.io.IOException"}, {"tag": "kind", "value": "exception"}], "snippet": "    }", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "methodName": "checkError"}, {"level": 2, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 73, "column_number": -1, "description": "return from a call to void CsvPrinter.checkError()", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "void CsvPrinter.checkError()"}, {"tag": "name_id", "value": "com.facebook.presto.cli.CsvPrinter.checkError():void.55af11816780d6366ac0cb9d0e93f9da"}], "snippet": "    }", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "methodName": "checkError"}, {"level": 1, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 56, "column_number": -1, "description": "exception java.io.IOException", "node_tags": [{"tag": "name", "value": "java.io.IOException"}, {"tag": "kind", "value": "exception"}], "snippet": "    }", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "methodName": "toStrings"}, {"level": 1, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 56, "column_number": -1, "description": "return from a call to void CsvPrinter.printRows(List,boolean)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "void CsvPrinter.printRows(List,boolean)"}, {"tag": "name_id", "value": "com.facebook.presto.cli.CsvPrinter.printRows(java.util.List,boolean):void.cc86b2d35da0a7c58836393e6a4cc562"}], "snippet": "    }", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "methodName": "toStrings"}], "combined_records": [{"level": 1, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 41, "column_number": -1, "description": "start of procedure CsvPrinter(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "CsvPrinter.<init>(List,StringWriter,boolean)"}, {"tag": "name_id", "value": "com.facebook.presto.cli.CsvPrinter.<init>(java.util.List,java.io.StringWriter,boolean).a2c7cdc3d30ee46851a0c1556bdf6097"}], "snippet": "32.\n33.    public CsvPrinter(List<String> fieldNames, Writer writer, boolean header)\n34.>     {\n35.>         requireNonNull(fieldNames, \"fieldNames is null\");\n36.>         requireNonNull(writer, \"writer is null\");\n37.>         this.fieldNames = ImmutableList.copyOf(fieldNames);\n38.>         this.writer = new CSVWriter(writer);\n39.>         this.needHeader = header;\n40.    }\n41.> \n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "methodName": "CsvPrinter", "line_numbers": [34, 35, 36, 37, 38, 39, 40, 41]}, {"level": 1, "filename": "presto-cli/src/test/java/com/facebook/presto/cli/TestAlignedTablePrinter.java", "line_number": 158, "column_number": -1, "description": "start of procedure row(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "List TestAlignedTablePrinter.row(java.lang.Object[])"}, {"tag": "name_id", "value": "com.facebook.presto.cli.TestAlignedTablePrinter.row(java.lang.Object[]):java.util.List.65820bb178087f629412a2d0afe20b57"}], "snippet": "154.\n155.    static List<?> row(Object... values)\n156.>     {\n157.        return asList(values);\n158.    }\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/test/java/com/facebook/presto/cli/TestAlignedTablePrinter.java", "methodName": "row", "line_numbers": [156, 158, 156, 158, 156, 158, 156, 158]}, {"level": 1, "filename": "presto-cli/src/test/java/com/facebook/presto/cli/TestAlignedTablePrinter.java", "line_number": 163, "column_number": -1, "description": "start of procedure rows(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "List TestAlignedTablePrinter.rows(java.util.List[])"}, {"tag": "name_id", "value": "com.facebook.presto.cli.TestAlignedTablePrinter.rows(java.util.List[]):java.util.List.7236681773625b781a7b11791e975f7c"}], "snippet": "161.    {\n162.        return asList(rows);\n163.    }\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/test/java/com/facebook/presto/cli/TestAlignedTablePrinter.java", "methodName": "rows", "line_numbers": [163, 163]}, {"level": 1, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 49, "column_number": -1, "description": "start of procedure printRows(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void CsvPrinter.printRows(List,boolean)"}, {"tag": "name_id", "value": "com.facebook.presto.cli.CsvPrinter.printRows(java.util.List,boolean):void.cc86b2d35da0a7c58836393e6a4cc562"}], "snippet": "42.    @Override\n43.    public void printRows(List<List<?>> rows, boolean complete)\n44.>             throws IOException\n45.    {\n46.        if (needHeader) {\n47.>             needHeader = false;\n48.>             writer.writeNext(toStrings(fieldNames));\n49.        }\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "methodName": "printRows", "line_numbers": [44, 47, 48, 49]}, {"level": 2, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 75, "column_number": -1, "description": "Definition of toStrings(...)", "node_tags": [], "snippet": "73.\n74.    private static String[] toStrings(List<?> values)\n75.>     {\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "methodName": "toStrings", "line_numbers": [75]}, {"level": 1, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 53, "column_number": -1, "description": "Skipping writeNext(...): unknown method", "node_tags": [], "snippet": "47.            needHeader = false;\n48.            writer.writeNext(toStrings(fieldNames));\n49.        }\n50.\n51.        for (List<?> row : rows) {\n52.>             writer.writeNext(toStrings(row));\n53.>             checkError();\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "methodName": "toStrings", "line_numbers": [49, 52, 53]}, {"level": 2, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 75, "column_number": -1, "description": "Definition of toStrings(...)", "node_tags": [], "snippet": "73.\n74.    private static String[] toStrings(List<?> values)\n75.>     {\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "methodName": "toStrings", "line_numbers": [75]}, {"level": 1, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 54, "column_number": -1, "description": "Skipping writeNext(...): unknown method", "node_tags": [], "snippet": "51.        for (List<?> row : rows) {\n52.            writer.writeNext(toStrings(row));\n53.>             checkError();\n54.        }\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "methodName": "toStrings", "line_numbers": [53, 54]}, {"level": 2, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 73, "column_number": -1, "description": "start of procedure checkError()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void CsvPrinter.checkError()"}, {"tag": "name_id", "value": "com.facebook.presto.cli.CsvPrinter.checkError():void.55af11816780d6366ac0cb9d0e93f9da"}], "snippet": "68.    {\n69.        if (writer.checkError()) {\n70.>             throw new IOException(\"error writing to output\");\n71.        }\n72.    }\n73.> \n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "methodName": "checkError", "line_numbers": [70, 70, 71, 73, 73]}, {"level": 1, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 56, "column_number": -1, "description": "exception java.io.IOException", "node_tags": [{"tag": "name", "value": "java.io.IOException"}, {"tag": "kind", "value": "exception"}], "snippet": "54.        }\n55.    }\n56.> \n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "methodName": "toStrings", "line_numbers": [56, 56]}], "infer_explore": [{"level": 0, "filename": "presto-cli/src/test/java/com/facebook/presto/cli/TestCsvPrinter.java", "line_number": 30, "column_number": -1, "description": "start of procedure testCsvPrinting()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void TestCsvPrinter.testCsvPrinting()"}, {"tag": "name_id", "value": "com.facebook.presto.cli.TestCsvPrinter.testCsvPrinting():void.47ad415e2b5a4adfb639f978ad2aae44"}], "snippet": "27. {\n28.     @Test\n29. >     public void testCsvPrinting()\n30.             throws Exception\n31.     {\n"}, {"level": 0, "filename": "presto-cli/src/test/java/com/facebook/presto/cli/TestCsvPrinter.java", "line_number": 33, "column_number": -1, "description": "", "node_tags": [], "snippet": "30.             throws Exception\n31.     {\n32. >         StringWriter writer = new StringWriter();\n33.         List<String> fieldNames = ImmutableList.of(\"first\", \"last\", \"quantity\");\n34.         OutputPrinter printer = new CsvPrinter(fieldNames, writer, true);\n"}, {"level": 0, "filename": "presto-cli/src/test/java/com/facebook/presto/cli/TestCsvPrinter.java", "line_number": 34, "column_number": -1, "description": "Skipping of(...): unknown method", "node_tags": [], "snippet": "31.     {\n32.         StringWriter writer = new StringWriter();\n33. >         List<String> fieldNames = ImmutableList.of(\"first\", \"last\", \"quantity\");\n34.         OutputPrinter printer = new CsvPrinter(fieldNames, writer, true);\n35. \n"}, {"level": 0, "filename": "presto-cli/src/test/java/com/facebook/presto/cli/TestCsvPrinter.java", "line_number": 35, "column_number": -1, "description": "", "node_tags": [], "snippet": "32.         StringWriter writer = new StringWriter();\n33.         List<String> fieldNames = ImmutableList.of(\"first\", \"last\", \"quantity\");\n34. >         OutputPrinter printer = new CsvPrinter(fieldNames, writer, true);\n35. \n36.         printer.printRows(rows(\n"}, {"level": 1, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 34, "column_number": -1, "description": "start of procedure CsvPrinter(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "CsvPrinter.<init>(List,StringWriter,boolean)"}, {"tag": "name_id", "value": "com.facebook.presto.cli.CsvPrinter.<init>(java.util.List,java.io.StringWriter,boolean).a2c7cdc3d30ee46851a0c1556bdf6097"}], "snippet": "31.     private boolean needHeader;\n32. \n33. >     public CsvPrinter(List<String> fieldNames, Writer writer, boolean header)\n34.     {\n35.         requireNonNull(fieldNames, \"fieldNames is null\");\n"}, {"level": 1, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 35, "column_number": -1, "description": "", "node_tags": [], "snippet": "32. \n33.     public CsvPrinter(List<String> fieldNames, Writer writer, boolean header)\n34. >     {\n35.         requireNonNull(fieldNames, \"fieldNames is null\");\n36.         requireNonNull(writer, \"writer is null\");\n"}, {"level": 1, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 36, "column_number": -1, "description": "Skipping requireNonNull(...): unknown method", "node_tags": [], "snippet": "33.     public CsvPrinter(List<String> fieldNames, Writer writer, boolean header)\n34.     {\n35. >         requireNonNull(fieldNames, \"fieldNames is null\");\n36.         requireNonNull(writer, \"writer is null\");\n37.         this.fieldNames = ImmutableList.copyOf(fieldNames);\n"}, {"level": 1, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 37, "column_number": -1, "description": "Skipping requireNonNull(...): unknown method", "node_tags": [], "snippet": "34.     {\n35.         requireNonNull(fieldNames, \"fieldNames is null\");\n36. >         requireNonNull(writer, \"writer is null\");\n37.         this.fieldNames = ImmutableList.copyOf(fieldNames);\n38.         this.writer = new CSVWriter(writer);\n"}, {"level": 1, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 38, "column_number": -1, "description": "", "node_tags": [], "snippet": "35.         requireNonNull(fieldNames, \"fieldNames is null\");\n36.         requireNonNull(writer, \"writer is null\");\n37. >         this.fieldNames = ImmutableList.copyOf(fieldNames);\n38.         this.writer = new CSVWriter(writer);\n39.         this.needHeader = header;\n"}, {"level": 1, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 39, "column_number": -1, "description": "", "node_tags": [], "snippet": "36.         requireNonNull(writer, \"writer is null\");\n37.         this.fieldNames = ImmutableList.copyOf(fieldNames);\n38. >         this.writer = new CSVWriter(writer);\n39.         this.needHeader = header;\n40.     }\n"}, {"level": 1, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 40, "column_number": -1, "description": "", "node_tags": [], "snippet": "37.         this.fieldNames = ImmutableList.copyOf(fieldNames);\n38.         this.writer = new CSVWriter(writer);\n39. >         this.needHeader = header;\n40.     }\n41. \n"}, {"level": 1, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 41, "column_number": -1, "description": "return from a call to CsvPrinter.<init>(List,StringWriter,boolean)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "CsvPrinter.<init>(List,StringWriter,boolean)"}, {"tag": "name_id", "value": "com.facebook.presto.cli.CsvPrinter.<init>(java.util.List,java.io.StringWriter,boolean).a2c7cdc3d30ee46851a0c1556bdf6097"}], "snippet": "38.         this.writer = new CSVWriter(writer);\n39.         this.needHeader = header;\n40. >     }\n41. \n42.     @Override\n"}, {"level": 0, "filename": "presto-cli/src/test/java/com/facebook/presto/cli/TestCsvPrinter.java", "line_number": 37, "column_number": -1, "description": "", "node_tags": [], "snippet": "34.         OutputPrinter printer = new CsvPrinter(fieldNames, writer, true);\n35. \n36. >         printer.printRows(rows(\n37.                 row(\"hello\", \"world\", 123),\n38.                 row(\"a\", null, 4.5),\n"}, {"level": 0, "filename": "presto-cli/src/test/java/com/facebook/presto/cli/TestCsvPrinter.java", "line_number": 38, "column_number": -1, "description": "", "node_tags": [], "snippet": "35. \n36.         printer.printRows(rows(\n37. >                 row(\"hello\", \"world\", 123),\n38.                 row(\"a\", null, 4.5),\n39.                 row(\"some long\\ntext that\\ndoes not\\nfit on\\none line\", \"more\\ntext\", 4567),\n"}, {"level": 1, "filename": "presto-cli/src/test/java/com/facebook/presto/cli/TestAlignedTablePrinter.java", "line_number": 156, "column_number": -1, "description": "start of procedure row(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "List TestAlignedTablePrinter.row(java.lang.Object[])"}, {"tag": "name_id", "value": "com.facebook.presto.cli.TestAlignedTablePrinter.row(java.lang.Object[]):java.util.List.65820bb178087f629412a2d0afe20b57"}], "snippet": "153.     }\n154. \n155. >     static List<?> row(Object... values)\n156.     {\n157.         return asList(values);\n"}, {"level": 1, "filename": "presto-cli/src/test/java/com/facebook/presto/cli/TestAlignedTablePrinter.java", "line_number": 158, "column_number": -1, "description": "return from a call to List TestAlignedTablePrinter.row(java.lang.Object[])", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "List TestAlignedTablePrinter.row(java.lang.Object[])"}, {"tag": "name_id", "value": "com.facebook.presto.cli.TestAlignedTablePrinter.row(java.lang.Object[]):java.util.List.65820bb178087f629412a2d0afe20b57"}], "snippet": "155.     static List<?> row(Object... values)\n156.     {\n157. >         return asList(values);\n158.     }\n159. \n"}, {"level": 0, "filename": "presto-cli/src/test/java/com/facebook/presto/cli/TestCsvPrinter.java", "line_number": 38, "column_number": -1, "description": "", "node_tags": [], "snippet": "35. \n36.         printer.printRows(rows(\n37. >                 row(\"hello\", \"world\", 123),\n38.                 row(\"a\", null, 4.5),\n39.                 row(\"some long\\ntext that\\ndoes not\\nfit on\\none line\", \"more\\ntext\", 4567),\n"}, {"level": 0, "filename": "presto-cli/src/test/java/com/facebook/presto/cli/TestCsvPrinter.java", "line_number": 39, "column_number": -1, "description": "", "node_tags": [], "snippet": "36.         printer.printRows(rows(\n37.                 row(\"hello\", \"world\", 123),\n38. >                 row(\"a\", null, 4.5),\n39.                 row(\"some long\\ntext that\\ndoes not\\nfit on\\none line\", \"more\\ntext\", 4567),\n40.                 row(\"bye\", \"done\", -15)),\n"}, {"level": 1, "filename": "presto-cli/src/test/java/com/facebook/presto/cli/TestAlignedTablePrinter.java", "line_number": 156, "column_number": -1, "description": "start of procedure row(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "List TestAlignedTablePrinter.row(java.lang.Object[])"}, {"tag": "name_id", "value": "com.facebook.presto.cli.TestAlignedTablePrinter.row(java.lang.Object[]):java.util.List.65820bb178087f629412a2d0afe20b57"}], "snippet": "153.     }\n154. \n155. >     static List<?> row(Object... values)\n156.     {\n157.         return asList(values);\n"}, {"level": 1, "filename": "presto-cli/src/test/java/com/facebook/presto/cli/TestAlignedTablePrinter.java", "line_number": 158, "column_number": -1, "description": "return from a call to List TestAlignedTablePrinter.row(java.lang.Object[])", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "List TestAlignedTablePrinter.row(java.lang.Object[])"}, {"tag": "name_id", "value": "com.facebook.presto.cli.TestAlignedTablePrinter.row(java.lang.Object[]):java.util.List.65820bb178087f629412a2d0afe20b57"}], "snippet": "155.     static List<?> row(Object... values)\n156.     {\n157. >         return asList(values);\n158.     }\n159. \n"}, {"level": 0, "filename": "presto-cli/src/test/java/com/facebook/presto/cli/TestCsvPrinter.java", "line_number": 39, "column_number": -1, "description": "", "node_tags": [], "snippet": "36.         printer.printRows(rows(\n37.                 row(\"hello\", \"world\", 123),\n38. >                 row(\"a\", null, 4.5),\n39.                 row(\"some long\\ntext that\\ndoes not\\nfit on\\none line\", \"more\\ntext\", 4567),\n40.                 row(\"bye\", \"done\", -15)),\n"}, {"level": 0, "filename": "presto-cli/src/test/java/com/facebook/presto/cli/TestCsvPrinter.java", "line_number": 40, "column_number": -1, "description": "", "node_tags": [], "snippet": "37.                 row(\"hello\", \"world\", 123),\n38.                 row(\"a\", null, 4.5),\n39. >                 row(\"some long\\ntext that\\ndoes not\\nfit on\\none line\", \"more\\ntext\", 4567),\n40.                 row(\"bye\", \"done\", -15)),\n41.                 true);\n"}, {"level": 1, "filename": "presto-cli/src/test/java/com/facebook/presto/cli/TestAlignedTablePrinter.java", "line_number": 156, "column_number": -1, "description": "start of procedure row(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "List TestAlignedTablePrinter.row(java.lang.Object[])"}, {"tag": "name_id", "value": "com.facebook.presto.cli.TestAlignedTablePrinter.row(java.lang.Object[]):java.util.List.65820bb178087f629412a2d0afe20b57"}], "snippet": "153.     }\n154. \n155. >     static List<?> row(Object... values)\n156.     {\n157.         return asList(values);\n"}, {"level": 1, "filename": "presto-cli/src/test/java/com/facebook/presto/cli/TestAlignedTablePrinter.java", "line_number": 158, "column_number": -1, "description": "return from a call to List TestAlignedTablePrinter.row(java.lang.Object[])", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "List TestAlignedTablePrinter.row(java.lang.Object[])"}, {"tag": "name_id", "value": "com.facebook.presto.cli.TestAlignedTablePrinter.row(java.lang.Object[]):java.util.List.65820bb178087f629412a2d0afe20b57"}], "snippet": "155.     static List<?> row(Object... values)\n156.     {\n157. >         return asList(values);\n158.     }\n159. \n"}, {"level": 0, "filename": "presto-cli/src/test/java/com/facebook/presto/cli/TestCsvPrinter.java", "line_number": 40, "column_number": -1, "description": "", "node_tags": [], "snippet": "37.                 row(\"hello\", \"world\", 123),\n38.                 row(\"a\", null, 4.5),\n39. >                 row(\"some long\\ntext that\\ndoes not\\nfit on\\none line\", \"more\\ntext\", 4567),\n40.                 row(\"bye\", \"done\", -15)),\n41.                 true);\n"}, {"level": 0, "filename": "presto-cli/src/test/java/com/facebook/presto/cli/TestCsvPrinter.java", "line_number": 41, "column_number": -1, "description": "", "node_tags": [], "snippet": "38.                 row(\"a\", null, 4.5),\n39.                 row(\"some long\\ntext that\\ndoes not\\nfit on\\none line\", \"more\\ntext\", 4567),\n40. >                 row(\"bye\", \"done\", -15)),\n41.                 true);\n42.         printer.finish();\n"}, {"level": 1, "filename": "presto-cli/src/test/java/com/facebook/presto/cli/TestAlignedTablePrinter.java", "line_number": 156, "column_number": -1, "description": "start of procedure row(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "List TestAlignedTablePrinter.row(java.lang.Object[])"}, {"tag": "name_id", "value": "com.facebook.presto.cli.TestAlignedTablePrinter.row(java.lang.Object[]):java.util.List.65820bb178087f629412a2d0afe20b57"}], "snippet": "153.     }\n154. \n155. >     static List<?> row(Object... values)\n156.     {\n157.         return asList(values);\n"}, {"level": 1, "filename": "presto-cli/src/test/java/com/facebook/presto/cli/TestAlignedTablePrinter.java", "line_number": 158, "column_number": -1, "description": "return from a call to List TestAlignedTablePrinter.row(java.lang.Object[])", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "List TestAlignedTablePrinter.row(java.lang.Object[])"}, {"tag": "name_id", "value": "com.facebook.presto.cli.TestAlignedTablePrinter.row(java.lang.Object[]):java.util.List.65820bb178087f629412a2d0afe20b57"}], "snippet": "155.     static List<?> row(Object... values)\n156.     {\n157. >         return asList(values);\n158.     }\n159. \n"}, {"level": 0, "filename": "presto-cli/src/test/java/com/facebook/presto/cli/TestCsvPrinter.java", "line_number": 41, "column_number": -1, "description": "", "node_tags": [], "snippet": "38.                 row(\"a\", null, 4.5),\n39.                 row(\"some long\\ntext that\\ndoes not\\nfit on\\none line\", \"more\\ntext\", 4567),\n40. >                 row(\"bye\", \"done\", -15)),\n41.                 true);\n42.         printer.finish();\n"}, {"level": 0, "filename": "presto-cli/src/test/java/com/facebook/presto/cli/TestCsvPrinter.java", "line_number": 37, "column_number": -1, "description": "", "node_tags": [], "snippet": "34.         OutputPrinter printer = new CsvPrinter(fieldNames, writer, true);\n35. \n36. >         printer.printRows(rows(\n37.                 row(\"hello\", \"world\", 123),\n38.                 row(\"a\", null, 4.5),\n"}, {"level": 1, "filename": "presto-cli/src/test/java/com/facebook/presto/cli/TestAlignedTablePrinter.java", "line_number": 163, "column_number": -1, "description": "start of procedure rows(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "List TestAlignedTablePrinter.rows(java.util.List[])"}, {"tag": "name_id", "value": "com.facebook.presto.cli.TestAlignedTablePrinter.rows(java.util.List[]):java.util.List.7236681773625b781a7b11791e975f7c"}], "snippet": "160.     static List<List<?>> rows(List<?>... rows)\n161.     {\n162. >         return asList(rows);\n163.     }\n164. \n"}, {"level": 1, "filename": "presto-cli/src/test/java/com/facebook/presto/cli/TestAlignedTablePrinter.java", "line_number": 163, "column_number": -1, "description": "return from a call to List TestAlignedTablePrinter.rows(java.util.List[])", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "List TestAlignedTablePrinter.rows(java.util.List[])"}, {"tag": "name_id", "value": "com.facebook.presto.cli.TestAlignedTablePrinter.rows(java.util.List[]):java.util.List.7236681773625b781a7b11791e975f7c"}], "snippet": "160.     static List<List<?>> rows(List<?>... rows)\n161.     {\n162. >         return asList(rows);\n163.     }\n164. \n"}, {"level": 0, "filename": "presto-cli/src/test/java/com/facebook/presto/cli/TestCsvPrinter.java", "line_number": 37, "column_number": -1, "description": "", "node_tags": [], "snippet": "34.         OutputPrinter printer = new CsvPrinter(fieldNames, writer, true);\n35. \n36. >         printer.printRows(rows(\n37.                 row(\"hello\", \"world\", 123),\n38.                 row(\"a\", null, 4.5),\n"}, {"level": 1, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 44, "column_number": -1, "description": "start of procedure printRows(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void CsvPrinter.printRows(List,boolean)"}, {"tag": "name_id", "value": "com.facebook.presto.cli.CsvPrinter.printRows(java.util.List,boolean):void.cc86b2d35da0a7c58836393e6a4cc562"}], "snippet": "41. \n42.     @Override\n43. >     public void printRows(List<List<?>> rows, boolean complete)\n44.             throws IOException\n45.     {\n"}, {"level": 1, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 47, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "44.             throws IOException\n45.     {\n46. >         if (needHeader) {\n47.             needHeader = false;\n48.             writer.writeNext(toStrings(fieldNames));\n"}, {"level": 1, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 48, "column_number": -1, "description": "", "node_tags": [], "snippet": "45.     {\n46.         if (needHeader) {\n47. >             needHeader = false;\n48.             writer.writeNext(toStrings(fieldNames));\n49.         }\n"}, {"level": 1, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 49, "column_number": -1, "description": "Skipping toStrings(...): empty list of specs", "node_tags": [], "snippet": "46.         if (needHeader) {\n47.             needHeader = false;\n48. >             writer.writeNext(toStrings(fieldNames));\n49.         }\n50. \n"}, {"level": 2, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 75, "column_number": -1, "description": "Definition of toStrings(...)", "node_tags": [], "snippet": "72.     }\n73. \n74. >     private static String[] toStrings(List<?> values)\n75.     {\n76.         String[] array = new String[values.size()];\n"}, {"level": 1, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 49, "column_number": -1, "description": "Skipping writeNext(...): unknown method", "node_tags": [], "snippet": "46.         if (needHeader) {\n47.             needHeader = false;\n48. >             writer.writeNext(toStrings(fieldNames));\n49.         }\n50. \n"}, {"level": 1, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 52, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "49.         }\n50. \n51. >         for (List<?> row : rows) {\n52.             writer.writeNext(toStrings(row));\n53.             checkError();\n"}, {"level": 1, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 53, "column_number": -1, "description": "Skipping toStrings(...): empty list of specs", "node_tags": [], "snippet": "50. \n51.         for (List<?> row : rows) {\n52. >             writer.writeNext(toStrings(row));\n53.             checkError();\n54.         }\n"}, {"level": 2, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 75, "column_number": -1, "description": "Definition of toStrings(...)", "node_tags": [], "snippet": "72.     }\n73. \n74. >     private static String[] toStrings(List<?> values)\n75.     {\n76.         String[] array = new String[values.size()];\n"}, {"level": 1, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 53, "column_number": -1, "description": "Skipping writeNext(...): unknown method", "node_tags": [], "snippet": "50. \n51.         for (List<?> row : rows) {\n52. >             writer.writeNext(toStrings(row));\n53.             checkError();\n54.         }\n"}, {"level": 1, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 54, "column_number": -1, "description": "", "node_tags": [], "snippet": "51.         for (List<?> row : rows) {\n52.             writer.writeNext(toStrings(row));\n53. >             checkError();\n54.         }\n55.     }\n"}, {"level": 2, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 70, "column_number": -1, "description": "start of procedure checkError()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void CsvPrinter.checkError()"}, {"tag": "name_id", "value": "com.facebook.presto.cli.CsvPrinter.checkError():void.55af11816780d6366ac0cb9d0e93f9da"}], "snippet": "67.             throws IOException\n68.     {\n69. >         if (writer.checkError()) {\n70.             throw new IOException(\"error writing to output\");\n71.         }\n"}, {"level": 2, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 70, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "67.             throws IOException\n68.     {\n69. >         if (writer.checkError()) {\n70.             throw new IOException(\"error writing to output\");\n71.         }\n"}, {"level": 2, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 71, "column_number": -1, "description": "", "node_tags": [], "snippet": "68.     {\n69.         if (writer.checkError()) {\n70. >             throw new IOException(\"error writing to output\");\n71.         }\n72.     }\n"}, {"level": 2, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 73, "column_number": -1, "description": "exception java.io.IOException", "node_tags": [{"tag": "name", "value": "java.io.IOException"}, {"tag": "kind", "value": "exception"}], "snippet": "70.             throw new IOException(\"error writing to output\");\n71.         }\n72. >     }\n73. \n74.     private static String[] toStrings(List<?> values)\n"}, {"level": 2, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 73, "column_number": -1, "description": "return from a call to void CsvPrinter.checkError()", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "void CsvPrinter.checkError()"}, {"tag": "name_id", "value": "com.facebook.presto.cli.CsvPrinter.checkError():void.55af11816780d6366ac0cb9d0e93f9da"}], "snippet": "70.             throw new IOException(\"error writing to output\");\n71.         }\n72. >     }\n73. \n74.     private static String[] toStrings(List<?> values)\n"}, {"level": 1, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 56, "column_number": -1, "description": "exception java.io.IOException", "node_tags": [{"tag": "name", "value": "java.io.IOException"}, {"tag": "kind", "value": "exception"}], "snippet": "53.             checkError();\n54.         }\n55. >     }\n56. \n57.     @Override\n"}, {"level": 1, "filename": "presto-cli/src/main/java/com/facebook/presto/cli/CsvPrinter.java", "line_number": 56, "column_number": -1, "description": "return from a call to void CsvPrinter.printRows(List,boolean)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "void CsvPrinter.printRows(List,boolean)"}, {"tag": "name_id", "value": "com.facebook.presto.cli.CsvPrinter.printRows(java.util.List,boolean):void.cc86b2d35da0a7c58836393e6a4cc562"}], "snippet": "53.             checkError();\n54.         }\n55. >     }\n56. \n57.     @Override\n"}, {"level": 0, "filename": "presto-cli/src/test/java/com/facebook/presto/cli/TestCsvPrinter.java", "line_number": 58, "column_number": -1, "description": "", "node_tags": [], "snippet": "55. \n56.         assertEquals(writer.getBuffer().toString(), expected);\n57. >     }\n58. \n59.     @Test\n"}]}, {"url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-thrift-testing-server/src/test/java/com/facebook/presto/connector/thrift/server/TestListBasedRecordSet.java", "rawCode": "/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage com.facebook.presto.connector.thrift.server;\n\nimport com.facebook.presto.spi.RecordCursor;\nimport com.google.common.collect.ImmutableList;\nimport io.airlift.slice.Slices;\nimport org.testng.annotations.Test;\n\nimport java.util.Arrays;\n\nimport static com.facebook.presto.spi.type.BigintType.BIGINT;\nimport static com.facebook.presto.spi.type.IntegerType.INTEGER;\nimport static com.facebook.presto.spi.type.VarcharType.VARCHAR;\nimport static org.testng.Assert.assertEquals;\nimport static org.testng.Assert.assertFalse;\nimport static org.testng.Assert.assertThrows;\nimport static org.testng.Assert.assertTrue;\n\npublic class TestListBasedRecordSet\n{\n    @Test\n    public void testEmptyCursor()\n            throws Exception\n    {\n        ListBasedRecordSet recordSet = new ListBasedRecordSet(ImmutableList.of(), ImmutableList.of(BIGINT, INTEGER));\n        assertEquals(recordSet.getColumnTypes(), ImmutableList.of(BIGINT, INTEGER));\n        RecordCursor cursor = recordSet.cursor();\n        assertFalse(cursor.advanceNextPosition());\n    }\n\n    @Test\n    public void testCursor()\n            throws Exception\n    {\n        ListBasedRecordSet recordSet = new ListBasedRecordSet(\n                ImmutableList.of(\n                        Arrays.asList(\"1\", null, \"3\"),\n                        Arrays.asList(\"ab\", \"c\", null)),\n                ImmutableList.of(BIGINT, VARCHAR));\n        assertEquals(recordSet.getColumnTypes(), ImmutableList.of(BIGINT, VARCHAR));\n        RecordCursor cursor = recordSet.cursor();\n        assertTrue(cursor.advanceNextPosition());\n        assertEquals(cursor.getType(0), BIGINT);\n        assertEquals(cursor.getType(1), VARCHAR);\n        assertThrows(IndexOutOfBoundsException.class, () -> cursor.getLong(2));\n        assertEquals(cursor.getLong(0), 1L);\n        assertEquals(cursor.getSlice(1), Slices.utf8Slice(\"ab\"));\n        assertTrue(cursor.advanceNextPosition());\n        assertTrue(cursor.isNull(0));\n        assertEquals(cursor.getSlice(1), Slices.utf8Slice(\"c\"));\n        assertTrue(cursor.advanceNextPosition());\n        assertEquals(cursor.getLong(0), 3L);\n        assertTrue(cursor.isNull(1));\n        assertFalse(cursor.advanceNextPosition());\n        assertThrows(IndexOutOfBoundsException.class, () -> cursor.getLong(0));\n    }\n}\n", "methodName": "void TestListBasedRecordSet.testEmptyCursor()", "exampleID": 22, "dataset": "infer", "filepath": "presto-thrift-testing-server/src/test/java/com/facebook/presto/connector/thrift/server/TestListBasedRecordSet.java", "source": "com.facebook.presto.connector.thrift.server.ListBasedRecordSet$ListBasedRecordCursor", "sourceLine": 39, "qualifier": "Resource of type $$com.facebook.presto.connector.thrift.server.ListBasedRecordSet$ListBasedRecordCursor/$ acquired by call to @@cursor()/@ is not released", "steps": [{"line": 50, "source": "com.facebook.presto.connector.thrift.server.ListBasedRecordSet$ListBasedRecordCursor", "filepath": "presto-thrift-testing-server/src/main/java/com/facebook/presto/connector/thrift/server/ListBasedRecordSet.java", "methodName": "ListBasedRecordSet.cursor", "exampleID": 23}], "line_number": 39, "records": [{"level": 1, "filename": "presto-thrift-testing-server/src/main/java/com/facebook/presto/connector/thrift/server/ListBasedRecordSet.java", "line_number": 50, "column_number": -1, "description": "start of procedure cursor()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "RecordCursor ListBasedRecordSet.cursor()"}, {"tag": "name_id", "value": "com.facebook.presto.connector.thrift.server.ListBasedRecordSet.cursor():com.facebook.presto.spi.Reco.ad3104eaf07ff50e3c14bf6609a05e22"}], "snippet": "    public RecordCursor cursor()", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-thrift-testing-server/src/main/java/com/facebook/presto/connector/thrift/server/ListBasedRecordSet.java", "methodName": "cursor"}, {"level": 1, "filename": "presto-thrift-testing-server/src/main/java/com/facebook/presto/connector/thrift/server/ListBasedRecordSet.java", "line_number": 52, "column_number": -1, "description": "", "node_tags": [], "snippet": "        return new ListBasedRecordCursor();", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-thrift-testing-server/src/main/java/com/facebook/presto/connector/thrift/server/ListBasedRecordSet.java", "methodName": "cursor"}, {"level": 2, "filename": "presto-thrift-testing-server/src/main/java/com/facebook/presto/connector/thrift/server/ListBasedRecordSet.java", "line_number": 55, "column_number": -1, "description": "start of procedure ListBasedRecordSet$ListBasedRecordCursor(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "ListBasedRecordSet$ListBasedRecordCursor.<init>(ListBasedRecordSet)"}, {"tag": "name_id", "value": "com.facebook.presto.connector.thrift.server.ListBasedRecordSet$ListBasedRecordCursor.<init>(com.face.6e87da26d0656e8ef5d2e98d10558494"}], "snippet": "    private class ListBasedRecordCursor", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-thrift-testing-server/src/main/java/com/facebook/presto/connector/thrift/server/ListBasedRecordSet.java", "methodName": "ListBasedRecordSet$ListBasedRecordCursor"}, {"level": 2, "filename": "presto-thrift-testing-server/src/main/java/com/facebook/presto/connector/thrift/server/ListBasedRecordSet.java", "line_number": 58, "column_number": -1, "description": "return from a call to ListBasedRecordSet$ListBasedRecordCursor.<init>(ListBasedRecordSet)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "ListBasedRecordSet$ListBasedRecordCursor.<init>(ListBasedRecordSet)"}, {"tag": "name_id", "value": "com.facebook.presto.connector.thrift.server.ListBasedRecordSet$ListBasedRecordCursor.<init>(com.face.6e87da26d0656e8ef5d2e98d10558494"}], "snippet": "        private int position = -1;", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-thrift-testing-server/src/main/java/com/facebook/presto/connector/thrift/server/ListBasedRecordSet.java", "methodName": "ListBasedRecordSet$ListBasedRecordCursor"}, {"level": 1, "filename": "presto-thrift-testing-server/src/main/java/com/facebook/presto/connector/thrift/server/ListBasedRecordSet.java", "line_number": 52, "column_number": -1, "description": "return from a call to RecordCursor ListBasedRecordSet.cursor()", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "RecordCursor ListBasedRecordSet.cursor()"}, {"tag": "name_id", "value": "com.facebook.presto.connector.thrift.server.ListBasedRecordSet.cursor():com.facebook.presto.spi.Reco.ad3104eaf07ff50e3c14bf6609a05e22"}], "snippet": "        return new ListBasedRecordCursor();", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-thrift-testing-server/src/main/java/com/facebook/presto/connector/thrift/server/ListBasedRecordSet.java", "methodName": "cursor"}, {"level": 1, "filename": "presto-thrift-testing-server/src/main/java/com/facebook/presto/connector/thrift/server/ListBasedRecordSet.java", "line_number": 79, "column_number": -1, "description": "start of procedure advanceNextPosition()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "boolean ListBasedRecordSet$ListBasedRecordCursor.advanceNextPosition()"}, {"tag": "name_id", "value": "com.facebook.presto.connector.thrift.server.ListBasedRecordSet$ListBasedRecordCursor.advanceNextPosi.e72cb1791d431061c1107111463035ae"}], "snippet": "        public boolean advanceNextPosition()", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-thrift-testing-server/src/main/java/com/facebook/presto/connector/thrift/server/ListBasedRecordSet.java", "methodName": "advanceNextPosition"}, {"level": 1, "filename": "presto-thrift-testing-server/src/main/java/com/facebook/presto/connector/thrift/server/ListBasedRecordSet.java", "line_number": 81, "column_number": -1, "description": "Taking false branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "false"}], "snippet": "            if (position >= totalRecords) {", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-thrift-testing-server/src/main/java/com/facebook/presto/connector/thrift/server/ListBasedRecordSet.java", "methodName": "advanceNextPosition"}, {"level": 1, "filename": "presto-thrift-testing-server/src/main/java/com/facebook/presto/connector/thrift/server/ListBasedRecordSet.java", "line_number": 84, "column_number": -1, "description": "", "node_tags": [], "snippet": "            position++;", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-thrift-testing-server/src/main/java/com/facebook/presto/connector/thrift/server/ListBasedRecordSet.java", "methodName": "advanceNextPosition"}, {"level": 1, "filename": "presto-thrift-testing-server/src/main/java/com/facebook/presto/connector/thrift/server/ListBasedRecordSet.java", "line_number": 85, "column_number": -1, "description": "Taking false branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "false"}], "snippet": "            return position < totalRecords;", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-thrift-testing-server/src/main/java/com/facebook/presto/connector/thrift/server/ListBasedRecordSet.java", "methodName": "advanceNextPosition"}, {"level": 1, "filename": "presto-thrift-testing-server/src/main/java/com/facebook/presto/connector/thrift/server/ListBasedRecordSet.java", "line_number": 85, "column_number": -1, "description": "return from a call to boolean ListBasedRecordSet$ListBasedRecordCursor.advanceNextPosition()", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "boolean ListBasedRecordSet$ListBasedRecordCursor.advanceNextPosition()"}, {"tag": "name_id", "value": "com.facebook.presto.connector.thrift.server.ListBasedRecordSet$ListBasedRecordCursor.advanceNextPosi.e72cb1791d431061c1107111463035ae"}], "snippet": "            return position < totalRecords;", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-thrift-testing-server/src/main/java/com/facebook/presto/connector/thrift/server/ListBasedRecordSet.java", "methodName": "advanceNextPosition"}], "combined_records": [{"level": 1, "filename": "presto-thrift-testing-server/src/main/java/com/facebook/presto/connector/thrift/server/ListBasedRecordSet.java", "line_number": 52, "column_number": -1, "description": "start of procedure cursor()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "RecordCursor ListBasedRecordSet.cursor()"}, {"tag": "name_id", "value": "com.facebook.presto.connector.thrift.server.ListBasedRecordSet.cursor():com.facebook.presto.spi.Reco.ad3104eaf07ff50e3c14bf6609a05e22"}], "snippet": "48.    @Override\n49.    public RecordCursor cursor()\n50.>     {\n51.        return new ListBasedRecordCursor();\n52.    }\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-thrift-testing-server/src/main/java/com/facebook/presto/connector/thrift/server/ListBasedRecordSet.java", "methodName": "cursor", "line_numbers": [50, 52]}, {"level": 2, "filename": "presto-thrift-testing-server/src/main/java/com/facebook/presto/connector/thrift/server/ListBasedRecordSet.java", "line_number": 58, "column_number": -1, "description": "start of procedure ListBasedRecordSet$ListBasedRecordCursor(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "ListBasedRecordSet$ListBasedRecordCursor.<init>(ListBasedRecordSet)"}, {"tag": "name_id", "value": "com.facebook.presto.connector.thrift.server.ListBasedRecordSet$ListBasedRecordCursor.<init>(com.face.6e87da26d0656e8ef5d2e98d10558494"}], "snippet": "53.\n54.    private class ListBasedRecordCursor\n55.>             implements RecordCursor\n56.    {\n57.        private int position = -1;\n58.> \n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-thrift-testing-server/src/main/java/com/facebook/presto/connector/thrift/server/ListBasedRecordSet.java", "methodName": "ListBasedRecordSet$ListBasedRecordCursor", "line_numbers": [55, 58]}, {"level": 1, "filename": "presto-thrift-testing-server/src/main/java/com/facebook/presto/connector/thrift/server/ListBasedRecordSet.java", "line_number": 52, "column_number": -1, "description": "return from a call to RecordCursor ListBasedRecordSet.cursor()", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "RecordCursor ListBasedRecordSet.cursor()"}, {"tag": "name_id", "value": "com.facebook.presto.connector.thrift.server.ListBasedRecordSet.cursor():com.facebook.presto.spi.Reco.ad3104eaf07ff50e3c14bf6609a05e22"}], "snippet": "50.    {\n51.        return new ListBasedRecordCursor();\n52.    }\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-thrift-testing-server/src/main/java/com/facebook/presto/connector/thrift/server/ListBasedRecordSet.java", "methodName": "cursor", "line_numbers": [52]}, {"level": 1, "filename": "presto-thrift-testing-server/src/main/java/com/facebook/presto/connector/thrift/server/ListBasedRecordSet.java", "line_number": 85, "column_number": -1, "description": "start of procedure advanceNextPosition()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "boolean ListBasedRecordSet$ListBasedRecordCursor.advanceNextPosition()"}, {"tag": "name_id", "value": "com.facebook.presto.connector.thrift.server.ListBasedRecordSet$ListBasedRecordCursor.advanceNextPosi.e72cb1791d431061c1107111463035ae"}], "snippet": "77.        @Override\n78.        public boolean advanceNextPosition()\n79.>         {\n80.            if (position >= totalRecords) {\n81.>                 return false;\n82.            }\n83.            position++;\n84.>             return position < totalRecords;\n85.        }\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-thrift-testing-server/src/main/java/com/facebook/presto/connector/thrift/server/ListBasedRecordSet.java", "methodName": "advanceNextPosition", "line_numbers": [79, 81, 84, 85, 85]}], "infer_explore": [{"level": 0, "filename": "presto-thrift-testing-server/src/test/java/com/facebook/presto/connector/thrift/server/TestListBasedRecordSet.java", "line_number": 34, "column_number": -1, "description": "start of procedure testEmptyCursor()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void TestListBasedRecordSet.testEmptyCursor()"}, {"tag": "name_id", "value": "com.facebook.presto.connector.thrift.server.TestListBasedRecordSet.testEmptyCursor():void.4ccd1dab8ef41a7d77e427e3a865d759"}], "snippet": "31. {\n32.     @Test\n33. >     public void testEmptyCursor()\n34.             throws Exception\n35.     {\n"}, {"level": 0, "filename": "presto-thrift-testing-server/src/test/java/com/facebook/presto/connector/thrift/server/TestListBasedRecordSet.java", "line_number": 37, "column_number": -1, "description": "", "node_tags": [], "snippet": "34.             throws Exception\n35.     {\n36. >         ListBasedRecordSet recordSet = new ListBasedRecordSet(ImmutableList.of(), ImmutableList.of(BIGINT, INTEGER));\n37.         assertEquals(recordSet.getColumnTypes(), ImmutableList.of(BIGINT, INTEGER));\n38.         RecordCursor cursor = recordSet.cursor();\n"}, {"level": 1, "filename": "presto-thrift-testing-server/src/main/java/com/facebook/presto/connector/thrift/server/ListBasedRecordSet.java", "line_number": 34, "column_number": -1, "description": "start of procedure ListBasedRecordSet(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "ListBasedRecordSet.<init>(List,List)"}, {"tag": "name_id", "value": "com.facebook.presto.connector.thrift.server.ListBasedRecordSet.<init>(java.util.List,java.util.List).fcd90b819b7ce2d5451add4f74f1f142"}], "snippet": "31.     private final int totalRecords;\n32. \n33. >     public ListBasedRecordSet(List<List<String>> keys, List<Type> types)\n34.     {\n35.         this.types = requireNonNull(types, \"types is null\");\n"}, {"level": 1, "filename": "presto-thrift-testing-server/src/main/java/com/facebook/presto/connector/thrift/server/ListBasedRecordSet.java", "line_number": 35, "column_number": -1, "description": "", "node_tags": [], "snippet": "32. \n33.     public ListBasedRecordSet(List<List<String>> keys, List<Type> types)\n34. >     {\n35.         this.types = requireNonNull(types, \"types is null\");\n36.         this.keys = requireNonNull(keys, \"types is null\");\n"}, {"level": 1, "filename": "presto-thrift-testing-server/src/main/java/com/facebook/presto/connector/thrift/server/ListBasedRecordSet.java", "line_number": 36, "column_number": -1, "description": "", "node_tags": [], "snippet": "33.     public ListBasedRecordSet(List<List<String>> keys, List<Type> types)\n34.     {\n35. >         this.types = requireNonNull(types, \"types is null\");\n36.         this.keys = requireNonNull(keys, \"types is null\");\n37.         checkArgument(keys.isEmpty() || keys.size() == types.size(),\n"}, {"level": 1, "filename": "presto-thrift-testing-server/src/main/java/com/facebook/presto/connector/thrift/server/ListBasedRecordSet.java", "line_number": 37, "column_number": -1, "description": "", "node_tags": [], "snippet": "34.     {\n35.         this.types = requireNonNull(types, \"types is null\");\n36. >         this.keys = requireNonNull(keys, \"types is null\");\n37.         checkArgument(keys.isEmpty() || keys.size() == types.size(),\n38.                 \"number of types and key columns must match\");\n"}, {"level": 1, "filename": "presto-thrift-testing-server/src/main/java/com/facebook/presto/connector/thrift/server/ListBasedRecordSet.java", "line_number": 38, "column_number": -1, "description": "Taking false branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "false"}], "snippet": "35.         this.types = requireNonNull(types, \"types is null\");\n36.         this.keys = requireNonNull(keys, \"types is null\");\n37. >         checkArgument(keys.isEmpty() || keys.size() == types.size(),\n38.                 \"number of types and key columns must match\");\n39.         this.totalRecords = keys.isEmpty() ? 0 : keys.get(0).size();\n"}, {"level": 1, "filename": "presto-thrift-testing-server/src/main/java/com/facebook/presto/connector/thrift/server/ListBasedRecordSet.java", "line_number": 40, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "37.         checkArgument(keys.isEmpty() || keys.size() == types.size(),\n38.                 \"number of types and key columns must match\");\n39. >         this.totalRecords = keys.isEmpty() ? 0 : keys.get(0).size();\n40.     }\n41. \n"}, {"level": 1, "filename": "presto-thrift-testing-server/src/main/java/com/facebook/presto/connector/thrift/server/ListBasedRecordSet.java", "line_number": 41, "column_number": -1, "description": "return from a call to ListBasedRecordSet.<init>(List,List)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "ListBasedRecordSet.<init>(List,List)"}, {"tag": "name_id", "value": "com.facebook.presto.connector.thrift.server.ListBasedRecordSet.<init>(java.util.List,java.util.List).fcd90b819b7ce2d5451add4f74f1f142"}], "snippet": "38.                 \"number of types and key columns must match\");\n39.         this.totalRecords = keys.isEmpty() ? 0 : keys.get(0).size();\n40. >     }\n41. \n42.     @Override\n"}, {"level": 0, "filename": "presto-thrift-testing-server/src/test/java/com/facebook/presto/connector/thrift/server/TestListBasedRecordSet.java", "line_number": 38, "column_number": -1, "description": "", "node_tags": [], "snippet": "35.     {\n36.         ListBasedRecordSet recordSet = new ListBasedRecordSet(ImmutableList.of(), ImmutableList.of(BIGINT, INTEGER));\n37. >         assertEquals(recordSet.getColumnTypes(), ImmutableList.of(BIGINT, INTEGER));\n38.         RecordCursor cursor = recordSet.cursor();\n39.         assertFalse(cursor.advanceNextPosition());\n"}, {"level": 1, "filename": "presto-thrift-testing-server/src/main/java/com/facebook/presto/connector/thrift/server/ListBasedRecordSet.java", "line_number": 44, "column_number": -1, "description": "start of procedure getColumnTypes()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "List ListBasedRecordSet.getColumnTypes()"}, {"tag": "name_id", "value": "com.facebook.presto.connector.thrift.server.ListBasedRecordSet.getColumnTypes():java.util.List.8909fc365eb166ad07471936e1828858"}], "snippet": "41. \n42.     @Override\n43. >     public List<Type> getColumnTypes()\n44.     {\n45.         return types;\n"}, {"level": 1, "filename": "presto-thrift-testing-server/src/main/java/com/facebook/presto/connector/thrift/server/ListBasedRecordSet.java", "line_number": 46, "column_number": -1, "description": "return from a call to List ListBasedRecordSet.getColumnTypes()", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "List ListBasedRecordSet.getColumnTypes()"}, {"tag": "name_id", "value": "com.facebook.presto.connector.thrift.server.ListBasedRecordSet.getColumnTypes():java.util.List.8909fc365eb166ad07471936e1828858"}], "snippet": "43.     public List<Type> getColumnTypes()\n44.     {\n45. >         return types;\n46.     }\n47. \n"}, {"level": 0, "filename": "presto-thrift-testing-server/src/test/java/com/facebook/presto/connector/thrift/server/TestListBasedRecordSet.java", "line_number": 38, "column_number": -1, "description": "Skipping assertEquals(...): unknown method", "node_tags": [], "snippet": "35.     {\n36.         ListBasedRecordSet recordSet = new ListBasedRecordSet(ImmutableList.of(), ImmutableList.of(BIGINT, INTEGER));\n37. >         assertEquals(recordSet.getColumnTypes(), ImmutableList.of(BIGINT, INTEGER));\n38.         RecordCursor cursor = recordSet.cursor();\n39.         assertFalse(cursor.advanceNextPosition());\n"}, {"level": 0, "filename": "presto-thrift-testing-server/src/test/java/com/facebook/presto/connector/thrift/server/TestListBasedRecordSet.java", "line_number": 39, "column_number": -1, "description": "", "node_tags": [], "snippet": "36.         ListBasedRecordSet recordSet = new ListBasedRecordSet(ImmutableList.of(), ImmutableList.of(BIGINT, INTEGER));\n37.         assertEquals(recordSet.getColumnTypes(), ImmutableList.of(BIGINT, INTEGER));\n38. >         RecordCursor cursor = recordSet.cursor();\n39.         assertFalse(cursor.advanceNextPosition());\n40.     }\n"}, {"level": 1, "filename": "presto-thrift-testing-server/src/main/java/com/facebook/presto/connector/thrift/server/ListBasedRecordSet.java", "line_number": 50, "column_number": -1, "description": "start of procedure cursor()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "RecordCursor ListBasedRecordSet.cursor()"}, {"tag": "name_id", "value": "com.facebook.presto.connector.thrift.server.ListBasedRecordSet.cursor():com.facebook.presto.spi.Reco.ad3104eaf07ff50e3c14bf6609a05e22"}], "snippet": "47. \n48.     @Override\n49. >     public RecordCursor cursor()\n50.     {\n51.         return new ListBasedRecordCursor();\n"}, {"level": 1, "filename": "presto-thrift-testing-server/src/main/java/com/facebook/presto/connector/thrift/server/ListBasedRecordSet.java", "line_number": 52, "column_number": -1, "description": "", "node_tags": [], "snippet": "49.     public RecordCursor cursor()\n50.     {\n51. >         return new ListBasedRecordCursor();\n52.     }\n53. \n"}, {"level": 2, "filename": "presto-thrift-testing-server/src/main/java/com/facebook/presto/connector/thrift/server/ListBasedRecordSet.java", "line_number": 55, "column_number": -1, "description": "start of procedure ListBasedRecordSet$ListBasedRecordCursor(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "ListBasedRecordSet$ListBasedRecordCursor.<init>(ListBasedRecordSet)"}, {"tag": "name_id", "value": "com.facebook.presto.connector.thrift.server.ListBasedRecordSet$ListBasedRecordCursor.<init>(com.face.6e87da26d0656e8ef5d2e98d10558494"}], "snippet": "52.     }\n53. \n54. >     private class ListBasedRecordCursor\n55.             implements RecordCursor\n56.     {\n"}, {"level": 2, "filename": "presto-thrift-testing-server/src/main/java/com/facebook/presto/connector/thrift/server/ListBasedRecordSet.java", "line_number": 58, "column_number": -1, "description": "return from a call to ListBasedRecordSet$ListBasedRecordCursor.<init>(ListBasedRecordSet)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "ListBasedRecordSet$ListBasedRecordCursor.<init>(ListBasedRecordSet)"}, {"tag": "name_id", "value": "com.facebook.presto.connector.thrift.server.ListBasedRecordSet$ListBasedRecordCursor.<init>(com.face.6e87da26d0656e8ef5d2e98d10558494"}], "snippet": "55.             implements RecordCursor\n56.     {\n57. >         private int position = -1;\n58. \n59.         @Override\n"}, {"level": 1, "filename": "presto-thrift-testing-server/src/main/java/com/facebook/presto/connector/thrift/server/ListBasedRecordSet.java", "line_number": 52, "column_number": -1, "description": "return from a call to RecordCursor ListBasedRecordSet.cursor()", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "RecordCursor ListBasedRecordSet.cursor()"}, {"tag": "name_id", "value": "com.facebook.presto.connector.thrift.server.ListBasedRecordSet.cursor():com.facebook.presto.spi.Reco.ad3104eaf07ff50e3c14bf6609a05e22"}], "snippet": "49.     public RecordCursor cursor()\n50.     {\n51. >         return new ListBasedRecordCursor();\n52.     }\n53. \n"}, {"level": 0, "filename": "presto-thrift-testing-server/src/test/java/com/facebook/presto/connector/thrift/server/TestListBasedRecordSet.java", "line_number": 40, "column_number": -1, "description": "", "node_tags": [], "snippet": "37.         assertEquals(recordSet.getColumnTypes(), ImmutableList.of(BIGINT, INTEGER));\n38.         RecordCursor cursor = recordSet.cursor();\n39. >         assertFalse(cursor.advanceNextPosition());\n40.     }\n41. \n"}, {"level": 1, "filename": "presto-thrift-testing-server/src/main/java/com/facebook/presto/connector/thrift/server/ListBasedRecordSet.java", "line_number": 79, "column_number": -1, "description": "start of procedure advanceNextPosition()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "boolean ListBasedRecordSet$ListBasedRecordCursor.advanceNextPosition()"}, {"tag": "name_id", "value": "com.facebook.presto.connector.thrift.server.ListBasedRecordSet$ListBasedRecordCursor.advanceNextPosi.e72cb1791d431061c1107111463035ae"}], "snippet": "76. \n77.         @Override\n78. >         public boolean advanceNextPosition()\n79.         {\n80.             if (position >= totalRecords) {\n"}, {"level": 1, "filename": "presto-thrift-testing-server/src/main/java/com/facebook/presto/connector/thrift/server/ListBasedRecordSet.java", "line_number": 81, "column_number": -1, "description": "Taking false branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "false"}], "snippet": "78.         public boolean advanceNextPosition()\n79.         {\n80. >             if (position >= totalRecords) {\n81.                 return false;\n82.             }\n"}, {"level": 1, "filename": "presto-thrift-testing-server/src/main/java/com/facebook/presto/connector/thrift/server/ListBasedRecordSet.java", "line_number": 84, "column_number": -1, "description": "", "node_tags": [], "snippet": "81.                 return false;\n82.             }\n83. >             position++;\n84.             return position < totalRecords;\n85.         }\n"}, {"level": 1, "filename": "presto-thrift-testing-server/src/main/java/com/facebook/presto/connector/thrift/server/ListBasedRecordSet.java", "line_number": 85, "column_number": -1, "description": "Taking false branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "false"}], "snippet": "82.             }\n83.             position++;\n84. >             return position < totalRecords;\n85.         }\n86. \n"}, {"level": 1, "filename": "presto-thrift-testing-server/src/main/java/com/facebook/presto/connector/thrift/server/ListBasedRecordSet.java", "line_number": 85, "column_number": -1, "description": "return from a call to boolean ListBasedRecordSet$ListBasedRecordCursor.advanceNextPosition()", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "boolean ListBasedRecordSet$ListBasedRecordCursor.advanceNextPosition()"}, {"tag": "name_id", "value": "com.facebook.presto.connector.thrift.server.ListBasedRecordSet$ListBasedRecordCursor.advanceNextPosi.e72cb1791d431061c1107111463035ae"}], "snippet": "82.             }\n83.             position++;\n84. >             return position < totalRecords;\n85.         }\n86. \n"}]}, {"url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/AircompressorCompressor.java", "rawCode": "/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage com.facebook.presto.rcfile;\n\nimport org.apache.hadoop.io.compress.CompressionCodec;\nimport org.apache.hadoop.io.compress.CompressionOutputStream;\nimport org.apache.hadoop.io.compress.Compressor;\n\nimport java.io.IOException;\nimport java.io.UncheckedIOException;\nimport java.util.function.Supplier;\n\nimport static java.util.Objects.requireNonNull;\n\npublic class AircompressorCompressor\n        implements RcFileCompressor\n{\n    private final CompressionCodec codec;\n\n    public AircompressorCompressor(CompressionCodec codec)\n    {\n        this.codec = requireNonNull(codec, \"codec is null\");\n    }\n\n    @Override\n    public CompressedSliceOutput createCompressedSliceOutput(int minChunkSize, int maxChunkSize)\n    {\n        return new AircompressorCompressedSliceOutputSupplier(codec, minChunkSize, maxChunkSize).get();\n    }\n\n    private static class AircompressorCompressedSliceOutputSupplier\n            implements Supplier<CompressedSliceOutput>\n    {\n        private final CompressionCodec codec;\n        private final Compressor compressor;\n        private final ChunkedSliceOutput compressedOutput;\n\n        public AircompressorCompressedSliceOutputSupplier(CompressionCodec codec, int minChunkSize, int maxChunkSize)\n        {\n            this.codec = requireNonNull(codec, \"codec is null\");\n            this.compressor = codec.createCompressor();\n            this.compressedOutput = new ChunkedSliceOutput(minChunkSize, maxChunkSize);\n        }\n\n        @Override\n        public CompressedSliceOutput get()\n        {\n            try {\n                compressor.reset();\n                compressedOutput.reset();\n                CompressionOutputStream compressionStream = codec.createOutputStream(compressedOutput, compressor);\n                return new CompressedSliceOutput(compressionStream, compressedOutput, this, () -> {});\n            }\n            catch (IOException e) {\n                throw new UncheckedIOException(e);\n            }\n        }\n    }\n}\n", "methodName": "RcFileCompressor$CompressedSliceOutput AircompressorCompressor.createCompressedSliceOutput(int,int)", "exampleID": 24, "dataset": "infer", "filepath": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/AircompressorCompressor.java", "source": "com.facebook.presto.rcfile.ChunkedSliceOutput", "sourceLine": 39, "qualifier": "Resource of type $$com.facebook.presto.rcfile.ChunkedSliceOutput/$ acquired by call to @@AircompressorCompressor$AircompressorCompressedSliceOutputSupplier(...)/@ is not released", "steps": [{"line": 57, "source": "com.facebook.presto.rcfile.ChunkedSliceOutput", "filepath": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/AircompressorCompressor.java", "methodName": "AircompressorCompressor.get", "exampleID": 25}], "line_number": 39, "records": [{"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/AircompressorCompressor.java", "line_number": 49, "column_number": -1, "description": "start of procedure AircompressorCompressor$AircompressorCompressedSliceOutputSupplier(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "AircompressorCompressor$AircompressorCompressedSliceOutputSupplier.<init>(CompressionCodec,int,int)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.AircompressorCompressor$AircompressorCompressedSliceOutputSupplier.<init>.23220fce0bba1b1f231f5fa0bbc416ee"}], "snippet": "        public AircompressorCompressedSliceOutputSupplier(CompressionCodec codec, int minChunkSize, int maxChunkSize)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/AircompressorCompressor.java", "methodName": "AircompressorCompressor$AircompressorCompressedSliceOutputSupplier"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/AircompressorCompressor.java", "line_number": 50, "column_number": -1, "description": "", "node_tags": [], "snippet": "        {", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/AircompressorCompressor.java", "methodName": "AircompressorCompressor$AircompressorCompressedSliceOutputSupplier"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/AircompressorCompressor.java", "line_number": 51, "column_number": -1, "description": "", "node_tags": [], "snippet": "            this.codec = requireNonNull(codec, \"codec is null\");", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/AircompressorCompressor.java", "methodName": "AircompressorCompressor$AircompressorCompressedSliceOutputSupplier"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/AircompressorCompressor.java", "line_number": 52, "column_number": -1, "description": "", "node_tags": [], "snippet": "            this.compressor = codec.createCompressor();", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/AircompressorCompressor.java", "methodName": "AircompressorCompressor$AircompressorCompressedSliceOutputSupplier"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/AircompressorCompressor.java", "line_number": 53, "column_number": -1, "description": "", "node_tags": [], "snippet": "            this.compressedOutput = new ChunkedSliceOutput(minChunkSize, maxChunkSize);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/AircompressorCompressor.java", "methodName": "AircompressorCompressor$AircompressorCompressedSliceOutputSupplier"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 65, "column_number": -1, "description": "start of procedure ChunkedSliceOutput(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "ChunkedSliceOutput.<init>(int,int)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.ChunkedSliceOutput.<init>(int,int).dcc3ef3d7139493265a20a0db2acddab"}], "snippet": "    public ChunkedSliceOutput(int minChunkSize, int maxChunkSize)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 66, "column_number": -1, "description": "Skipping SliceOutput(): unknown method", "node_tags": [], "snippet": "    {", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 52, "column_number": -1, "description": "", "node_tags": [], "snippet": "    private final List<Slice> closedSlices = new ArrayList<>();", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 67, "column_number": -1, "description": "", "node_tags": [], "snippet": "        this.chunkSupplier = new ChunkSupplier(minChunkSize, maxChunkSize);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 354, "column_number": -1, "description": "start of procedure ChunkedSliceOutput$ChunkSupplier(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "ChunkedSliceOutput$ChunkSupplier.<init>(int,int)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.ChunkedSliceOutput$ChunkSupplier.<init>(int,int).6c64b5dd5303403757eb03242b60311c"}], "snippet": "        public ChunkSupplier(int minChunkSize, int maxChunkSize)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput$ChunkSupplier"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 355, "column_number": -1, "description": "", "node_tags": [], "snippet": "        {", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput$ChunkSupplier"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 349, "column_number": -1, "description": "", "node_tags": [], "snippet": "        private final List<byte[]> bufferPool = new ArrayList<>();", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput$ChunkSupplier"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 350, "column_number": -1, "description": "", "node_tags": [], "snippet": "        private final List<byte[]> usedBuffers = new ArrayList<>();", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput$ChunkSupplier"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 356, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "            checkArgument(minChunkSize >= MINIMUM_CHUNK_SIZE, \"minimum chunk size of \" + MINIMUM_CHUNK_SIZE + \" required\");", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput$ChunkSupplier"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 357, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "            checkArgument(maxChunkSize <= MAXIMUM_CHUNK_SIZE, \"maximum chunk size of \" + MAXIMUM_CHUNK_SIZE + \" required\");", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput$ChunkSupplier"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 358, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "            checkArgument(minChunkSize <= maxChunkSize, \"minimum chunk size must be less than maximum chunk size\");", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput$ChunkSupplier"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 360, "column_number": -1, "description": "", "node_tags": [], "snippet": "            this.currentSize = minChunkSize;", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput$ChunkSupplier"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 361, "column_number": -1, "description": "", "node_tags": [], "snippet": "            this.maxChunkSize = maxChunkSize;", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput$ChunkSupplier"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 362, "column_number": -1, "description": "return from a call to ChunkedSliceOutput$ChunkSupplier.<init>(int,int)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "ChunkedSliceOutput$ChunkSupplier.<init>(int,int)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.ChunkedSliceOutput$ChunkSupplier.<init>(int,int).6c64b5dd5303403757eb03242b60311c"}], "snippet": "        }", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput$ChunkSupplier"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 67, "column_number": -1, "description": "", "node_tags": [], "snippet": "        this.chunkSupplier = new ChunkSupplier(minChunkSize, maxChunkSize);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 69, "column_number": -1, "description": "", "node_tags": [], "snippet": "        this.buffer = chunkSupplier.get();", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 370, "column_number": -1, "description": "start of procedure get()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "byte[] ChunkedSliceOutput$ChunkSupplier.get()"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.ChunkedSliceOutput$ChunkSupplier.get():byte[].77d224f45f2101d77750ac4d709293f2"}], "snippet": "        public byte[] get()", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "methodName": "get"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 373, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "            if (bufferPool.isEmpty()) {", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "methodName": "get"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 374, "column_number": -1, "description": "", "node_tags": [], "snippet": "                currentSize = min(multiplyExact(currentSize, 2), maxChunkSize);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "methodName": "get"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 375, "column_number": -1, "description": "", "node_tags": [], "snippet": "                buffer = new byte[currentSize];", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "methodName": "get"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 381, "column_number": -1, "description": "Skipping add(...): unknown method", "node_tags": [], "snippet": "            usedBuffers.add(buffer);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "methodName": "get"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 382, "column_number": -1, "description": "return from a call to byte[] ChunkedSliceOutput$ChunkSupplier.get()", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "byte[] ChunkedSliceOutput$ChunkSupplier.get()"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.ChunkedSliceOutput$ChunkSupplier.get():byte[].77d224f45f2101d77750ac4d709293f2"}], "snippet": "            return buffer;", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "methodName": "get"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 69, "column_number": -1, "description": "", "node_tags": [], "snippet": "        this.buffer = chunkSupplier.get();", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 70, "column_number": -1, "description": "", "node_tags": [], "snippet": "        this.slice = Slices.wrappedBuffer(buffer);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 71, "column_number": -1, "description": "return from a call to ChunkedSliceOutput.<init>(int,int)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "ChunkedSliceOutput.<init>(int,int)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.ChunkedSliceOutput.<init>(int,int).dcc3ef3d7139493265a20a0db2acddab"}], "snippet": "    }", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/AircompressorCompressor.java", "line_number": 53, "column_number": -1, "description": "", "node_tags": [], "snippet": "            this.compressedOutput = new ChunkedSliceOutput(minChunkSize, maxChunkSize);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/AircompressorCompressor.java", "methodName": "AircompressorCompressor$AircompressorCompressedSliceOutputSupplier"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/AircompressorCompressor.java", "line_number": 54, "column_number": -1, "description": "return from a call to AircompressorCompressor$AircompressorCompressedSliceOutputSupplier.<init>(CompressionCodec,int,int)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "AircompressorCompressor$AircompressorCompressedSliceOutputSupplier.<init>(CompressionCodec,int,int)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.AircompressorCompressor$AircompressorCompressedSliceOutputSupplier.<init>.23220fce0bba1b1f231f5fa0bbc416ee"}], "snippet": "        }", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/AircompressorCompressor.java", "methodName": "AircompressorCompressor$AircompressorCompressedSliceOutputSupplier"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/AircompressorCompressor.java", "line_number": 57, "column_number": -1, "description": "start of procedure get()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "RcFileCompressor$CompressedSliceOutput AircompressorCompressor$AircompressorCompressedSliceOutputSupplier.get()"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.AircompressorCompressor$AircompressorCompressedSliceOutputSupplier.get():.8b92321997c3e4b818894210337cd0c4"}], "snippet": "        public CompressedSliceOutput get()", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/AircompressorCompressor.java", "methodName": "get"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/AircompressorCompressor.java", "line_number": 60, "column_number": -1, "description": "Skipping reset(): unknown method", "node_tags": [], "snippet": "                compressor.reset();", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/AircompressorCompressor.java", "methodName": "get"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/AircompressorCompressor.java", "line_number": 61, "column_number": -1, "description": "", "node_tags": [], "snippet": "                compressedOutput.reset();", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/AircompressorCompressor.java", "methodName": "get"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 84, "column_number": -1, "description": "start of procedure reset()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void ChunkedSliceOutput.reset()"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.ChunkedSliceOutput.reset():void.f6e8af927f86312abfcbaa27edde2c62"}], "snippet": "        chunkSupplier.reset();", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "methodName": "reset"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 364, "column_number": -1, "description": "start of procedure reset()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void ChunkedSliceOutput$ChunkSupplier.reset()"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.ChunkedSliceOutput$ChunkSupplier.reset():void.59b9cedbad5aab9e8e428475e57b3cc4"}], "snippet": "        public void reset()", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "methodName": "reset"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 366, "column_number": -1, "description": "Skipping addAll(...): unknown method", "node_tags": [], "snippet": "            bufferPool.addAll(0, usedBuffers);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "methodName": "reset"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 367, "column_number": -1, "description": "", "node_tags": [], "snippet": "            usedBuffers.clear();", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "methodName": "reset"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 368, "column_number": -1, "description": "return from a call to void ChunkedSliceOutput$ChunkSupplier.reset()", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "void ChunkedSliceOutput$ChunkSupplier.reset()"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.ChunkedSliceOutput$ChunkSupplier.reset():void.59b9cedbad5aab9e8e428475e57b3cc4"}], "snippet": "        }", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "methodName": "reset"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 85, "column_number": -1, "description": "", "node_tags": [], "snippet": "        closedSlices.clear();", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "methodName": "reset"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 87, "column_number": -1, "description": "", "node_tags": [], "snippet": "        buffer = chunkSupplier.get();", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "methodName": "reset"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 370, "column_number": -1, "description": "start of procedure get()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "byte[] ChunkedSliceOutput$ChunkSupplier.get()"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.ChunkedSliceOutput$ChunkSupplier.get():byte[].77d224f45f2101d77750ac4d709293f2"}], "snippet": "        public byte[] get()", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "methodName": "get"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 373, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "            if (bufferPool.isEmpty()) {", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "methodName": "get"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 374, "column_number": -1, "description": "", "node_tags": [], "snippet": "                currentSize = min(multiplyExact(currentSize, 2), maxChunkSize);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "methodName": "get"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 375, "column_number": -1, "description": "", "node_tags": [], "snippet": "                buffer = new byte[currentSize];", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "methodName": "get"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 381, "column_number": -1, "description": "Skipping add(...): unknown method", "node_tags": [], "snippet": "            usedBuffers.add(buffer);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "methodName": "get"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 382, "column_number": -1, "description": "return from a call to byte[] ChunkedSliceOutput$ChunkSupplier.get()", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "byte[] ChunkedSliceOutput$ChunkSupplier.get()"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.ChunkedSliceOutput$ChunkSupplier.get():byte[].77d224f45f2101d77750ac4d709293f2"}], "snippet": "            return buffer;", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "methodName": "get"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 87, "column_number": -1, "description": "", "node_tags": [], "snippet": "        buffer = chunkSupplier.get();", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "methodName": "reset"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 88, "column_number": -1, "description": "", "node_tags": [], "snippet": "        slice = Slices.wrappedBuffer(buffer);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "methodName": "reset"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 90, "column_number": -1, "description": "", "node_tags": [], "snippet": "        closedSlicesRetainedSize = 0;", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "methodName": "reset"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 91, "column_number": -1, "description": "", "node_tags": [], "snippet": "        streamOffset = 0;", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "methodName": "reset"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 92, "column_number": -1, "description": "", "node_tags": [], "snippet": "        bufferPosition = 0;", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "methodName": "reset"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 93, "column_number": -1, "description": "return from a call to void ChunkedSliceOutput.reset()", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "void ChunkedSliceOutput.reset()"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.ChunkedSliceOutput.reset():void.f6e8af927f86312abfcbaa27edde2c62"}], "snippet": "    }", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "methodName": "reset"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/AircompressorCompressor.java", "line_number": 62, "column_number": -1, "description": "Skipping createOutputStream(...): unknown method", "node_tags": [], "snippet": "                CompressionOutputStream compressionStream = codec.createOutputStream(compressedOutput, compressor);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/AircompressorCompressor.java", "methodName": "get"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/AircompressorCompressor.java", "line_number": 63, "column_number": -1, "description": "", "node_tags": [], "snippet": "                return new CompressedSliceOutput(compressionStream, compressedOutput, this, () -> {});", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/AircompressorCompressor.java", "methodName": "get"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/RcFileCompressor.java", "line_number": 49, "column_number": -1, "description": "start of procedure RcFileCompressor$CompressedSliceOutput(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "RcFileCompressor$CompressedSliceOutput.<init>(OutputStream,ChunkedSliceOutput,AircompressorCompressor$AircompressorCompressedSliceOutputSupplier,Runnable)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.RcFileCompressor$CompressedSliceOutput.<init>(java.io.OutputStream,com.fa.688dadb29b88082cb013e687d29be705"}], "snippet": "        public CompressedSliceOutput(OutputStream compressionStream, ChunkedSliceOutput bufferedOutput, Supplier<CompressedSliceOutput> resetFactory, Runnable onDestroy)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/RcFileCompressor.java", "methodName": "RcFileCompressor$CompressedSliceOutput"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/RcFileCompressor.java", "line_number": 51, "column_number": -1, "description": "", "node_tags": [], "snippet": "            super(compressionStream);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/RcFileCompressor.java", "methodName": "RcFileCompressor$CompressedSliceOutput"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 55, "column_number": -1, "description": "start of procedure BufferedOutputStreamSliceOutput(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "BufferedOutputStreamSliceOutput.<init>(OutputStream)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.BufferedOutputStreamSliceOutput.<init>(java.io.OutputStream).8801c983a81063e2862b368a4ea830a7"}], "snippet": "    public BufferedOutputStreamSliceOutput(OutputStream outputStream)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "methodName": "BufferedOutputStreamSliceOutput"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 56, "column_number": -1, "description": "Skipping SliceOutput(): unknown method", "node_tags": [], "snippet": "    {", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "methodName": "BufferedOutputStreamSliceOutput"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 57, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "        if (outputStream == null) {", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "methodName": "BufferedOutputStreamSliceOutput"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 58, "column_number": -1, "description": "", "node_tags": [], "snippet": "            throw new NullPointerException(\"outputStream is null\");", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "methodName": "BufferedOutputStreamSliceOutput"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 64, "column_number": -1, "description": "exception java.lang.NullPointerException", "node_tags": [{"tag": "name", "value": "java.lang.NullPointerException"}, {"tag": "kind", "value": "exception"}], "snippet": "    }", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "methodName": "BufferedOutputStreamSliceOutput"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 64, "column_number": -1, "description": "return from a call to BufferedOutputStreamSliceOutput.<init>(OutputStream)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "BufferedOutputStreamSliceOutput.<init>(OutputStream)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.BufferedOutputStreamSliceOutput.<init>(java.io.OutputStream).8801c983a81063e2862b368a4ea830a7"}], "snippet": "    }", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "methodName": "BufferedOutputStreamSliceOutput"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/RcFileCompressor.java", "line_number": 55, "column_number": -1, "description": "exception java.lang.NullPointerException", "node_tags": [{"tag": "name", "value": "java.lang.NullPointerException"}, {"tag": "kind", "value": "exception"}], "snippet": "        }", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/RcFileCompressor.java", "methodName": "RcFileCompressor$CompressedSliceOutput"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/RcFileCompressor.java", "line_number": 55, "column_number": -1, "description": "return from a call to RcFileCompressor$CompressedSliceOutput.<init>(OutputStream,ChunkedSliceOutput,AircompressorCompressor$AircompressorCompressedSliceOutputSupplier,Runnable)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "RcFileCompressor$CompressedSliceOutput.<init>(OutputStream,ChunkedSliceOutput,AircompressorCompressor$AircompressorCompressedSliceOutputSupplier,Runnable)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.RcFileCompressor$CompressedSliceOutput.<init>(java.io.OutputStream,com.fa.688dadb29b88082cb013e687d29be705"}], "snippet": "        }", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/RcFileCompressor.java", "methodName": "RcFileCompressor$CompressedSliceOutput"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/AircompressorCompressor.java", "line_number": 65, "column_number": -1, "description": "Switch condition is false. Skipping switch case", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "false"}], "snippet": "            catch (IOException e) {", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/AircompressorCompressor.java", "methodName": "get"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/AircompressorCompressor.java", "line_number": 66, "column_number": -1, "description": "exception java.lang.NullPointerException", "node_tags": [{"tag": "name", "value": "java.lang.NullPointerException"}, {"tag": "kind", "value": "exception"}], "snippet": "                throw new UncheckedIOException(e);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/AircompressorCompressor.java", "methodName": "get"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/AircompressorCompressor.java", "line_number": 66, "column_number": -1, "description": "return from a call to RcFileCompressor$CompressedSliceOutput AircompressorCompressor$AircompressorCompressedSliceOutputSupplier.get()", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "RcFileCompressor$CompressedSliceOutput AircompressorCompressor$AircompressorCompressedSliceOutputSupplier.get()"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.AircompressorCompressor$AircompressorCompressedSliceOutputSupplier.get():.8b92321997c3e4b818894210337cd0c4"}], "snippet": "                throw new UncheckedIOException(e);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/AircompressorCompressor.java", "methodName": "get"}], "combined_records": [{"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/AircompressorCompressor.java", "line_number": 53, "column_number": -1, "description": "start of procedure AircompressorCompressor$AircompressorCompressedSliceOutputSupplier(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "AircompressorCompressor$AircompressorCompressedSliceOutputSupplier.<init>(CompressionCodec,int,int)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.AircompressorCompressor$AircompressorCompressedSliceOutputSupplier.<init>.23220fce0bba1b1f231f5fa0bbc416ee"}], "snippet": "47.\n48.        public AircompressorCompressedSliceOutputSupplier(CompressionCodec codec, int minChunkSize, int maxChunkSize)\n49.>         {\n50.>             this.codec = requireNonNull(codec, \"codec is null\");\n51.>             this.compressor = codec.createCompressor();\n52.>             this.compressedOutput = new ChunkedSliceOutput(minChunkSize, maxChunkSize);\n53.        }\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/AircompressorCompressor.java", "methodName": "AircompressorCompressor$AircompressorCompressedSliceOutputSupplier", "line_numbers": [49, 50, 51, 52, 53]}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 67, "column_number": -1, "description": "start of procedure ChunkedSliceOutput(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "ChunkedSliceOutput.<init>(int,int)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.ChunkedSliceOutput.<init>(int,int).dcc3ef3d7139493265a20a0db2acddab"}], "snippet": "50.\n51.    private final List<Slice> closedSlices = new ArrayList<>();\n52.>     private long closedSlicesRetainedSize;\n53.\n54.    /**\n55.     * Offset of buffer within stream.\n56.     */\n57.    private long streamOffset;\n58.\n59.    /**\n60.     * Current position for writing in buffer.\n61.     */\n62.    private int bufferPosition;\n63.\n64.    public ChunkedSliceOutput(int minChunkSize, int maxChunkSize)\n65.>     {\n66.>         this.chunkSupplier = new ChunkSupplier(minChunkSize, maxChunkSize);\n67.> \n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput", "line_numbers": [65, 66, 52, 67]}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 362, "column_number": -1, "description": "start of procedure ChunkedSliceOutput$ChunkSupplier(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "ChunkedSliceOutput$ChunkSupplier.<init>(int,int)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.ChunkedSliceOutput$ChunkSupplier.<init>(int,int).6c64b5dd5303403757eb03242b60311c"}], "snippet": "347.\n348.        private final List<byte[]> bufferPool = new ArrayList<>();\n349.>         private final List<byte[]> usedBuffers = new ArrayList<>();\n350.> \n351.        private int currentSize;\n352.\n353.        public ChunkSupplier(int minChunkSize, int maxChunkSize)\n354.>         {\n355.>             checkArgument(minChunkSize >= MINIMUM_CHUNK_SIZE, \"minimum chunk size of \" + MINIMUM_CHUNK_SIZE + \" required\");\n356.>             checkArgument(maxChunkSize <= MAXIMUM_CHUNK_SIZE, \"maximum chunk size of \" + MAXIMUM_CHUNK_SIZE + \" required\");\n357.>             checkArgument(minChunkSize <= maxChunkSize, \"minimum chunk size must be less than maximum chunk size\");\n358.> \n359.            this.currentSize = minChunkSize;\n360.>             this.maxChunkSize = maxChunkSize;\n361.        }\n362.> \n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput$ChunkSupplier", "line_numbers": [354, 355, 349, 350, 356, 357, 358, 360, 361, 362]}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 69, "column_number": -1, "description": "", "node_tags": [], "snippet": "65.    {\n66.        this.chunkSupplier = new ChunkSupplier(minChunkSize, maxChunkSize);\n67.> \n68.        this.buffer = chunkSupplier.get();\n69.>         this.slice = Slices.wrappedBuffer(buffer);\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput", "line_numbers": [67, 69]}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 382, "column_number": -1, "description": "start of procedure get()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "byte[] ChunkedSliceOutput$ChunkSupplier.get()"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.ChunkedSliceOutput$ChunkSupplier.get():byte[].77d224f45f2101d77750ac4d709293f2"}], "snippet": "368.\n369.        public byte[] get()\n370.>         {\n371.            byte[] buffer;\n372.            if (bufferPool.isEmpty()) {\n373.>                 currentSize = min(multiplyExact(currentSize, 2), maxChunkSize);\n374.>                 buffer = new byte[currentSize];\n375.            }\n376.            else {\n377.                buffer = bufferPool.remove(0);\n378.                currentSize = buffer.length;\n379.            }\n380.            usedBuffers.add(buffer);\n381.>             return buffer;\n382.        }\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "methodName": "get", "line_numbers": [370, 373, 374, 375, 381, 382]}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 71, "column_number": -1, "description": "", "node_tags": [], "snippet": "67.\n68.        this.buffer = chunkSupplier.get();\n69.>         this.slice = Slices.wrappedBuffer(buffer);\n70.    }\n71.> \n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput", "line_numbers": [69, 70, 71]}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/AircompressorCompressor.java", "line_number": 54, "column_number": -1, "description": "", "node_tags": [], "snippet": "51.            this.compressor = codec.createCompressor();\n52.            this.compressedOutput = new ChunkedSliceOutput(minChunkSize, maxChunkSize);\n53.        }\n54.> \n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/AircompressorCompressor.java", "methodName": "AircompressorCompressor$AircompressorCompressedSliceOutputSupplier", "line_numbers": [53, 54]}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/AircompressorCompressor.java", "line_number": 61, "column_number": -1, "description": "start of procedure get()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "RcFileCompressor$CompressedSliceOutput AircompressorCompressor$AircompressorCompressedSliceOutputSupplier.get()"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.AircompressorCompressor$AircompressorCompressedSliceOutputSupplier.get():.8b92321997c3e4b818894210337cd0c4"}], "snippet": "55.        @Override\n56.        public CompressedSliceOutput get()\n57.>         {\n58.            try {\n59.                compressor.reset();\n60.>                 compressedOutput.reset();\n61.>                 CompressionOutputStream compressionStream = codec.createOutputStream(compressedOutput, compressor);\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/AircompressorCompressor.java", "methodName": "get", "line_numbers": [57, 60, 61]}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 84, "column_number": -1, "description": "start of procedure reset()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void ChunkedSliceOutput.reset()"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.ChunkedSliceOutput.reset():void.f6e8af927f86312abfcbaa27edde2c62"}], "snippet": "82.    {\n83.        chunkSupplier.reset();\n84.>         closedSlices.clear();\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "methodName": "reset", "line_numbers": [84]}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 368, "column_number": -1, "description": "start of procedure reset()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void ChunkedSliceOutput$ChunkSupplier.reset()"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.ChunkedSliceOutput$ChunkSupplier.reset():void.59b9cedbad5aab9e8e428475e57b3cc4"}], "snippet": "362.\n363.        public void reset()\n364.>         {\n365.            bufferPool.addAll(0, usedBuffers);\n366.>             usedBuffers.clear();\n367.        }\n368.> \n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "methodName": "reset", "line_numbers": [364, 366, 367, 368]}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 87, "column_number": -1, "description": "", "node_tags": [], "snippet": "83.        chunkSupplier.reset();\n84.        closedSlices.clear();\n85.> \n86.        buffer = chunkSupplier.get();\n87.>         slice = Slices.wrappedBuffer(buffer);\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "methodName": "reset", "line_numbers": [85, 87]}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 382, "column_number": -1, "description": "start of procedure get()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "byte[] ChunkedSliceOutput$ChunkSupplier.get()"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.ChunkedSliceOutput$ChunkSupplier.get():byte[].77d224f45f2101d77750ac4d709293f2"}], "snippet": "368.\n369.        public byte[] get()\n370.>         {\n371.            byte[] buffer;\n372.            if (bufferPool.isEmpty()) {\n373.>                 currentSize = min(multiplyExact(currentSize, 2), maxChunkSize);\n374.>                 buffer = new byte[currentSize];\n375.            }\n376.            else {\n377.                buffer = bufferPool.remove(0);\n378.                currentSize = buffer.length;\n379.            }\n380.            usedBuffers.add(buffer);\n381.>             return buffer;\n382.        }\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "methodName": "get", "line_numbers": [370, 373, 374, 375, 381, 382]}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 93, "column_number": -1, "description": "", "node_tags": [], "snippet": "85.\n86.        buffer = chunkSupplier.get();\n87.>         slice = Slices.wrappedBuffer(buffer);\n88.> \n89.        closedSlicesRetainedSize = 0;\n90.>         streamOffset = 0;\n91.>         bufferPosition = 0;\n92.    }\n93.> \n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "methodName": "reset", "line_numbers": [87, 88, 90, 91, 92, 93]}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/AircompressorCompressor.java", "line_number": 63, "column_number": -1, "description": "Skipping createOutputStream(...): unknown method", "node_tags": [], "snippet": "60.                compressedOutput.reset();\n61.                CompressionOutputStream compressionStream = codec.createOutputStream(compressedOutput, compressor);\n62.>                 return new CompressedSliceOutput(compressionStream, compressedOutput, this, () -> {});\n63.            }\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/AircompressorCompressor.java", "methodName": "get", "line_numbers": [62, 63]}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/RcFileCompressor.java", "line_number": 51, "column_number": -1, "description": "start of procedure RcFileCompressor$CompressedSliceOutput(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "RcFileCompressor$CompressedSliceOutput.<init>(OutputStream,ChunkedSliceOutput,AircompressorCompressor$AircompressorCompressedSliceOutputSupplier,Runnable)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.RcFileCompressor$CompressedSliceOutput.<init>(java.io.OutputStream,com.fa.688dadb29b88082cb013e687d29be705"}], "snippet": "47.         */\n48.        public CompressedSliceOutput(OutputStream compressionStream, ChunkedSliceOutput bufferedOutput, Supplier<CompressedSliceOutput> resetFactory, Runnable onDestroy)\n49.>         {\n50.            super(compressionStream);\n51.>             this.bufferedOutput = requireNonNull(bufferedOutput, \"bufferedOutput is null\");\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/RcFileCompressor.java", "methodName": "RcFileCompressor$CompressedSliceOutput", "line_numbers": [49, 51]}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 64, "column_number": -1, "description": "start of procedure BufferedOutputStreamSliceOutput(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "BufferedOutputStreamSliceOutput.<init>(OutputStream)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.BufferedOutputStreamSliceOutput.<init>(java.io.OutputStream).8801c983a81063e2862b368a4ea830a7"}], "snippet": "53.\n54.    public BufferedOutputStreamSliceOutput(OutputStream outputStream)\n55.>     {\n56.>         if (outputStream == null) {\n57.>             throw new NullPointerException(\"outputStream is null\");\n58.        }\n59.\n60.        this.outputStream = outputStream;\n61.        this.buffer = new byte[CHUNK_SIZE];\n62.        this.slice = Slices.wrappedBuffer(buffer);\n63.    }\n64.> \n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "methodName": "BufferedOutputStreamSliceOutput", "line_numbers": [55, 56, 57, 58, 64, 64]}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/RcFileCompressor.java", "line_number": 55, "column_number": -1, "description": "exception java.lang.NullPointerException", "node_tags": [{"tag": "name", "value": "java.lang.NullPointerException"}, {"tag": "kind", "value": "exception"}], "snippet": "53.            this.onDestroy = requireNonNull(onDestroy, \"onDestroy is null\");\n54.        }\n55.> \n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/RcFileCompressor.java", "methodName": "RcFileCompressor$CompressedSliceOutput", "line_numbers": [55, 55]}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/AircompressorCompressor.java", "line_number": 66, "column_number": -1, "description": "Switch condition is false. Skipping switch case", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "false"}], "snippet": "63.            }\n64.            catch (IOException e) {\n65.>                 throw new UncheckedIOException(e);\n66.            }\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/AircompressorCompressor.java", "methodName": "get", "line_numbers": [65, 66, 66]}], "infer_explore": [{"level": 0, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/AircompressorCompressor.java", "line_number": 37, "column_number": -1, "description": "start of procedure createCompressedSliceOutput(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "RcFileCompressor$CompressedSliceOutput AircompressorCompressor.createCompressedSliceOutput(int,int)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.AircompressorCompressor.createCompressedSliceOutput(int,int):com.facebook.d4532928111e5b4a852c5a8f738f56bd"}], "snippet": "34. \n35.     @Override\n36. >     public CompressedSliceOutput createCompressedSliceOutput(int minChunkSize, int maxChunkSize)\n37.     {\n38.         return new AircompressorCompressedSliceOutputSupplier(codec, minChunkSize, maxChunkSize).get();\n"}, {"level": 0, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/AircompressorCompressor.java", "line_number": 39, "column_number": -1, "description": "", "node_tags": [], "snippet": "36.     public CompressedSliceOutput createCompressedSliceOutput(int minChunkSize, int maxChunkSize)\n37.     {\n38. >         return new AircompressorCompressedSliceOutputSupplier(codec, minChunkSize, maxChunkSize).get();\n39.     }\n40. \n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/AircompressorCompressor.java", "line_number": 49, "column_number": -1, "description": "start of procedure AircompressorCompressor$AircompressorCompressedSliceOutputSupplier(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "AircompressorCompressor$AircompressorCompressedSliceOutputSupplier.<init>(CompressionCodec,int,int)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.AircompressorCompressor$AircompressorCompressedSliceOutputSupplier.<init>.23220fce0bba1b1f231f5fa0bbc416ee"}], "snippet": "46.         private final ChunkedSliceOutput compressedOutput;\n47. \n48. >         public AircompressorCompressedSliceOutputSupplier(CompressionCodec codec, int minChunkSize, int maxChunkSize)\n49.         {\n50.             this.codec = requireNonNull(codec, \"codec is null\");\n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/AircompressorCompressor.java", "line_number": 50, "column_number": -1, "description": "", "node_tags": [], "snippet": "47. \n48.         public AircompressorCompressedSliceOutputSupplier(CompressionCodec codec, int minChunkSize, int maxChunkSize)\n49. >         {\n50.             this.codec = requireNonNull(codec, \"codec is null\");\n51.             this.compressor = codec.createCompressor();\n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/AircompressorCompressor.java", "line_number": 51, "column_number": -1, "description": "", "node_tags": [], "snippet": "48.         public AircompressorCompressedSliceOutputSupplier(CompressionCodec codec, int minChunkSize, int maxChunkSize)\n49.         {\n50. >             this.codec = requireNonNull(codec, \"codec is null\");\n51.             this.compressor = codec.createCompressor();\n52.             this.compressedOutput = new ChunkedSliceOutput(minChunkSize, maxChunkSize);\n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/AircompressorCompressor.java", "line_number": 52, "column_number": -1, "description": "", "node_tags": [], "snippet": "49.         {\n50.             this.codec = requireNonNull(codec, \"codec is null\");\n51. >             this.compressor = codec.createCompressor();\n52.             this.compressedOutput = new ChunkedSliceOutput(minChunkSize, maxChunkSize);\n53.         }\n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/AircompressorCompressor.java", "line_number": 53, "column_number": -1, "description": "", "node_tags": [], "snippet": "50.             this.codec = requireNonNull(codec, \"codec is null\");\n51.             this.compressor = codec.createCompressor();\n52. >             this.compressedOutput = new ChunkedSliceOutput(minChunkSize, maxChunkSize);\n53.         }\n54. \n"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 65, "column_number": -1, "description": "start of procedure ChunkedSliceOutput(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "ChunkedSliceOutput.<init>(int,int)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.ChunkedSliceOutput.<init>(int,int).dcc3ef3d7139493265a20a0db2acddab"}], "snippet": "62.     private int bufferPosition;\n63. \n64. >     public ChunkedSliceOutput(int minChunkSize, int maxChunkSize)\n65.     {\n66.         this.chunkSupplier = new ChunkSupplier(minChunkSize, maxChunkSize);\n"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 66, "column_number": -1, "description": "Skipping SliceOutput(): unknown method", "node_tags": [], "snippet": "63. \n64.     public ChunkedSliceOutput(int minChunkSize, int maxChunkSize)\n65. >     {\n66.         this.chunkSupplier = new ChunkSupplier(minChunkSize, maxChunkSize);\n67. \n"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 52, "column_number": -1, "description": "", "node_tags": [], "snippet": "49.     private byte[] buffer;\n50. \n51. >     private final List<Slice> closedSlices = new ArrayList<>();\n52.     private long closedSlicesRetainedSize;\n53. \n"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 67, "column_number": -1, "description": "", "node_tags": [], "snippet": "64.     public ChunkedSliceOutput(int minChunkSize, int maxChunkSize)\n65.     {\n66. >         this.chunkSupplier = new ChunkSupplier(minChunkSize, maxChunkSize);\n67. \n68.         this.buffer = chunkSupplier.get();\n"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 354, "column_number": -1, "description": "start of procedure ChunkedSliceOutput$ChunkSupplier(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "ChunkedSliceOutput$ChunkSupplier.<init>(int,int)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.ChunkedSliceOutput$ChunkSupplier.<init>(int,int).6c64b5dd5303403757eb03242b60311c"}], "snippet": "351.         private int currentSize;\n352. \n353. >         public ChunkSupplier(int minChunkSize, int maxChunkSize)\n354.         {\n355.             checkArgument(minChunkSize >= MINIMUM_CHUNK_SIZE, \"minimum chunk size of \" + MINIMUM_CHUNK_SIZE + \" required\");\n"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 355, "column_number": -1, "description": "", "node_tags": [], "snippet": "352. \n353.         public ChunkSupplier(int minChunkSize, int maxChunkSize)\n354. >         {\n355.             checkArgument(minChunkSize >= MINIMUM_CHUNK_SIZE, \"minimum chunk size of \" + MINIMUM_CHUNK_SIZE + \" required\");\n356.             checkArgument(maxChunkSize <= MAXIMUM_CHUNK_SIZE, \"maximum chunk size of \" + MAXIMUM_CHUNK_SIZE + \" required\");\n"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 349, "column_number": -1, "description": "", "node_tags": [], "snippet": "346.         private final int maxChunkSize;\n347. \n348. >         private final List<byte[]> bufferPool = new ArrayList<>();\n349.         private final List<byte[]> usedBuffers = new ArrayList<>();\n350. \n"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 350, "column_number": -1, "description": "", "node_tags": [], "snippet": "347. \n348.         private final List<byte[]> bufferPool = new ArrayList<>();\n349. >         private final List<byte[]> usedBuffers = new ArrayList<>();\n350. \n351.         private int currentSize;\n"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 356, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "353.         public ChunkSupplier(int minChunkSize, int maxChunkSize)\n354.         {\n355. >             checkArgument(minChunkSize >= MINIMUM_CHUNK_SIZE, \"minimum chunk size of \" + MINIMUM_CHUNK_SIZE + \" required\");\n356.             checkArgument(maxChunkSize <= MAXIMUM_CHUNK_SIZE, \"maximum chunk size of \" + MAXIMUM_CHUNK_SIZE + \" required\");\n357.             checkArgument(minChunkSize <= maxChunkSize, \"minimum chunk size must be less than maximum chunk size\");\n"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 357, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "354.         {\n355.             checkArgument(minChunkSize >= MINIMUM_CHUNK_SIZE, \"minimum chunk size of \" + MINIMUM_CHUNK_SIZE + \" required\");\n356. >             checkArgument(maxChunkSize <= MAXIMUM_CHUNK_SIZE, \"maximum chunk size of \" + MAXIMUM_CHUNK_SIZE + \" required\");\n357.             checkArgument(minChunkSize <= maxChunkSize, \"minimum chunk size must be less than maximum chunk size\");\n358. \n"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 358, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "355.             checkArgument(minChunkSize >= MINIMUM_CHUNK_SIZE, \"minimum chunk size of \" + MINIMUM_CHUNK_SIZE + \" required\");\n356.             checkArgument(maxChunkSize <= MAXIMUM_CHUNK_SIZE, \"maximum chunk size of \" + MAXIMUM_CHUNK_SIZE + \" required\");\n357. >             checkArgument(minChunkSize <= maxChunkSize, \"minimum chunk size must be less than maximum chunk size\");\n358. \n359.             this.currentSize = minChunkSize;\n"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 360, "column_number": -1, "description": "", "node_tags": [], "snippet": "357.             checkArgument(minChunkSize <= maxChunkSize, \"minimum chunk size must be less than maximum chunk size\");\n358. \n359. >             this.currentSize = minChunkSize;\n360.             this.maxChunkSize = maxChunkSize;\n361.         }\n"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 361, "column_number": -1, "description": "", "node_tags": [], "snippet": "358. \n359.             this.currentSize = minChunkSize;\n360. >             this.maxChunkSize = maxChunkSize;\n361.         }\n362. \n"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 362, "column_number": -1, "description": "return from a call to ChunkedSliceOutput$ChunkSupplier.<init>(int,int)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "ChunkedSliceOutput$ChunkSupplier.<init>(int,int)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.ChunkedSliceOutput$ChunkSupplier.<init>(int,int).6c64b5dd5303403757eb03242b60311c"}], "snippet": "359.             this.currentSize = minChunkSize;\n360.             this.maxChunkSize = maxChunkSize;\n361. >         }\n362. \n363.         public void reset()\n"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 67, "column_number": -1, "description": "", "node_tags": [], "snippet": "64.     public ChunkedSliceOutput(int minChunkSize, int maxChunkSize)\n65.     {\n66. >         this.chunkSupplier = new ChunkSupplier(minChunkSize, maxChunkSize);\n67. \n68.         this.buffer = chunkSupplier.get();\n"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 69, "column_number": -1, "description": "", "node_tags": [], "snippet": "66.         this.chunkSupplier = new ChunkSupplier(minChunkSize, maxChunkSize);\n67. \n68. >         this.buffer = chunkSupplier.get();\n69.         this.slice = Slices.wrappedBuffer(buffer);\n70.     }\n"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 370, "column_number": -1, "description": "start of procedure get()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "byte[] ChunkedSliceOutput$ChunkSupplier.get()"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.ChunkedSliceOutput$ChunkSupplier.get():byte[].77d224f45f2101d77750ac4d709293f2"}], "snippet": "367.         }\n368. \n369. >         public byte[] get()\n370.         {\n371.             byte[] buffer;\n"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 373, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "370.         {\n371.             byte[] buffer;\n372. >             if (bufferPool.isEmpty()) {\n373.                 currentSize = min(multiplyExact(currentSize, 2), maxChunkSize);\n374.                 buffer = new byte[currentSize];\n"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 374, "column_number": -1, "description": "", "node_tags": [], "snippet": "371.             byte[] buffer;\n372.             if (bufferPool.isEmpty()) {\n373. >                 currentSize = min(multiplyExact(currentSize, 2), maxChunkSize);\n374.                 buffer = new byte[currentSize];\n375.             }\n"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 375, "column_number": -1, "description": "", "node_tags": [], "snippet": "372.             if (bufferPool.isEmpty()) {\n373.                 currentSize = min(multiplyExact(currentSize, 2), maxChunkSize);\n374. >                 buffer = new byte[currentSize];\n375.             }\n376.             else {\n"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 381, "column_number": -1, "description": "Skipping add(...): unknown method", "node_tags": [], "snippet": "378.                 currentSize = buffer.length;\n379.             }\n380. >             usedBuffers.add(buffer);\n381.             return buffer;\n382.         }\n"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 382, "column_number": -1, "description": "return from a call to byte[] ChunkedSliceOutput$ChunkSupplier.get()", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "byte[] ChunkedSliceOutput$ChunkSupplier.get()"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.ChunkedSliceOutput$ChunkSupplier.get():byte[].77d224f45f2101d77750ac4d709293f2"}], "snippet": "379.             }\n380.             usedBuffers.add(buffer);\n381. >             return buffer;\n382.         }\n383.     }\n"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 69, "column_number": -1, "description": "", "node_tags": [], "snippet": "66.         this.chunkSupplier = new ChunkSupplier(minChunkSize, maxChunkSize);\n67. \n68. >         this.buffer = chunkSupplier.get();\n69.         this.slice = Slices.wrappedBuffer(buffer);\n70.     }\n"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 70, "column_number": -1, "description": "", "node_tags": [], "snippet": "67. \n68.         this.buffer = chunkSupplier.get();\n69. >         this.slice = Slices.wrappedBuffer(buffer);\n70.     }\n71. \n"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 71, "column_number": -1, "description": "return from a call to ChunkedSliceOutput.<init>(int,int)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "ChunkedSliceOutput.<init>(int,int)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.ChunkedSliceOutput.<init>(int,int).dcc3ef3d7139493265a20a0db2acddab"}], "snippet": "68.         this.buffer = chunkSupplier.get();\n69.         this.slice = Slices.wrappedBuffer(buffer);\n70. >     }\n71. \n72.     public List<Slice> getSlices()\n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/AircompressorCompressor.java", "line_number": 53, "column_number": -1, "description": "", "node_tags": [], "snippet": "50.             this.codec = requireNonNull(codec, \"codec is null\");\n51.             this.compressor = codec.createCompressor();\n52. >             this.compressedOutput = new ChunkedSliceOutput(minChunkSize, maxChunkSize);\n53.         }\n54. \n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/AircompressorCompressor.java", "line_number": 54, "column_number": -1, "description": "return from a call to AircompressorCompressor$AircompressorCompressedSliceOutputSupplier.<init>(CompressionCodec,int,int)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "AircompressorCompressor$AircompressorCompressedSliceOutputSupplier.<init>(CompressionCodec,int,int)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.AircompressorCompressor$AircompressorCompressedSliceOutputSupplier.<init>.23220fce0bba1b1f231f5fa0bbc416ee"}], "snippet": "51.             this.compressor = codec.createCompressor();\n52.             this.compressedOutput = new ChunkedSliceOutput(minChunkSize, maxChunkSize);\n53. >         }\n54. \n55.         @Override\n"}, {"level": 0, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/AircompressorCompressor.java", "line_number": 39, "column_number": -1, "description": "", "node_tags": [], "snippet": "36.     public CompressedSliceOutput createCompressedSliceOutput(int minChunkSize, int maxChunkSize)\n37.     {\n38. >         return new AircompressorCompressedSliceOutputSupplier(codec, minChunkSize, maxChunkSize).get();\n39.     }\n40. \n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/AircompressorCompressor.java", "line_number": 57, "column_number": -1, "description": "start of procedure get()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "RcFileCompressor$CompressedSliceOutput AircompressorCompressor$AircompressorCompressedSliceOutputSupplier.get()"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.AircompressorCompressor$AircompressorCompressedSliceOutputSupplier.get():.8b92321997c3e4b818894210337cd0c4"}], "snippet": "54. \n55.         @Override\n56. >         public CompressedSliceOutput get()\n57.         {\n58.             try {\n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/AircompressorCompressor.java", "line_number": 60, "column_number": -1, "description": "Skipping reset(): unknown method", "node_tags": [], "snippet": "57.         {\n58.             try {\n59. >                 compressor.reset();\n60.                 compressedOutput.reset();\n61.                 CompressionOutputStream compressionStream = codec.createOutputStream(compressedOutput, compressor);\n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/AircompressorCompressor.java", "line_number": 61, "column_number": -1, "description": "", "node_tags": [], "snippet": "58.             try {\n59.                 compressor.reset();\n60. >                 compressedOutput.reset();\n61.                 CompressionOutputStream compressionStream = codec.createOutputStream(compressedOutput, compressor);\n62.                 return new CompressedSliceOutput(compressionStream, compressedOutput, this, () -> {});\n"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 84, "column_number": -1, "description": "start of procedure reset()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void ChunkedSliceOutput.reset()"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.ChunkedSliceOutput.reset():void.f6e8af927f86312abfcbaa27edde2c62"}], "snippet": "81.     public void reset()\n82.     {\n83. >         chunkSupplier.reset();\n84.         closedSlices.clear();\n85. \n"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 364, "column_number": -1, "description": "start of procedure reset()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void ChunkedSliceOutput$ChunkSupplier.reset()"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.ChunkedSliceOutput$ChunkSupplier.reset():void.59b9cedbad5aab9e8e428475e57b3cc4"}], "snippet": "361.         }\n362. \n363. >         public void reset()\n364.         {\n365.             bufferPool.addAll(0, usedBuffers);\n"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 366, "column_number": -1, "description": "Skipping addAll(...): unknown method", "node_tags": [], "snippet": "363.         public void reset()\n364.         {\n365. >             bufferPool.addAll(0, usedBuffers);\n366.             usedBuffers.clear();\n367.         }\n"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 367, "column_number": -1, "description": "", "node_tags": [], "snippet": "364.         {\n365.             bufferPool.addAll(0, usedBuffers);\n366. >             usedBuffers.clear();\n367.         }\n368. \n"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 368, "column_number": -1, "description": "return from a call to void ChunkedSliceOutput$ChunkSupplier.reset()", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "void ChunkedSliceOutput$ChunkSupplier.reset()"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.ChunkedSliceOutput$ChunkSupplier.reset():void.59b9cedbad5aab9e8e428475e57b3cc4"}], "snippet": "365.             bufferPool.addAll(0, usedBuffers);\n366.             usedBuffers.clear();\n367. >         }\n368. \n369.         public byte[] get()\n"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 85, "column_number": -1, "description": "", "node_tags": [], "snippet": "82.     {\n83.         chunkSupplier.reset();\n84. >         closedSlices.clear();\n85. \n86.         buffer = chunkSupplier.get();\n"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 87, "column_number": -1, "description": "", "node_tags": [], "snippet": "84.         closedSlices.clear();\n85. \n86. >         buffer = chunkSupplier.get();\n87.         slice = Slices.wrappedBuffer(buffer);\n88. \n"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 370, "column_number": -1, "description": "start of procedure get()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "byte[] ChunkedSliceOutput$ChunkSupplier.get()"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.ChunkedSliceOutput$ChunkSupplier.get():byte[].77d224f45f2101d77750ac4d709293f2"}], "snippet": "367.         }\n368. \n369. >         public byte[] get()\n370.         {\n371.             byte[] buffer;\n"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 373, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "370.         {\n371.             byte[] buffer;\n372. >             if (bufferPool.isEmpty()) {\n373.                 currentSize = min(multiplyExact(currentSize, 2), maxChunkSize);\n374.                 buffer = new byte[currentSize];\n"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 374, "column_number": -1, "description": "", "node_tags": [], "snippet": "371.             byte[] buffer;\n372.             if (bufferPool.isEmpty()) {\n373. >                 currentSize = min(multiplyExact(currentSize, 2), maxChunkSize);\n374.                 buffer = new byte[currentSize];\n375.             }\n"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 375, "column_number": -1, "description": "", "node_tags": [], "snippet": "372.             if (bufferPool.isEmpty()) {\n373.                 currentSize = min(multiplyExact(currentSize, 2), maxChunkSize);\n374. >                 buffer = new byte[currentSize];\n375.             }\n376.             else {\n"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 381, "column_number": -1, "description": "Skipping add(...): unknown method", "node_tags": [], "snippet": "378.                 currentSize = buffer.length;\n379.             }\n380. >             usedBuffers.add(buffer);\n381.             return buffer;\n382.         }\n"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 382, "column_number": -1, "description": "return from a call to byte[] ChunkedSliceOutput$ChunkSupplier.get()", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "byte[] ChunkedSliceOutput$ChunkSupplier.get()"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.ChunkedSliceOutput$ChunkSupplier.get():byte[].77d224f45f2101d77750ac4d709293f2"}], "snippet": "379.             }\n380.             usedBuffers.add(buffer);\n381. >             return buffer;\n382.         }\n383.     }\n"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 87, "column_number": -1, "description": "", "node_tags": [], "snippet": "84.         closedSlices.clear();\n85. \n86. >         buffer = chunkSupplier.get();\n87.         slice = Slices.wrappedBuffer(buffer);\n88. \n"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 88, "column_number": -1, "description": "", "node_tags": [], "snippet": "85. \n86.         buffer = chunkSupplier.get();\n87. >         slice = Slices.wrappedBuffer(buffer);\n88. \n89.         closedSlicesRetainedSize = 0;\n"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 90, "column_number": -1, "description": "", "node_tags": [], "snippet": "87.         slice = Slices.wrappedBuffer(buffer);\n88. \n89. >         closedSlicesRetainedSize = 0;\n90.         streamOffset = 0;\n91.         bufferPosition = 0;\n"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 91, "column_number": -1, "description": "", "node_tags": [], "snippet": "88. \n89.         closedSlicesRetainedSize = 0;\n90. >         streamOffset = 0;\n91.         bufferPosition = 0;\n92.     }\n"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 92, "column_number": -1, "description": "", "node_tags": [], "snippet": "89.         closedSlicesRetainedSize = 0;\n90.         streamOffset = 0;\n91. >         bufferPosition = 0;\n92.     }\n93. \n"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 93, "column_number": -1, "description": "return from a call to void ChunkedSliceOutput.reset()", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "void ChunkedSliceOutput.reset()"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.ChunkedSliceOutput.reset():void.f6e8af927f86312abfcbaa27edde2c62"}], "snippet": "90.         streamOffset = 0;\n91.         bufferPosition = 0;\n92. >     }\n93. \n94.     @Override\n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/AircompressorCompressor.java", "line_number": 62, "column_number": -1, "description": "Skipping createOutputStream(...): unknown method", "node_tags": [], "snippet": "59.                 compressor.reset();\n60.                 compressedOutput.reset();\n61. >                 CompressionOutputStream compressionStream = codec.createOutputStream(compressedOutput, compressor);\n62.                 return new CompressedSliceOutput(compressionStream, compressedOutput, this, () -> {});\n63.             }\n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/AircompressorCompressor.java", "line_number": 63, "column_number": -1, "description": "", "node_tags": [], "snippet": "60.                 compressedOutput.reset();\n61.                 CompressionOutputStream compressionStream = codec.createOutputStream(compressedOutput, compressor);\n62. >                 return new CompressedSliceOutput(compressionStream, compressedOutput, this, () -> {});\n63.             }\n64.             catch (IOException e) {\n"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/RcFileCompressor.java", "line_number": 49, "column_number": -1, "description": "start of procedure RcFileCompressor$CompressedSliceOutput(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "RcFileCompressor$CompressedSliceOutput.<init>(OutputStream,ChunkedSliceOutput,AircompressorCompressor$AircompressorCompressedSliceOutputSupplier,Runnable)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.RcFileCompressor$CompressedSliceOutput.<init>(java.io.OutputStream,com.fa.688dadb29b88082cb013e687d29be705"}], "snippet": "46.          * @param onDestroy used to cleanup the compression when done\n47.          */\n48. >         public CompressedSliceOutput(OutputStream compressionStream, ChunkedSliceOutput bufferedOutput, Supplier<CompressedSliceOutput> resetFactory, Runnable onDestroy)\n49.         {\n50.             super(compressionStream);\n"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/RcFileCompressor.java", "line_number": 51, "column_number": -1, "description": "", "node_tags": [], "snippet": "48.         public CompressedSliceOutput(OutputStream compressionStream, ChunkedSliceOutput bufferedOutput, Supplier<CompressedSliceOutput> resetFactory, Runnable onDestroy)\n49.         {\n50. >             super(compressionStream);\n51.             this.bufferedOutput = requireNonNull(bufferedOutput, \"bufferedOutput is null\");\n52.             this.resetFactory = requireNonNull(resetFactory, \"resetFactory is null\");\n"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 55, "column_number": -1, "description": "start of procedure BufferedOutputStreamSliceOutput(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "BufferedOutputStreamSliceOutput.<init>(OutputStream)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.BufferedOutputStreamSliceOutput.<init>(java.io.OutputStream).8801c983a81063e2862b368a4ea830a7"}], "snippet": "52.     private int bufferPosition;\n53. \n54. >     public BufferedOutputStreamSliceOutput(OutputStream outputStream)\n55.     {\n56.         if (outputStream == null) {\n"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 56, "column_number": -1, "description": "Skipping SliceOutput(): unknown method", "node_tags": [], "snippet": "53. \n54.     public BufferedOutputStreamSliceOutput(OutputStream outputStream)\n55. >     {\n56.         if (outputStream == null) {\n57.             throw new NullPointerException(\"outputStream is null\");\n"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 57, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "54.     public BufferedOutputStreamSliceOutput(OutputStream outputStream)\n55.     {\n56. >         if (outputStream == null) {\n57.             throw new NullPointerException(\"outputStream is null\");\n58.         }\n"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 58, "column_number": -1, "description": "", "node_tags": [], "snippet": "55.     {\n56.         if (outputStream == null) {\n57. >             throw new NullPointerException(\"outputStream is null\");\n58.         }\n59. \n"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 64, "column_number": -1, "description": "exception java.lang.NullPointerException", "node_tags": [{"tag": "name", "value": "java.lang.NullPointerException"}, {"tag": "kind", "value": "exception"}], "snippet": "61.         this.buffer = new byte[CHUNK_SIZE];\n62.         this.slice = Slices.wrappedBuffer(buffer);\n63. >     }\n64. \n65.     @Override\n"}, {"level": 3, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 64, "column_number": -1, "description": "return from a call to BufferedOutputStreamSliceOutput.<init>(OutputStream)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "BufferedOutputStreamSliceOutput.<init>(OutputStream)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.BufferedOutputStreamSliceOutput.<init>(java.io.OutputStream).8801c983a81063e2862b368a4ea830a7"}], "snippet": "61.         this.buffer = new byte[CHUNK_SIZE];\n62.         this.slice = Slices.wrappedBuffer(buffer);\n63. >     }\n64. \n65.     @Override\n"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/RcFileCompressor.java", "line_number": 55, "column_number": -1, "description": "exception java.lang.NullPointerException", "node_tags": [{"tag": "name", "value": "java.lang.NullPointerException"}, {"tag": "kind", "value": "exception"}], "snippet": "52.             this.resetFactory = requireNonNull(resetFactory, \"resetFactory is null\");\n53.             this.onDestroy = requireNonNull(onDestroy, \"onDestroy is null\");\n54. >         }\n55. \n56.         @Override\n"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/RcFileCompressor.java", "line_number": 55, "column_number": -1, "description": "return from a call to RcFileCompressor$CompressedSliceOutput.<init>(OutputStream,ChunkedSliceOutput,AircompressorCompressor$AircompressorCompressedSliceOutputSupplier,Runnable)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "RcFileCompressor$CompressedSliceOutput.<init>(OutputStream,ChunkedSliceOutput,AircompressorCompressor$AircompressorCompressedSliceOutputSupplier,Runnable)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.RcFileCompressor$CompressedSliceOutput.<init>(java.io.OutputStream,com.fa.688dadb29b88082cb013e687d29be705"}], "snippet": "52.             this.resetFactory = requireNonNull(resetFactory, \"resetFactory is null\");\n53.             this.onDestroy = requireNonNull(onDestroy, \"onDestroy is null\");\n54. >         }\n55. \n56.         @Override\n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/AircompressorCompressor.java", "line_number": 65, "column_number": -1, "description": "Switch condition is false. Skipping switch case", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "false"}], "snippet": "62.                 return new CompressedSliceOutput(compressionStream, compressedOutput, this, () -> {});\n63.             }\n64. >             catch (IOException e) {\n65.                 throw new UncheckedIOException(e);\n66.             }\n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/AircompressorCompressor.java", "line_number": 66, "column_number": -1, "description": "exception java.lang.NullPointerException", "node_tags": [{"tag": "name", "value": "java.lang.NullPointerException"}, {"tag": "kind", "value": "exception"}], "snippet": "63.             }\n64.             catch (IOException e) {\n65. >                 throw new UncheckedIOException(e);\n66.             }\n67.         }\n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/AircompressorCompressor.java", "line_number": 66, "column_number": -1, "description": "return from a call to RcFileCompressor$CompressedSliceOutput AircompressorCompressor$AircompressorCompressedSliceOutputSupplier.get()", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "RcFileCompressor$CompressedSliceOutput AircompressorCompressor$AircompressorCompressedSliceOutputSupplier.get()"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.AircompressorCompressor$AircompressorCompressedSliceOutputSupplier.get():.8b92321997c3e4b818894210337cd0c4"}], "snippet": "63.             }\n64.             catch (IOException e) {\n65. >                 throw new UncheckedIOException(e);\n66.             }\n67.         }\n"}]}, {"url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/stream/DoubleOutputStream.java", "rawCode": "/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage com.facebook.presto.orc.stream;\n\nimport com.facebook.presto.orc.OrcOutputBuffer;\nimport com.facebook.presto.orc.checkpoint.DoubleStreamCheckpoint;\nimport com.facebook.presto.orc.metadata.CompressionKind;\nimport com.facebook.presto.orc.metadata.Stream;\nimport com.google.common.collect.ImmutableList;\nimport io.airlift.slice.SliceOutput;\nimport org.openjdk.jol.info.ClassLayout;\n\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.Optional;\n\nimport static com.facebook.presto.orc.metadata.Stream.StreamKind.DATA;\nimport static com.google.common.base.Preconditions.checkState;\n\npublic class DoubleOutputStream\n        implements ValueOutputStream<DoubleStreamCheckpoint>\n{\n    private static final int INSTANCE_SIZE = ClassLayout.parseClass(DoubleOutputStream.class).instanceSize();\n    private final OrcOutputBuffer buffer;\n    private final List<DoubleStreamCheckpoint> checkpoints = new ArrayList<>();\n\n    private boolean closed;\n\n    public DoubleOutputStream(CompressionKind compression, int bufferSize)\n    {\n        this.buffer = new OrcOutputBuffer(compression, bufferSize);\n    }\n\n    public void writeDouble(double value)\n    {\n        checkState(!closed);\n        buffer.writeDouble(value);\n    }\n\n    @Override\n    public void close()\n    {\n        closed = true;\n    }\n\n    @Override\n    public void recordCheckpoint()\n    {\n        checkState(!closed);\n        checkpoints.add(new DoubleStreamCheckpoint(buffer.getCheckpoint()));\n    }\n\n    @Override\n    public List<DoubleStreamCheckpoint> getCheckpoints()\n    {\n        checkState(closed);\n        return ImmutableList.copyOf(checkpoints);\n    }\n\n    @Override\n    public Optional<Stream> writeDataStreams(int column, SliceOutput outputStream)\n    {\n        checkState(closed);\n        int length = buffer.writeDataTo(outputStream);\n        return Optional.of(new Stream(column, DATA, length, false));\n    }\n\n    @Override\n    public long getBufferedBytes()\n    {\n        return buffer.size();\n    }\n\n    @Override\n    public long getRetainedBytes()\n    {\n        // NOTE: we do not include checkpoints because they should be small and it would be annoying to calculate the size\n        return INSTANCE_SIZE + buffer.getRetainedSize();\n    }\n\n    @Override\n    public void reset()\n    {\n        closed = false;\n        buffer.reset();\n        checkpoints.clear();\n    }\n}\n", "methodName": "DoubleOutputStream.<init>(CompressionKind,int)", "exampleID": 26, "dataset": "infer", "filepath": "presto-orc/src/main/java/com/facebook/presto/orc/stream/DoubleOutputStream.java", "source": "com.facebook.presto.orc.OrcOutputBuffer", "sourceLine": 42, "qualifier": "Resource of type $$com.facebook.presto.orc.OrcOutputBuffer/$ acquired by call to @@OrcOutputBuffer(...)/@ is not released", "steps": [{"line": 68, "source": "com.facebook.presto.orc.OrcOutputBuffer", "filepath": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "methodName": "OrcOutputBuffer.OrcOutputBuffer", "exampleID": 27}], "line_number": 42, "records": [{"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "line_number": 68, "column_number": -1, "description": "start of procedure OrcOutputBuffer(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "OrcOutputBuffer.<init>(CompressionKind,int)"}, {"tag": "name_id", "value": "com.facebook.presto.orc.OrcOutputBuffer.<init>(com.facebook.presto.orc.metadata.CompressionKind,int).6845406b196c465a01d7308c262b5dde"}], "snippet": "    public OrcOutputBuffer(CompressionKind compression, int bufferSize)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "methodName": "OrcOutputBuffer"}, {"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "line_number": 69, "column_number": -1, "description": "Skipping SliceOutput(): unknown method", "node_tags": [], "snippet": "    {", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "methodName": "OrcOutputBuffer"}, {"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "line_number": 70, "column_number": -1, "description": "Skipping requireNonNull(...): unknown method", "node_tags": [], "snippet": "        requireNonNull(compression, \"compression is null\");", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "methodName": "OrcOutputBuffer"}, {"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "line_number": 71, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "        checkArgument(bufferSize >= MINIMUM_BUFFER_SIZE, \"minimum buffer size of \" + MINIMUM_BUFFER_SIZE + \" required\");", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "methodName": "OrcOutputBuffer"}, {"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "line_number": 73, "column_number": -1, "description": "", "node_tags": [], "snippet": "        this.buffer = new byte[bufferSize];", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "methodName": "OrcOutputBuffer"}, {"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "line_number": 74, "column_number": -1, "description": "", "node_tags": [], "snippet": "        this.slice = Slices.wrappedBuffer(buffer);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "methodName": "OrcOutputBuffer"}, {"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "line_number": 76, "column_number": -1, "description": "", "node_tags": [], "snippet": "        compressedOutputStream = new ChunkedSliceOutput(MINIMUM_OUTPUT_BUFFER_CHUNK_SIZE, MAXIMUM_OUTPUT_BUFFER_CHUNK_SIZE);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "methodName": "OrcOutputBuffer"}, {"level": 2, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 65, "column_number": -1, "description": "start of procedure ChunkedSliceOutput(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "ChunkedSliceOutput.<init>(int,int)"}, {"tag": "name_id", "value": "com.facebook.presto.orc.ChunkedSliceOutput.<init>(int,int).ef32f7ee9f89d6c5fcb961226d8fff21"}], "snippet": "    public ChunkedSliceOutput(int minChunkSize, int maxChunkSize)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput"}, {"level": 2, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 66, "column_number": -1, "description": "Skipping SliceOutput(): unknown method", "node_tags": [], "snippet": "    {", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput"}, {"level": 2, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 52, "column_number": -1, "description": "", "node_tags": [], "snippet": "    private final List<Slice> closedSlices = new ArrayList<>();", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput"}, {"level": 2, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 67, "column_number": -1, "description": "", "node_tags": [], "snippet": "        this.chunkSupplier = new ChunkSupplier(minChunkSize, maxChunkSize);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput"}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 354, "column_number": -1, "description": "start of procedure ChunkedSliceOutput$ChunkSupplier(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "ChunkedSliceOutput$ChunkSupplier.<init>(int,int)"}, {"tag": "name_id", "value": "com.facebook.presto.orc.ChunkedSliceOutput$ChunkSupplier.<init>(int,int).c5a93fc3ccf9127a26c485b20096a08b"}], "snippet": "        public ChunkSupplier(int minChunkSize, int maxChunkSize)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput$ChunkSupplier"}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 355, "column_number": -1, "description": "", "node_tags": [], "snippet": "        {", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput$ChunkSupplier"}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 349, "column_number": -1, "description": "", "node_tags": [], "snippet": "        private final List<byte[]> bufferPool = new ArrayList<>();", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput$ChunkSupplier"}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 350, "column_number": -1, "description": "", "node_tags": [], "snippet": "        private final List<byte[]> usedBuffers = new ArrayList<>();", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput$ChunkSupplier"}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 356, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "            checkArgument(minChunkSize >= MINIMUM_CHUNK_SIZE, \"minimum chunk size of \" + MINIMUM_CHUNK_SIZE + \" required\");", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput$ChunkSupplier"}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 357, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "            checkArgument(maxChunkSize <= MAXIMUM_CHUNK_SIZE, \"maximum chunk size of \" + MAXIMUM_CHUNK_SIZE + \" required\");", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput$ChunkSupplier"}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 358, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "            checkArgument(minChunkSize <= maxChunkSize, \"minimum chunk size must be less than maximum chunk size\");", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput$ChunkSupplier"}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 360, "column_number": -1, "description": "", "node_tags": [], "snippet": "            this.currentSize = minChunkSize;", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput$ChunkSupplier"}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 361, "column_number": -1, "description": "", "node_tags": [], "snippet": "            this.maxChunkSize = maxChunkSize;", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput$ChunkSupplier"}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 362, "column_number": -1, "description": "return from a call to ChunkedSliceOutput$ChunkSupplier.<init>(int,int)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "ChunkedSliceOutput$ChunkSupplier.<init>(int,int)"}, {"tag": "name_id", "value": "com.facebook.presto.orc.ChunkedSliceOutput$ChunkSupplier.<init>(int,int).c5a93fc3ccf9127a26c485b20096a08b"}], "snippet": "        }", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput$ChunkSupplier"}, {"level": 2, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 67, "column_number": -1, "description": "", "node_tags": [], "snippet": "        this.chunkSupplier = new ChunkSupplier(minChunkSize, maxChunkSize);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput"}, {"level": 2, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 69, "column_number": -1, "description": "", "node_tags": [], "snippet": "        this.buffer = chunkSupplier.get();", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput"}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 370, "column_number": -1, "description": "start of procedure get()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "byte[] ChunkedSliceOutput$ChunkSupplier.get()"}, {"tag": "name_id", "value": "com.facebook.presto.orc.ChunkedSliceOutput$ChunkSupplier.get():byte[].43328c56c6952a613ae94f32a43bbdb0"}], "snippet": "        public byte[] get()", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "methodName": "get"}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 373, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "            if (bufferPool.isEmpty()) {", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "methodName": "get"}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 374, "column_number": -1, "description": "", "node_tags": [], "snippet": "                currentSize = min(multiplyExact(currentSize, 2), maxChunkSize);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "methodName": "get"}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 375, "column_number": -1, "description": "", "node_tags": [], "snippet": "                buffer = new byte[currentSize];", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "methodName": "get"}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 381, "column_number": -1, "description": "Skipping add(...): unknown method", "node_tags": [], "snippet": "            usedBuffers.add(buffer);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "methodName": "get"}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 382, "column_number": -1, "description": "return from a call to byte[] ChunkedSliceOutput$ChunkSupplier.get()", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "byte[] ChunkedSliceOutput$ChunkSupplier.get()"}, {"tag": "name_id", "value": "com.facebook.presto.orc.ChunkedSliceOutput$ChunkSupplier.get():byte[].43328c56c6952a613ae94f32a43bbdb0"}], "snippet": "            return buffer;", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "methodName": "get"}, {"level": 2, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 69, "column_number": -1, "description": "", "node_tags": [], "snippet": "        this.buffer = chunkSupplier.get();", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput"}, {"level": 2, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 70, "column_number": -1, "description": "", "node_tags": [], "snippet": "        this.slice = Slices.wrappedBuffer(buffer);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput"}, {"level": 2, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 71, "column_number": -1, "description": "return from a call to ChunkedSliceOutput.<init>(int,int)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "ChunkedSliceOutput.<init>(int,int)"}, {"tag": "name_id", "value": "com.facebook.presto.orc.ChunkedSliceOutput.<init>(int,int).ef32f7ee9f89d6c5fcb961226d8fff21"}], "snippet": "    }", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput"}, {"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "line_number": 76, "column_number": -1, "description": "", "node_tags": [], "snippet": "        compressedOutputStream = new ChunkedSliceOutput(MINIMUM_OUTPUT_BUFFER_CHUNK_SIZE, MAXIMUM_OUTPUT_BUFFER_CHUNK_SIZE);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "methodName": "OrcOutputBuffer"}, {"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "line_number": 78, "column_number": -1, "description": "Taking false branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "false"}], "snippet": "        if (compression == CompressionKind.NONE) {", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "methodName": "OrcOutputBuffer"}, {"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "line_number": 82, "column_number": -1, "description": "Taking false branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "false"}], "snippet": "        else if (compression == CompressionKind.SNAPPY) {", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "methodName": "OrcOutputBuffer"}, {"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "line_number": 86, "column_number": -1, "description": "Taking false branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "false"}], "snippet": "        else if (compression == CompressionKind.ZLIB) {", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "methodName": "OrcOutputBuffer"}, {"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "line_number": 91, "column_number": -1, "description": "", "node_tags": [], "snippet": "            throw new IllegalArgumentException(\"Unsupported compression \" + compression);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "methodName": "OrcOutputBuffer"}, {"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "line_number": 93, "column_number": -1, "description": "exception java.lang.IllegalArgumentException", "node_tags": [{"tag": "name", "value": "java.lang.IllegalArgumentException"}, {"tag": "kind", "value": "exception"}], "snippet": "    }", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "methodName": "OrcOutputBuffer"}, {"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "line_number": 93, "column_number": -1, "description": "return from a call to OrcOutputBuffer.<init>(CompressionKind,int)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "OrcOutputBuffer.<init>(CompressionKind,int)"}, {"tag": "name_id", "value": "com.facebook.presto.orc.OrcOutputBuffer.<init>(com.facebook.presto.orc.metadata.CompressionKind,int).6845406b196c465a01d7308c262b5dde"}], "snippet": "    }", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "methodName": "OrcOutputBuffer"}], "combined_records": [{"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "line_number": 76, "column_number": -1, "description": "start of procedure OrcOutputBuffer(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "OrcOutputBuffer.<init>(CompressionKind,int)"}, {"tag": "name_id", "value": "com.facebook.presto.orc.OrcOutputBuffer.<init>(com.facebook.presto.orc.metadata.CompressionKind,int).6845406b196c465a01d7308c262b5dde"}], "snippet": "66.\n67.    public OrcOutputBuffer(CompressionKind compression, int bufferSize)\n68.>     {\n69.>         requireNonNull(compression, \"compression is null\");\n70.>         checkArgument(bufferSize >= MINIMUM_BUFFER_SIZE, \"minimum buffer size of \" + MINIMUM_BUFFER_SIZE + \" required\");\n71.> \n72.        this.buffer = new byte[bufferSize];\n73.>         this.slice = Slices.wrappedBuffer(buffer);\n74.> \n75.        compressedOutputStream = new ChunkedSliceOutput(MINIMUM_OUTPUT_BUFFER_CHUNK_SIZE, MAXIMUM_OUTPUT_BUFFER_CHUNK_SIZE);\n76.> \n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "methodName": "OrcOutputBuffer", "line_numbers": [68, 69, 70, 71, 73, 74, 76]}, {"level": 2, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 67, "column_number": -1, "description": "start of procedure ChunkedSliceOutput(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "ChunkedSliceOutput.<init>(int,int)"}, {"tag": "name_id", "value": "com.facebook.presto.orc.ChunkedSliceOutput.<init>(int,int).ef32f7ee9f89d6c5fcb961226d8fff21"}], "snippet": "50.\n51.    private final List<Slice> closedSlices = new ArrayList<>();\n52.>     private long closedSlicesRetainedSize;\n53.\n54.    /**\n55.     * Offset of buffer within stream.\n56.     */\n57.    private long streamOffset;\n58.\n59.    /**\n60.     * Current position for writing in buffer.\n61.     */\n62.    private int bufferPosition;\n63.\n64.    public ChunkedSliceOutput(int minChunkSize, int maxChunkSize)\n65.>     {\n66.>         this.chunkSupplier = new ChunkSupplier(minChunkSize, maxChunkSize);\n67.> \n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput", "line_numbers": [65, 66, 52, 67]}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 362, "column_number": -1, "description": "start of procedure ChunkedSliceOutput$ChunkSupplier(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "ChunkedSliceOutput$ChunkSupplier.<init>(int,int)"}, {"tag": "name_id", "value": "com.facebook.presto.orc.ChunkedSliceOutput$ChunkSupplier.<init>(int,int).c5a93fc3ccf9127a26c485b20096a08b"}], "snippet": "347.\n348.        private final List<byte[]> bufferPool = new ArrayList<>();\n349.>         private final List<byte[]> usedBuffers = new ArrayList<>();\n350.> \n351.        private int currentSize;\n352.\n353.        public ChunkSupplier(int minChunkSize, int maxChunkSize)\n354.>         {\n355.>             checkArgument(minChunkSize >= MINIMUM_CHUNK_SIZE, \"minimum chunk size of \" + MINIMUM_CHUNK_SIZE + \" required\");\n356.>             checkArgument(maxChunkSize <= MAXIMUM_CHUNK_SIZE, \"maximum chunk size of \" + MAXIMUM_CHUNK_SIZE + \" required\");\n357.>             checkArgument(minChunkSize <= maxChunkSize, \"minimum chunk size must be less than maximum chunk size\");\n358.> \n359.            this.currentSize = minChunkSize;\n360.>             this.maxChunkSize = maxChunkSize;\n361.        }\n362.> \n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput$ChunkSupplier", "line_numbers": [354, 355, 349, 350, 356, 357, 358, 360, 361, 362]}, {"level": 2, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 69, "column_number": -1, "description": "", "node_tags": [], "snippet": "65.    {\n66.        this.chunkSupplier = new ChunkSupplier(minChunkSize, maxChunkSize);\n67.> \n68.        this.buffer = chunkSupplier.get();\n69.>         this.slice = Slices.wrappedBuffer(buffer);\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput", "line_numbers": [67, 69]}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 382, "column_number": -1, "description": "start of procedure get()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "byte[] ChunkedSliceOutput$ChunkSupplier.get()"}, {"tag": "name_id", "value": "com.facebook.presto.orc.ChunkedSliceOutput$ChunkSupplier.get():byte[].43328c56c6952a613ae94f32a43bbdb0"}], "snippet": "368.\n369.        public byte[] get()\n370.>         {\n371.            byte[] buffer;\n372.            if (bufferPool.isEmpty()) {\n373.>                 currentSize = min(multiplyExact(currentSize, 2), maxChunkSize);\n374.>                 buffer = new byte[currentSize];\n375.            }\n376.            else {\n377.                buffer = bufferPool.remove(0);\n378.                currentSize = buffer.length;\n379.            }\n380.            usedBuffers.add(buffer);\n381.>             return buffer;\n382.        }\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "methodName": "get", "line_numbers": [370, 373, 374, 375, 381, 382]}, {"level": 2, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 71, "column_number": -1, "description": "", "node_tags": [], "snippet": "67.\n68.        this.buffer = chunkSupplier.get();\n69.>         this.slice = Slices.wrappedBuffer(buffer);\n70.    }\n71.> \n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput", "line_numbers": [69, 70, 71]}, {"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "line_number": 93, "column_number": -1, "description": "", "node_tags": [], "snippet": "74.\n75.        compressedOutputStream = new ChunkedSliceOutput(MINIMUM_OUTPUT_BUFFER_CHUNK_SIZE, MAXIMUM_OUTPUT_BUFFER_CHUNK_SIZE);\n76.> \n77.        if (compression == CompressionKind.NONE) {\n78.>             this.compressor = null;\n79.            this.compressionBuffer = new byte[0];\n80.        }\n81.        else if (compression == CompressionKind.SNAPPY) {\n82.>             this.compressor = new SnappyCompressor();\n83.            this.compressionBuffer = new byte[compressor.maxCompressedLength(bufferSize)];\n84.        }\n85.        else if (compression == CompressionKind.ZLIB) {\n86.>             this.compressor = new DeflateCompressor();\n87.            this.compressionBuffer = new byte[compressor.maxCompressedLength(bufferSize)];\n88.        }\n89.        else {\n90.            throw new IllegalArgumentException(\"Unsupported compression \" + compression);\n91.        }\n92.    }\n93.> \n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "methodName": "OrcOutputBuffer", "line_numbers": [76, 78, 82, 86, 91, 93, 93]}], "infer_explore": [{"level": 0, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/stream/DoubleOutputStream.java", "line_number": 40, "column_number": -1, "description": "start of procedure DoubleOutputStream(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "DoubleOutputStream.<init>(CompressionKind,int)"}, {"tag": "name_id", "value": "com.facebook.presto.orc.stream.DoubleOutputStream.<init>(com.facebook.presto.orc.metadata.Compressio.e36921bba9d468fb14f608cceb8610e6"}], "snippet": "37.     private boolean closed;\n38. \n39. >     public DoubleOutputStream(CompressionKind compression, int bufferSize)\n40.     {\n41.         this.buffer = new OrcOutputBuffer(compression, bufferSize);\n"}, {"level": 0, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/stream/DoubleOutputStream.java", "line_number": 41, "column_number": -1, "description": "", "node_tags": [], "snippet": "38. \n39.     public DoubleOutputStream(CompressionKind compression, int bufferSize)\n40. >     {\n41.         this.buffer = new OrcOutputBuffer(compression, bufferSize);\n42.     }\n"}, {"level": 0, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/stream/DoubleOutputStream.java", "line_number": 36, "column_number": -1, "description": "", "node_tags": [], "snippet": "33.     private static final int INSTANCE_SIZE = ClassLayout.parseClass(DoubleOutputStream.class).instanceSize();\n34.     private final OrcOutputBuffer buffer;\n35. >     private final List<DoubleStreamCheckpoint> checkpoints = new ArrayList<>();\n36. \n37.     private boolean closed;\n"}, {"level": 0, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/stream/DoubleOutputStream.java", "line_number": 42, "column_number": -1, "description": "", "node_tags": [], "snippet": "39.     public DoubleOutputStream(CompressionKind compression, int bufferSize)\n40.     {\n41. >         this.buffer = new OrcOutputBuffer(compression, bufferSize);\n42.     }\n43. \n"}, {"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "line_number": 68, "column_number": -1, "description": "start of procedure OrcOutputBuffer(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "OrcOutputBuffer.<init>(CompressionKind,int)"}, {"tag": "name_id", "value": "com.facebook.presto.orc.OrcOutputBuffer.<init>(com.facebook.presto.orc.metadata.CompressionKind,int).6845406b196c465a01d7308c262b5dde"}], "snippet": "65.     private int bufferPosition;\n66. \n67. >     public OrcOutputBuffer(CompressionKind compression, int bufferSize)\n68.     {\n69.         requireNonNull(compression, \"compression is null\");\n"}, {"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "line_number": 69, "column_number": -1, "description": "Skipping SliceOutput(): unknown method", "node_tags": [], "snippet": "66. \n67.     public OrcOutputBuffer(CompressionKind compression, int bufferSize)\n68. >     {\n69.         requireNonNull(compression, \"compression is null\");\n70.         checkArgument(bufferSize >= MINIMUM_BUFFER_SIZE, \"minimum buffer size of \" + MINIMUM_BUFFER_SIZE + \" required\");\n"}, {"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "line_number": 70, "column_number": -1, "description": "Skipping requireNonNull(...): unknown method", "node_tags": [], "snippet": "67.     public OrcOutputBuffer(CompressionKind compression, int bufferSize)\n68.     {\n69. >         requireNonNull(compression, \"compression is null\");\n70.         checkArgument(bufferSize >= MINIMUM_BUFFER_SIZE, \"minimum buffer size of \" + MINIMUM_BUFFER_SIZE + \" required\");\n71. \n"}, {"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "line_number": 71, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "68.     {\n69.         requireNonNull(compression, \"compression is null\");\n70. >         checkArgument(bufferSize >= MINIMUM_BUFFER_SIZE, \"minimum buffer size of \" + MINIMUM_BUFFER_SIZE + \" required\");\n71. \n72.         this.buffer = new byte[bufferSize];\n"}, {"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "line_number": 73, "column_number": -1, "description": "", "node_tags": [], "snippet": "70.         checkArgument(bufferSize >= MINIMUM_BUFFER_SIZE, \"minimum buffer size of \" + MINIMUM_BUFFER_SIZE + \" required\");\n71. \n72. >         this.buffer = new byte[bufferSize];\n73.         this.slice = Slices.wrappedBuffer(buffer);\n74. \n"}, {"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "line_number": 74, "column_number": -1, "description": "", "node_tags": [], "snippet": "71. \n72.         this.buffer = new byte[bufferSize];\n73. >         this.slice = Slices.wrappedBuffer(buffer);\n74. \n75.         compressedOutputStream = new ChunkedSliceOutput(MINIMUM_OUTPUT_BUFFER_CHUNK_SIZE, MAXIMUM_OUTPUT_BUFFER_CHUNK_SIZE);\n"}, {"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "line_number": 76, "column_number": -1, "description": "", "node_tags": [], "snippet": "73.         this.slice = Slices.wrappedBuffer(buffer);\n74. \n75. >         compressedOutputStream = new ChunkedSliceOutput(MINIMUM_OUTPUT_BUFFER_CHUNK_SIZE, MAXIMUM_OUTPUT_BUFFER_CHUNK_SIZE);\n76. \n77.         if (compression == CompressionKind.NONE) {\n"}, {"level": 2, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 65, "column_number": -1, "description": "start of procedure ChunkedSliceOutput(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "ChunkedSliceOutput.<init>(int,int)"}, {"tag": "name_id", "value": "com.facebook.presto.orc.ChunkedSliceOutput.<init>(int,int).ef32f7ee9f89d6c5fcb961226d8fff21"}], "snippet": "62.     private int bufferPosition;\n63. \n64. >     public ChunkedSliceOutput(int minChunkSize, int maxChunkSize)\n65.     {\n66.         this.chunkSupplier = new ChunkSupplier(minChunkSize, maxChunkSize);\n"}, {"level": 2, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 66, "column_number": -1, "description": "Skipping SliceOutput(): unknown method", "node_tags": [], "snippet": "63. \n64.     public ChunkedSliceOutput(int minChunkSize, int maxChunkSize)\n65. >     {\n66.         this.chunkSupplier = new ChunkSupplier(minChunkSize, maxChunkSize);\n67. \n"}, {"level": 2, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 52, "column_number": -1, "description": "", "node_tags": [], "snippet": "49.     private byte[] buffer;\n50. \n51. >     private final List<Slice> closedSlices = new ArrayList<>();\n52.     private long closedSlicesRetainedSize;\n53. \n"}, {"level": 2, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 67, "column_number": -1, "description": "", "node_tags": [], "snippet": "64.     public ChunkedSliceOutput(int minChunkSize, int maxChunkSize)\n65.     {\n66. >         this.chunkSupplier = new ChunkSupplier(minChunkSize, maxChunkSize);\n67. \n68.         this.buffer = chunkSupplier.get();\n"}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 354, "column_number": -1, "description": "start of procedure ChunkedSliceOutput$ChunkSupplier(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "ChunkedSliceOutput$ChunkSupplier.<init>(int,int)"}, {"tag": "name_id", "value": "com.facebook.presto.orc.ChunkedSliceOutput$ChunkSupplier.<init>(int,int).c5a93fc3ccf9127a26c485b20096a08b"}], "snippet": "351.         private int currentSize;\n352. \n353. >         public ChunkSupplier(int minChunkSize, int maxChunkSize)\n354.         {\n355.             checkArgument(minChunkSize >= MINIMUM_CHUNK_SIZE, \"minimum chunk size of \" + MINIMUM_CHUNK_SIZE + \" required\");\n"}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 355, "column_number": -1, "description": "", "node_tags": [], "snippet": "352. \n353.         public ChunkSupplier(int minChunkSize, int maxChunkSize)\n354. >         {\n355.             checkArgument(minChunkSize >= MINIMUM_CHUNK_SIZE, \"minimum chunk size of \" + MINIMUM_CHUNK_SIZE + \" required\");\n356.             checkArgument(maxChunkSize <= MAXIMUM_CHUNK_SIZE, \"maximum chunk size of \" + MAXIMUM_CHUNK_SIZE + \" required\");\n"}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 349, "column_number": -1, "description": "", "node_tags": [], "snippet": "346.         private final int maxChunkSize;\n347. \n348. >         private final List<byte[]> bufferPool = new ArrayList<>();\n349.         private final List<byte[]> usedBuffers = new ArrayList<>();\n350. \n"}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 350, "column_number": -1, "description": "", "node_tags": [], "snippet": "347. \n348.         private final List<byte[]> bufferPool = new ArrayList<>();\n349. >         private final List<byte[]> usedBuffers = new ArrayList<>();\n350. \n351.         private int currentSize;\n"}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 356, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "353.         public ChunkSupplier(int minChunkSize, int maxChunkSize)\n354.         {\n355. >             checkArgument(minChunkSize >= MINIMUM_CHUNK_SIZE, \"minimum chunk size of \" + MINIMUM_CHUNK_SIZE + \" required\");\n356.             checkArgument(maxChunkSize <= MAXIMUM_CHUNK_SIZE, \"maximum chunk size of \" + MAXIMUM_CHUNK_SIZE + \" required\");\n357.             checkArgument(minChunkSize <= maxChunkSize, \"minimum chunk size must be less than maximum chunk size\");\n"}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 357, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "354.         {\n355.             checkArgument(minChunkSize >= MINIMUM_CHUNK_SIZE, \"minimum chunk size of \" + MINIMUM_CHUNK_SIZE + \" required\");\n356. >             checkArgument(maxChunkSize <= MAXIMUM_CHUNK_SIZE, \"maximum chunk size of \" + MAXIMUM_CHUNK_SIZE + \" required\");\n357.             checkArgument(minChunkSize <= maxChunkSize, \"minimum chunk size must be less than maximum chunk size\");\n358. \n"}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 358, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "355.             checkArgument(minChunkSize >= MINIMUM_CHUNK_SIZE, \"minimum chunk size of \" + MINIMUM_CHUNK_SIZE + \" required\");\n356.             checkArgument(maxChunkSize <= MAXIMUM_CHUNK_SIZE, \"maximum chunk size of \" + MAXIMUM_CHUNK_SIZE + \" required\");\n357. >             checkArgument(minChunkSize <= maxChunkSize, \"minimum chunk size must be less than maximum chunk size\");\n358. \n359.             this.currentSize = minChunkSize;\n"}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 360, "column_number": -1, "description": "", "node_tags": [], "snippet": "357.             checkArgument(minChunkSize <= maxChunkSize, \"minimum chunk size must be less than maximum chunk size\");\n358. \n359. >             this.currentSize = minChunkSize;\n360.             this.maxChunkSize = maxChunkSize;\n361.         }\n"}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 361, "column_number": -1, "description": "", "node_tags": [], "snippet": "358. \n359.             this.currentSize = minChunkSize;\n360. >             this.maxChunkSize = maxChunkSize;\n361.         }\n362. \n"}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 362, "column_number": -1, "description": "return from a call to ChunkedSliceOutput$ChunkSupplier.<init>(int,int)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "ChunkedSliceOutput$ChunkSupplier.<init>(int,int)"}, {"tag": "name_id", "value": "com.facebook.presto.orc.ChunkedSliceOutput$ChunkSupplier.<init>(int,int).c5a93fc3ccf9127a26c485b20096a08b"}], "snippet": "359.             this.currentSize = minChunkSize;\n360.             this.maxChunkSize = maxChunkSize;\n361. >         }\n362. \n363.         public void reset()\n"}, {"level": 2, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 67, "column_number": -1, "description": "", "node_tags": [], "snippet": "64.     public ChunkedSliceOutput(int minChunkSize, int maxChunkSize)\n65.     {\n66. >         this.chunkSupplier = new ChunkSupplier(minChunkSize, maxChunkSize);\n67. \n68.         this.buffer = chunkSupplier.get();\n"}, {"level": 2, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 69, "column_number": -1, "description": "", "node_tags": [], "snippet": "66.         this.chunkSupplier = new ChunkSupplier(minChunkSize, maxChunkSize);\n67. \n68. >         this.buffer = chunkSupplier.get();\n69.         this.slice = Slices.wrappedBuffer(buffer);\n70.     }\n"}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 370, "column_number": -1, "description": "start of procedure get()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "byte[] ChunkedSliceOutput$ChunkSupplier.get()"}, {"tag": "name_id", "value": "com.facebook.presto.orc.ChunkedSliceOutput$ChunkSupplier.get():byte[].43328c56c6952a613ae94f32a43bbdb0"}], "snippet": "367.         }\n368. \n369. >         public byte[] get()\n370.         {\n371.             byte[] buffer;\n"}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 373, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "370.         {\n371.             byte[] buffer;\n372. >             if (bufferPool.isEmpty()) {\n373.                 currentSize = min(multiplyExact(currentSize, 2), maxChunkSize);\n374.                 buffer = new byte[currentSize];\n"}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 374, "column_number": -1, "description": "", "node_tags": [], "snippet": "371.             byte[] buffer;\n372.             if (bufferPool.isEmpty()) {\n373. >                 currentSize = min(multiplyExact(currentSize, 2), maxChunkSize);\n374.                 buffer = new byte[currentSize];\n375.             }\n"}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 375, "column_number": -1, "description": "", "node_tags": [], "snippet": "372.             if (bufferPool.isEmpty()) {\n373.                 currentSize = min(multiplyExact(currentSize, 2), maxChunkSize);\n374. >                 buffer = new byte[currentSize];\n375.             }\n376.             else {\n"}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 381, "column_number": -1, "description": "Skipping add(...): unknown method", "node_tags": [], "snippet": "378.                 currentSize = buffer.length;\n379.             }\n380. >             usedBuffers.add(buffer);\n381.             return buffer;\n382.         }\n"}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 382, "column_number": -1, "description": "return from a call to byte[] ChunkedSliceOutput$ChunkSupplier.get()", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "byte[] ChunkedSliceOutput$ChunkSupplier.get()"}, {"tag": "name_id", "value": "com.facebook.presto.orc.ChunkedSliceOutput$ChunkSupplier.get():byte[].43328c56c6952a613ae94f32a43bbdb0"}], "snippet": "379.             }\n380.             usedBuffers.add(buffer);\n381. >             return buffer;\n382.         }\n383.     }\n"}, {"level": 2, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 69, "column_number": -1, "description": "", "node_tags": [], "snippet": "66.         this.chunkSupplier = new ChunkSupplier(minChunkSize, maxChunkSize);\n67. \n68. >         this.buffer = chunkSupplier.get();\n69.         this.slice = Slices.wrappedBuffer(buffer);\n70.     }\n"}, {"level": 2, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 70, "column_number": -1, "description": "", "node_tags": [], "snippet": "67. \n68.         this.buffer = chunkSupplier.get();\n69. >         this.slice = Slices.wrappedBuffer(buffer);\n70.     }\n71. \n"}, {"level": 2, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 71, "column_number": -1, "description": "return from a call to ChunkedSliceOutput.<init>(int,int)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "ChunkedSliceOutput.<init>(int,int)"}, {"tag": "name_id", "value": "com.facebook.presto.orc.ChunkedSliceOutput.<init>(int,int).ef32f7ee9f89d6c5fcb961226d8fff21"}], "snippet": "68.         this.buffer = chunkSupplier.get();\n69.         this.slice = Slices.wrappedBuffer(buffer);\n70. >     }\n71. \n72.     public List<Slice> getSlices()\n"}, {"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "line_number": 76, "column_number": -1, "description": "", "node_tags": [], "snippet": "73.         this.slice = Slices.wrappedBuffer(buffer);\n74. \n75. >         compressedOutputStream = new ChunkedSliceOutput(MINIMUM_OUTPUT_BUFFER_CHUNK_SIZE, MAXIMUM_OUTPUT_BUFFER_CHUNK_SIZE);\n76. \n77.         if (compression == CompressionKind.NONE) {\n"}, {"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "line_number": 78, "column_number": -1, "description": "Taking false branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "false"}], "snippet": "75.         compressedOutputStream = new ChunkedSliceOutput(MINIMUM_OUTPUT_BUFFER_CHUNK_SIZE, MAXIMUM_OUTPUT_BUFFER_CHUNK_SIZE);\n76. \n77. >         if (compression == CompressionKind.NONE) {\n78.             this.compressor = null;\n79.             this.compressionBuffer = new byte[0];\n"}, {"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "line_number": 82, "column_number": -1, "description": "Taking false branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "false"}], "snippet": "79.             this.compressionBuffer = new byte[0];\n80.         }\n81. >         else if (compression == CompressionKind.SNAPPY) {\n82.             this.compressor = new SnappyCompressor();\n83.             this.compressionBuffer = new byte[compressor.maxCompressedLength(bufferSize)];\n"}, {"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "line_number": 86, "column_number": -1, "description": "Taking false branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "false"}], "snippet": "83.             this.compressionBuffer = new byte[compressor.maxCompressedLength(bufferSize)];\n84.         }\n85. >         else if (compression == CompressionKind.ZLIB) {\n86.             this.compressor = new DeflateCompressor();\n87.             this.compressionBuffer = new byte[compressor.maxCompressedLength(bufferSize)];\n"}, {"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "line_number": 91, "column_number": -1, "description": "", "node_tags": [], "snippet": "88.         }\n89.         else {\n90. >             throw new IllegalArgumentException(\"Unsupported compression \" + compression);\n91.         }\n92.     }\n"}, {"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "line_number": 93, "column_number": -1, "description": "exception java.lang.IllegalArgumentException", "node_tags": [{"tag": "name", "value": "java.lang.IllegalArgumentException"}, {"tag": "kind", "value": "exception"}], "snippet": "90.             throw new IllegalArgumentException(\"Unsupported compression \" + compression);\n91.         }\n92. >     }\n93. \n94.     public int writeDataTo(SliceOutput outputStream)\n"}, {"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "line_number": 93, "column_number": -1, "description": "return from a call to OrcOutputBuffer.<init>(CompressionKind,int)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "OrcOutputBuffer.<init>(CompressionKind,int)"}, {"tag": "name_id", "value": "com.facebook.presto.orc.OrcOutputBuffer.<init>(com.facebook.presto.orc.metadata.CompressionKind,int).6845406b196c465a01d7308c262b5dde"}], "snippet": "90.             throw new IllegalArgumentException(\"Unsupported compression \" + compression);\n91.         }\n92. >     }\n93. \n94.     public int writeDataTo(SliceOutput outputStream)\n"}]}, {"url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-raptor/src/main/java/com/facebook/presto/raptor/util/SyncingFileSystem.java", "rawCode": "/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage com.facebook.presto.raptor.util;\n\nimport io.airlift.slice.XxHash64;\nimport org.apache.hadoop.conf.Configuration;\nimport org.apache.hadoop.fs.FSDataOutputStream;\nimport org.apache.hadoop.fs.Path;\nimport org.apache.hadoop.fs.RawLocalFileSystem;\nimport org.apache.hadoop.util.Progressable;\n\nimport java.io.BufferedOutputStream;\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.io.FileOutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.OutputStream;\n\nimport static java.util.Objects.requireNonNull;\n\npublic final class SyncingFileSystem\n        extends RawLocalFileSystem\n{\n    public SyncingFileSystem(Configuration configuration)\n            throws IOException\n    {\n        initialize(getUri(), configuration);\n    }\n\n    @Override\n    public FSDataOutputStream create(Path path, boolean overwrite, int bufferSize, short replication, long blockSize, Progressable progress)\n            throws IOException\n    {\n        if (exists(path) && !overwrite) {\n            throw new IOException(\"file already exists: \" + path);\n        }\n        Path parent = path.getParent();\n        if ((parent != null) && !mkdirs(parent)) {\n            throw new IOException(\"mkdirs failed to create \" + parent.toString());\n        }\n        return new FSDataOutputStream(\n                new BufferedOutputStream(new LocalFileOutputStream(pathToFile(path)), bufferSize),\n                statistics);\n    }\n\n    private static class LocalFileOutputStream\n            extends OutputStream\n    {\n        private final byte[] oneByte = new byte[1];\n        private final XxHash64 hash = new XxHash64();\n        private final File file;\n        private final FileOutputStream out;\n        private boolean closed;\n\n        private LocalFileOutputStream(File file)\n                throws IOException\n        {\n            this.file = requireNonNull(file, \"file is null\");\n            this.out = new FileOutputStream(file);\n        }\n\n        @Override\n        public void close()\n                throws IOException\n        {\n            if (closed) {\n                return;\n            }\n            closed = true;\n\n            flush();\n            out.getFD().sync();\n            out.close();\n\n            // extremely paranoid code to detect a broken local file system\n            try (InputStream in = new FileInputStream(file)) {\n                if (hash.hash() != XxHash64.hash(in)) {\n                    throw new IOException(\"File is corrupt after write\");\n                }\n            }\n        }\n\n        @Override\n        public void flush()\n                throws IOException\n        {\n            out.flush();\n        }\n\n        @Override\n        public void write(byte[] b, int off, int len)\n                throws IOException\n        {\n            out.write(b, off, len);\n            hash.update(b, off, len);\n        }\n\n        @SuppressWarnings(\"NumericCastThatLosesPrecision\")\n        @Override\n        public void write(int b)\n                throws IOException\n        {\n            oneByte[0] = (byte) (b & 0xFF);\n            write(oneByte, 0, 1);\n        }\n    }\n}\n", "methodName": "FSDataOutputStream SyncingFileSystem.create(Path,boolean,int,short,long,Progressable)", "exampleID": 28, "dataset": "infer", "filepath": "presto-raptor/src/main/java/com/facebook/presto/raptor/util/SyncingFileSystem.java", "source": "java.io.FileOutputStream", "sourceLine": 54, "qualifier": "Resource of type $$java.io.FileOutputStream/$ acquired by call to @@SyncingFileSystem$LocalFileOutputStream(...)/@ is not released", "steps": [{"line": 67, "source": "java.io.FileOutputStream", "filepath": "presto-raptor/src/main/java/com/facebook/presto/raptor/util/SyncingFileSystem.java", "methodName": "SyncingFileSystem.SyncingFileSystem$LocalFileOutputStream", "exampleID": 29}], "line_number": 54, "records": [{"level": 1, "filename": "presto-raptor/src/main/java/com/facebook/presto/raptor/util/SyncingFileSystem.java", "line_number": 67, "column_number": -1, "description": "start of procedure SyncingFileSystem$LocalFileOutputStream(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "SyncingFileSystem$LocalFileOutputStream.<init>(File)"}, {"tag": "name_id", "value": "com.facebook.presto.raptor.util.SyncingFileSystem$LocalFileOutputStream.<init>(java.io.File).b6b5bc6a2053b08d0584d6599c97b54e"}], "snippet": "        private LocalFileOutputStream(File file)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-raptor/src/main/java/com/facebook/presto/raptor/util/SyncingFileSystem.java", "methodName": "SyncingFileSystem$LocalFileOutputStream"}, {"level": 1, "filename": "presto-raptor/src/main/java/com/facebook/presto/raptor/util/SyncingFileSystem.java", "line_number": 69, "column_number": -1, "description": "", "node_tags": [], "snippet": "        {", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-raptor/src/main/java/com/facebook/presto/raptor/util/SyncingFileSystem.java", "methodName": "SyncingFileSystem$LocalFileOutputStream"}, {"level": 1, "filename": "presto-raptor/src/main/java/com/facebook/presto/raptor/util/SyncingFileSystem.java", "line_number": 61, "column_number": -1, "description": "", "node_tags": [], "snippet": "        private final byte[] oneByte = new byte[1];", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-raptor/src/main/java/com/facebook/presto/raptor/util/SyncingFileSystem.java", "methodName": "SyncingFileSystem$LocalFileOutputStream"}, {"level": 1, "filename": "presto-raptor/src/main/java/com/facebook/presto/raptor/util/SyncingFileSystem.java", "line_number": 62, "column_number": -1, "description": "", "node_tags": [], "snippet": "        private final XxHash64 hash = new XxHash64();", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-raptor/src/main/java/com/facebook/presto/raptor/util/SyncingFileSystem.java", "methodName": "SyncingFileSystem$LocalFileOutputStream"}, {"level": 1, "filename": "presto-raptor/src/main/java/com/facebook/presto/raptor/util/SyncingFileSystem.java", "line_number": 70, "column_number": -1, "description": "", "node_tags": [], "snippet": "            this.file = requireNonNull(file, \"file is null\");", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-raptor/src/main/java/com/facebook/presto/raptor/util/SyncingFileSystem.java", "methodName": "SyncingFileSystem$LocalFileOutputStream"}, {"level": 1, "filename": "presto-raptor/src/main/java/com/facebook/presto/raptor/util/SyncingFileSystem.java", "line_number": 71, "column_number": -1, "description": "", "node_tags": [], "snippet": "            this.out = new FileOutputStream(file);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-raptor/src/main/java/com/facebook/presto/raptor/util/SyncingFileSystem.java", "methodName": "SyncingFileSystem$LocalFileOutputStream"}, {"level": 1, "filename": "presto-raptor/src/main/java/com/facebook/presto/raptor/util/SyncingFileSystem.java", "line_number": 72, "column_number": -1, "description": "return from a call to SyncingFileSystem$LocalFileOutputStream.<init>(File)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "SyncingFileSystem$LocalFileOutputStream.<init>(File)"}, {"tag": "name_id", "value": "com.facebook.presto.raptor.util.SyncingFileSystem$LocalFileOutputStream.<init>(java.io.File).b6b5bc6a2053b08d0584d6599c97b54e"}], "snippet": "        }", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-raptor/src/main/java/com/facebook/presto/raptor/util/SyncingFileSystem.java", "methodName": "SyncingFileSystem$LocalFileOutputStream"}], "combined_records": [{"level": 1, "filename": "presto-raptor/src/main/java/com/facebook/presto/raptor/util/SyncingFileSystem.java", "line_number": 72, "column_number": -1, "description": "start of procedure SyncingFileSystem$LocalFileOutputStream(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "SyncingFileSystem$LocalFileOutputStream.<init>(File)"}, {"tag": "name_id", "value": "com.facebook.presto.raptor.util.SyncingFileSystem$LocalFileOutputStream.<init>(java.io.File).b6b5bc6a2053b08d0584d6599c97b54e"}], "snippet": "59.    {\n60.        private final byte[] oneByte = new byte[1];\n61.>         private final XxHash64 hash = new XxHash64();\n62.>         private final File file;\n63.        private final FileOutputStream out;\n64.        private boolean closed;\n65.\n66.        private LocalFileOutputStream(File file)\n67.>                 throws IOException\n68.        {\n69.>             this.file = requireNonNull(file, \"file is null\");\n70.>             this.out = new FileOutputStream(file);\n71.        }\n72.> \n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-raptor/src/main/java/com/facebook/presto/raptor/util/SyncingFileSystem.java", "methodName": "SyncingFileSystem$LocalFileOutputStream", "line_numbers": [67, 69, 61, 62, 70, 71, 72]}], "infer_explore": [{"level": 0, "filename": "presto-raptor/src/main/java/com/facebook/presto/raptor/util/SyncingFileSystem.java", "line_number": 43, "column_number": -1, "description": "start of procedure create(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "FSDataOutputStream SyncingFileSystem.create(Path,boolean,int,short,long,Progressable)"}, {"tag": "name_id", "value": "com.facebook.presto.raptor.util.SyncingFileSystem.create(org.apache.hadoop.fs.Path,boolean,int,short.010179ea5e7161dd49b542ce0bb6be43"}], "snippet": "40. \n41.     @Override\n42. >     public FSDataOutputStream create(Path path, boolean overwrite, int bufferSize, short replication, long blockSize, Progressable progress)\n43.             throws IOException\n44.     {\n"}, {"level": 0, "filename": "presto-raptor/src/main/java/com/facebook/presto/raptor/util/SyncingFileSystem.java", "line_number": 46, "column_number": -1, "description": "Taking false branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "false"}], "snippet": "43.             throws IOException\n44.     {\n45. >         if (exists(path) && !overwrite) {\n46.             throw new IOException(\"file already exists: \" + path);\n47.         }\n"}, {"level": 0, "filename": "presto-raptor/src/main/java/com/facebook/presto/raptor/util/SyncingFileSystem.java", "line_number": 49, "column_number": -1, "description": "Skipping getParent(): unknown method", "node_tags": [], "snippet": "46.             throw new IOException(\"file already exists: \" + path);\n47.         }\n48. >         Path parent = path.getParent();\n49.         if ((parent != null) && !mkdirs(parent)) {\n50.             throw new IOException(\"mkdirs failed to create \" + parent.toString());\n"}, {"level": 0, "filename": "presto-raptor/src/main/java/com/facebook/presto/raptor/util/SyncingFileSystem.java", "line_number": 50, "column_number": -1, "description": "Taking false branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "false"}], "snippet": "47.         }\n48.         Path parent = path.getParent();\n49. >         if ((parent != null) && !mkdirs(parent)) {\n50.             throw new IOException(\"mkdirs failed to create \" + parent.toString());\n51.         }\n"}, {"level": 0, "filename": "presto-raptor/src/main/java/com/facebook/presto/raptor/util/SyncingFileSystem.java", "line_number": 54, "column_number": -1, "description": "", "node_tags": [], "snippet": "51.         }\n52.         return new FSDataOutputStream(\n53. >                 new BufferedOutputStream(new LocalFileOutputStream(pathToFile(path)), bufferSize),\n54.                 statistics);\n55.     }\n"}, {"level": 1, "filename": "presto-raptor/src/main/java/com/facebook/presto/raptor/util/SyncingFileSystem.java", "line_number": 67, "column_number": -1, "description": "start of procedure SyncingFileSystem$LocalFileOutputStream(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "SyncingFileSystem$LocalFileOutputStream.<init>(File)"}, {"tag": "name_id", "value": "com.facebook.presto.raptor.util.SyncingFileSystem$LocalFileOutputStream.<init>(java.io.File).b6b5bc6a2053b08d0584d6599c97b54e"}], "snippet": "64.         private boolean closed;\n65. \n66. >         private LocalFileOutputStream(File file)\n67.                 throws IOException\n68.         {\n"}, {"level": 1, "filename": "presto-raptor/src/main/java/com/facebook/presto/raptor/util/SyncingFileSystem.java", "line_number": 69, "column_number": -1, "description": "", "node_tags": [], "snippet": "66.         private LocalFileOutputStream(File file)\n67.                 throws IOException\n68. >         {\n69.             this.file = requireNonNull(file, \"file is null\");\n70.             this.out = new FileOutputStream(file);\n"}, {"level": 1, "filename": "presto-raptor/src/main/java/com/facebook/presto/raptor/util/SyncingFileSystem.java", "line_number": 61, "column_number": -1, "description": "", "node_tags": [], "snippet": "58.             extends OutputStream\n59.     {\n60. >         private final byte[] oneByte = new byte[1];\n61.         private final XxHash64 hash = new XxHash64();\n62.         private final File file;\n"}, {"level": 1, "filename": "presto-raptor/src/main/java/com/facebook/presto/raptor/util/SyncingFileSystem.java", "line_number": 62, "column_number": -1, "description": "", "node_tags": [], "snippet": "59.     {\n60.         private final byte[] oneByte = new byte[1];\n61. >         private final XxHash64 hash = new XxHash64();\n62.         private final File file;\n63.         private final FileOutputStream out;\n"}, {"level": 1, "filename": "presto-raptor/src/main/java/com/facebook/presto/raptor/util/SyncingFileSystem.java", "line_number": 70, "column_number": -1, "description": "", "node_tags": [], "snippet": "67.                 throws IOException\n68.         {\n69. >             this.file = requireNonNull(file, \"file is null\");\n70.             this.out = new FileOutputStream(file);\n71.         }\n"}, {"level": 1, "filename": "presto-raptor/src/main/java/com/facebook/presto/raptor/util/SyncingFileSystem.java", "line_number": 71, "column_number": -1, "description": "", "node_tags": [], "snippet": "68.         {\n69.             this.file = requireNonNull(file, \"file is null\");\n70. >             this.out = new FileOutputStream(file);\n71.         }\n72. \n"}, {"level": 1, "filename": "presto-raptor/src/main/java/com/facebook/presto/raptor/util/SyncingFileSystem.java", "line_number": 72, "column_number": -1, "description": "return from a call to SyncingFileSystem$LocalFileOutputStream.<init>(File)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "SyncingFileSystem$LocalFileOutputStream.<init>(File)"}, {"tag": "name_id", "value": "com.facebook.presto.raptor.util.SyncingFileSystem$LocalFileOutputStream.<init>(java.io.File).b6b5bc6a2053b08d0584d6599c97b54e"}], "snippet": "69.             this.file = requireNonNull(file, \"file is null\");\n70.             this.out = new FileOutputStream(file);\n71. >         }\n72. \n73.         @Override\n"}, {"level": 0, "filename": "presto-raptor/src/main/java/com/facebook/presto/raptor/util/SyncingFileSystem.java", "line_number": 54, "column_number": -1, "description": "Skipping FSDataOutputStream(...): unknown method", "node_tags": [], "snippet": "51.         }\n52.         return new FSDataOutputStream(\n53. >                 new BufferedOutputStream(new LocalFileOutputStream(pathToFile(path)), bufferSize),\n54.                 statistics);\n55.     }\n"}]}, {"url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/stream/DecimalOutputStream.java", "rawCode": "/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage com.facebook.presto.orc.stream;\n\nimport com.facebook.presto.orc.OrcOutputBuffer;\nimport com.facebook.presto.orc.checkpoint.DecimalStreamCheckpoint;\nimport com.facebook.presto.orc.metadata.CompressionKind;\nimport com.facebook.presto.orc.metadata.Stream;\nimport com.facebook.presto.spi.type.Decimals;\nimport com.google.common.collect.ImmutableList;\nimport io.airlift.slice.Slice;\nimport io.airlift.slice.SliceOutput;\nimport org.openjdk.jol.info.ClassLayout;\n\nimport java.math.BigInteger;\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.Optional;\n\nimport static com.facebook.presto.orc.metadata.Stream.StreamKind.DATA;\nimport static com.facebook.presto.orc.stream.LongDecode.writeVLong;\nimport static com.google.common.base.Preconditions.checkState;\n\n/**\n * This is only for mantissa/significant of a decimal and not the exponent.\n */\npublic class DecimalOutputStream\n        implements ValueOutputStream<DecimalStreamCheckpoint>\n{\n    private static final int INSTANCE_SIZE = ClassLayout.parseClass(DecimalOutputStream.class).instanceSize();\n    private final OrcOutputBuffer buffer;\n    private final List<DecimalStreamCheckpoint> checkpoints = new ArrayList<>();\n\n    private boolean closed;\n\n    public DecimalOutputStream(CompressionKind compression, int bufferSize)\n    {\n        this.buffer = new OrcOutputBuffer(compression, bufferSize);\n    }\n\n    // todo rewrite without BigInteger\n    // This comes from the Apache Hive ORC code\n    public void writeUnscaledValue(Slice slice)\n    {\n        BigInteger value = Decimals.decodeUnscaledValue(slice);\n\n        // encode the signed number as a positive integer\n        value = value.shiftLeft(1);\n        int sign = value.signum();\n        if (sign < 0) {\n            value = value.negate();\n            value = value.subtract(BigInteger.ONE);\n        }\n        int length = value.bitLength();\n        while (true) {\n            long lowBits = value.longValue() & 0x7fff_ffff_ffff_ffffL;\n            length -= 63;\n            // write out the next 63 bits worth of data\n            for (int i = 0; i < 9; ++i) {\n                // if this is the last byte, leave the high bit off\n                if (length <= 0 && (lowBits & ~0x7f) == 0) {\n                    buffer.write((byte) lowBits);\n                    return;\n                }\n                else {\n                    buffer.write((byte) (0x80 | (lowBits & 0x7f)));\n                    lowBits >>>= 7;\n                }\n            }\n            value = value.shiftRight(63);\n        }\n    }\n\n    public void writeUnscaledValue(long value)\n    {\n        checkState(!closed);\n        writeVLong(buffer, value, true);\n    }\n\n    @Override\n    public void recordCheckpoint()\n    {\n        checkState(!closed);\n        checkpoints.add(new DecimalStreamCheckpoint(buffer.getCheckpoint()));\n    }\n\n    @Override\n    public void close()\n    {\n        closed = true;\n    }\n\n    @Override\n    public List<DecimalStreamCheckpoint> getCheckpoints()\n    {\n        checkState(closed);\n        return ImmutableList.copyOf(checkpoints);\n    }\n\n    @Override\n    public Optional<Stream> writeDataStreams(int column, SliceOutput outputStream)\n    {\n        checkState(closed);\n        int length = buffer.writeDataTo(outputStream);\n        return Optional.of(new Stream(column, DATA, length, true));\n    }\n\n    @Override\n    public long getBufferedBytes()\n    {\n        return buffer.size();\n    }\n\n    @Override\n    public long getRetainedBytes()\n    {\n        // NOTE: we do not include checkpoints because they should be small and it would be annoying to calculate the size\n        return INSTANCE_SIZE + buffer.getRetainedSize();\n    }\n\n    @Override\n    public void reset()\n    {\n        closed = false;\n        buffer.reset();\n        checkpoints.clear();\n    }\n}\n", "methodName": "DecimalOutputStream.<init>(CompressionKind,int)", "exampleID": 30, "dataset": "infer", "filepath": "presto-orc/src/main/java/com/facebook/presto/orc/stream/DecimalOutputStream.java", "source": "com.facebook.presto.orc.OrcOutputBuffer", "sourceLine": 49, "qualifier": "Resource of type $$com.facebook.presto.orc.OrcOutputBuffer/$ acquired by call to @@OrcOutputBuffer(...)/@ is not released", "steps": [{"line": 68, "source": "com.facebook.presto.orc.OrcOutputBuffer", "filepath": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "methodName": "OrcOutputBuffer.OrcOutputBuffer", "exampleID": 31}], "line_number": 49, "records": [{"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "line_number": 68, "column_number": -1, "description": "start of procedure OrcOutputBuffer(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "OrcOutputBuffer.<init>(CompressionKind,int)"}, {"tag": "name_id", "value": "com.facebook.presto.orc.OrcOutputBuffer.<init>(com.facebook.presto.orc.metadata.CompressionKind,int).6845406b196c465a01d7308c262b5dde"}], "snippet": "    public OrcOutputBuffer(CompressionKind compression, int bufferSize)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "methodName": "OrcOutputBuffer"}, {"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "line_number": 69, "column_number": -1, "description": "Skipping SliceOutput(): unknown method", "node_tags": [], "snippet": "    {", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "methodName": "OrcOutputBuffer"}, {"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "line_number": 70, "column_number": -1, "description": "Skipping requireNonNull(...): unknown method", "node_tags": [], "snippet": "        requireNonNull(compression, \"compression is null\");", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "methodName": "OrcOutputBuffer"}, {"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "line_number": 71, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "        checkArgument(bufferSize >= MINIMUM_BUFFER_SIZE, \"minimum buffer size of \" + MINIMUM_BUFFER_SIZE + \" required\");", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "methodName": "OrcOutputBuffer"}, {"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "line_number": 73, "column_number": -1, "description": "", "node_tags": [], "snippet": "        this.buffer = new byte[bufferSize];", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "methodName": "OrcOutputBuffer"}, {"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "line_number": 74, "column_number": -1, "description": "", "node_tags": [], "snippet": "        this.slice = Slices.wrappedBuffer(buffer);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "methodName": "OrcOutputBuffer"}, {"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "line_number": 76, "column_number": -1, "description": "", "node_tags": [], "snippet": "        compressedOutputStream = new ChunkedSliceOutput(MINIMUM_OUTPUT_BUFFER_CHUNK_SIZE, MAXIMUM_OUTPUT_BUFFER_CHUNK_SIZE);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "methodName": "OrcOutputBuffer"}, {"level": 2, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 65, "column_number": -1, "description": "start of procedure ChunkedSliceOutput(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "ChunkedSliceOutput.<init>(int,int)"}, {"tag": "name_id", "value": "com.facebook.presto.orc.ChunkedSliceOutput.<init>(int,int).ef32f7ee9f89d6c5fcb961226d8fff21"}], "snippet": "    public ChunkedSliceOutput(int minChunkSize, int maxChunkSize)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput"}, {"level": 2, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 66, "column_number": -1, "description": "Skipping SliceOutput(): unknown method", "node_tags": [], "snippet": "    {", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput"}, {"level": 2, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 52, "column_number": -1, "description": "", "node_tags": [], "snippet": "    private final List<Slice> closedSlices = new ArrayList<>();", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput"}, {"level": 2, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 67, "column_number": -1, "description": "", "node_tags": [], "snippet": "        this.chunkSupplier = new ChunkSupplier(minChunkSize, maxChunkSize);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput"}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 354, "column_number": -1, "description": "start of procedure ChunkedSliceOutput$ChunkSupplier(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "ChunkedSliceOutput$ChunkSupplier.<init>(int,int)"}, {"tag": "name_id", "value": "com.facebook.presto.orc.ChunkedSliceOutput$ChunkSupplier.<init>(int,int).c5a93fc3ccf9127a26c485b20096a08b"}], "snippet": "        public ChunkSupplier(int minChunkSize, int maxChunkSize)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput$ChunkSupplier"}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 355, "column_number": -1, "description": "", "node_tags": [], "snippet": "        {", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput$ChunkSupplier"}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 349, "column_number": -1, "description": "", "node_tags": [], "snippet": "        private final List<byte[]> bufferPool = new ArrayList<>();", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput$ChunkSupplier"}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 350, "column_number": -1, "description": "", "node_tags": [], "snippet": "        private final List<byte[]> usedBuffers = new ArrayList<>();", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput$ChunkSupplier"}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 356, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "            checkArgument(minChunkSize >= MINIMUM_CHUNK_SIZE, \"minimum chunk size of \" + MINIMUM_CHUNK_SIZE + \" required\");", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput$ChunkSupplier"}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 357, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "            checkArgument(maxChunkSize <= MAXIMUM_CHUNK_SIZE, \"maximum chunk size of \" + MAXIMUM_CHUNK_SIZE + \" required\");", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput$ChunkSupplier"}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 358, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "            checkArgument(minChunkSize <= maxChunkSize, \"minimum chunk size must be less than maximum chunk size\");", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput$ChunkSupplier"}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 360, "column_number": -1, "description": "", "node_tags": [], "snippet": "            this.currentSize = minChunkSize;", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput$ChunkSupplier"}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 361, "column_number": -1, "description": "", "node_tags": [], "snippet": "            this.maxChunkSize = maxChunkSize;", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput$ChunkSupplier"}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 362, "column_number": -1, "description": "return from a call to ChunkedSliceOutput$ChunkSupplier.<init>(int,int)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "ChunkedSliceOutput$ChunkSupplier.<init>(int,int)"}, {"tag": "name_id", "value": "com.facebook.presto.orc.ChunkedSliceOutput$ChunkSupplier.<init>(int,int).c5a93fc3ccf9127a26c485b20096a08b"}], "snippet": "        }", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput$ChunkSupplier"}, {"level": 2, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 67, "column_number": -1, "description": "", "node_tags": [], "snippet": "        this.chunkSupplier = new ChunkSupplier(minChunkSize, maxChunkSize);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput"}, {"level": 2, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 69, "column_number": -1, "description": "", "node_tags": [], "snippet": "        this.buffer = chunkSupplier.get();", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput"}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 370, "column_number": -1, "description": "start of procedure get()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "byte[] ChunkedSliceOutput$ChunkSupplier.get()"}, {"tag": "name_id", "value": "com.facebook.presto.orc.ChunkedSliceOutput$ChunkSupplier.get():byte[].43328c56c6952a613ae94f32a43bbdb0"}], "snippet": "        public byte[] get()", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "methodName": "get"}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 373, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "            if (bufferPool.isEmpty()) {", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "methodName": "get"}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 374, "column_number": -1, "description": "", "node_tags": [], "snippet": "                currentSize = min(multiplyExact(currentSize, 2), maxChunkSize);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "methodName": "get"}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 375, "column_number": -1, "description": "", "node_tags": [], "snippet": "                buffer = new byte[currentSize];", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "methodName": "get"}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 381, "column_number": -1, "description": "Skipping add(...): unknown method", "node_tags": [], "snippet": "            usedBuffers.add(buffer);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "methodName": "get"}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 382, "column_number": -1, "description": "return from a call to byte[] ChunkedSliceOutput$ChunkSupplier.get()", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "byte[] ChunkedSliceOutput$ChunkSupplier.get()"}, {"tag": "name_id", "value": "com.facebook.presto.orc.ChunkedSliceOutput$ChunkSupplier.get():byte[].43328c56c6952a613ae94f32a43bbdb0"}], "snippet": "            return buffer;", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "methodName": "get"}, {"level": 2, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 69, "column_number": -1, "description": "", "node_tags": [], "snippet": "        this.buffer = chunkSupplier.get();", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput"}, {"level": 2, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 70, "column_number": -1, "description": "", "node_tags": [], "snippet": "        this.slice = Slices.wrappedBuffer(buffer);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput"}, {"level": 2, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 71, "column_number": -1, "description": "return from a call to ChunkedSliceOutput.<init>(int,int)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "ChunkedSliceOutput.<init>(int,int)"}, {"tag": "name_id", "value": "com.facebook.presto.orc.ChunkedSliceOutput.<init>(int,int).ef32f7ee9f89d6c5fcb961226d8fff21"}], "snippet": "    }", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput"}, {"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "line_number": 76, "column_number": -1, "description": "", "node_tags": [], "snippet": "        compressedOutputStream = new ChunkedSliceOutput(MINIMUM_OUTPUT_BUFFER_CHUNK_SIZE, MAXIMUM_OUTPUT_BUFFER_CHUNK_SIZE);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "methodName": "OrcOutputBuffer"}, {"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "line_number": 78, "column_number": -1, "description": "Taking false branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "false"}], "snippet": "        if (compression == CompressionKind.NONE) {", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "methodName": "OrcOutputBuffer"}, {"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "line_number": 82, "column_number": -1, "description": "Taking false branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "false"}], "snippet": "        else if (compression == CompressionKind.SNAPPY) {", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "methodName": "OrcOutputBuffer"}, {"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "line_number": 86, "column_number": -1, "description": "Taking false branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "false"}], "snippet": "        else if (compression == CompressionKind.ZLIB) {", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "methodName": "OrcOutputBuffer"}, {"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "line_number": 91, "column_number": -1, "description": "", "node_tags": [], "snippet": "            throw new IllegalArgumentException(\"Unsupported compression \" + compression);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "methodName": "OrcOutputBuffer"}, {"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "line_number": 93, "column_number": -1, "description": "exception java.lang.IllegalArgumentException", "node_tags": [{"tag": "name", "value": "java.lang.IllegalArgumentException"}, {"tag": "kind", "value": "exception"}], "snippet": "    }", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "methodName": "OrcOutputBuffer"}, {"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "line_number": 93, "column_number": -1, "description": "return from a call to OrcOutputBuffer.<init>(CompressionKind,int)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "OrcOutputBuffer.<init>(CompressionKind,int)"}, {"tag": "name_id", "value": "com.facebook.presto.orc.OrcOutputBuffer.<init>(com.facebook.presto.orc.metadata.CompressionKind,int).6845406b196c465a01d7308c262b5dde"}], "snippet": "    }", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "methodName": "OrcOutputBuffer"}], "combined_records": [{"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "line_number": 76, "column_number": -1, "description": "start of procedure OrcOutputBuffer(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "OrcOutputBuffer.<init>(CompressionKind,int)"}, {"tag": "name_id", "value": "com.facebook.presto.orc.OrcOutputBuffer.<init>(com.facebook.presto.orc.metadata.CompressionKind,int).6845406b196c465a01d7308c262b5dde"}], "snippet": "66.\n67.    public OrcOutputBuffer(CompressionKind compression, int bufferSize)\n68.>     {\n69.>         requireNonNull(compression, \"compression is null\");\n70.>         checkArgument(bufferSize >= MINIMUM_BUFFER_SIZE, \"minimum buffer size of \" + MINIMUM_BUFFER_SIZE + \" required\");\n71.> \n72.        this.buffer = new byte[bufferSize];\n73.>         this.slice = Slices.wrappedBuffer(buffer);\n74.> \n75.        compressedOutputStream = new ChunkedSliceOutput(MINIMUM_OUTPUT_BUFFER_CHUNK_SIZE, MAXIMUM_OUTPUT_BUFFER_CHUNK_SIZE);\n76.> \n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "methodName": "OrcOutputBuffer", "line_numbers": [68, 69, 70, 71, 73, 74, 76]}, {"level": 2, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 67, "column_number": -1, "description": "start of procedure ChunkedSliceOutput(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "ChunkedSliceOutput.<init>(int,int)"}, {"tag": "name_id", "value": "com.facebook.presto.orc.ChunkedSliceOutput.<init>(int,int).ef32f7ee9f89d6c5fcb961226d8fff21"}], "snippet": "50.\n51.    private final List<Slice> closedSlices = new ArrayList<>();\n52.>     private long closedSlicesRetainedSize;\n53.\n54.    /**\n55.     * Offset of buffer within stream.\n56.     */\n57.    private long streamOffset;\n58.\n59.    /**\n60.     * Current position for writing in buffer.\n61.     */\n62.    private int bufferPosition;\n63.\n64.    public ChunkedSliceOutput(int minChunkSize, int maxChunkSize)\n65.>     {\n66.>         this.chunkSupplier = new ChunkSupplier(minChunkSize, maxChunkSize);\n67.> \n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput", "line_numbers": [65, 66, 52, 67]}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 362, "column_number": -1, "description": "start of procedure ChunkedSliceOutput$ChunkSupplier(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "ChunkedSliceOutput$ChunkSupplier.<init>(int,int)"}, {"tag": "name_id", "value": "com.facebook.presto.orc.ChunkedSliceOutput$ChunkSupplier.<init>(int,int).c5a93fc3ccf9127a26c485b20096a08b"}], "snippet": "347.\n348.        private final List<byte[]> bufferPool = new ArrayList<>();\n349.>         private final List<byte[]> usedBuffers = new ArrayList<>();\n350.> \n351.        private int currentSize;\n352.\n353.        public ChunkSupplier(int minChunkSize, int maxChunkSize)\n354.>         {\n355.>             checkArgument(minChunkSize >= MINIMUM_CHUNK_SIZE, \"minimum chunk size of \" + MINIMUM_CHUNK_SIZE + \" required\");\n356.>             checkArgument(maxChunkSize <= MAXIMUM_CHUNK_SIZE, \"maximum chunk size of \" + MAXIMUM_CHUNK_SIZE + \" required\");\n357.>             checkArgument(minChunkSize <= maxChunkSize, \"minimum chunk size must be less than maximum chunk size\");\n358.> \n359.            this.currentSize = minChunkSize;\n360.>             this.maxChunkSize = maxChunkSize;\n361.        }\n362.> \n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput$ChunkSupplier", "line_numbers": [354, 355, 349, 350, 356, 357, 358, 360, 361, 362]}, {"level": 2, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 69, "column_number": -1, "description": "", "node_tags": [], "snippet": "65.    {\n66.        this.chunkSupplier = new ChunkSupplier(minChunkSize, maxChunkSize);\n67.> \n68.        this.buffer = chunkSupplier.get();\n69.>         this.slice = Slices.wrappedBuffer(buffer);\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput", "line_numbers": [67, 69]}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 382, "column_number": -1, "description": "start of procedure get()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "byte[] ChunkedSliceOutput$ChunkSupplier.get()"}, {"tag": "name_id", "value": "com.facebook.presto.orc.ChunkedSliceOutput$ChunkSupplier.get():byte[].43328c56c6952a613ae94f32a43bbdb0"}], "snippet": "368.\n369.        public byte[] get()\n370.>         {\n371.            byte[] buffer;\n372.            if (bufferPool.isEmpty()) {\n373.>                 currentSize = min(multiplyExact(currentSize, 2), maxChunkSize);\n374.>                 buffer = new byte[currentSize];\n375.            }\n376.            else {\n377.                buffer = bufferPool.remove(0);\n378.                currentSize = buffer.length;\n379.            }\n380.            usedBuffers.add(buffer);\n381.>             return buffer;\n382.        }\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "methodName": "get", "line_numbers": [370, 373, 374, 375, 381, 382]}, {"level": 2, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 71, "column_number": -1, "description": "", "node_tags": [], "snippet": "67.\n68.        this.buffer = chunkSupplier.get();\n69.>         this.slice = Slices.wrappedBuffer(buffer);\n70.    }\n71.> \n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "methodName": "ChunkedSliceOutput", "line_numbers": [69, 70, 71]}, {"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "line_number": 93, "column_number": -1, "description": "", "node_tags": [], "snippet": "74.\n75.        compressedOutputStream = new ChunkedSliceOutput(MINIMUM_OUTPUT_BUFFER_CHUNK_SIZE, MAXIMUM_OUTPUT_BUFFER_CHUNK_SIZE);\n76.> \n77.        if (compression == CompressionKind.NONE) {\n78.>             this.compressor = null;\n79.            this.compressionBuffer = new byte[0];\n80.        }\n81.        else if (compression == CompressionKind.SNAPPY) {\n82.>             this.compressor = new SnappyCompressor();\n83.            this.compressionBuffer = new byte[compressor.maxCompressedLength(bufferSize)];\n84.        }\n85.        else if (compression == CompressionKind.ZLIB) {\n86.>             this.compressor = new DeflateCompressor();\n87.            this.compressionBuffer = new byte[compressor.maxCompressedLength(bufferSize)];\n88.        }\n89.        else {\n90.            throw new IllegalArgumentException(\"Unsupported compression \" + compression);\n91.        }\n92.    }\n93.> \n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "methodName": "OrcOutputBuffer", "line_numbers": [76, 78, 82, 86, 91, 93, 93]}], "infer_explore": [{"level": 0, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/stream/DecimalOutputStream.java", "line_number": 47, "column_number": -1, "description": "start of procedure DecimalOutputStream(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "DecimalOutputStream.<init>(CompressionKind,int)"}, {"tag": "name_id", "value": "com.facebook.presto.orc.stream.DecimalOutputStream.<init>(com.facebook.presto.orc.metadata.Compressi.bc19b49419db332667ff942466f23395"}], "snippet": "44.     private boolean closed;\n45. \n46. >     public DecimalOutputStream(CompressionKind compression, int bufferSize)\n47.     {\n48.         this.buffer = new OrcOutputBuffer(compression, bufferSize);\n"}, {"level": 0, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/stream/DecimalOutputStream.java", "line_number": 48, "column_number": -1, "description": "", "node_tags": [], "snippet": "45. \n46.     public DecimalOutputStream(CompressionKind compression, int bufferSize)\n47. >     {\n48.         this.buffer = new OrcOutputBuffer(compression, bufferSize);\n49.     }\n"}, {"level": 0, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/stream/DecimalOutputStream.java", "line_number": 43, "column_number": -1, "description": "", "node_tags": [], "snippet": "40.     private static final int INSTANCE_SIZE = ClassLayout.parseClass(DecimalOutputStream.class).instanceSize();\n41.     private final OrcOutputBuffer buffer;\n42. >     private final List<DecimalStreamCheckpoint> checkpoints = new ArrayList<>();\n43. \n44.     private boolean closed;\n"}, {"level": 0, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/stream/DecimalOutputStream.java", "line_number": 49, "column_number": -1, "description": "", "node_tags": [], "snippet": "46.     public DecimalOutputStream(CompressionKind compression, int bufferSize)\n47.     {\n48. >         this.buffer = new OrcOutputBuffer(compression, bufferSize);\n49.     }\n50. \n"}, {"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "line_number": 68, "column_number": -1, "description": "start of procedure OrcOutputBuffer(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "OrcOutputBuffer.<init>(CompressionKind,int)"}, {"tag": "name_id", "value": "com.facebook.presto.orc.OrcOutputBuffer.<init>(com.facebook.presto.orc.metadata.CompressionKind,int).6845406b196c465a01d7308c262b5dde"}], "snippet": "65.     private int bufferPosition;\n66. \n67. >     public OrcOutputBuffer(CompressionKind compression, int bufferSize)\n68.     {\n69.         requireNonNull(compression, \"compression is null\");\n"}, {"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "line_number": 69, "column_number": -1, "description": "Skipping SliceOutput(): unknown method", "node_tags": [], "snippet": "66. \n67.     public OrcOutputBuffer(CompressionKind compression, int bufferSize)\n68. >     {\n69.         requireNonNull(compression, \"compression is null\");\n70.         checkArgument(bufferSize >= MINIMUM_BUFFER_SIZE, \"minimum buffer size of \" + MINIMUM_BUFFER_SIZE + \" required\");\n"}, {"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "line_number": 70, "column_number": -1, "description": "Skipping requireNonNull(...): unknown method", "node_tags": [], "snippet": "67.     public OrcOutputBuffer(CompressionKind compression, int bufferSize)\n68.     {\n69. >         requireNonNull(compression, \"compression is null\");\n70.         checkArgument(bufferSize >= MINIMUM_BUFFER_SIZE, \"minimum buffer size of \" + MINIMUM_BUFFER_SIZE + \" required\");\n71. \n"}, {"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "line_number": 71, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "68.     {\n69.         requireNonNull(compression, \"compression is null\");\n70. >         checkArgument(bufferSize >= MINIMUM_BUFFER_SIZE, \"minimum buffer size of \" + MINIMUM_BUFFER_SIZE + \" required\");\n71. \n72.         this.buffer = new byte[bufferSize];\n"}, {"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "line_number": 73, "column_number": -1, "description": "", "node_tags": [], "snippet": "70.         checkArgument(bufferSize >= MINIMUM_BUFFER_SIZE, \"minimum buffer size of \" + MINIMUM_BUFFER_SIZE + \" required\");\n71. \n72. >         this.buffer = new byte[bufferSize];\n73.         this.slice = Slices.wrappedBuffer(buffer);\n74. \n"}, {"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "line_number": 74, "column_number": -1, "description": "", "node_tags": [], "snippet": "71. \n72.         this.buffer = new byte[bufferSize];\n73. >         this.slice = Slices.wrappedBuffer(buffer);\n74. \n75.         compressedOutputStream = new ChunkedSliceOutput(MINIMUM_OUTPUT_BUFFER_CHUNK_SIZE, MAXIMUM_OUTPUT_BUFFER_CHUNK_SIZE);\n"}, {"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "line_number": 76, "column_number": -1, "description": "", "node_tags": [], "snippet": "73.         this.slice = Slices.wrappedBuffer(buffer);\n74. \n75. >         compressedOutputStream = new ChunkedSliceOutput(MINIMUM_OUTPUT_BUFFER_CHUNK_SIZE, MAXIMUM_OUTPUT_BUFFER_CHUNK_SIZE);\n76. \n77.         if (compression == CompressionKind.NONE) {\n"}, {"level": 2, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 65, "column_number": -1, "description": "start of procedure ChunkedSliceOutput(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "ChunkedSliceOutput.<init>(int,int)"}, {"tag": "name_id", "value": "com.facebook.presto.orc.ChunkedSliceOutput.<init>(int,int).ef32f7ee9f89d6c5fcb961226d8fff21"}], "snippet": "62.     private int bufferPosition;\n63. \n64. >     public ChunkedSliceOutput(int minChunkSize, int maxChunkSize)\n65.     {\n66.         this.chunkSupplier = new ChunkSupplier(minChunkSize, maxChunkSize);\n"}, {"level": 2, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 66, "column_number": -1, "description": "Skipping SliceOutput(): unknown method", "node_tags": [], "snippet": "63. \n64.     public ChunkedSliceOutput(int minChunkSize, int maxChunkSize)\n65. >     {\n66.         this.chunkSupplier = new ChunkSupplier(minChunkSize, maxChunkSize);\n67. \n"}, {"level": 2, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 52, "column_number": -1, "description": "", "node_tags": [], "snippet": "49.     private byte[] buffer;\n50. \n51. >     private final List<Slice> closedSlices = new ArrayList<>();\n52.     private long closedSlicesRetainedSize;\n53. \n"}, {"level": 2, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 67, "column_number": -1, "description": "", "node_tags": [], "snippet": "64.     public ChunkedSliceOutput(int minChunkSize, int maxChunkSize)\n65.     {\n66. >         this.chunkSupplier = new ChunkSupplier(minChunkSize, maxChunkSize);\n67. \n68.         this.buffer = chunkSupplier.get();\n"}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 354, "column_number": -1, "description": "start of procedure ChunkedSliceOutput$ChunkSupplier(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "ChunkedSliceOutput$ChunkSupplier.<init>(int,int)"}, {"tag": "name_id", "value": "com.facebook.presto.orc.ChunkedSliceOutput$ChunkSupplier.<init>(int,int).c5a93fc3ccf9127a26c485b20096a08b"}], "snippet": "351.         private int currentSize;\n352. \n353. >         public ChunkSupplier(int minChunkSize, int maxChunkSize)\n354.         {\n355.             checkArgument(minChunkSize >= MINIMUM_CHUNK_SIZE, \"minimum chunk size of \" + MINIMUM_CHUNK_SIZE + \" required\");\n"}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 355, "column_number": -1, "description": "", "node_tags": [], "snippet": "352. \n353.         public ChunkSupplier(int minChunkSize, int maxChunkSize)\n354. >         {\n355.             checkArgument(minChunkSize >= MINIMUM_CHUNK_SIZE, \"minimum chunk size of \" + MINIMUM_CHUNK_SIZE + \" required\");\n356.             checkArgument(maxChunkSize <= MAXIMUM_CHUNK_SIZE, \"maximum chunk size of \" + MAXIMUM_CHUNK_SIZE + \" required\");\n"}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 349, "column_number": -1, "description": "", "node_tags": [], "snippet": "346.         private final int maxChunkSize;\n347. \n348. >         private final List<byte[]> bufferPool = new ArrayList<>();\n349.         private final List<byte[]> usedBuffers = new ArrayList<>();\n350. \n"}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 350, "column_number": -1, "description": "", "node_tags": [], "snippet": "347. \n348.         private final List<byte[]> bufferPool = new ArrayList<>();\n349. >         private final List<byte[]> usedBuffers = new ArrayList<>();\n350. \n351.         private int currentSize;\n"}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 356, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "353.         public ChunkSupplier(int minChunkSize, int maxChunkSize)\n354.         {\n355. >             checkArgument(minChunkSize >= MINIMUM_CHUNK_SIZE, \"minimum chunk size of \" + MINIMUM_CHUNK_SIZE + \" required\");\n356.             checkArgument(maxChunkSize <= MAXIMUM_CHUNK_SIZE, \"maximum chunk size of \" + MAXIMUM_CHUNK_SIZE + \" required\");\n357.             checkArgument(minChunkSize <= maxChunkSize, \"minimum chunk size must be less than maximum chunk size\");\n"}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 357, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "354.         {\n355.             checkArgument(minChunkSize >= MINIMUM_CHUNK_SIZE, \"minimum chunk size of \" + MINIMUM_CHUNK_SIZE + \" required\");\n356. >             checkArgument(maxChunkSize <= MAXIMUM_CHUNK_SIZE, \"maximum chunk size of \" + MAXIMUM_CHUNK_SIZE + \" required\");\n357.             checkArgument(minChunkSize <= maxChunkSize, \"minimum chunk size must be less than maximum chunk size\");\n358. \n"}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 358, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "355.             checkArgument(minChunkSize >= MINIMUM_CHUNK_SIZE, \"minimum chunk size of \" + MINIMUM_CHUNK_SIZE + \" required\");\n356.             checkArgument(maxChunkSize <= MAXIMUM_CHUNK_SIZE, \"maximum chunk size of \" + MAXIMUM_CHUNK_SIZE + \" required\");\n357. >             checkArgument(minChunkSize <= maxChunkSize, \"minimum chunk size must be less than maximum chunk size\");\n358. \n359.             this.currentSize = minChunkSize;\n"}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 360, "column_number": -1, "description": "", "node_tags": [], "snippet": "357.             checkArgument(minChunkSize <= maxChunkSize, \"minimum chunk size must be less than maximum chunk size\");\n358. \n359. >             this.currentSize = minChunkSize;\n360.             this.maxChunkSize = maxChunkSize;\n361.         }\n"}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 361, "column_number": -1, "description": "", "node_tags": [], "snippet": "358. \n359.             this.currentSize = minChunkSize;\n360. >             this.maxChunkSize = maxChunkSize;\n361.         }\n362. \n"}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 362, "column_number": -1, "description": "return from a call to ChunkedSliceOutput$ChunkSupplier.<init>(int,int)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "ChunkedSliceOutput$ChunkSupplier.<init>(int,int)"}, {"tag": "name_id", "value": "com.facebook.presto.orc.ChunkedSliceOutput$ChunkSupplier.<init>(int,int).c5a93fc3ccf9127a26c485b20096a08b"}], "snippet": "359.             this.currentSize = minChunkSize;\n360.             this.maxChunkSize = maxChunkSize;\n361. >         }\n362. \n363.         public void reset()\n"}, {"level": 2, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 67, "column_number": -1, "description": "", "node_tags": [], "snippet": "64.     public ChunkedSliceOutput(int minChunkSize, int maxChunkSize)\n65.     {\n66. >         this.chunkSupplier = new ChunkSupplier(minChunkSize, maxChunkSize);\n67. \n68.         this.buffer = chunkSupplier.get();\n"}, {"level": 2, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 69, "column_number": -1, "description": "", "node_tags": [], "snippet": "66.         this.chunkSupplier = new ChunkSupplier(minChunkSize, maxChunkSize);\n67. \n68. >         this.buffer = chunkSupplier.get();\n69.         this.slice = Slices.wrappedBuffer(buffer);\n70.     }\n"}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 370, "column_number": -1, "description": "start of procedure get()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "byte[] ChunkedSliceOutput$ChunkSupplier.get()"}, {"tag": "name_id", "value": "com.facebook.presto.orc.ChunkedSliceOutput$ChunkSupplier.get():byte[].43328c56c6952a613ae94f32a43bbdb0"}], "snippet": "367.         }\n368. \n369. >         public byte[] get()\n370.         {\n371.             byte[] buffer;\n"}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 373, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "370.         {\n371.             byte[] buffer;\n372. >             if (bufferPool.isEmpty()) {\n373.                 currentSize = min(multiplyExact(currentSize, 2), maxChunkSize);\n374.                 buffer = new byte[currentSize];\n"}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 374, "column_number": -1, "description": "", "node_tags": [], "snippet": "371.             byte[] buffer;\n372.             if (bufferPool.isEmpty()) {\n373. >                 currentSize = min(multiplyExact(currentSize, 2), maxChunkSize);\n374.                 buffer = new byte[currentSize];\n375.             }\n"}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 375, "column_number": -1, "description": "", "node_tags": [], "snippet": "372.             if (bufferPool.isEmpty()) {\n373.                 currentSize = min(multiplyExact(currentSize, 2), maxChunkSize);\n374. >                 buffer = new byte[currentSize];\n375.             }\n376.             else {\n"}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 381, "column_number": -1, "description": "Skipping add(...): unknown method", "node_tags": [], "snippet": "378.                 currentSize = buffer.length;\n379.             }\n380. >             usedBuffers.add(buffer);\n381.             return buffer;\n382.         }\n"}, {"level": 3, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 382, "column_number": -1, "description": "return from a call to byte[] ChunkedSliceOutput$ChunkSupplier.get()", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "byte[] ChunkedSliceOutput$ChunkSupplier.get()"}, {"tag": "name_id", "value": "com.facebook.presto.orc.ChunkedSliceOutput$ChunkSupplier.get():byte[].43328c56c6952a613ae94f32a43bbdb0"}], "snippet": "379.             }\n380.             usedBuffers.add(buffer);\n381. >             return buffer;\n382.         }\n383.     }\n"}, {"level": 2, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 69, "column_number": -1, "description": "", "node_tags": [], "snippet": "66.         this.chunkSupplier = new ChunkSupplier(minChunkSize, maxChunkSize);\n67. \n68. >         this.buffer = chunkSupplier.get();\n69.         this.slice = Slices.wrappedBuffer(buffer);\n70.     }\n"}, {"level": 2, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 70, "column_number": -1, "description": "", "node_tags": [], "snippet": "67. \n68.         this.buffer = chunkSupplier.get();\n69. >         this.slice = Slices.wrappedBuffer(buffer);\n70.     }\n71. \n"}, {"level": 2, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/ChunkedSliceOutput.java", "line_number": 71, "column_number": -1, "description": "return from a call to ChunkedSliceOutput.<init>(int,int)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "ChunkedSliceOutput.<init>(int,int)"}, {"tag": "name_id", "value": "com.facebook.presto.orc.ChunkedSliceOutput.<init>(int,int).ef32f7ee9f89d6c5fcb961226d8fff21"}], "snippet": "68.         this.buffer = chunkSupplier.get();\n69.         this.slice = Slices.wrappedBuffer(buffer);\n70. >     }\n71. \n72.     public List<Slice> getSlices()\n"}, {"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "line_number": 76, "column_number": -1, "description": "", "node_tags": [], "snippet": "73.         this.slice = Slices.wrappedBuffer(buffer);\n74. \n75. >         compressedOutputStream = new ChunkedSliceOutput(MINIMUM_OUTPUT_BUFFER_CHUNK_SIZE, MAXIMUM_OUTPUT_BUFFER_CHUNK_SIZE);\n76. \n77.         if (compression == CompressionKind.NONE) {\n"}, {"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "line_number": 78, "column_number": -1, "description": "Taking false branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "false"}], "snippet": "75.         compressedOutputStream = new ChunkedSliceOutput(MINIMUM_OUTPUT_BUFFER_CHUNK_SIZE, MAXIMUM_OUTPUT_BUFFER_CHUNK_SIZE);\n76. \n77. >         if (compression == CompressionKind.NONE) {\n78.             this.compressor = null;\n79.             this.compressionBuffer = new byte[0];\n"}, {"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "line_number": 82, "column_number": -1, "description": "Taking false branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "false"}], "snippet": "79.             this.compressionBuffer = new byte[0];\n80.         }\n81. >         else if (compression == CompressionKind.SNAPPY) {\n82.             this.compressor = new SnappyCompressor();\n83.             this.compressionBuffer = new byte[compressor.maxCompressedLength(bufferSize)];\n"}, {"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "line_number": 86, "column_number": -1, "description": "Taking false branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "false"}], "snippet": "83.             this.compressionBuffer = new byte[compressor.maxCompressedLength(bufferSize)];\n84.         }\n85. >         else if (compression == CompressionKind.ZLIB) {\n86.             this.compressor = new DeflateCompressor();\n87.             this.compressionBuffer = new byte[compressor.maxCompressedLength(bufferSize)];\n"}, {"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "line_number": 91, "column_number": -1, "description": "", "node_tags": [], "snippet": "88.         }\n89.         else {\n90. >             throw new IllegalArgumentException(\"Unsupported compression \" + compression);\n91.         }\n92.     }\n"}, {"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "line_number": 93, "column_number": -1, "description": "exception java.lang.IllegalArgumentException", "node_tags": [{"tag": "name", "value": "java.lang.IllegalArgumentException"}, {"tag": "kind", "value": "exception"}], "snippet": "90.             throw new IllegalArgumentException(\"Unsupported compression \" + compression);\n91.         }\n92. >     }\n93. \n94.     public int writeDataTo(SliceOutput outputStream)\n"}, {"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcOutputBuffer.java", "line_number": 93, "column_number": -1, "description": "return from a call to OrcOutputBuffer.<init>(CompressionKind,int)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "OrcOutputBuffer.<init>(CompressionKind,int)"}, {"tag": "name_id", "value": "com.facebook.presto.orc.OrcOutputBuffer.<init>(com.facebook.presto.orc.metadata.CompressionKind,int).6845406b196c465a01d7308c262b5dde"}], "snippet": "90.             throw new IllegalArgumentException(\"Unsupported compression \" + compression);\n91.         }\n92. >     }\n93. \n94.     public int writeDataTo(SliceOutput outputStream)\n"}]}, {"url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-ml/src/main/java/com/facebook/presto/ml/SvmClassifier.java", "rawCode": "/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage com.facebook.presto.ml;\n\nimport com.facebook.presto.ml.type.ModelType;\nimport libsvm.svm;\nimport libsvm.svm_model;\nimport libsvm.svm_parameter;\n\nimport java.io.BufferedReader;\nimport java.io.ByteArrayInputStream;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.UncheckedIOException;\n\nimport static com.facebook.presto.ml.type.ClassifierType.BIGINT_CLASSIFIER;\nimport static java.util.Objects.requireNonNull;\n\npublic class SvmClassifier\n        extends AbstractSvmModel\n        implements Classifier<Integer>\n{\n    public SvmClassifier()\n    {\n        this(LibSvmUtils.parseParameters(\"\"));\n    }\n\n    public SvmClassifier(svm_parameter params)\n    {\n        super(params);\n    }\n\n    private SvmClassifier(svm_model model)\n    {\n        super(model);\n    }\n\n    public static SvmClassifier deserialize(byte[] modelData)\n    {\n        // TODO do something with the hyperparameters\n        try {\n            svm_model model = svm.svm_load_model(new BufferedReader(new InputStreamReader(new ByteArrayInputStream(modelData))));\n            return new SvmClassifier(model);\n        }\n        catch (IOException e) {\n            throw new UncheckedIOException(e);\n        }\n    }\n\n    @Override\n    public Integer classify(FeatureVector features)\n    {\n        requireNonNull(model, \"model is null\");\n        return (int) svm.svm_predict(model, toSvmNodes(features));\n    }\n\n    @Override\n    public ModelType getType()\n    {\n        return BIGINT_CLASSIFIER;\n    }\n\n    @Override\n    protected int getLibsvmType()\n    {\n        return svm_parameter.C_SVC;\n    }\n}\n", "methodName": "SvmClassifier SvmClassifier.deserialize(byte[])", "exampleID": 32, "dataset": "infer", "filepath": "presto-ml/src/main/java/com/facebook/presto/ml/SvmClassifier.java", "source": "java.io.InputStreamReader", "sourceLine": 53, "qualifier": "Resource of type $$java.io.InputStreamReader/$ acquired by call to @@new()/@ is not released", "steps": [{"line": 53, "source": "java.io.InputStreamReader", "filepath": "presto-ml/src/main/java/com/facebook/presto/ml/SvmClassifier.java", "methodName": "SvmClassifier SvmClassifier.deserialize(byte[])", "exampleID": 33}], "line_number": 53, "records": [], "combined_records": [], "infer_explore": [{"level": 0, "filename": "presto-ml/src/main/java/com/facebook/presto/ml/SvmClassifier.java", "line_number": 49, "column_number": -1, "description": "start of procedure deserialize(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "SvmClassifier SvmClassifier.deserialize(byte[])"}, {"tag": "name_id", "value": "com.facebook.presto.ml.SvmClassifier.deserialize(byte[]):com.facebook.presto.ml.SvmClassifier.aac36ed9f0aef6d284eca2fc18eefdf7"}], "snippet": "46.     }\n47. \n48. >     public static SvmClassifier deserialize(byte[] modelData)\n49.     {\n50.         // TODO do something with the hyperparameters\n"}, {"level": 0, "filename": "presto-ml/src/main/java/com/facebook/presto/ml/SvmClassifier.java", "line_number": 53, "column_number": -1, "description": "Skipping svm_load_model(...): unknown method", "node_tags": [], "snippet": "50.         // TODO do something with the hyperparameters\n51.         try {\n52. >             svm_model model = svm.svm_load_model(new BufferedReader(new InputStreamReader(new ByteArrayInputStream(modelData))));\n53.             return new SvmClassifier(model);\n54.         }\n"}]}, {"url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-ml/src/main/java/com/facebook/presto/ml/SvmRegressor.java", "rawCode": "/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage com.facebook.presto.ml;\n\nimport com.facebook.presto.ml.type.ModelType;\nimport libsvm.svm;\nimport libsvm.svm_model;\nimport libsvm.svm_parameter;\n\nimport java.io.BufferedReader;\nimport java.io.ByteArrayInputStream;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.UncheckedIOException;\n\nimport static com.facebook.presto.ml.type.RegressorType.REGRESSOR;\nimport static java.util.Objects.requireNonNull;\n\npublic class SvmRegressor\n        extends AbstractSvmModel\n        implements Regressor\n{\n    public SvmRegressor()\n    {\n        this(LibSvmUtils.parseParameters(\"\"));\n    }\n\n    public SvmRegressor(svm_parameter params)\n    {\n        super(params);\n    }\n\n    private SvmRegressor(svm_model model)\n    {\n        super(model);\n    }\n\n    public static SvmRegressor deserialize(byte[] modelData)\n    {\n        // TODO do something with the hyperparameters\n        try {\n            svm_model model = svm.svm_load_model(new BufferedReader(new InputStreamReader(new ByteArrayInputStream(modelData))));\n            return new SvmRegressor(model);\n        }\n        catch (IOException e) {\n            throw new UncheckedIOException(e);\n        }\n    }\n\n    @Override\n    public double regress(FeatureVector features)\n    {\n        requireNonNull(model, \"model is null\");\n        return svm.svm_predict(model, toSvmNodes(features));\n    }\n\n    @Override\n    public ModelType getType()\n    {\n        return REGRESSOR;\n    }\n\n    @Override\n    protected int getLibsvmType()\n    {\n        return svm_parameter.NU_SVR;\n    }\n}\n", "methodName": "SvmRegressor SvmRegressor.deserialize(byte[])", "exampleID": 34, "dataset": "infer", "filepath": "presto-ml/src/main/java/com/facebook/presto/ml/SvmRegressor.java", "source": "java.io.InputStreamReader", "sourceLine": 53, "qualifier": "Resource of type $$java.io.InputStreamReader/$ acquired by call to @@new()/@ is not released", "steps": [{"line": 53, "source": "java.io.InputStreamReader", "filepath": "presto-ml/src/main/java/com/facebook/presto/ml/SvmRegressor.java", "methodName": "SvmRegressor SvmRegressor.deserialize(byte[])", "exampleID": 35}], "line_number": 53, "records": [], "combined_records": [], "infer_explore": [{"level": 0, "filename": "presto-ml/src/main/java/com/facebook/presto/ml/SvmRegressor.java", "line_number": 49, "column_number": -1, "description": "start of procedure deserialize(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "SvmRegressor SvmRegressor.deserialize(byte[])"}, {"tag": "name_id", "value": "com.facebook.presto.ml.SvmRegressor.deserialize(byte[]):com.facebook.presto.ml.SvmRegressor.7178e3cf9e8d9577db67b9e5c8840e0c"}], "snippet": "46.     }\n47. \n48. >     public static SvmRegressor deserialize(byte[] modelData)\n49.     {\n50.         // TODO do something with the hyperparameters\n"}, {"level": 0, "filename": "presto-ml/src/main/java/com/facebook/presto/ml/SvmRegressor.java", "line_number": 53, "column_number": -1, "description": "Skipping svm_load_model(...): unknown method", "node_tags": [], "snippet": "50.         // TODO do something with the hyperparameters\n51.         try {\n52. >             svm_model model = svm.svm_load_model(new BufferedReader(new InputStreamReader(new ByteArrayInputStream(modelData))));\n53.             return new SvmRegressor(model);\n54.         }\n"}]}, {"url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/test/java/com/facebook/presto/orc/TestOrcWriter.java", "rawCode": "/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage com.facebook.presto.orc;\n\nimport com.facebook.presto.orc.memory.AggregatedMemoryContext;\nimport com.facebook.presto.orc.metadata.Footer;\nimport com.facebook.presto.orc.metadata.MetadataReader;\nimport com.facebook.presto.orc.metadata.OrcMetadataReader;\nimport com.facebook.presto.orc.metadata.Stream;\nimport com.facebook.presto.orc.metadata.StripeFooter;\nimport com.facebook.presto.orc.metadata.StripeInformation;\nimport com.facebook.presto.orc.stream.OrcInputStream;\nimport com.facebook.presto.spi.Page;\nimport com.facebook.presto.spi.block.Block;\nimport com.facebook.presto.spi.block.BlockBuilder;\nimport com.facebook.presto.spi.block.BlockBuilderStatus;\nimport com.google.common.collect.ImmutableList;\nimport com.google.common.collect.ImmutableMap;\nimport io.airlift.slice.OutputStreamSliceOutput;\nimport io.airlift.slice.Slices;\nimport io.airlift.units.DataSize;\nimport org.testng.annotations.Test;\n\nimport java.io.FileOutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.util.Optional;\n\nimport static com.facebook.presto.orc.OrcTester.HIVE_STORAGE_TIME_ZONE;\nimport static com.facebook.presto.orc.OrcWriter.createOrcWriter;\nimport static com.facebook.presto.orc.StripeReader.isIndexStream;\nimport static com.facebook.presto.orc.TestingOrcPredicate.ORC_ROW_GROUP_SIZE;\nimport static com.facebook.presto.orc.TestingOrcPredicate.ORC_STRIPE_SIZE;\nimport static com.facebook.presto.orc.metadata.CompressionKind.NONE;\nimport static com.facebook.presto.spi.type.VarcharType.VARCHAR;\nimport static io.airlift.testing.Assertions.assertGreaterThanOrEqual;\nimport static io.airlift.units.DataSize.Unit.MEGABYTE;\nimport static java.lang.Math.toIntExact;\nimport static org.testng.Assert.assertFalse;\n\npublic class TestOrcWriter\n{\n    @Test\n    public void testWriteOutputStreamsInOrder()\n            throws IOException\n    {\n        TempFile tempFile = new TempFile();\n        OrcWriter writer = createOrcWriter(\n                new OutputStreamSliceOutput(new FileOutputStream(tempFile.getFile())),\n                    ImmutableList.of(\"test1\", \"test2\", \"test3\", \"test4\", \"test5\"),\n                    ImmutableList.of(VARCHAR, VARCHAR, VARCHAR, VARCHAR, VARCHAR),\n                    NONE,\n                    new DataSize(32, MEGABYTE),\n                    ORC_STRIPE_SIZE,\n                    ORC_STRIPE_SIZE,\n                    ORC_ROW_GROUP_SIZE,\n                    new DataSize(32, MEGABYTE),\n                    ImmutableMap.of(),\n                    HIVE_STORAGE_TIME_ZONE,\n                    true);\n\n        // write down some data with unsorted streams\n        String[] data = new String[]{\"a\", \"bbbbb\", \"ccc\", \"dd\", \"eeee\"};\n        Block[] blocks = new Block[data.length];\n        int entries = 65536;\n        BlockBuilder blockBuilder = VARCHAR.createBlockBuilder(new BlockBuilderStatus(), entries);\n        for (int i = 0; i < data.length; i++) {\n            byte[] bytes = data[i].getBytes();\n            for (int j = 0; j < entries; j++) {\n                // force to write different data\n                bytes[0] = (byte) ((bytes[0] + 1) % 128);\n                blockBuilder.writeBytes(Slices.wrappedBuffer(bytes, 0, bytes.length), 0, bytes.length);\n                blockBuilder.closeEntry();\n            }\n            blocks[i] = blockBuilder.build();\n            blockBuilder = blockBuilder.newBlockBuilderLike(new BlockBuilderStatus());\n        }\n\n        writer.write(new Page(blocks));\n        writer.close();\n\n        // read the footer and verify the streams are ordered by size\n        DataSize dataSize = new DataSize(1, MEGABYTE);\n        MetadataReader metadataReader = new OrcMetadataReader();\n        OrcDataSource orcDataSource = new FileOrcDataSource(tempFile.getFile(), dataSize, dataSize, dataSize, true);\n        Footer footer = new OrcReader(orcDataSource, metadataReader, dataSize, dataSize, dataSize).getFooter();\n\n        for (StripeInformation stripe : footer.getStripes()) {\n            // read the footer\n            byte[] tailBuffer = new byte[toIntExact(stripe.getFooterLength())];\n            orcDataSource.readFully(stripe.getOffset() + stripe.getIndexLength() + stripe.getDataLength(), tailBuffer);\n            try (InputStream inputStream = new OrcInputStream(orcDataSource.getId(), Slices.wrappedBuffer(tailBuffer).getInput(), Optional.empty(), new AggregatedMemoryContext())) {\n                StripeFooter stripeFooter = metadataReader.readStripeFooter(footer.getTypes(), inputStream);\n\n                int size = 0;\n                boolean dataStreamStarted = false;\n                for (Stream stream : stripeFooter.getStreams()) {\n                    if (isIndexStream(stream)) {\n                        assertFalse(dataStreamStarted);\n                        continue;\n                    }\n                    dataStreamStarted = true;\n                    // verify sizes in order\n                    assertGreaterThanOrEqual(stream.getLength(), size);\n                    size = stream.getLength();\n                }\n            }\n        }\n    }\n}\n", "methodName": "void TestOrcWriter.testWriteOutputStreamsInOrder()", "exampleID": 36, "dataset": "infer", "filepath": "presto-orc/src/test/java/com/facebook/presto/orc/TestOrcWriter.java", "source": "io.airlift.slice.OutputStreamSliceOutput", "sourceLine": 60, "qualifier": "Resource of type $$io.airlift.slice.OutputStreamSliceOutput/$ acquired by call to @@new()/@ is not released", "steps": [{"line": 114, "source": "io.airlift.slice.OutputStreamSliceOutput", "filepath": "presto-orc/src/main/java/com/facebook/presto/orc/OrcWriter.java", "methodName": "OrcWriter.createOrcWriter", "exampleID": 37}], "line_number": 60, "records": [{"level": 1, "filename": "presto-orc/src/test/java/com/facebook/presto/orc/TempFile.java", "line_number": 37, "column_number": -1, "description": "start of procedure getFile()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "File TempFile.getFile()"}, {"tag": "name_id", "value": "com.facebook.presto.orc.TempFile.getFile():java.io.File.89a0bd4a9e18e4c29676856e2d158291"}], "snippet": "    public File getFile()", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/test/java/com/facebook/presto/orc/TempFile.java", "methodName": "getFile"}, {"level": 1, "filename": "presto-orc/src/test/java/com/facebook/presto/orc/TempFile.java", "line_number": 39, "column_number": -1, "description": "return from a call to File TempFile.getFile()", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "File TempFile.getFile()"}, {"tag": "name_id", "value": "com.facebook.presto.orc.TempFile.getFile():java.io.File.89a0bd4a9e18e4c29676856e2d158291"}], "snippet": "        return file;", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/test/java/com/facebook/presto/orc/TempFile.java", "methodName": "getFile"}, {"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcWriter.java", "line_number": 114, "column_number": -1, "description": "start of procedure createOrcWriter(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "OrcWriter OrcWriter.createOrcWriter(OutputStreamSliceOutput,List,List,CompressionKind,DataSize,int,int,int,DataSize,Map,DateTimeZone,boolean)"}, {"tag": "name_id", "value": "com.facebook.presto.orc.OrcWriter.createOrcWriter(io.airlift.slice.OutputStreamSliceOutput,java.util.899b7c7c3967a8ffd127d15007a90c81"}], "snippet": "    public static OrcWriter createOrcWriter(", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/OrcWriter.java", "methodName": "createOrcWriter"}, {"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcWriter.java", "line_number": 128, "column_number": -1, "description": "", "node_tags": [], "snippet": "        return new OrcWriter(", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/OrcWriter.java", "methodName": "createOrcWriter"}, {"level": 2, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/metadata/OrcMetadataWriter.java", "line_number": 41, "column_number": -1, "description": "start of procedure OrcMetadataWriter()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "OrcMetadataWriter.<init>()"}, {"tag": "name_id", "value": "com.facebook.presto.orc.metadata.OrcMetadataWriter.<init>().47415425138669660d4a8c25cd66d6be"}], "snippet": "public class OrcMetadataWriter", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/metadata/OrcMetadataWriter.java", "methodName": "OrcMetadataWriter"}, {"level": 2, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/metadata/OrcMetadataWriter.java", "line_number": 41, "column_number": -1, "description": "return from a call to OrcMetadataWriter.<init>()", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "OrcMetadataWriter.<init>()"}, {"tag": "name_id", "value": "com.facebook.presto.orc.metadata.OrcMetadataWriter.<init>().47415425138669660d4a8c25cd66d6be"}], "snippet": "public class OrcMetadataWriter", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/metadata/OrcMetadataWriter.java", "methodName": "OrcMetadataWriter"}, {"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcWriter.java", "line_number": 128, "column_number": -1, "description": "Skipping OrcWriter(...): empty list of specs", "node_tags": [], "snippet": "        return new OrcWriter(", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/OrcWriter.java", "methodName": "createOrcWriter"}, {"level": 2, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcWriter.java", "line_number": 176, "column_number": -1, "description": "Definition of OrcWriter(...)", "node_tags": [], "snippet": "    private OrcWriter(", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/OrcWriter.java", "methodName": "OrcWriter"}, {"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcWriter.java", "line_number": 128, "column_number": -1, "description": "return from a call to OrcWriter OrcWriter.createOrcWriter(OutputStreamSliceOutput,List,List,CompressionKind,DataSize,int,int,int,DataSize,Map,DateTimeZone,boolean)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "OrcWriter OrcWriter.createOrcWriter(OutputStreamSliceOutput,List,List,CompressionKind,DataSize,int,int,int,DataSize,Map,DateTimeZone,boolean)"}, {"tag": "name_id", "value": "com.facebook.presto.orc.OrcWriter.createOrcWriter(io.airlift.slice.OutputStreamSliceOutput,java.util.899b7c7c3967a8ffd127d15007a90c81"}], "snippet": "        return new OrcWriter(", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/OrcWriter.java", "methodName": "OrcWriter"}], "combined_records": [{"level": 1, "filename": "presto-orc/src/test/java/com/facebook/presto/orc/TempFile.java", "line_number": 39, "column_number": -1, "description": "start of procedure getFile()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "File TempFile.getFile()"}, {"tag": "name_id", "value": "com.facebook.presto.orc.TempFile.getFile():java.io.File.89a0bd4a9e18e4c29676856e2d158291"}], "snippet": "35.\n36.    public File getFile()\n37.>     {\n38.        return file;\n39.    }\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/test/java/com/facebook/presto/orc/TempFile.java", "methodName": "getFile", "line_numbers": [37, 39]}, {"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcWriter.java", "line_number": 128, "column_number": -1, "description": "start of procedure createOrcWriter(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "OrcWriter OrcWriter.createOrcWriter(OutputStreamSliceOutput,List,List,CompressionKind,DataSize,int,int,int,DataSize,Map,DateTimeZone,boolean)"}, {"tag": "name_id", "value": "com.facebook.presto.orc.OrcWriter.createOrcWriter(io.airlift.slice.OutputStreamSliceOutput,java.util.899b7c7c3967a8ffd127d15007a90c81"}], "snippet": "112.\n113.    public static OrcWriter createOrcWriter(\n114.>             SliceOutput output,\n115.            List<String> columnNames,\n116.            List<Type> types,\n117.            CompressionKind compression,\n118.            DataSize stripeMaxBytes,\n119.            int stripeMinRowCount,\n120.            int stripeMaxRowCount,\n121.            int rowGroupMaxRowCount,\n122.            DataSize dictionaryMemoryMaxBytes,\n123.            Map<String, String> userMetadata,\n124.            DateTimeZone hiveStorageTimeZone,\n125.            boolean validate)\n126.    {\n127.        return new OrcWriter(\n128.>                 output,\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/OrcWriter.java", "methodName": "createOrcWriter", "line_numbers": [114, 128]}, {"level": 2, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/metadata/OrcMetadataWriter.java", "line_number": 41, "column_number": -1, "description": "start of procedure OrcMetadataWriter()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "OrcMetadataWriter.<init>()"}, {"tag": "name_id", "value": "com.facebook.presto.orc.metadata.OrcMetadataWriter.<init>().47415425138669660d4a8c25cd66d6be"}], "snippet": "39.\n40.public class OrcMetadataWriter\n41.>         implements MetadataWriter\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/metadata/OrcMetadataWriter.java", "methodName": "OrcMetadataWriter", "line_numbers": [41, 41]}, {"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcWriter.java", "line_number": 128, "column_number": -1, "description": "Skipping OrcWriter(...): empty list of specs", "node_tags": [], "snippet": "126.    {\n127.        return new OrcWriter(\n128.>                 output,\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/OrcWriter.java", "methodName": "createOrcWriter", "line_numbers": [128]}, {"level": 2, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcWriter.java", "line_number": 176, "column_number": -1, "description": "Definition of OrcWriter(...)", "node_tags": [], "snippet": "174.\n175.    private OrcWriter(\n176.>             SliceOutput output,\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/OrcWriter.java", "methodName": "OrcWriter", "line_numbers": [176]}, {"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcWriter.java", "line_number": 128, "column_number": -1, "description": "return from a call to OrcWriter OrcWriter.createOrcWriter(OutputStreamSliceOutput,List,List,CompressionKind,DataSize,int,int,int,DataSize,Map,DateTimeZone,boolean)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "OrcWriter OrcWriter.createOrcWriter(OutputStreamSliceOutput,List,List,CompressionKind,DataSize,int,int,int,DataSize,Map,DateTimeZone,boolean)"}, {"tag": "name_id", "value": "com.facebook.presto.orc.OrcWriter.createOrcWriter(io.airlift.slice.OutputStreamSliceOutput,java.util.899b7c7c3967a8ffd127d15007a90c81"}], "snippet": "126.    {\n127.        return new OrcWriter(\n128.>                 output,\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-orc/src/main/java/com/facebook/presto/orc/OrcWriter.java", "methodName": "OrcWriter", "line_numbers": [128]}], "infer_explore": [{"level": 0, "filename": "presto-orc/src/test/java/com/facebook/presto/orc/TestOrcWriter.java", "line_number": 55, "column_number": -1, "description": "start of procedure testWriteOutputStreamsInOrder()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void TestOrcWriter.testWriteOutputStreamsInOrder()"}, {"tag": "name_id", "value": "com.facebook.presto.orc.TestOrcWriter.testWriteOutputStreamsInOrder():void.fbc266d0705140fa73e0615111fe496d"}], "snippet": "52. {\n53.     @Test\n54. >     public void testWriteOutputStreamsInOrder()\n55.             throws IOException\n56.     {\n"}, {"level": 0, "filename": "presto-orc/src/test/java/com/facebook/presto/orc/TestOrcWriter.java", "line_number": 58, "column_number": -1, "description": "", "node_tags": [], "snippet": "55.             throws IOException\n56.     {\n57. >         TempFile tempFile = new TempFile();\n58.         OrcWriter writer = createOrcWriter(\n59.                 new OutputStreamSliceOutput(new FileOutputStream(tempFile.getFile())),\n"}, {"level": 1, "filename": "presto-orc/src/test/java/com/facebook/presto/orc/TempFile.java", "line_number": 30, "column_number": -1, "description": "start of procedure TempFile()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "TempFile.<init>()"}, {"tag": "name_id", "value": "com.facebook.presto.orc.TempFile.<init>().04ca6a1ee5d291f52c22fefa9a0184ce"}], "snippet": "27.     private final File file;\n28. \n29. >     public TempFile()\n30.     {\n31.         tempDir = createTempDir();\n"}, {"level": 1, "filename": "presto-orc/src/test/java/com/facebook/presto/orc/TempFile.java", "line_number": 31, "column_number": -1, "description": "", "node_tags": [], "snippet": "28. \n29.     public TempFile()\n30. >     {\n31.         tempDir = createTempDir();\n32.         tempDir.mkdirs();\n"}, {"level": 1, "filename": "presto-orc/src/test/java/com/facebook/presto/orc/TempFile.java", "line_number": 32, "column_number": -1, "description": "", "node_tags": [], "snippet": "29.     public TempFile()\n30.     {\n31. >         tempDir = createTempDir();\n32.         tempDir.mkdirs();\n33.         file = new File(tempDir, \"data.orc\");\n"}, {"level": 1, "filename": "presto-orc/src/test/java/com/facebook/presto/orc/TempFile.java", "line_number": 33, "column_number": -1, "description": "Skipping mkdirs(): unknown method", "node_tags": [], "snippet": "30.     {\n31.         tempDir = createTempDir();\n32. >         tempDir.mkdirs();\n33.         file = new File(tempDir, \"data.orc\");\n34.     }\n"}, {"level": 1, "filename": "presto-orc/src/test/java/com/facebook/presto/orc/TempFile.java", "line_number": 34, "column_number": -1, "description": "", "node_tags": [], "snippet": "31.         tempDir = createTempDir();\n32.         tempDir.mkdirs();\n33. >         file = new File(tempDir, \"data.orc\");\n34.     }\n35. \n"}, {"level": 1, "filename": "presto-orc/src/test/java/com/facebook/presto/orc/TempFile.java", "line_number": 35, "column_number": -1, "description": "return from a call to TempFile.<init>()", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "TempFile.<init>()"}, {"tag": "name_id", "value": "com.facebook.presto.orc.TempFile.<init>().04ca6a1ee5d291f52c22fefa9a0184ce"}], "snippet": "32.         tempDir.mkdirs();\n33.         file = new File(tempDir, \"data.orc\");\n34. >     }\n35. \n36.     public File getFile()\n"}, {"level": 0, "filename": "presto-orc/src/test/java/com/facebook/presto/orc/TestOrcWriter.java", "line_number": 60, "column_number": -1, "description": "", "node_tags": [], "snippet": "57.         TempFile tempFile = new TempFile();\n58.         OrcWriter writer = createOrcWriter(\n59. >                 new OutputStreamSliceOutput(new FileOutputStream(tempFile.getFile())),\n60.                     ImmutableList.of(\"test1\", \"test2\", \"test3\", \"test4\", \"test5\"),\n61.                     ImmutableList.of(VARCHAR, VARCHAR, VARCHAR, VARCHAR, VARCHAR),\n"}, {"level": 1, "filename": "presto-orc/src/test/java/com/facebook/presto/orc/TempFile.java", "line_number": 37, "column_number": -1, "description": "start of procedure getFile()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "File TempFile.getFile()"}, {"tag": "name_id", "value": "com.facebook.presto.orc.TempFile.getFile():java.io.File.89a0bd4a9e18e4c29676856e2d158291"}], "snippet": "34.     }\n35. \n36. >     public File getFile()\n37.     {\n38.         return file;\n"}, {"level": 1, "filename": "presto-orc/src/test/java/com/facebook/presto/orc/TempFile.java", "line_number": 39, "column_number": -1, "description": "return from a call to File TempFile.getFile()", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "File TempFile.getFile()"}, {"tag": "name_id", "value": "com.facebook.presto.orc.TempFile.getFile():java.io.File.89a0bd4a9e18e4c29676856e2d158291"}], "snippet": "36.     public File getFile()\n37.     {\n38. >         return file;\n39.     }\n40. \n"}, {"level": 0, "filename": "presto-orc/src/test/java/com/facebook/presto/orc/TestOrcWriter.java", "line_number": 60, "column_number": -1, "description": "Skipping OutputStreamSliceOutput(...): unknown method", "node_tags": [], "snippet": "57.         TempFile tempFile = new TempFile();\n58.         OrcWriter writer = createOrcWriter(\n59. >                 new OutputStreamSliceOutput(new FileOutputStream(tempFile.getFile())),\n60.                     ImmutableList.of(\"test1\", \"test2\", \"test3\", \"test4\", \"test5\"),\n61.                     ImmutableList.of(VARCHAR, VARCHAR, VARCHAR, VARCHAR, VARCHAR),\n"}, {"level": 0, "filename": "presto-orc/src/test/java/com/facebook/presto/orc/TestOrcWriter.java", "line_number": 61, "column_number": -1, "description": "", "node_tags": [], "snippet": "58.         OrcWriter writer = createOrcWriter(\n59.                 new OutputStreamSliceOutput(new FileOutputStream(tempFile.getFile())),\n60. >                     ImmutableList.of(\"test1\", \"test2\", \"test3\", \"test4\", \"test5\"),\n61.                     ImmutableList.of(VARCHAR, VARCHAR, VARCHAR, VARCHAR, VARCHAR),\n62.                     NONE,\n"}, {"level": 0, "filename": "presto-orc/src/test/java/com/facebook/presto/orc/TestOrcWriter.java", "line_number": 62, "column_number": -1, "description": "Skipping DataSize(...): unknown method", "node_tags": [], "snippet": "59.                 new OutputStreamSliceOutput(new FileOutputStream(tempFile.getFile())),\n60.                     ImmutableList.of(\"test1\", \"test2\", \"test3\", \"test4\", \"test5\"),\n61. >                     ImmutableList.of(VARCHAR, VARCHAR, VARCHAR, VARCHAR, VARCHAR),\n62.                     NONE,\n63.                     new DataSize(32, MEGABYTE),\n"}, {"level": 0, "filename": "presto-orc/src/test/java/com/facebook/presto/orc/TestOrcWriter.java", "line_number": 69, "column_number": -1, "description": "Skipping of(): unknown method", "node_tags": [], "snippet": "66.                     ORC_ROW_GROUP_SIZE,\n67.                     new DataSize(32, MEGABYTE),\n68. >                     ImmutableMap.of(),\n69.                     HIVE_STORAGE_TIME_ZONE,\n70.                     true);\n"}, {"level": 0, "filename": "presto-orc/src/test/java/com/facebook/presto/orc/TestOrcWriter.java", "line_number": 59, "column_number": -1, "description": "", "node_tags": [], "snippet": "56.     {\n57.         TempFile tempFile = new TempFile();\n58. >         OrcWriter writer = createOrcWriter(\n59.                 new OutputStreamSliceOutput(new FileOutputStream(tempFile.getFile())),\n60.                     ImmutableList.of(\"test1\", \"test2\", \"test3\", \"test4\", \"test5\"),\n"}, {"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcWriter.java", "line_number": 114, "column_number": -1, "description": "start of procedure createOrcWriter(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "OrcWriter OrcWriter.createOrcWriter(OutputStreamSliceOutput,List,List,CompressionKind,DataSize,int,int,int,DataSize,Map,DateTimeZone,boolean)"}, {"tag": "name_id", "value": "com.facebook.presto.orc.OrcWriter.createOrcWriter(io.airlift.slice.OutputStreamSliceOutput,java.util.899b7c7c3967a8ffd127d15007a90c81"}], "snippet": "111.     private OrcWriteValidation.OrcWriteValidationBuilder validationBuilder;\n112. \n113. >     public static OrcWriter createOrcWriter(\n114.             SliceOutput output,\n115.             List<String> columnNames,\n"}, {"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcWriter.java", "line_number": 128, "column_number": -1, "description": "", "node_tags": [], "snippet": "125.             boolean validate)\n126.     {\n127. >         return new OrcWriter(\n128.                 output,\n129.                 columnNames,\n"}, {"level": 2, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/metadata/OrcMetadataWriter.java", "line_number": 41, "column_number": -1, "description": "start of procedure OrcMetadataWriter()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "OrcMetadataWriter.<init>()"}, {"tag": "name_id", "value": "com.facebook.presto.orc.metadata.OrcMetadataWriter.<init>().47415425138669660d4a8c25cd66d6be"}], "snippet": "38. import static java.util.stream.Collectors.toList;\n39. \n40. > public class OrcMetadataWriter\n41.         implements MetadataWriter\n42. {\n"}, {"level": 2, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/metadata/OrcMetadataWriter.java", "line_number": 41, "column_number": -1, "description": "return from a call to OrcMetadataWriter.<init>()", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "OrcMetadataWriter.<init>()"}, {"tag": "name_id", "value": "com.facebook.presto.orc.metadata.OrcMetadataWriter.<init>().47415425138669660d4a8c25cd66d6be"}], "snippet": "38. import static java.util.stream.Collectors.toList;\n39. \n40. > public class OrcMetadataWriter\n41.         implements MetadataWriter\n42. {\n"}, {"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcWriter.java", "line_number": 128, "column_number": -1, "description": "Skipping OrcWriter(...): empty list of specs", "node_tags": [], "snippet": "125.             boolean validate)\n126.     {\n127. >         return new OrcWriter(\n128.                 output,\n129.                 columnNames,\n"}, {"level": 2, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcWriter.java", "line_number": 176, "column_number": -1, "description": "Definition of OrcWriter(...)", "node_tags": [], "snippet": "173.     }\n174. \n175. >     private OrcWriter(\n176.             SliceOutput output,\n177.             List<String> columnNames,\n"}, {"level": 1, "filename": "presto-orc/src/main/java/com/facebook/presto/orc/OrcWriter.java", "line_number": 128, "column_number": -1, "description": "return from a call to OrcWriter OrcWriter.createOrcWriter(OutputStreamSliceOutput,List,List,CompressionKind,DataSize,int,int,int,DataSize,Map,DateTimeZone,boolean)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "OrcWriter OrcWriter.createOrcWriter(OutputStreamSliceOutput,List,List,CompressionKind,DataSize,int,int,int,DataSize,Map,DateTimeZone,boolean)"}, {"tag": "name_id", "value": "com.facebook.presto.orc.OrcWriter.createOrcWriter(io.airlift.slice.OutputStreamSliceOutput,java.util.899b7c7c3967a8ffd127d15007a90c81"}], "snippet": "125.             boolean validate)\n126.     {\n127. >         return new OrcWriter(\n128.                 output,\n129.                 columnNames,\n"}]}, {"url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-hive/src/main/java/com/facebook/presto/hive/RcFileFileWriter.java", "rawCode": "/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage com.facebook.presto.hive;\n\nimport com.facebook.presto.rcfile.AircompressorCodecFactory;\nimport com.facebook.presto.rcfile.HadoopCodecFactory;\nimport com.facebook.presto.rcfile.RcFileDataSource;\nimport com.facebook.presto.rcfile.RcFileEncoding;\nimport com.facebook.presto.rcfile.RcFileWriter;\nimport com.facebook.presto.spi.Page;\nimport com.facebook.presto.spi.PrestoException;\nimport com.facebook.presto.spi.block.Block;\nimport com.facebook.presto.spi.block.BlockBuilder;\nimport com.facebook.presto.spi.block.BlockBuilderStatus;\nimport com.facebook.presto.spi.block.RunLengthEncodedBlock;\nimport com.facebook.presto.spi.type.Type;\nimport com.google.common.collect.ImmutableList;\nimport com.google.common.io.CountingOutputStream;\nimport io.airlift.slice.OutputStreamSliceOutput;\n\nimport java.io.IOException;\nimport java.io.OutputStream;\nimport java.io.UncheckedIOException;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.Optional;\nimport java.util.concurrent.Callable;\nimport java.util.function.Supplier;\n\nimport static com.facebook.presto.hive.HiveErrorCode.HIVE_WRITER_CLOSE_ERROR;\nimport static com.facebook.presto.hive.HiveErrorCode.HIVE_WRITER_DATA_ERROR;\nimport static com.facebook.presto.hive.HiveErrorCode.HIVE_WRITE_VALIDATION_FAILED;\nimport static com.google.common.base.MoreObjects.toStringHelper;\nimport static java.util.Objects.requireNonNull;\n\npublic class RcFileFileWriter\n        implements HiveFileWriter\n{\n    private final CountingOutputStream outputStream;\n    private final RcFileWriter rcFileWriter;\n    private final Callable<Void> rollbackAction;\n    private final int[] fileInputColumnIndexes;\n    private final List<Block> nullBlocks;\n    private final Optional<Supplier<RcFileDataSource>> validationInputFactory;\n\n    public RcFileFileWriter(\n            OutputStream outputStream,\n            Callable<Void> rollbackAction,\n            RcFileEncoding rcFileEncoding,\n            List<Type> fileColumnTypes,\n            Optional<String> codecName,\n            int[] fileInputColumnIndexes,\n            Map<String, String> metadata,\n            Optional<Supplier<RcFileDataSource>> validationInputFactory)\n            throws IOException\n    {\n        this.outputStream = new CountingOutputStream(outputStream);\n        rcFileWriter = new RcFileWriter(\n                new OutputStreamSliceOutput(this.outputStream),\n                fileColumnTypes,\n                rcFileEncoding,\n                codecName,\n                new AircompressorCodecFactory(new HadoopCodecFactory(getClass().getClassLoader())),\n                metadata,\n                validationInputFactory.isPresent());\n        this.rollbackAction = requireNonNull(rollbackAction, \"rollbackAction is null\");\n\n        this.fileInputColumnIndexes = requireNonNull(fileInputColumnIndexes, \"outputColumnInputIndexes is null\");\n\n        ImmutableList.Builder<Block> nullBlocks = ImmutableList.builder();\n        for (Type fileColumnType : fileColumnTypes) {\n            BlockBuilder blockBuilder = fileColumnType.createBlockBuilder(new BlockBuilderStatus(), 1, 0);\n            blockBuilder.appendNull();\n            nullBlocks.add(blockBuilder.build());\n        }\n        this.nullBlocks = nullBlocks.build();\n        this.validationInputFactory = validationInputFactory;\n    }\n\n    @Override\n    public long getWrittenBytes()\n    {\n        return outputStream.getCount();\n    }\n\n    @Override\n    public long getSystemMemoryUsage()\n    {\n        return rcFileWriter.getRetainedSizeInBytes();\n    }\n\n    @Override\n    public void appendRows(Page dataPage)\n    {\n        Block[] blocks = new Block[fileInputColumnIndexes.length];\n        for (int i = 0; i < fileInputColumnIndexes.length; i++) {\n            int inputColumnIndex = fileInputColumnIndexes[i];\n            if (inputColumnIndex < 0) {\n                blocks[i] = new RunLengthEncodedBlock(nullBlocks.get(i), dataPage.getPositionCount());\n            }\n            else {\n                blocks[i] = dataPage.getBlock(inputColumnIndex);\n            }\n        }\n        Page page = new Page(dataPage.getPositionCount(), blocks);\n        try {\n            rcFileWriter.write(page);\n        }\n        catch (IOException | UncheckedIOException e) {\n            throw new PrestoException(HIVE_WRITER_DATA_ERROR, e);\n        }\n    }\n\n    @Override\n    public void commit()\n    {\n        try {\n            rcFileWriter.close();\n        }\n        catch (IOException | UncheckedIOException e) {\n            try {\n                rollbackAction.call();\n            }\n            catch (Exception ignored) {\n                // ignore\n            }\n            throw new PrestoException(HIVE_WRITER_CLOSE_ERROR, \"Error committing write to Hive\", e);\n        }\n\n        if (validationInputFactory.isPresent()) {\n            try {\n                try (RcFileDataSource input = validationInputFactory.get().get()) {\n                    rcFileWriter.validate(input);\n                }\n            }\n            catch (IOException | UncheckedIOException e) {\n                throw new PrestoException(HIVE_WRITE_VALIDATION_FAILED, e);\n            }\n        }\n    }\n\n    @Override\n    public void rollback()\n    {\n        try {\n            try {\n                rcFileWriter.close();\n            }\n            finally {\n                rollbackAction.call();\n            }\n        }\n        catch (Exception e) {\n            throw new PrestoException(HIVE_WRITER_CLOSE_ERROR, \"Error rolling back write to Hive\", e);\n        }\n    }\n\n    @Override\n    public String toString()\n    {\n        return toStringHelper(this)\n                .add(\"writer\", rcFileWriter)\n                .toString();\n    }\n}\n", "methodName": "RcFileFileWriter.<init>(OutputStream,Callable,RcFileEncoding,List,Optional,int[],Map,Optional)", "exampleID": 38, "dataset": "infer", "filepath": "presto-hive/src/main/java/com/facebook/presto/hive/RcFileFileWriter.java", "source": "io.airlift.slice.OutputStreamSliceOutput", "sourceLine": 69, "qualifier": "Resource of type $$io.airlift.slice.OutputStreamSliceOutput/$ acquired by call to @@new()/@ is not released", "steps": [{"line": 27, "source": "io.airlift.slice.OutputStreamSliceOutput", "filepath": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/HadoopCodecFactory.java", "methodName": "HadoopCodecFactory.HadoopCodecFactory", "exampleID": 39}], "line_number": 69, "records": [{"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/HadoopCodecFactory.java", "line_number": 27, "column_number": -1, "description": "start of procedure HadoopCodecFactory(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "HadoopCodecFactory.<init>(ClassLoader)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.HadoopCodecFactory.<init>(java.lang.ClassLoader).bce0bc05f41dc0d847f99f9810b07383"}], "snippet": "    public HadoopCodecFactory(ClassLoader classLoader)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/HadoopCodecFactory.java", "methodName": "HadoopCodecFactory"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/HadoopCodecFactory.java", "line_number": 28, "column_number": -1, "description": "", "node_tags": [], "snippet": "    {", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/HadoopCodecFactory.java", "methodName": "HadoopCodecFactory"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/HadoopCodecFactory.java", "line_number": 29, "column_number": -1, "description": "", "node_tags": [], "snippet": "        this.classLoader = classLoader;", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/HadoopCodecFactory.java", "methodName": "HadoopCodecFactory"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/HadoopCodecFactory.java", "line_number": 30, "column_number": -1, "description": "return from a call to HadoopCodecFactory.<init>(ClassLoader)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "HadoopCodecFactory.<init>(ClassLoader)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.HadoopCodecFactory.<init>(java.lang.ClassLoader).bce0bc05f41dc0d847f99f9810b07383"}], "snippet": "    }", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/HadoopCodecFactory.java", "methodName": "HadoopCodecFactory"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/AircompressorCodecFactory.java", "line_number": 35, "column_number": -1, "description": "start of procedure AircompressorCodecFactory(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "AircompressorCodecFactory.<init>(HadoopCodecFactory)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.AircompressorCodecFactory.<init>(com.facebook.presto.rcfile.HadoopCodecFa.2ff29093edc6729cd4ff7b7490b3982f"}], "snippet": "    public AircompressorCodecFactory(RcFileCodecFactory delegate)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/AircompressorCodecFactory.java", "methodName": "AircompressorCodecFactory"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/AircompressorCodecFactory.java", "line_number": 36, "column_number": -1, "description": "", "node_tags": [], "snippet": "    {", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/AircompressorCodecFactory.java", "methodName": "AircompressorCodecFactory"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/AircompressorCodecFactory.java", "line_number": 37, "column_number": -1, "description": "", "node_tags": [], "snippet": "        this.delegate = requireNonNull(delegate, \"delegate is null\");", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/AircompressorCodecFactory.java", "methodName": "AircompressorCodecFactory"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/AircompressorCodecFactory.java", "line_number": 38, "column_number": -1, "description": "return from a call to AircompressorCodecFactory.<init>(HadoopCodecFactory)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "AircompressorCodecFactory.<init>(HadoopCodecFactory)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.AircompressorCodecFactory.<init>(com.facebook.presto.rcfile.HadoopCodecFa.2ff29093edc6729cd4ff7b7490b3982f"}], "snippet": "    }", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/AircompressorCodecFactory.java", "methodName": "AircompressorCodecFactory"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/RcFileWriter.java", "line_number": 91, "column_number": -1, "description": "start of procedure RcFileWriter(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "RcFileWriter.<init>(OutputStreamSliceOutput,List,RcFileEncoding,Optional,AircompressorCodecFactory,Map,boolean)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.RcFileWriter.<init>(io.airlift.slice.OutputStreamSliceOutput,java.util.Li.ee4912d6e65adf389e10db18af7be070"}], "snippet": "    public RcFileWriter(", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/RcFileWriter.java", "methodName": "RcFileWriter"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/RcFileWriter.java", "line_number": 101, "column_number": -1, "description": "Skipping RcFileWriter(...): empty list of specs", "node_tags": [], "snippet": "        this(", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/RcFileWriter.java", "methodName": "RcFileWriter"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/RcFileWriter.java", "line_number": 113, "column_number": -1, "description": "Definition of RcFileWriter(...)", "node_tags": [], "snippet": "    public RcFileWriter(", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/RcFileWriter.java", "methodName": "RcFileWriter"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/RcFileWriter.java", "line_number": 111, "column_number": -1, "description": "return from a call to RcFileWriter.<init>(OutputStreamSliceOutput,List,RcFileEncoding,Optional,AircompressorCodecFactory,Map,boolean)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "RcFileWriter.<init>(OutputStreamSliceOutput,List,RcFileEncoding,Optional,AircompressorCodecFactory,Map,boolean)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.RcFileWriter.<init>(io.airlift.slice.OutputStreamSliceOutput,java.util.Li.ee4912d6e65adf389e10db18af7be070"}], "snippet": "    }", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/RcFileWriter.java", "methodName": "RcFileWriter"}], "combined_records": [{"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/HadoopCodecFactory.java", "line_number": 30, "column_number": -1, "description": "start of procedure HadoopCodecFactory(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "HadoopCodecFactory.<init>(ClassLoader)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.HadoopCodecFactory.<init>(java.lang.ClassLoader).bce0bc05f41dc0d847f99f9810b07383"}], "snippet": "25.\n26.    public HadoopCodecFactory(ClassLoader classLoader)\n27.>     {\n28.>         this.classLoader = classLoader;\n29.    }\n30.> \n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/HadoopCodecFactory.java", "methodName": "HadoopCodecFactory", "line_numbers": [27, 28, 29, 30]}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/AircompressorCodecFactory.java", "line_number": 38, "column_number": -1, "description": "start of procedure AircompressorCodecFactory(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "AircompressorCodecFactory.<init>(HadoopCodecFactory)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.AircompressorCodecFactory.<init>(com.facebook.presto.rcfile.HadoopCodecFa.2ff29093edc6729cd4ff7b7490b3982f"}], "snippet": "33.\n34.    public AircompressorCodecFactory(RcFileCodecFactory delegate)\n35.>     {\n36.>         this.delegate = requireNonNull(delegate, \"delegate is null\");\n37.    }\n38.> \n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/AircompressorCodecFactory.java", "methodName": "AircompressorCodecFactory", "line_numbers": [35, 36, 37, 38]}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/RcFileWriter.java", "line_number": 101, "column_number": -1, "description": "start of procedure RcFileWriter(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "RcFileWriter.<init>(OutputStreamSliceOutput,List,RcFileEncoding,Optional,AircompressorCodecFactory,Map,boolean)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.RcFileWriter.<init>(io.airlift.slice.OutputStreamSliceOutput,java.util.Li.ee4912d6e65adf389e10db18af7be070"}], "snippet": "89.\n90.    public RcFileWriter(\n91.>             SliceOutput output,\n92.            List<Type> types,\n93.            RcFileEncoding encoding,\n94.            Optional<String> codecName,\n95.            RcFileCodecFactory codecFactory,\n96.            Map<String, String> metadata,\n97.            boolean validate)\n98.            throws IOException\n99.    {\n100.        this(\n101.>                 output,\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/RcFileWriter.java", "methodName": "RcFileWriter", "line_numbers": [91, 101]}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/RcFileWriter.java", "line_number": 113, "column_number": -1, "description": "Definition of RcFileWriter(...)", "node_tags": [], "snippet": "111.\n112.    public RcFileWriter(\n113.>             SliceOutput output,\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/RcFileWriter.java", "methodName": "RcFileWriter", "line_numbers": [113]}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/RcFileWriter.java", "line_number": 111, "column_number": -1, "description": "return from a call to RcFileWriter.<init>(OutputStreamSliceOutput,List,RcFileEncoding,Optional,AircompressorCodecFactory,Map,boolean)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "RcFileWriter.<init>(OutputStreamSliceOutput,List,RcFileEncoding,Optional,AircompressorCodecFactory,Map,boolean)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.RcFileWriter.<init>(io.airlift.slice.OutputStreamSliceOutput,java.util.Li.ee4912d6e65adf389e10db18af7be070"}], "snippet": "109.                validate);\n110.    }\n111.> \n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/RcFileWriter.java", "methodName": "RcFileWriter", "line_numbers": [111]}], "infer_explore": [{"level": 0, "filename": "presto-hive/src/main/java/com/facebook/presto/hive/RcFileFileWriter.java", "line_number": 57, "column_number": -1, "description": "start of procedure RcFileFileWriter(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "RcFileFileWriter.<init>(OutputStream,Callable,RcFileEncoding,List,Optional,int[],Map,Optional)"}, {"tag": "name_id", "value": "com.facebook.presto.hive.RcFileFileWriter.<init>(java.io.OutputStream,java.util.concurrent.Callable,.5716270ddc53e9ee3a542de662ece6ae"}], "snippet": "54.     private final Optional<Supplier<RcFileDataSource>> validationInputFactory;\n55. \n56. >     public RcFileFileWriter(\n57.             OutputStream outputStream,\n58.             Callable<Void> rollbackAction,\n"}, {"level": 0, "filename": "presto-hive/src/main/java/com/facebook/presto/hive/RcFileFileWriter.java", "line_number": 67, "column_number": -1, "description": "", "node_tags": [], "snippet": "64.             Optional<Supplier<RcFileDataSource>> validationInputFactory)\n65.             throws IOException\n66. >     {\n67.         this.outputStream = new CountingOutputStream(outputStream);\n68.         rcFileWriter = new RcFileWriter(\n"}, {"level": 0, "filename": "presto-hive/src/main/java/com/facebook/presto/hive/RcFileFileWriter.java", "line_number": 68, "column_number": -1, "description": "", "node_tags": [], "snippet": "65.             throws IOException\n66.     {\n67. >         this.outputStream = new CountingOutputStream(outputStream);\n68.         rcFileWriter = new RcFileWriter(\n69.                 new OutputStreamSliceOutput(this.outputStream),\n"}, {"level": 0, "filename": "presto-hive/src/main/java/com/facebook/presto/hive/RcFileFileWriter.java", "line_number": 69, "column_number": -1, "description": "Skipping OutputStreamSliceOutput(...): unknown method", "node_tags": [], "snippet": "66.     {\n67.         this.outputStream = new CountingOutputStream(outputStream);\n68. >         rcFileWriter = new RcFileWriter(\n69.                 new OutputStreamSliceOutput(this.outputStream),\n70.                 fileColumnTypes,\n"}, {"level": 0, "filename": "presto-hive/src/main/java/com/facebook/presto/hive/RcFileFileWriter.java", "line_number": 74, "column_number": -1, "description": "", "node_tags": [], "snippet": "71.                 rcFileEncoding,\n72.                 codecName,\n73. >                 new AircompressorCodecFactory(new HadoopCodecFactory(getClass().getClassLoader())),\n74.                 metadata,\n75.                 validationInputFactory.isPresent());\n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/HadoopCodecFactory.java", "line_number": 27, "column_number": -1, "description": "start of procedure HadoopCodecFactory(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "HadoopCodecFactory.<init>(ClassLoader)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.HadoopCodecFactory.<init>(java.lang.ClassLoader).bce0bc05f41dc0d847f99f9810b07383"}], "snippet": "24.     private final ClassLoader classLoader;\n25. \n26. >     public HadoopCodecFactory(ClassLoader classLoader)\n27.     {\n28.         this.classLoader = classLoader;\n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/HadoopCodecFactory.java", "line_number": 28, "column_number": -1, "description": "", "node_tags": [], "snippet": "25. \n26.     public HadoopCodecFactory(ClassLoader classLoader)\n27. >     {\n28.         this.classLoader = classLoader;\n29.     }\n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/HadoopCodecFactory.java", "line_number": 29, "column_number": -1, "description": "", "node_tags": [], "snippet": "26.     public HadoopCodecFactory(ClassLoader classLoader)\n27.     {\n28. >         this.classLoader = classLoader;\n29.     }\n30. \n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/HadoopCodecFactory.java", "line_number": 30, "column_number": -1, "description": "return from a call to HadoopCodecFactory.<init>(ClassLoader)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "HadoopCodecFactory.<init>(ClassLoader)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.HadoopCodecFactory.<init>(java.lang.ClassLoader).bce0bc05f41dc0d847f99f9810b07383"}], "snippet": "27.     {\n28.         this.classLoader = classLoader;\n29. >     }\n30. \n31.     @Override\n"}, {"level": 0, "filename": "presto-hive/src/main/java/com/facebook/presto/hive/RcFileFileWriter.java", "line_number": 74, "column_number": -1, "description": "", "node_tags": [], "snippet": "71.                 rcFileEncoding,\n72.                 codecName,\n73. >                 new AircompressorCodecFactory(new HadoopCodecFactory(getClass().getClassLoader())),\n74.                 metadata,\n75.                 validationInputFactory.isPresent());\n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/AircompressorCodecFactory.java", "line_number": 35, "column_number": -1, "description": "start of procedure AircompressorCodecFactory(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "AircompressorCodecFactory.<init>(HadoopCodecFactory)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.AircompressorCodecFactory.<init>(com.facebook.presto.rcfile.HadoopCodecFa.2ff29093edc6729cd4ff7b7490b3982f"}], "snippet": "32.     private final RcFileCodecFactory delegate;\n33. \n34. >     public AircompressorCodecFactory(RcFileCodecFactory delegate)\n35.     {\n36.         this.delegate = requireNonNull(delegate, \"delegate is null\");\n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/AircompressorCodecFactory.java", "line_number": 36, "column_number": -1, "description": "", "node_tags": [], "snippet": "33. \n34.     public AircompressorCodecFactory(RcFileCodecFactory delegate)\n35. >     {\n36.         this.delegate = requireNonNull(delegate, \"delegate is null\");\n37.     }\n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/AircompressorCodecFactory.java", "line_number": 37, "column_number": -1, "description": "", "node_tags": [], "snippet": "34.     public AircompressorCodecFactory(RcFileCodecFactory delegate)\n35.     {\n36. >         this.delegate = requireNonNull(delegate, \"delegate is null\");\n37.     }\n38. \n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/AircompressorCodecFactory.java", "line_number": 38, "column_number": -1, "description": "return from a call to AircompressorCodecFactory.<init>(HadoopCodecFactory)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "AircompressorCodecFactory.<init>(HadoopCodecFactory)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.AircompressorCodecFactory.<init>(com.facebook.presto.rcfile.HadoopCodecFa.2ff29093edc6729cd4ff7b7490b3982f"}], "snippet": "35.     {\n36.         this.delegate = requireNonNull(delegate, \"delegate is null\");\n37. >     }\n38. \n39.     @Override\n"}, {"level": 0, "filename": "presto-hive/src/main/java/com/facebook/presto/hive/RcFileFileWriter.java", "line_number": 76, "column_number": -1, "description": "", "node_tags": [], "snippet": "73.                 new AircompressorCodecFactory(new HadoopCodecFactory(getClass().getClassLoader())),\n74.                 metadata,\n75. >                 validationInputFactory.isPresent());\n76.         this.rollbackAction = requireNonNull(rollbackAction, \"rollbackAction is null\");\n77. \n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/RcFileWriter.java", "line_number": 91, "column_number": -1, "description": "start of procedure RcFileWriter(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "RcFileWriter.<init>(OutputStreamSliceOutput,List,RcFileEncoding,Optional,AircompressorCodecFactory,Map,boolean)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.RcFileWriter.<init>(io.airlift.slice.OutputStreamSliceOutput,java.util.Li.ee4912d6e65adf389e10db18af7be070"}], "snippet": "88.     private final RcFileWriteValidationBuilder validationBuilder;\n89. \n90. >     public RcFileWriter(\n91.             SliceOutput output,\n92.             List<Type> types,\n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/RcFileWriter.java", "line_number": 101, "column_number": -1, "description": "Skipping RcFileWriter(...): empty list of specs", "node_tags": [], "snippet": "98.             throws IOException\n99.     {\n100. >         this(\n101.                 output,\n102.                 types,\n"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/RcFileWriter.java", "line_number": 113, "column_number": -1, "description": "Definition of RcFileWriter(...)", "node_tags": [], "snippet": "110.     }\n111. \n112. >     public RcFileWriter(\n113.             SliceOutput output,\n114.             List<Type> types,\n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/RcFileWriter.java", "line_number": 111, "column_number": -1, "description": "return from a call to RcFileWriter.<init>(OutputStreamSliceOutput,List,RcFileEncoding,Optional,AircompressorCodecFactory,Map,boolean)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "RcFileWriter.<init>(OutputStreamSliceOutput,List,RcFileEncoding,Optional,AircompressorCodecFactory,Map,boolean)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.RcFileWriter.<init>(io.airlift.slice.OutputStreamSliceOutput,java.util.Li.ee4912d6e65adf389e10db18af7be070"}], "snippet": "108.                 DEFAULT_TARGET_MAX_ROW_GROUP_SIZE,\n109.                 validate);\n110. >     }\n111. \n112.     public RcFileWriter(\n"}]}, {"url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-hive/src/main/java/com/facebook/presto/hive/metastore/thrift/Transport.java", "rawCode": "/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage com.facebook.presto.hive.metastore.thrift;\n\nimport com.facebook.presto.hive.authentication.HiveMetastoreAuthentication;\nimport com.google.common.net.HostAndPort;\nimport org.apache.thrift.transport.TSocket;\nimport org.apache.thrift.transport.TTransport;\nimport org.apache.thrift.transport.TTransportException;\n\nimport javax.net.ssl.SSLContext;\n\nimport java.io.IOException;\nimport java.net.InetSocketAddress;\nimport java.net.Proxy;\nimport java.net.Socket;\nimport java.util.Optional;\n\nimport static java.net.Proxy.Type.SOCKS;\n\npublic final class Transport\n{\n    public static TTransport create(\n            HostAndPort address,\n            Optional<SSLContext> sslContext,\n            Optional<HostAndPort> socksProxy,\n            int timeoutMillis,\n            HiveMetastoreAuthentication authentication)\n            throws TTransportException\n    {\n        try {\n            TTransport rawTransport = createRaw(address, sslContext, socksProxy, timeoutMillis);\n            TTransport authenticatedTransport = authentication.authenticate(rawTransport, address.getHost());\n            if (!authenticatedTransport.isOpen()) {\n                authenticatedTransport.open();\n            }\n            return new TTransportWrapper(authenticatedTransport, address);\n        }\n        catch (TTransportException e) {\n            throw rewriteException(e, address);\n        }\n    }\n\n    private Transport() {}\n\n    private static TTransport createRaw(HostAndPort address, Optional<SSLContext> sslContext, Optional<HostAndPort> socksProxy, int timeoutMillis)\n            throws TTransportException\n    {\n        Proxy proxy = socksProxy\n                .map(socksAddress -> new Proxy(SOCKS, InetSocketAddress.createUnresolved(socksAddress.getHost(), socksAddress.getPort())))\n                .orElse(Proxy.NO_PROXY);\n\n        Socket socket = new Socket(proxy);\n        try {\n            socket.connect(new InetSocketAddress(address.getHost(), address.getPort()), timeoutMillis);\n\n            if (sslContext.isPresent()) {\n                // SSL will connect to the SOCKS address when present\n                HostAndPort sslConnectAddress = socksProxy.orElse(address);\n\n                socket = sslContext.get().getSocketFactory().createSocket(socket, sslConnectAddress.getHost(), sslConnectAddress.getPort(), true);\n            }\n            return new TSocket(socket);\n        }\n        catch (Throwable t) {\n            // something went wrong, close the socket and rethrow\n            try {\n                socket.close();\n            }\n            catch (IOException e) {\n                t.addSuppressed(e);\n            }\n            throw new TTransportException(t);\n        }\n    }\n\n    private static TTransportException rewriteException(TTransportException e, HostAndPort address)\n    {\n        return new TTransportException(e.getType(), String.format(\"%s: %s\", address, e.getMessage()), e.getCause());\n    }\n\n    private static class TTransportWrapper\n            extends TTransport\n    {\n        private final TTransport transport;\n        private final HostAndPort address;\n\n        TTransportWrapper(TTransport transport, HostAndPort address)\n        {\n            this.transport = transport;\n            this.address = address;\n        }\n\n        @Override\n        public boolean isOpen()\n        {\n            return transport.isOpen();\n        }\n\n        @Override\n        public boolean peek()\n        {\n            return transport.peek();\n        }\n\n        @Override\n        public byte[] getBuffer()\n        {\n            return transport.getBuffer();\n        }\n\n        @Override\n        public int getBufferPosition()\n        {\n            return transport.getBufferPosition();\n        }\n\n        @Override\n        public int getBytesRemainingInBuffer()\n        {\n            return transport.getBytesRemainingInBuffer();\n        }\n\n        @Override\n        public void consumeBuffer(int len)\n        {\n            transport.consumeBuffer(len);\n        }\n\n        @Override\n        public void close()\n        {\n            transport.close();\n        }\n\n        @Override\n        public void open()\n                throws TTransportException\n        {\n            try {\n                transport.open();\n            }\n            catch (TTransportException e) {\n                throw rewriteException(e, address);\n            }\n        }\n\n        @Override\n        public int readAll(byte[] bytes, int off, int len)\n                throws TTransportException\n        {\n            try {\n                return transport.readAll(bytes, off, len);\n            }\n            catch (TTransportException e) {\n                throw rewriteException(e, address);\n            }\n        }\n\n        @Override\n        public int read(byte[] bytes, int off, int len)\n                throws TTransportException\n        {\n            try {\n                return transport.read(bytes, off, len);\n            }\n            catch (TTransportException e) {\n                throw rewriteException(e, address);\n            }\n        }\n\n        @Override\n        public void write(byte[] bytes)\n                throws TTransportException\n        {\n            try {\n                transport.write(bytes);\n            }\n            catch (TTransportException e) {\n                throw rewriteException(e, address);\n            }\n        }\n\n        @Override\n        public void write(byte[] bytes, int off, int len)\n                throws TTransportException\n        {\n            try {\n                transport.write(bytes, off, len);\n            }\n            catch (TTransportException e) {\n                throw rewriteException(e, address);\n            }\n        }\n\n        @Override\n        public void flush()\n                throws TTransportException\n        {\n            try {\n                transport.flush();\n            }\n            catch (TTransportException e) {\n                throw rewriteException(e, address);\n            }\n        }\n    }\n}\n", "methodName": "TTransport Transport.createRaw(HostAndPort,Optional,Optional,int)", "exampleID": 40, "dataset": "infer", "filepath": "presto-hive/src/main/java/com/facebook/presto/hive/metastore/thrift/Transport.java", "source": "java.net.Socket", "sourceLine": 64, "qualifier": "Resource of type $$java.net.Socket/$ acquired by call to @@new()/@ is not released", "steps": [{"line": 64, "source": "java.net.Socket", "filepath": "presto-hive/src/main/java/com/facebook/presto/hive/metastore/thrift/Transport.java", "methodName": "TTransport Transport.createRaw(HostAndPort,Optional,Optional,int)", "exampleID": 41}], "line_number": 64, "records": [], "combined_records": [], "infer_explore": [{"level": 0, "filename": "presto-hive/src/main/java/com/facebook/presto/hive/metastore/thrift/Transport.java", "line_number": 57, "column_number": -1, "description": "start of procedure createRaw(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "TTransport Transport.createRaw(HostAndPort,Optional,Optional,int)"}, {"tag": "name_id", "value": "com.facebook.presto.hive.metastore.thrift.Transport.createRaw(com.google.common.net.HostAndPort,java.8ed0b5201ab4d521ac9152e9b5b8be63"}], "snippet": "54.     private Transport() {}\n55. \n56. >     private static TTransport createRaw(HostAndPort address, Optional<SSLContext> sslContext, Optional<HostAndPort> socksProxy, int timeoutMillis)\n57.             throws TTransportException\n58.     {\n"}, {"level": 0, "filename": "presto-hive/src/main/java/com/facebook/presto/hive/metastore/thrift/Transport.java", "line_number": 60, "column_number": -1, "description": "Skipping apply(): unknown method", "node_tags": [], "snippet": "57.             throws TTransportException\n58.     {\n59. >         Proxy proxy = socksProxy\n60.                 .map(socksAddress -> new Proxy(SOCKS, InetSocketAddress.createUnresolved(socksAddress.getHost(), socksAddress.getPort())))\n61.                 .orElse(Proxy.NO_PROXY);\n"}, {"level": 0, "filename": "presto-hive/src/main/java/com/facebook/presto/hive/metastore/thrift/Transport.java", "line_number": 61, "column_number": -1, "description": "Skipping map(...): unknown method", "node_tags": [], "snippet": "58.     {\n59.         Proxy proxy = socksProxy\n60. >                 .map(socksAddress -> new Proxy(SOCKS, InetSocketAddress.createUnresolved(socksAddress.getHost(), socksAddress.getPort())))\n61.                 .orElse(Proxy.NO_PROXY);\n62. \n"}, {"level": 0, "filename": "presto-hive/src/main/java/com/facebook/presto/hive/metastore/thrift/Transport.java", "line_number": 62, "column_number": -1, "description": "", "node_tags": [], "snippet": "59.         Proxy proxy = socksProxy\n60.                 .map(socksAddress -> new Proxy(SOCKS, InetSocketAddress.createUnresolved(socksAddress.getHost(), socksAddress.getPort())))\n61. >                 .orElse(Proxy.NO_PROXY);\n62. \n63.         Socket socket = new Socket(proxy);\n"}, {"level": 0, "filename": "presto-hive/src/main/java/com/facebook/presto/hive/metastore/thrift/Transport.java", "line_number": 64, "column_number": -1, "description": "Skipping Socket(...): unknown method", "node_tags": [], "snippet": "61.                 .orElse(Proxy.NO_PROXY);\n62. \n63. >         Socket socket = new Socket(proxy);\n64.         try {\n65.             socket.connect(new InetSocketAddress(address.getHost(), address.getPort()), timeoutMillis);\n"}, {"level": 0, "filename": "presto-hive/src/main/java/com/facebook/presto/hive/metastore/thrift/Transport.java", "line_number": 66, "column_number": -1, "description": "Skipping connect(...): unknown method", "node_tags": [], "snippet": "63.         Socket socket = new Socket(proxy);\n64.         try {\n65. >             socket.connect(new InetSocketAddress(address.getHost(), address.getPort()), timeoutMillis);\n66. \n67.             if (sslContext.isPresent()) {\n"}, {"level": 0, "filename": "presto-hive/src/main/java/com/facebook/presto/hive/metastore/thrift/Transport.java", "line_number": 68, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "65.             socket.connect(new InetSocketAddress(address.getHost(), address.getPort()), timeoutMillis);\n66. \n67. >             if (sslContext.isPresent()) {\n68.                 // SSL will connect to the SOCKS address when present\n69.                 HostAndPort sslConnectAddress = socksProxy.orElse(address);\n"}, {"level": 0, "filename": "presto-hive/src/main/java/com/facebook/presto/hive/metastore/thrift/Transport.java", "line_number": 70, "column_number": -1, "description": "", "node_tags": [], "snippet": "67.             if (sslContext.isPresent()) {\n68.                 // SSL will connect to the SOCKS address when present\n69. >                 HostAndPort sslConnectAddress = socksProxy.orElse(address);\n70. \n71.                 socket = sslContext.get().getSocketFactory().createSocket(socket, sslConnectAddress.getHost(), sslConnectAddress.getPort(), true);\n"}, {"level": 0, "filename": "presto-hive/src/main/java/com/facebook/presto/hive/metastore/thrift/Transport.java", "line_number": 72, "column_number": -1, "description": "", "node_tags": [], "snippet": "69.                 HostAndPort sslConnectAddress = socksProxy.orElse(address);\n70. \n71. >                 socket = sslContext.get().getSocketFactory().createSocket(socket, sslConnectAddress.getHost(), sslConnectAddress.getPort(), true);\n72.             }\n73.             return new TSocket(socket);\n"}]}, {"url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/AircompressorCompressor.java", "rawCode": "/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage com.facebook.presto.rcfile;\n\nimport org.apache.hadoop.io.compress.CompressionCodec;\nimport org.apache.hadoop.io.compress.CompressionOutputStream;\nimport org.apache.hadoop.io.compress.Compressor;\n\nimport java.io.IOException;\nimport java.io.UncheckedIOException;\nimport java.util.function.Supplier;\n\nimport static java.util.Objects.requireNonNull;\n\npublic class AircompressorCompressor\n        implements RcFileCompressor\n{\n    private final CompressionCodec codec;\n\n    public AircompressorCompressor(CompressionCodec codec)\n    {\n        this.codec = requireNonNull(codec, \"codec is null\");\n    }\n\n    @Override\n    public CompressedSliceOutput createCompressedSliceOutput(int minChunkSize, int maxChunkSize)\n    {\n        return new AircompressorCompressedSliceOutputSupplier(codec, minChunkSize, maxChunkSize).get();\n    }\n\n    private static class AircompressorCompressedSliceOutputSupplier\n            implements Supplier<CompressedSliceOutput>\n    {\n        private final CompressionCodec codec;\n        private final Compressor compressor;\n        private final ChunkedSliceOutput compressedOutput;\n\n        public AircompressorCompressedSliceOutputSupplier(CompressionCodec codec, int minChunkSize, int maxChunkSize)\n        {\n            this.codec = requireNonNull(codec, \"codec is null\");\n            this.compressor = codec.createCompressor();\n            this.compressedOutput = new ChunkedSliceOutput(minChunkSize, maxChunkSize);\n        }\n\n        @Override\n        public CompressedSliceOutput get()\n        {\n            try {\n                compressor.reset();\n                compressedOutput.reset();\n                CompressionOutputStream compressionStream = codec.createOutputStream(compressedOutput, compressor);\n                return new CompressedSliceOutput(compressionStream, compressedOutput, this, () -> {});\n            }\n            catch (IOException e) {\n                throw new UncheckedIOException(e);\n            }\n        }\n    }\n}\n", "methodName": "RcFileCompressor$CompressedSliceOutput AircompressorCompressor$AircompressorCompressedSliceOutputSupplier.get()", "exampleID": 42, "dataset": "infer", "filepath": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/AircompressorCompressor.java", "source": "com.facebook.presto.rcfile.RcFileCompressor$CompressedSliceOutput", "sourceLine": 63, "qualifier": "Resource of type $$com.facebook.presto.rcfile.RcFileCompressor$CompressedSliceOutput/$ acquired by call to @@RcFileCompressor$CompressedSliceOutput(...)/@ is not released", "steps": [{"line": 49, "source": "com.facebook.presto.rcfile.RcFileCompressor$CompressedSliceOutput", "filepath": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/RcFileCompressor.java", "methodName": "RcFileCompressor.RcFileCompressor$CompressedSliceOutput", "exampleID": 43}], "line_number": 63, "records": [{"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/RcFileCompressor.java", "line_number": 49, "column_number": -1, "description": "start of procedure RcFileCompressor$CompressedSliceOutput(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "RcFileCompressor$CompressedSliceOutput.<init>(OutputStream,ChunkedSliceOutput,AircompressorCompressor$AircompressorCompressedSliceOutputSupplier,Runnable)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.RcFileCompressor$CompressedSliceOutput.<init>(java.io.OutputStream,com.fa.688dadb29b88082cb013e687d29be705"}], "snippet": "        public CompressedSliceOutput(OutputStream compressionStream, ChunkedSliceOutput bufferedOutput, Supplier<CompressedSliceOutput> resetFactory, Runnable onDestroy)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/RcFileCompressor.java", "methodName": "RcFileCompressor$CompressedSliceOutput"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/RcFileCompressor.java", "line_number": 51, "column_number": -1, "description": "", "node_tags": [], "snippet": "            super(compressionStream);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/RcFileCompressor.java", "methodName": "RcFileCompressor$CompressedSliceOutput"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 55, "column_number": -1, "description": "start of procedure BufferedOutputStreamSliceOutput(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "BufferedOutputStreamSliceOutput.<init>(OutputStream)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.BufferedOutputStreamSliceOutput.<init>(java.io.OutputStream).8801c983a81063e2862b368a4ea830a7"}], "snippet": "    public BufferedOutputStreamSliceOutput(OutputStream outputStream)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "methodName": "BufferedOutputStreamSliceOutput"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 56, "column_number": -1, "description": "Skipping SliceOutput(): unknown method", "node_tags": [], "snippet": "    {", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "methodName": "BufferedOutputStreamSliceOutput"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 57, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "        if (outputStream == null) {", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "methodName": "BufferedOutputStreamSliceOutput"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 58, "column_number": -1, "description": "", "node_tags": [], "snippet": "            throw new NullPointerException(\"outputStream is null\");", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "methodName": "BufferedOutputStreamSliceOutput"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 64, "column_number": -1, "description": "exception java.lang.NullPointerException", "node_tags": [{"tag": "name", "value": "java.lang.NullPointerException"}, {"tag": "kind", "value": "exception"}], "snippet": "    }", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "methodName": "BufferedOutputStreamSliceOutput"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 64, "column_number": -1, "description": "return from a call to BufferedOutputStreamSliceOutput.<init>(OutputStream)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "BufferedOutputStreamSliceOutput.<init>(OutputStream)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.BufferedOutputStreamSliceOutput.<init>(java.io.OutputStream).8801c983a81063e2862b368a4ea830a7"}], "snippet": "    }", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "methodName": "BufferedOutputStreamSliceOutput"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/RcFileCompressor.java", "line_number": 55, "column_number": -1, "description": "exception java.lang.NullPointerException", "node_tags": [{"tag": "name", "value": "java.lang.NullPointerException"}, {"tag": "kind", "value": "exception"}], "snippet": "        }", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/RcFileCompressor.java", "methodName": "RcFileCompressor$CompressedSliceOutput"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/RcFileCompressor.java", "line_number": 55, "column_number": -1, "description": "return from a call to RcFileCompressor$CompressedSliceOutput.<init>(OutputStream,ChunkedSliceOutput,AircompressorCompressor$AircompressorCompressedSliceOutputSupplier,Runnable)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "RcFileCompressor$CompressedSliceOutput.<init>(OutputStream,ChunkedSliceOutput,AircompressorCompressor$AircompressorCompressedSliceOutputSupplier,Runnable)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.RcFileCompressor$CompressedSliceOutput.<init>(java.io.OutputStream,com.fa.688dadb29b88082cb013e687d29be705"}], "snippet": "        }", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/RcFileCompressor.java", "methodName": "RcFileCompressor$CompressedSliceOutput"}], "combined_records": [{"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/RcFileCompressor.java", "line_number": 51, "column_number": -1, "description": "start of procedure RcFileCompressor$CompressedSliceOutput(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "RcFileCompressor$CompressedSliceOutput.<init>(OutputStream,ChunkedSliceOutput,AircompressorCompressor$AircompressorCompressedSliceOutputSupplier,Runnable)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.RcFileCompressor$CompressedSliceOutput.<init>(java.io.OutputStream,com.fa.688dadb29b88082cb013e687d29be705"}], "snippet": "47.         */\n48.        public CompressedSliceOutput(OutputStream compressionStream, ChunkedSliceOutput bufferedOutput, Supplier<CompressedSliceOutput> resetFactory, Runnable onDestroy)\n49.>         {\n50.            super(compressionStream);\n51.>             this.bufferedOutput = requireNonNull(bufferedOutput, \"bufferedOutput is null\");\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/RcFileCompressor.java", "methodName": "RcFileCompressor$CompressedSliceOutput", "line_numbers": [49, 51]}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 64, "column_number": -1, "description": "start of procedure BufferedOutputStreamSliceOutput(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "BufferedOutputStreamSliceOutput.<init>(OutputStream)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.BufferedOutputStreamSliceOutput.<init>(java.io.OutputStream).8801c983a81063e2862b368a4ea830a7"}], "snippet": "53.\n54.    public BufferedOutputStreamSliceOutput(OutputStream outputStream)\n55.>     {\n56.>         if (outputStream == null) {\n57.>             throw new NullPointerException(\"outputStream is null\");\n58.        }\n59.\n60.        this.outputStream = outputStream;\n61.        this.buffer = new byte[CHUNK_SIZE];\n62.        this.slice = Slices.wrappedBuffer(buffer);\n63.    }\n64.> \n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "methodName": "BufferedOutputStreamSliceOutput", "line_numbers": [55, 56, 57, 58, 64, 64]}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/RcFileCompressor.java", "line_number": 55, "column_number": -1, "description": "exception java.lang.NullPointerException", "node_tags": [{"tag": "name", "value": "java.lang.NullPointerException"}, {"tag": "kind", "value": "exception"}], "snippet": "53.            this.onDestroy = requireNonNull(onDestroy, \"onDestroy is null\");\n54.        }\n55.> \n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/RcFileCompressor.java", "methodName": "RcFileCompressor$CompressedSliceOutput", "line_numbers": [55, 55]}], "infer_explore": [{"level": 0, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/AircompressorCompressor.java", "line_number": 57, "column_number": -1, "description": "start of procedure get()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "RcFileCompressor$CompressedSliceOutput AircompressorCompressor$AircompressorCompressedSliceOutputSupplier.get()"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.AircompressorCompressor$AircompressorCompressedSliceOutputSupplier.get():.8b92321997c3e4b818894210337cd0c4"}], "snippet": "54. \n55.         @Override\n56. >         public CompressedSliceOutput get()\n57.         {\n58.             try {\n"}, {"level": 0, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/AircompressorCompressor.java", "line_number": 60, "column_number": -1, "description": "Skipping reset(): unknown method", "node_tags": [], "snippet": "57.         {\n58.             try {\n59. >                 compressor.reset();\n60.                 compressedOutput.reset();\n61.                 CompressionOutputStream compressionStream = codec.createOutputStream(compressedOutput, compressor);\n"}, {"level": 0, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/AircompressorCompressor.java", "line_number": 61, "column_number": -1, "description": "", "node_tags": [], "snippet": "58.             try {\n59.                 compressor.reset();\n60. >                 compressedOutput.reset();\n61.                 CompressionOutputStream compressionStream = codec.createOutputStream(compressedOutput, compressor);\n62.                 return new CompressedSliceOutput(compressionStream, compressedOutput, this, () -> {});\n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 84, "column_number": -1, "description": "start of procedure reset()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void ChunkedSliceOutput.reset()"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.ChunkedSliceOutput.reset():void.f6e8af927f86312abfcbaa27edde2c62"}], "snippet": "81.     public void reset()\n82.     {\n83. >         chunkSupplier.reset();\n84.         closedSlices.clear();\n85. \n"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 364, "column_number": -1, "description": "start of procedure reset()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void ChunkedSliceOutput$ChunkSupplier.reset()"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.ChunkedSliceOutput$ChunkSupplier.reset():void.59b9cedbad5aab9e8e428475e57b3cc4"}], "snippet": "361.         }\n362. \n363. >         public void reset()\n364.         {\n365.             bufferPool.addAll(0, usedBuffers);\n"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 366, "column_number": -1, "description": "Skipping addAll(...): unknown method", "node_tags": [], "snippet": "363.         public void reset()\n364.         {\n365. >             bufferPool.addAll(0, usedBuffers);\n366.             usedBuffers.clear();\n367.         }\n"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 367, "column_number": -1, "description": "", "node_tags": [], "snippet": "364.         {\n365.             bufferPool.addAll(0, usedBuffers);\n366. >             usedBuffers.clear();\n367.         }\n368. \n"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 368, "column_number": -1, "description": "return from a call to void ChunkedSliceOutput$ChunkSupplier.reset()", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "void ChunkedSliceOutput$ChunkSupplier.reset()"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.ChunkedSliceOutput$ChunkSupplier.reset():void.59b9cedbad5aab9e8e428475e57b3cc4"}], "snippet": "365.             bufferPool.addAll(0, usedBuffers);\n366.             usedBuffers.clear();\n367. >         }\n368. \n369.         public byte[] get()\n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 85, "column_number": -1, "description": "", "node_tags": [], "snippet": "82.     {\n83.         chunkSupplier.reset();\n84. >         closedSlices.clear();\n85. \n86.         buffer = chunkSupplier.get();\n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 87, "column_number": -1, "description": "", "node_tags": [], "snippet": "84.         closedSlices.clear();\n85. \n86. >         buffer = chunkSupplier.get();\n87.         slice = Slices.wrappedBuffer(buffer);\n88. \n"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 370, "column_number": -1, "description": "start of procedure get()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "byte[] ChunkedSliceOutput$ChunkSupplier.get()"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.ChunkedSliceOutput$ChunkSupplier.get():byte[].77d224f45f2101d77750ac4d709293f2"}], "snippet": "367.         }\n368. \n369. >         public byte[] get()\n370.         {\n371.             byte[] buffer;\n"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 373, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "370.         {\n371.             byte[] buffer;\n372. >             if (bufferPool.isEmpty()) {\n373.                 currentSize = min(multiplyExact(currentSize, 2), maxChunkSize);\n374.                 buffer = new byte[currentSize];\n"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 374, "column_number": -1, "description": "", "node_tags": [], "snippet": "371.             byte[] buffer;\n372.             if (bufferPool.isEmpty()) {\n373. >                 currentSize = min(multiplyExact(currentSize, 2), maxChunkSize);\n374.                 buffer = new byte[currentSize];\n375.             }\n"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 375, "column_number": -1, "description": "", "node_tags": [], "snippet": "372.             if (bufferPool.isEmpty()) {\n373.                 currentSize = min(multiplyExact(currentSize, 2), maxChunkSize);\n374. >                 buffer = new byte[currentSize];\n375.             }\n376.             else {\n"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 381, "column_number": -1, "description": "Skipping add(...): unknown method", "node_tags": [], "snippet": "378.                 currentSize = buffer.length;\n379.             }\n380. >             usedBuffers.add(buffer);\n381.             return buffer;\n382.         }\n"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 382, "column_number": -1, "description": "return from a call to byte[] ChunkedSliceOutput$ChunkSupplier.get()", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "byte[] ChunkedSliceOutput$ChunkSupplier.get()"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.ChunkedSliceOutput$ChunkSupplier.get():byte[].77d224f45f2101d77750ac4d709293f2"}], "snippet": "379.             }\n380.             usedBuffers.add(buffer);\n381. >             return buffer;\n382.         }\n383.     }\n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 87, "column_number": -1, "description": "", "node_tags": [], "snippet": "84.         closedSlices.clear();\n85. \n86. >         buffer = chunkSupplier.get();\n87.         slice = Slices.wrappedBuffer(buffer);\n88. \n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 88, "column_number": -1, "description": "", "node_tags": [], "snippet": "85. \n86.         buffer = chunkSupplier.get();\n87. >         slice = Slices.wrappedBuffer(buffer);\n88. \n89.         closedSlicesRetainedSize = 0;\n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 90, "column_number": -1, "description": "", "node_tags": [], "snippet": "87.         slice = Slices.wrappedBuffer(buffer);\n88. \n89. >         closedSlicesRetainedSize = 0;\n90.         streamOffset = 0;\n91.         bufferPosition = 0;\n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 91, "column_number": -1, "description": "", "node_tags": [], "snippet": "88. \n89.         closedSlicesRetainedSize = 0;\n90. >         streamOffset = 0;\n91.         bufferPosition = 0;\n92.     }\n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 92, "column_number": -1, "description": "", "node_tags": [], "snippet": "89.         closedSlicesRetainedSize = 0;\n90.         streamOffset = 0;\n91. >         bufferPosition = 0;\n92.     }\n93. \n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 93, "column_number": -1, "description": "return from a call to void ChunkedSliceOutput.reset()", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "void ChunkedSliceOutput.reset()"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.ChunkedSliceOutput.reset():void.f6e8af927f86312abfcbaa27edde2c62"}], "snippet": "90.         streamOffset = 0;\n91.         bufferPosition = 0;\n92. >     }\n93. \n94.     @Override\n"}, {"level": 0, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/AircompressorCompressor.java", "line_number": 62, "column_number": -1, "description": "Skipping createOutputStream(...): unknown method", "node_tags": [], "snippet": "59.                 compressor.reset();\n60.                 compressedOutput.reset();\n61. >                 CompressionOutputStream compressionStream = codec.createOutputStream(compressedOutput, compressor);\n62.                 return new CompressedSliceOutput(compressionStream, compressedOutput, this, () -> {});\n63.             }\n"}, {"level": 0, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/AircompressorCompressor.java", "line_number": 63, "column_number": -1, "description": "", "node_tags": [], "snippet": "60.                 compressedOutput.reset();\n61.                 CompressionOutputStream compressionStream = codec.createOutputStream(compressedOutput, compressor);\n62. >                 return new CompressedSliceOutput(compressionStream, compressedOutput, this, () -> {});\n63.             }\n64.             catch (IOException e) {\n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/RcFileCompressor.java", "line_number": 49, "column_number": -1, "description": "start of procedure RcFileCompressor$CompressedSliceOutput(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "RcFileCompressor$CompressedSliceOutput.<init>(OutputStream,ChunkedSliceOutput,AircompressorCompressor$AircompressorCompressedSliceOutputSupplier,Runnable)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.RcFileCompressor$CompressedSliceOutput.<init>(java.io.OutputStream,com.fa.688dadb29b88082cb013e687d29be705"}], "snippet": "46.          * @param onDestroy used to cleanup the compression when done\n47.          */\n48. >         public CompressedSliceOutput(OutputStream compressionStream, ChunkedSliceOutput bufferedOutput, Supplier<CompressedSliceOutput> resetFactory, Runnable onDestroy)\n49.         {\n50.             super(compressionStream);\n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/RcFileCompressor.java", "line_number": 51, "column_number": -1, "description": "", "node_tags": [], "snippet": "48.         public CompressedSliceOutput(OutputStream compressionStream, ChunkedSliceOutput bufferedOutput, Supplier<CompressedSliceOutput> resetFactory, Runnable onDestroy)\n49.         {\n50. >             super(compressionStream);\n51.             this.bufferedOutput = requireNonNull(bufferedOutput, \"bufferedOutput is null\");\n52.             this.resetFactory = requireNonNull(resetFactory, \"resetFactory is null\");\n"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 55, "column_number": -1, "description": "start of procedure BufferedOutputStreamSliceOutput(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "BufferedOutputStreamSliceOutput.<init>(OutputStream)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.BufferedOutputStreamSliceOutput.<init>(java.io.OutputStream).8801c983a81063e2862b368a4ea830a7"}], "snippet": "52.     private int bufferPosition;\n53. \n54. >     public BufferedOutputStreamSliceOutput(OutputStream outputStream)\n55.     {\n56.         if (outputStream == null) {\n"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 56, "column_number": -1, "description": "Skipping SliceOutput(): unknown method", "node_tags": [], "snippet": "53. \n54.     public BufferedOutputStreamSliceOutput(OutputStream outputStream)\n55. >     {\n56.         if (outputStream == null) {\n57.             throw new NullPointerException(\"outputStream is null\");\n"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 57, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "54.     public BufferedOutputStreamSliceOutput(OutputStream outputStream)\n55.     {\n56. >         if (outputStream == null) {\n57.             throw new NullPointerException(\"outputStream is null\");\n58.         }\n"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 58, "column_number": -1, "description": "", "node_tags": [], "snippet": "55.     {\n56.         if (outputStream == null) {\n57. >             throw new NullPointerException(\"outputStream is null\");\n58.         }\n59. \n"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 64, "column_number": -1, "description": "exception java.lang.NullPointerException", "node_tags": [{"tag": "name", "value": "java.lang.NullPointerException"}, {"tag": "kind", "value": "exception"}], "snippet": "61.         this.buffer = new byte[CHUNK_SIZE];\n62.         this.slice = Slices.wrappedBuffer(buffer);\n63. >     }\n64. \n65.     @Override\n"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 64, "column_number": -1, "description": "return from a call to BufferedOutputStreamSliceOutput.<init>(OutputStream)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "BufferedOutputStreamSliceOutput.<init>(OutputStream)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.BufferedOutputStreamSliceOutput.<init>(java.io.OutputStream).8801c983a81063e2862b368a4ea830a7"}], "snippet": "61.         this.buffer = new byte[CHUNK_SIZE];\n62.         this.slice = Slices.wrappedBuffer(buffer);\n63. >     }\n64. \n65.     @Override\n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/RcFileCompressor.java", "line_number": 55, "column_number": -1, "description": "exception java.lang.NullPointerException", "node_tags": [{"tag": "name", "value": "java.lang.NullPointerException"}, {"tag": "kind", "value": "exception"}], "snippet": "52.             this.resetFactory = requireNonNull(resetFactory, \"resetFactory is null\");\n53.             this.onDestroy = requireNonNull(onDestroy, \"onDestroy is null\");\n54. >         }\n55. \n56.         @Override\n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/RcFileCompressor.java", "line_number": 55, "column_number": -1, "description": "return from a call to RcFileCompressor$CompressedSliceOutput.<init>(OutputStream,ChunkedSliceOutput,AircompressorCompressor$AircompressorCompressedSliceOutputSupplier,Runnable)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "RcFileCompressor$CompressedSliceOutput.<init>(OutputStream,ChunkedSliceOutput,AircompressorCompressor$AircompressorCompressedSliceOutputSupplier,Runnable)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.RcFileCompressor$CompressedSliceOutput.<init>(java.io.OutputStream,com.fa.688dadb29b88082cb013e687d29be705"}], "snippet": "52.             this.resetFactory = requireNonNull(resetFactory, \"resetFactory is null\");\n53.             this.onDestroy = requireNonNull(onDestroy, \"onDestroy is null\");\n54. >         }\n55. \n56.         @Override\n"}]}, {"url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/HadoopCompressor.java", "rawCode": "/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage com.facebook.presto.rcfile;\n\nimport org.apache.hadoop.io.compress.CodecPool;\nimport org.apache.hadoop.io.compress.CompressionCodec;\nimport org.apache.hadoop.io.compress.CompressionOutputStream;\nimport org.apache.hadoop.io.compress.Compressor;\n\nimport java.io.IOException;\nimport java.io.UncheckedIOException;\nimport java.util.function.Supplier;\n\nimport static java.util.Objects.requireNonNull;\n\npublic class HadoopCompressor\n        implements RcFileCompressor\n{\n    private final CompressionCodec codec;\n\n    public HadoopCompressor(CompressionCodec codec)\n    {\n        this.codec = requireNonNull(codec, \"codec is null\");\n    }\n\n    @Override\n    public CompressedSliceOutput createCompressedSliceOutput(int minChunkSize, int maxChunkSize)\n    {\n        return new HadoopCompressedSliceOutputSupplier(codec, minChunkSize, maxChunkSize).get();\n    }\n\n    private static class HadoopCompressedSliceOutputSupplier\n            implements Supplier<CompressedSliceOutput>\n    {\n        private final CompressionCodec codec;\n        private final Compressor compressor;\n        private final ChunkedSliceOutput bufferedOutput;\n\n        public HadoopCompressedSliceOutputSupplier(CompressionCodec codec, int minChunkSize, int maxChunkSize)\n        {\n            this.codec = requireNonNull(codec, \"codec is null\");\n            this.compressor = CodecPool.getCompressor(requireNonNull(codec, \"codec is null\"));\n            this.bufferedOutput = new ChunkedSliceOutput(minChunkSize, maxChunkSize);\n        }\n\n        @Override\n        public CompressedSliceOutput get()\n        {\n            try {\n                compressor.reset();\n                bufferedOutput.reset();\n                CompressionOutputStream compressionStream = codec.createOutputStream(bufferedOutput, compressor);\n                return new CompressedSliceOutput(compressionStream, bufferedOutput, this, () -> CodecPool.returnCompressor(compressor));\n            }\n            catch (IOException e) {\n                throw new UncheckedIOException(e);\n            }\n        }\n    }\n}\n", "methodName": "RcFileCompressor$CompressedSliceOutput HadoopCompressor$HadoopCompressedSliceOutputSupplier.get()", "exampleID": 44, "dataset": "infer", "filepath": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/HadoopCompressor.java", "source": "com.facebook.presto.rcfile.RcFileCompressor$CompressedSliceOutput", "sourceLine": 64, "qualifier": "Resource of type $$com.facebook.presto.rcfile.RcFileCompressor$CompressedSliceOutput/$ acquired by call to @@RcFileCompressor$CompressedSliceOutput(...)/@ is not released", "steps": [{"line": 49, "source": "com.facebook.presto.rcfile.RcFileCompressor$CompressedSliceOutput", "filepath": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/RcFileCompressor.java", "methodName": "RcFileCompressor.RcFileCompressor$CompressedSliceOutput", "exampleID": 45}], "line_number": 64, "records": [{"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/RcFileCompressor.java", "line_number": 49, "column_number": -1, "description": "start of procedure RcFileCompressor$CompressedSliceOutput(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "RcFileCompressor$CompressedSliceOutput.<init>(OutputStream,ChunkedSliceOutput,HadoopCompressor$HadoopCompressedSliceOutputSupplier,Runnable)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.RcFileCompressor$CompressedSliceOutput.<init>(java.io.OutputStream,com.fa.b313dae67fa362592a4f505cfb3a4a18"}], "snippet": "        public CompressedSliceOutput(OutputStream compressionStream, ChunkedSliceOutput bufferedOutput, Supplier<CompressedSliceOutput> resetFactory, Runnable onDestroy)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/RcFileCompressor.java", "methodName": "RcFileCompressor$CompressedSliceOutput"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/RcFileCompressor.java", "line_number": 51, "column_number": -1, "description": "", "node_tags": [], "snippet": "            super(compressionStream);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/RcFileCompressor.java", "methodName": "RcFileCompressor$CompressedSliceOutput"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 55, "column_number": -1, "description": "start of procedure BufferedOutputStreamSliceOutput(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "BufferedOutputStreamSliceOutput.<init>(OutputStream)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.BufferedOutputStreamSliceOutput.<init>(java.io.OutputStream).8801c983a81063e2862b368a4ea830a7"}], "snippet": "    public BufferedOutputStreamSliceOutput(OutputStream outputStream)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "methodName": "BufferedOutputStreamSliceOutput"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 56, "column_number": -1, "description": "Skipping SliceOutput(): unknown method", "node_tags": [], "snippet": "    {", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "methodName": "BufferedOutputStreamSliceOutput"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 57, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "        if (outputStream == null) {", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "methodName": "BufferedOutputStreamSliceOutput"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 58, "column_number": -1, "description": "", "node_tags": [], "snippet": "            throw new NullPointerException(\"outputStream is null\");", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "methodName": "BufferedOutputStreamSliceOutput"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 64, "column_number": -1, "description": "exception java.lang.NullPointerException", "node_tags": [{"tag": "name", "value": "java.lang.NullPointerException"}, {"tag": "kind", "value": "exception"}], "snippet": "    }", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "methodName": "BufferedOutputStreamSliceOutput"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 64, "column_number": -1, "description": "return from a call to BufferedOutputStreamSliceOutput.<init>(OutputStream)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "BufferedOutputStreamSliceOutput.<init>(OutputStream)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.BufferedOutputStreamSliceOutput.<init>(java.io.OutputStream).8801c983a81063e2862b368a4ea830a7"}], "snippet": "    }", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "methodName": "BufferedOutputStreamSliceOutput"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/RcFileCompressor.java", "line_number": 55, "column_number": -1, "description": "exception java.lang.NullPointerException", "node_tags": [{"tag": "name", "value": "java.lang.NullPointerException"}, {"tag": "kind", "value": "exception"}], "snippet": "        }", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/RcFileCompressor.java", "methodName": "RcFileCompressor$CompressedSliceOutput"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/RcFileCompressor.java", "line_number": 55, "column_number": -1, "description": "return from a call to RcFileCompressor$CompressedSliceOutput.<init>(OutputStream,ChunkedSliceOutput,HadoopCompressor$HadoopCompressedSliceOutputSupplier,Runnable)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "RcFileCompressor$CompressedSliceOutput.<init>(OutputStream,ChunkedSliceOutput,HadoopCompressor$HadoopCompressedSliceOutputSupplier,Runnable)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.RcFileCompressor$CompressedSliceOutput.<init>(java.io.OutputStream,com.fa.b313dae67fa362592a4f505cfb3a4a18"}], "snippet": "        }", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/RcFileCompressor.java", "methodName": "RcFileCompressor$CompressedSliceOutput"}], "combined_records": [{"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/RcFileCompressor.java", "line_number": 51, "column_number": -1, "description": "start of procedure RcFileCompressor$CompressedSliceOutput(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "RcFileCompressor$CompressedSliceOutput.<init>(OutputStream,ChunkedSliceOutput,HadoopCompressor$HadoopCompressedSliceOutputSupplier,Runnable)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.RcFileCompressor$CompressedSliceOutput.<init>(java.io.OutputStream,com.fa.b313dae67fa362592a4f505cfb3a4a18"}], "snippet": "47.         */\n48.        public CompressedSliceOutput(OutputStream compressionStream, ChunkedSliceOutput bufferedOutput, Supplier<CompressedSliceOutput> resetFactory, Runnable onDestroy)\n49.>         {\n50.            super(compressionStream);\n51.>             this.bufferedOutput = requireNonNull(bufferedOutput, \"bufferedOutput is null\");\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/RcFileCompressor.java", "methodName": "RcFileCompressor$CompressedSliceOutput", "line_numbers": [49, 51]}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 64, "column_number": -1, "description": "start of procedure BufferedOutputStreamSliceOutput(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "BufferedOutputStreamSliceOutput.<init>(OutputStream)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.BufferedOutputStreamSliceOutput.<init>(java.io.OutputStream).8801c983a81063e2862b368a4ea830a7"}], "snippet": "53.\n54.    public BufferedOutputStreamSliceOutput(OutputStream outputStream)\n55.>     {\n56.>         if (outputStream == null) {\n57.>             throw new NullPointerException(\"outputStream is null\");\n58.        }\n59.\n60.        this.outputStream = outputStream;\n61.        this.buffer = new byte[CHUNK_SIZE];\n62.        this.slice = Slices.wrappedBuffer(buffer);\n63.    }\n64.> \n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "methodName": "BufferedOutputStreamSliceOutput", "line_numbers": [55, 56, 57, 58, 64, 64]}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/RcFileCompressor.java", "line_number": 55, "column_number": -1, "description": "exception java.lang.NullPointerException", "node_tags": [{"tag": "name", "value": "java.lang.NullPointerException"}, {"tag": "kind", "value": "exception"}], "snippet": "53.            this.onDestroy = requireNonNull(onDestroy, \"onDestroy is null\");\n54.        }\n55.> \n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/RcFileCompressor.java", "methodName": "RcFileCompressor$CompressedSliceOutput", "line_numbers": [55, 55]}], "infer_explore": [{"level": 0, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/HadoopCompressor.java", "line_number": 58, "column_number": -1, "description": "start of procedure get()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "RcFileCompressor$CompressedSliceOutput HadoopCompressor$HadoopCompressedSliceOutputSupplier.get()"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.HadoopCompressor$HadoopCompressedSliceOutputSupplier.get():com.facebook.p.e9e9116e878e7184e813452a29992576"}], "snippet": "55. \n56.         @Override\n57. >         public CompressedSliceOutput get()\n58.         {\n59.             try {\n"}, {"level": 0, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/HadoopCompressor.java", "line_number": 61, "column_number": -1, "description": "Skipping reset(): unknown method", "node_tags": [], "snippet": "58.         {\n59.             try {\n60. >                 compressor.reset();\n61.                 bufferedOutput.reset();\n62.                 CompressionOutputStream compressionStream = codec.createOutputStream(bufferedOutput, compressor);\n"}, {"level": 0, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/HadoopCompressor.java", "line_number": 62, "column_number": -1, "description": "", "node_tags": [], "snippet": "59.             try {\n60.                 compressor.reset();\n61. >                 bufferedOutput.reset();\n62.                 CompressionOutputStream compressionStream = codec.createOutputStream(bufferedOutput, compressor);\n63.                 return new CompressedSliceOutput(compressionStream, bufferedOutput, this, () -> CodecPool.returnCompressor(compressor));\n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 84, "column_number": -1, "description": "start of procedure reset()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void ChunkedSliceOutput.reset()"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.ChunkedSliceOutput.reset():void.f6e8af927f86312abfcbaa27edde2c62"}], "snippet": "81.     public void reset()\n82.     {\n83. >         chunkSupplier.reset();\n84.         closedSlices.clear();\n85. \n"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 364, "column_number": -1, "description": "start of procedure reset()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void ChunkedSliceOutput$ChunkSupplier.reset()"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.ChunkedSliceOutput$ChunkSupplier.reset():void.59b9cedbad5aab9e8e428475e57b3cc4"}], "snippet": "361.         }\n362. \n363. >         public void reset()\n364.         {\n365.             bufferPool.addAll(0, usedBuffers);\n"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 366, "column_number": -1, "description": "Skipping addAll(...): unknown method", "node_tags": [], "snippet": "363.         public void reset()\n364.         {\n365. >             bufferPool.addAll(0, usedBuffers);\n366.             usedBuffers.clear();\n367.         }\n"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 367, "column_number": -1, "description": "", "node_tags": [], "snippet": "364.         {\n365.             bufferPool.addAll(0, usedBuffers);\n366. >             usedBuffers.clear();\n367.         }\n368. \n"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 368, "column_number": -1, "description": "return from a call to void ChunkedSliceOutput$ChunkSupplier.reset()", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "void ChunkedSliceOutput$ChunkSupplier.reset()"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.ChunkedSliceOutput$ChunkSupplier.reset():void.59b9cedbad5aab9e8e428475e57b3cc4"}], "snippet": "365.             bufferPool.addAll(0, usedBuffers);\n366.             usedBuffers.clear();\n367. >         }\n368. \n369.         public byte[] get()\n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 85, "column_number": -1, "description": "", "node_tags": [], "snippet": "82.     {\n83.         chunkSupplier.reset();\n84. >         closedSlices.clear();\n85. \n86.         buffer = chunkSupplier.get();\n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 87, "column_number": -1, "description": "", "node_tags": [], "snippet": "84.         closedSlices.clear();\n85. \n86. >         buffer = chunkSupplier.get();\n87.         slice = Slices.wrappedBuffer(buffer);\n88. \n"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 370, "column_number": -1, "description": "start of procedure get()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "byte[] ChunkedSliceOutput$ChunkSupplier.get()"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.ChunkedSliceOutput$ChunkSupplier.get():byte[].77d224f45f2101d77750ac4d709293f2"}], "snippet": "367.         }\n368. \n369. >         public byte[] get()\n370.         {\n371.             byte[] buffer;\n"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 373, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "370.         {\n371.             byte[] buffer;\n372. >             if (bufferPool.isEmpty()) {\n373.                 currentSize = min(multiplyExact(currentSize, 2), maxChunkSize);\n374.                 buffer = new byte[currentSize];\n"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 374, "column_number": -1, "description": "", "node_tags": [], "snippet": "371.             byte[] buffer;\n372.             if (bufferPool.isEmpty()) {\n373. >                 currentSize = min(multiplyExact(currentSize, 2), maxChunkSize);\n374.                 buffer = new byte[currentSize];\n375.             }\n"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 375, "column_number": -1, "description": "", "node_tags": [], "snippet": "372.             if (bufferPool.isEmpty()) {\n373.                 currentSize = min(multiplyExact(currentSize, 2), maxChunkSize);\n374. >                 buffer = new byte[currentSize];\n375.             }\n376.             else {\n"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 381, "column_number": -1, "description": "Skipping add(...): unknown method", "node_tags": [], "snippet": "378.                 currentSize = buffer.length;\n379.             }\n380. >             usedBuffers.add(buffer);\n381.             return buffer;\n382.         }\n"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 382, "column_number": -1, "description": "return from a call to byte[] ChunkedSliceOutput$ChunkSupplier.get()", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "byte[] ChunkedSliceOutput$ChunkSupplier.get()"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.ChunkedSliceOutput$ChunkSupplier.get():byte[].77d224f45f2101d77750ac4d709293f2"}], "snippet": "379.             }\n380.             usedBuffers.add(buffer);\n381. >             return buffer;\n382.         }\n383.     }\n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 87, "column_number": -1, "description": "", "node_tags": [], "snippet": "84.         closedSlices.clear();\n85. \n86. >         buffer = chunkSupplier.get();\n87.         slice = Slices.wrappedBuffer(buffer);\n88. \n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 88, "column_number": -1, "description": "", "node_tags": [], "snippet": "85. \n86.         buffer = chunkSupplier.get();\n87. >         slice = Slices.wrappedBuffer(buffer);\n88. \n89.         closedSlicesRetainedSize = 0;\n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 90, "column_number": -1, "description": "", "node_tags": [], "snippet": "87.         slice = Slices.wrappedBuffer(buffer);\n88. \n89. >         closedSlicesRetainedSize = 0;\n90.         streamOffset = 0;\n91.         bufferPosition = 0;\n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 91, "column_number": -1, "description": "", "node_tags": [], "snippet": "88. \n89.         closedSlicesRetainedSize = 0;\n90. >         streamOffset = 0;\n91.         bufferPosition = 0;\n92.     }\n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 92, "column_number": -1, "description": "", "node_tags": [], "snippet": "89.         closedSlicesRetainedSize = 0;\n90.         streamOffset = 0;\n91. >         bufferPosition = 0;\n92.     }\n93. \n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/ChunkedSliceOutput.java", "line_number": 93, "column_number": -1, "description": "return from a call to void ChunkedSliceOutput.reset()", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "void ChunkedSliceOutput.reset()"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.ChunkedSliceOutput.reset():void.f6e8af927f86312abfcbaa27edde2c62"}], "snippet": "90.         streamOffset = 0;\n91.         bufferPosition = 0;\n92. >     }\n93. \n94.     @Override\n"}, {"level": 0, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/HadoopCompressor.java", "line_number": 63, "column_number": -1, "description": "Skipping createOutputStream(...): unknown method", "node_tags": [], "snippet": "60.                 compressor.reset();\n61.                 bufferedOutput.reset();\n62. >                 CompressionOutputStream compressionStream = codec.createOutputStream(bufferedOutput, compressor);\n63.                 return new CompressedSliceOutput(compressionStream, bufferedOutput, this, () -> CodecPool.returnCompressor(compressor));\n64.             }\n"}, {"level": 0, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/HadoopCompressor.java", "line_number": 64, "column_number": -1, "description": "", "node_tags": [], "snippet": "61.                 bufferedOutput.reset();\n62.                 CompressionOutputStream compressionStream = codec.createOutputStream(bufferedOutput, compressor);\n63. >                 return new CompressedSliceOutput(compressionStream, bufferedOutput, this, () -> CodecPool.returnCompressor(compressor));\n64.             }\n65.             catch (IOException e) {\n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/RcFileCompressor.java", "line_number": 49, "column_number": -1, "description": "start of procedure RcFileCompressor$CompressedSliceOutput(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "RcFileCompressor$CompressedSliceOutput.<init>(OutputStream,ChunkedSliceOutput,HadoopCompressor$HadoopCompressedSliceOutputSupplier,Runnable)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.RcFileCompressor$CompressedSliceOutput.<init>(java.io.OutputStream,com.fa.b313dae67fa362592a4f505cfb3a4a18"}], "snippet": "46.          * @param onDestroy used to cleanup the compression when done\n47.          */\n48. >         public CompressedSliceOutput(OutputStream compressionStream, ChunkedSliceOutput bufferedOutput, Supplier<CompressedSliceOutput> resetFactory, Runnable onDestroy)\n49.         {\n50.             super(compressionStream);\n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/RcFileCompressor.java", "line_number": 51, "column_number": -1, "description": "", "node_tags": [], "snippet": "48.         public CompressedSliceOutput(OutputStream compressionStream, ChunkedSliceOutput bufferedOutput, Supplier<CompressedSliceOutput> resetFactory, Runnable onDestroy)\n49.         {\n50. >             super(compressionStream);\n51.             this.bufferedOutput = requireNonNull(bufferedOutput, \"bufferedOutput is null\");\n52.             this.resetFactory = requireNonNull(resetFactory, \"resetFactory is null\");\n"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 55, "column_number": -1, "description": "start of procedure BufferedOutputStreamSliceOutput(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "BufferedOutputStreamSliceOutput.<init>(OutputStream)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.BufferedOutputStreamSliceOutput.<init>(java.io.OutputStream).8801c983a81063e2862b368a4ea830a7"}], "snippet": "52.     private int bufferPosition;\n53. \n54. >     public BufferedOutputStreamSliceOutput(OutputStream outputStream)\n55.     {\n56.         if (outputStream == null) {\n"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 56, "column_number": -1, "description": "Skipping SliceOutput(): unknown method", "node_tags": [], "snippet": "53. \n54.     public BufferedOutputStreamSliceOutput(OutputStream outputStream)\n55. >     {\n56.         if (outputStream == null) {\n57.             throw new NullPointerException(\"outputStream is null\");\n"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 57, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "54.     public BufferedOutputStreamSliceOutput(OutputStream outputStream)\n55.     {\n56. >         if (outputStream == null) {\n57.             throw new NullPointerException(\"outputStream is null\");\n58.         }\n"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 58, "column_number": -1, "description": "", "node_tags": [], "snippet": "55.     {\n56.         if (outputStream == null) {\n57. >             throw new NullPointerException(\"outputStream is null\");\n58.         }\n59. \n"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 64, "column_number": -1, "description": "exception java.lang.NullPointerException", "node_tags": [{"tag": "name", "value": "java.lang.NullPointerException"}, {"tag": "kind", "value": "exception"}], "snippet": "61.         this.buffer = new byte[CHUNK_SIZE];\n62.         this.slice = Slices.wrappedBuffer(buffer);\n63. >     }\n64. \n65.     @Override\n"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/BufferedOutputStreamSliceOutput.java", "line_number": 64, "column_number": -1, "description": "return from a call to BufferedOutputStreamSliceOutput.<init>(OutputStream)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "BufferedOutputStreamSliceOutput.<init>(OutputStream)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.BufferedOutputStreamSliceOutput.<init>(java.io.OutputStream).8801c983a81063e2862b368a4ea830a7"}], "snippet": "61.         this.buffer = new byte[CHUNK_SIZE];\n62.         this.slice = Slices.wrappedBuffer(buffer);\n63. >     }\n64. \n65.     @Override\n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/RcFileCompressor.java", "line_number": 55, "column_number": -1, "description": "exception java.lang.NullPointerException", "node_tags": [{"tag": "name", "value": "java.lang.NullPointerException"}, {"tag": "kind", "value": "exception"}], "snippet": "52.             this.resetFactory = requireNonNull(resetFactory, \"resetFactory is null\");\n53.             this.onDestroy = requireNonNull(onDestroy, \"onDestroy is null\");\n54. >         }\n55. \n56.         @Override\n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/RcFileCompressor.java", "line_number": 55, "column_number": -1, "description": "return from a call to RcFileCompressor$CompressedSliceOutput.<init>(OutputStream,ChunkedSliceOutput,HadoopCompressor$HadoopCompressedSliceOutputSupplier,Runnable)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "RcFileCompressor$CompressedSliceOutput.<init>(OutputStream,ChunkedSliceOutput,HadoopCompressor$HadoopCompressedSliceOutputSupplier,Runnable)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.RcFileCompressor$CompressedSliceOutput.<init>(java.io.OutputStream,com.fa.b313dae67fa362592a4f505cfb3a4a18"}], "snippet": "52.             this.resetFactory = requireNonNull(resetFactory, \"resetFactory is null\");\n53.             this.onDestroy = requireNonNull(onDestroy, \"onDestroy is null\");\n54. >         }\n55. \n56.         @Override\n"}]}, {"url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/server/PagesResponseWriter.java", "rawCode": "/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage com.facebook.presto.server;\n\nimport com.facebook.presto.execution.buffer.SerializedPage;\nimport com.facebook.presto.spi.Page;\nimport com.google.common.reflect.TypeToken;\nimport io.airlift.slice.OutputStreamSliceOutput;\nimport io.airlift.slice.SliceOutput;\n\nimport javax.ws.rs.Produces;\nimport javax.ws.rs.WebApplicationException;\nimport javax.ws.rs.core.MediaType;\nimport javax.ws.rs.core.MultivaluedMap;\nimport javax.ws.rs.ext.MessageBodyWriter;\nimport javax.ws.rs.ext.Provider;\n\nimport java.io.EOFException;\nimport java.io.IOException;\nimport java.io.OutputStream;\nimport java.io.UncheckedIOException;\nimport java.lang.annotation.Annotation;\nimport java.lang.reflect.Type;\nimport java.util.List;\n\nimport static com.facebook.presto.PrestoMediaTypes.PRESTO_PAGES;\nimport static com.facebook.presto.execution.buffer.PagesSerdeUtil.writeSerializedPages;\n\n@Provider\n@Produces(PRESTO_PAGES)\npublic class PagesResponseWriter\n        implements MessageBodyWriter<List<SerializedPage>>\n{\n    private static final MediaType PRESTO_PAGES_TYPE = MediaType.valueOf(PRESTO_PAGES);\n    private static final Type LIST_GENERIC_TOKEN;\n\n    static {\n        try {\n            LIST_GENERIC_TOKEN = List.class.getMethod(\"get\", int.class).getGenericReturnType();\n        }\n        catch (NoSuchMethodException e) {\n            throw new RuntimeException(e);\n        }\n    }\n\n    @Override\n    public boolean isWriteable(Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType)\n    {\n        return List.class.isAssignableFrom(type) &&\n                TypeToken.of(genericType).resolveType(LIST_GENERIC_TOKEN).getRawType().equals(Page.class) &&\n                mediaType.isCompatible(PRESTO_PAGES_TYPE);\n    }\n\n    @Override\n    public long getSize(List<SerializedPage> serializedPages, Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType)\n    {\n        return -1;\n    }\n\n    @Override\n    public void writeTo(List<SerializedPage> serializedPages,\n            Class<?> type,\n            Type genericType,\n            Annotation[] annotations,\n            MediaType mediaType,\n            MultivaluedMap<String, Object> httpHeaders,\n            OutputStream output)\n            throws IOException, WebApplicationException\n    {\n        try {\n            SliceOutput sliceOutput = new OutputStreamSliceOutput(output);\n            writeSerializedPages(sliceOutput, serializedPages);\n            // We use flush instead of close, because the underlying stream would be closed and that is not allowed.\n            sliceOutput.flush();\n        }\n        catch (UncheckedIOException e) {\n            // EOF exception occurs when the client disconnects while writing data\n            // This is not a \"server\" problem so we don't want to log this\n            if (!(e.getCause() instanceof EOFException)) {\n                throw e;\n            }\n        }\n    }\n}\n", "methodName": "void PagesResponseWriter.writeTo(List,Class,Type,java.lang.annotation.Annotation[],MediaType,MultivaluedMap,OutputStream)", "exampleID": 46, "dataset": "infer", "filepath": "presto-main/src/main/java/com/facebook/presto/server/PagesResponseWriter.java", "source": "io.airlift.slice.OutputStreamSliceOutput", "sourceLine": 82, "qualifier": "Resource of type $$io.airlift.slice.OutputStreamSliceOutput/$ acquired by call to @@new()/@ is not released", "steps": [{"line": 78, "source": "io.airlift.slice.OutputStreamSliceOutput", "filepath": "presto-main/src/main/java/com/facebook/presto/execution/buffer/PagesSerdeUtil.java", "methodName": "PagesSerdeUtil.writeSerializedPages", "exampleID": 47}], "line_number": 82, "records": [{"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/execution/buffer/PagesSerdeUtil.java", "line_number": 78, "column_number": -1, "description": "start of procedure writeSerializedPages(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "long PagesSerdeUtil.writeSerializedPages(OutputStreamSliceOutput,Iterable)"}, {"tag": "name_id", "value": "com.facebook.presto.execution.buffer.PagesSerdeUtil.writeSerializedPages(io.airlift.slice.OutputStre.9ea18ca78fd22385ab5528c6de7df26e"}], "snippet": "    public static long writeSerializedPages(SliceOutput sliceOutput, Iterable<SerializedPage> pages)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/execution/buffer/PagesSerdeUtil.java", "methodName": "writeSerializedPages"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/execution/buffer/PagesSerdeUtil.java", "line_number": 80, "column_number": -1, "description": "Skipping iterator(): unknown method", "node_tags": [], "snippet": "        Iterator<SerializedPage> pageIterator = pages.iterator();", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/execution/buffer/PagesSerdeUtil.java", "methodName": "writeSerializedPages"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/execution/buffer/PagesSerdeUtil.java", "line_number": 81, "column_number": -1, "description": "", "node_tags": [], "snippet": "        long size = 0;", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/execution/buffer/PagesSerdeUtil.java", "methodName": "writeSerializedPages"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/execution/buffer/PagesSerdeUtil.java", "line_number": 82, "column_number": -1, "description": "Taking false branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "false"}], "snippet": "        while (pageIterator.hasNext()) {", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/execution/buffer/PagesSerdeUtil.java", "methodName": "writeSerializedPages"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/execution/buffer/PagesSerdeUtil.java", "line_number": 87, "column_number": -1, "description": "return from a call to long PagesSerdeUtil.writeSerializedPages(OutputStreamSliceOutput,Iterable)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "long PagesSerdeUtil.writeSerializedPages(OutputStreamSliceOutput,Iterable)"}, {"tag": "name_id", "value": "com.facebook.presto.execution.buffer.PagesSerdeUtil.writeSerializedPages(io.airlift.slice.OutputStre.9ea18ca78fd22385ab5528c6de7df26e"}], "snippet": "        return size;", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/execution/buffer/PagesSerdeUtil.java", "methodName": "writeSerializedPages"}], "combined_records": [{"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/execution/buffer/PagesSerdeUtil.java", "line_number": 87, "column_number": -1, "description": "start of procedure writeSerializedPages(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "long PagesSerdeUtil.writeSerializedPages(OutputStreamSliceOutput,Iterable)"}, {"tag": "name_id", "value": "com.facebook.presto.execution.buffer.PagesSerdeUtil.writeSerializedPages(io.airlift.slice.OutputStre.9ea18ca78fd22385ab5528c6de7df26e"}], "snippet": "76.\n77.    public static long writeSerializedPages(SliceOutput sliceOutput, Iterable<SerializedPage> pages)\n78.>     {\n79.        Iterator<SerializedPage> pageIterator = pages.iterator();\n80.>         long size = 0;\n81.>         while (pageIterator.hasNext()) {\n82.>             SerializedPage page = pageIterator.next();\n83.            writeSerializedPage(sliceOutput, page);\n84.            size += page.getSizeInBytes();\n85.        }\n86.        return size;\n87.    }\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/execution/buffer/PagesSerdeUtil.java", "methodName": "writeSerializedPages", "line_numbers": [78, 80, 81, 82, 87]}], "infer_explore": [{"level": 0, "filename": "presto-main/src/main/java/com/facebook/presto/server/PagesResponseWriter.java", "line_number": 72, "column_number": -1, "description": "start of procedure writeTo(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void PagesResponseWriter.writeTo(List,Class,Type,java.lang.annotation.Annotation[],MediaType,MultivaluedMap,OutputStream)"}, {"tag": "name_id", "value": "com.facebook.presto.server.PagesResponseWriter.writeTo(java.util.List,java.lang.Class,java.lang.refl.dfa963418c1fa68a41da60d6d0f09f8c"}], "snippet": "69. \n70.     @Override\n71. >     public void writeTo(List<SerializedPage> serializedPages,\n72.             Class<?> type,\n73.             Type genericType,\n"}, {"level": 0, "filename": "presto-main/src/main/java/com/facebook/presto/server/PagesResponseWriter.java", "line_number": 82, "column_number": -1, "description": "Skipping OutputStreamSliceOutput(...): unknown method", "node_tags": [], "snippet": "79.     {\n80.         try {\n81. >             SliceOutput sliceOutput = new OutputStreamSliceOutput(output);\n82.             writeSerializedPages(sliceOutput, serializedPages);\n83.             // We use flush instead of close, because the underlying stream would be closed and that is not allowed.\n"}, {"level": 0, "filename": "presto-main/src/main/java/com/facebook/presto/server/PagesResponseWriter.java", "line_number": 83, "column_number": -1, "description": "", "node_tags": [], "snippet": "80.         try {\n81.             SliceOutput sliceOutput = new OutputStreamSliceOutput(output);\n82. >             writeSerializedPages(sliceOutput, serializedPages);\n83.             // We use flush instead of close, because the underlying stream would be closed and that is not allowed.\n84.             sliceOutput.flush();\n"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/execution/buffer/PagesSerdeUtil.java", "line_number": 78, "column_number": -1, "description": "start of procedure writeSerializedPages(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "long PagesSerdeUtil.writeSerializedPages(OutputStreamSliceOutput,Iterable)"}, {"tag": "name_id", "value": "com.facebook.presto.execution.buffer.PagesSerdeUtil.writeSerializedPages(io.airlift.slice.OutputStre.9ea18ca78fd22385ab5528c6de7df26e"}], "snippet": "75.     }\n76. \n77. >     public static long writeSerializedPages(SliceOutput sliceOutput, Iterable<SerializedPage> pages)\n78.     {\n79.         Iterator<SerializedPage> pageIterator = pages.iterator();\n"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/execution/buffer/PagesSerdeUtil.java", "line_number": 80, "column_number": -1, "description": "Skipping iterator(): unknown method", "node_tags": [], "snippet": "77.     public static long writeSerializedPages(SliceOutput sliceOutput, Iterable<SerializedPage> pages)\n78.     {\n79. >         Iterator<SerializedPage> pageIterator = pages.iterator();\n80.         long size = 0;\n81.         while (pageIterator.hasNext()) {\n"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/execution/buffer/PagesSerdeUtil.java", "line_number": 81, "column_number": -1, "description": "", "node_tags": [], "snippet": "78.     {\n79.         Iterator<SerializedPage> pageIterator = pages.iterator();\n80. >         long size = 0;\n81.         while (pageIterator.hasNext()) {\n82.             SerializedPage page = pageIterator.next();\n"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/execution/buffer/PagesSerdeUtil.java", "line_number": 82, "column_number": -1, "description": "Taking false branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "false"}], "snippet": "79.         Iterator<SerializedPage> pageIterator = pages.iterator();\n80.         long size = 0;\n81. >         while (pageIterator.hasNext()) {\n82.             SerializedPage page = pageIterator.next();\n83.             writeSerializedPage(sliceOutput, page);\n"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/execution/buffer/PagesSerdeUtil.java", "line_number": 87, "column_number": -1, "description": "return from a call to long PagesSerdeUtil.writeSerializedPages(OutputStreamSliceOutput,Iterable)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "long PagesSerdeUtil.writeSerializedPages(OutputStreamSliceOutput,Iterable)"}, {"tag": "name_id", "value": "com.facebook.presto.execution.buffer.PagesSerdeUtil.writeSerializedPages(io.airlift.slice.OutputStre.9ea18ca78fd22385ab5528c6de7df26e"}], "snippet": "84.             size += page.getSizeInBytes();\n85.         }\n86. >         return size;\n87.     }\n88. \n"}, {"level": 0, "filename": "presto-main/src/main/java/com/facebook/presto/server/PagesResponseWriter.java", "line_number": 85, "column_number": -1, "description": "Skipping flush(): unknown method", "node_tags": [], "snippet": "82.             writeSerializedPages(sliceOutput, serializedPages);\n83.             // We use flush instead of close, because the underlying stream would be closed and that is not allowed.\n84. >             sliceOutput.flush();\n85.         }\n86.         catch (UncheckedIOException e) {\n"}]}, {"url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-thrift-connector/src/test/java/com/facebook/presto/connector/thrift/integration/ThriftQueryRunner.java", "rawCode": "/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage com.facebook.presto.connector.thrift.integration;\n\nimport com.facebook.presto.Session;\nimport com.facebook.presto.connector.thrift.ThriftPlugin;\nimport com.facebook.presto.connector.thrift.location.HostList;\nimport com.facebook.presto.connector.thrift.server.ThriftIndexedTpchService;\nimport com.facebook.presto.connector.thrift.server.ThriftTpchService;\nimport com.facebook.presto.cost.CostCalculator;\nimport com.facebook.presto.metadata.Metadata;\nimport com.facebook.presto.metadata.QualifiedObjectName;\nimport com.facebook.presto.server.testing.TestingPrestoServer;\nimport com.facebook.presto.spi.HostAddress;\nimport com.facebook.presto.spi.Plugin;\nimport com.facebook.presto.sql.planner.NodePartitioningManager;\nimport com.facebook.presto.testing.MaterializedResult;\nimport com.facebook.presto.testing.QueryRunner;\nimport com.facebook.presto.testing.TestingAccessControlManager;\nimport com.facebook.presto.tests.DistributedQueryRunner;\nimport com.facebook.presto.transaction.TransactionManager;\nimport com.facebook.swift.codec.ThriftCodecManager;\nimport com.facebook.swift.service.ThriftServer;\nimport com.facebook.swift.service.ThriftServiceProcessor;\nimport com.google.common.collect.ImmutableList;\nimport com.google.common.collect.ImmutableMap;\nimport io.airlift.log.Logger;\n\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.concurrent.locks.Lock;\n\nimport static com.facebook.presto.testing.TestingSession.testSessionBuilder;\nimport static com.google.common.collect.ImmutableList.toImmutableList;\nimport static io.airlift.testing.Closeables.closeQuietly;\nimport static java.util.Objects.requireNonNull;\n\npublic final class ThriftQueryRunner\n{\n    private ThriftQueryRunner() {}\n\n    public static QueryRunner createThriftQueryRunner(int thriftServers, int workers, boolean enableIndexJoin)\n            throws Exception\n    {\n        List<ThriftServer> servers = null;\n        DistributedQueryRunner runner = null;\n        try {\n            servers = startThriftServers(thriftServers, enableIndexJoin);\n            runner = createThriftQueryRunnerInternal(servers, workers);\n            return new ThriftQueryRunnerWithServers(runner, servers);\n        }\n        catch (Throwable t) {\n            closeQuietly(runner);\n            // runner might be null, so closing servers explicitly\n            if (servers != null) {\n                for (ThriftServer server : servers) {\n                    closeQuietly(server);\n                }\n            }\n            throw t;\n        }\n    }\n\n    public static void main(String[] args)\n            throws Exception\n    {\n        ThriftQueryRunnerWithServers queryRunner = (ThriftQueryRunnerWithServers) createThriftQueryRunner(3, 3, true);\n        Thread.sleep(10);\n        Logger log = Logger.get(ThriftQueryRunner.class);\n        log.info(\"======== SERVER STARTED ========\");\n        log.info(\"\\n====\\n%s\\n====\", queryRunner.getCoordinator().getBaseUrl());\n    }\n\n    private static List<ThriftServer> startThriftServers(int thriftServers, boolean enableIndexJoin)\n    {\n        List<ThriftServer> servers = new ArrayList<>(thriftServers);\n        for (int i = 0; i < thriftServers; i++) {\n            ThriftTpchService service = enableIndexJoin ? new ThriftIndexedTpchService() : new ThriftTpchService();\n            ThriftServiceProcessor processor = new ThriftServiceProcessor(new ThriftCodecManager(), ImmutableList.of(), service);\n            servers.add(new ThriftServer(processor).start());\n        }\n        return servers;\n    }\n\n    private static DistributedQueryRunner createThriftQueryRunnerInternal(List<ThriftServer> servers, int workers)\n            throws Exception\n    {\n        List<HostAddress> addresses = servers.stream()\n                .map(server -> HostAddress.fromParts(\"localhost\", server.getPort()))\n                .collect(toImmutableList());\n        HostList hosts = HostList.fromList(addresses);\n\n        Session defaultSession = testSessionBuilder()\n                .setCatalog(\"thrift\")\n                .setSchema(\"tiny\")\n                .build();\n        DistributedQueryRunner queryRunner = new DistributedQueryRunner(defaultSession, workers);\n        queryRunner.installPlugin(new ThriftPlugin());\n        Map<String, String> connectorProperties = ImmutableMap.of(\n                \"static-location.hosts\", hosts.stringValue(),\n                \"PrestoThriftService.thrift.client.connect-timeout\", \"30s\",\n                \"presto-thrift.lookup-requests-concurrency\", \"2\");\n        queryRunner.createCatalog(\"thrift\", \"presto-thrift\", connectorProperties);\n        return queryRunner;\n    }\n\n    /**\n     * Wraps QueryRunner and a list of ThriftServers to clean them up together.\n     */\n    private static class ThriftQueryRunnerWithServers\n            implements QueryRunner\n    {\n        private DistributedQueryRunner source;\n        private List<ThriftServer> thriftServers;\n\n        private ThriftQueryRunnerWithServers(DistributedQueryRunner source, List<ThriftServer> thriftServers)\n        {\n            this.source = requireNonNull(source, \"source is null\");\n            this.thriftServers = ImmutableList.copyOf(requireNonNull(thriftServers, \"thriftServers is null\"));\n        }\n\n        public TestingPrestoServer getCoordinator()\n        {\n            return source.getCoordinator();\n        }\n\n        @Override\n        public void close()\n        {\n            if (source != null) {\n                closeQuietly(source);\n                source = null;\n            }\n            if (thriftServers != null) {\n                for (ThriftServer server : thriftServers) {\n                    closeQuietly(server);\n                }\n                thriftServers = null;\n            }\n        }\n\n        @Override\n        public int getNodeCount()\n        {\n            return source.getNodeCount();\n        }\n\n        @Override\n        public Session getDefaultSession()\n        {\n            return source.getDefaultSession();\n        }\n\n        @Override\n        public TransactionManager getTransactionManager()\n        {\n            return source.getTransactionManager();\n        }\n\n        @Override\n        public Metadata getMetadata()\n        {\n            return source.getMetadata();\n        }\n\n        @Override\n        public NodePartitioningManager getNodePartitioningManager()\n        {\n            return source.getNodePartitioningManager();\n        }\n\n        @Override\n        public CostCalculator getCostCalculator()\n        {\n            return source.getCostCalculator();\n        }\n\n        @Override\n        public TestingAccessControlManager getAccessControl()\n        {\n            return source.getAccessControl();\n        }\n\n        @Override\n        public MaterializedResult execute(String sql)\n        {\n            return source.execute(sql);\n        }\n\n        @Override\n        public MaterializedResult execute(Session session, String sql)\n        {\n            return source.execute(session, sql);\n        }\n\n        @Override\n        public List<QualifiedObjectName> listTables(Session session, String catalog, String schema)\n        {\n            return source.listTables(session, catalog, schema);\n        }\n\n        @Override\n        public boolean tableExists(Session session, String table)\n        {\n            return source.tableExists(session, table);\n        }\n\n        @Override\n        public void installPlugin(Plugin plugin)\n        {\n            source.installPlugin(plugin);\n        }\n\n        @Override\n        public void createCatalog(String catalogName, String connectorName, Map<String, String> properties)\n        {\n            source.createCatalog(catalogName, connectorName, properties);\n        }\n\n        @Override\n        public Lock getExclusiveLock()\n        {\n            return source.getExclusiveLock();\n        }\n    }\n}\n", "methodName": "List ThriftQueryRunner.startThriftServers(int,boolean)", "exampleID": 48, "dataset": "infer", "filepath": "presto-thrift-connector/src/test/java/com/facebook/presto/connector/thrift/integration/ThriftQueryRunner.java", "source": "com.facebook.presto.connector.thrift.server.ThriftIndexedTpchService", "sourceLine": 90, "qualifier": "Resource of type $$com.facebook.presto.connector.thrift.server.ThriftIndexedTpchService/$ acquired by call to @@ThriftIndexedTpchService()/@ is not released", "steps": [{"line": 43, "source": "com.facebook.presto.connector.thrift.server.ThriftIndexedTpchService", "filepath": "presto-thrift-testing-server/src/main/java/com/facebook/presto/connector/thrift/server/ThriftIndexedTpchService.java", "methodName": "ThriftIndexedTpchService.ThriftIndexedTpchService", "exampleID": 49}], "line_number": 90, "records": [{"level": 1, "filename": "presto-thrift-testing-server/src/main/java/com/facebook/presto/connector/thrift/server/ThriftIndexedTpchService.java", "line_number": 43, "column_number": -1, "description": "start of procedure ThriftIndexedTpchService()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "ThriftIndexedTpchService.<init>()"}, {"tag": "name_id", "value": "com.facebook.presto.connector.thrift.server.ThriftIndexedTpchService.<init>().d5e90624e1a01f17bad427b5ac7c0d08"}], "snippet": "public class ThriftIndexedTpchService", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-thrift-testing-server/src/main/java/com/facebook/presto/connector/thrift/server/ThriftIndexedTpchService.java", "methodName": "ThriftIndexedTpchService"}, {"level": 2, "filename": "presto-thrift-testing-server/src/main/java/com/facebook/presto/connector/thrift/server/ThriftTpchService.java", "line_number": 68, "column_number": -1, "description": "start of procedure ThriftTpchService()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "ThriftTpchService.<init>()"}, {"tag": "name_id", "value": "com.facebook.presto.connector.thrift.server.ThriftTpchService.<init>().8bc47f44d34c4ecfaed87e5d6c336fed"}], "snippet": "public class ThriftTpchService", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-thrift-testing-server/src/main/java/com/facebook/presto/connector/thrift/server/ThriftTpchService.java", "methodName": "ThriftTpchService"}, {"level": 2, "filename": "presto-thrift-testing-server/src/main/java/com/facebook/presto/connector/thrift/server/ThriftTpchService.java", "line_number": 76, "column_number": -1, "description": "Skipping newFixedThreadPool(...): unknown method", "node_tags": [], "snippet": "            newFixedThreadPool(Runtime.getRuntime().availableProcessors(), threadsNamed(\"thrift-tpch-%s\")));", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-thrift-testing-server/src/main/java/com/facebook/presto/connector/thrift/server/ThriftTpchService.java", "methodName": "ThriftTpchService"}, {"level": 2, "filename": "presto-thrift-testing-server/src/main/java/com/facebook/presto/connector/thrift/server/ThriftTpchService.java", "line_number": 75, "column_number": -1, "description": "return from a call to ThriftTpchService.<init>()", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "ThriftTpchService.<init>()"}, {"tag": "name_id", "value": "com.facebook.presto.connector.thrift.server.ThriftTpchService.<init>().8bc47f44d34c4ecfaed87e5d6c336fed"}], "snippet": "    private final ListeningExecutorService executor = listeningDecorator(", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-thrift-testing-server/src/main/java/com/facebook/presto/connector/thrift/server/ThriftTpchService.java", "methodName": "ThriftTpchService"}, {"level": 1, "filename": "presto-thrift-testing-server/src/main/java/com/facebook/presto/connector/thrift/server/ThriftIndexedTpchService.java", "line_number": 47, "column_number": -1, "description": "", "node_tags": [], "snippet": "    private final TpchIndexedData indexedData = new TpchIndexedData(\"tpchindexed\", INDEX_SPEC);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-thrift-testing-server/src/main/java/com/facebook/presto/connector/thrift/server/ThriftIndexedTpchService.java", "methodName": "ThriftIndexedTpchService"}, {"level": 2, "filename": "presto-tests/src/main/java/com/facebook/presto/tests/tpch/TpchIndexedData.java", "line_number": 53, "column_number": -1, "description": "start of procedure TpchIndexedData(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "TpchIndexedData.<init>(String,TpchIndexSpec)"}, {"tag": "name_id", "value": "com.facebook.presto.tests.tpch.TpchIndexedData.<init>(java.lang.String,com.facebook.presto.tests.tpc.51234327fe991c6a73abd08d92954fe7"}], "snippet": "    public TpchIndexedData(String connectorId, TpchIndexSpec tpchIndexSpec)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-tests/src/main/java/com/facebook/presto/tests/tpch/TpchIndexedData.java", "methodName": "TpchIndexedData"}, {"level": 2, "filename": "presto-tests/src/main/java/com/facebook/presto/tests/tpch/TpchIndexedData.java", "line_number": 54, "column_number": -1, "description": "", "node_tags": [], "snippet": "    {", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-tests/src/main/java/com/facebook/presto/tests/tpch/TpchIndexedData.java", "methodName": "TpchIndexedData"}, {"level": 2, "filename": "presto-tests/src/main/java/com/facebook/presto/tests/tpch/TpchIndexedData.java", "line_number": 55, "column_number": -1, "description": "Skipping requireNonNull(...): unknown method", "node_tags": [], "snippet": "        requireNonNull(connectorId, \"connectorId is null\");", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-tests/src/main/java/com/facebook/presto/tests/tpch/TpchIndexedData.java", "methodName": "TpchIndexedData"}, {"level": 2, "filename": "presto-tests/src/main/java/com/facebook/presto/tests/tpch/TpchIndexedData.java", "line_number": 56, "column_number": -1, "description": "Skipping requireNonNull(...): unknown method", "node_tags": [], "snippet": "        requireNonNull(tpchIndexSpec, \"tpchIndexSpec is null\");", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-tests/src/main/java/com/facebook/presto/tests/tpch/TpchIndexedData.java", "methodName": "TpchIndexedData"}, {"level": 2, "filename": "presto-tests/src/main/java/com/facebook/presto/tests/tpch/TpchIndexedData.java", "line_number": 58, "column_number": -1, "description": "", "node_tags": [], "snippet": "        TpchMetadata tpchMetadata = new TpchMetadata(connectorId);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-tests/src/main/java/com/facebook/presto/tests/tpch/TpchIndexedData.java", "methodName": "TpchIndexedData"}, {"level": 3, "filename": "presto-tpch/src/main/java/com/facebook/presto/tpch/TpchMetadata.java", "line_number": 106, "column_number": -1, "description": "start of procedure TpchMetadata(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "TpchMetadata.<init>(String)"}, {"tag": "name_id", "value": "com.facebook.presto.tpch.TpchMetadata.<init>(java.lang.String).ce3be13c82df83f01a63643c0e8bee2f"}], "snippet": "    public TpchMetadata(String connectorId)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-tpch/src/main/java/com/facebook/presto/tpch/TpchMetadata.java", "methodName": "TpchMetadata"}, {"level": 3, "filename": "presto-tpch/src/main/java/com/facebook/presto/tpch/TpchMetadata.java", "line_number": 108, "column_number": -1, "description": "", "node_tags": [], "snippet": "        this(connectorId, TpchConnectorFactory.DEFAULT_PREDICATE_PUSHDOWN_ENABLED, ColumnNaming.SIMPLIFIED);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-tpch/src/main/java/com/facebook/presto/tpch/TpchMetadata.java", "methodName": "TpchMetadata"}, {"level": 4, "filename": "presto-tpch/src/main/java/com/facebook/presto/tpch/TpchMetadata.java", "line_number": 111, "column_number": -1, "description": "start of procedure TpchMetadata(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "TpchMetadata.<init>(String,boolean,ColumnNaming)"}, {"tag": "name_id", "value": "com.facebook.presto.tpch.TpchMetadata.<init>(java.lang.String,boolean,com.facebook.presto.tpch.Colum.8e4106473b251e26dac6c15fe710a53a"}], "snippet": "    public TpchMetadata(String connectorId, boolean predicatePushdownEnabled, ColumnNaming columnNaming)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-tpch/src/main/java/com/facebook/presto/tpch/TpchMetadata.java", "methodName": "TpchMetadata"}, {"level": 4, "filename": "presto-tpch/src/main/java/com/facebook/presto/tpch/TpchMetadata.java", "line_number": 112, "column_number": -1, "description": "", "node_tags": [], "snippet": "    {", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-tpch/src/main/java/com/facebook/presto/tpch/TpchMetadata.java", "methodName": "TpchMetadata"}, {"level": 4, "filename": "presto-tpch/src/main/java/com/facebook/presto/tpch/TpchMetadata.java", "line_number": 113, "column_number": -1, "description": "Skipping builder(): unknown method", "node_tags": [], "snippet": "        ImmutableSet.Builder<String> tableNames = ImmutableSet.builder();", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-tpch/src/main/java/com/facebook/presto/tpch/TpchMetadata.java", "methodName": "TpchMetadata"}, {"level": 4, "filename": "presto-tpch/src/main/java/com/facebook/presto/tpch/TpchMetadata.java", "line_number": 114, "column_number": -1, "description": "Taking false branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "false"}], "snippet": "        for (TpchTable<?> tpchTable : TpchTable.getTables()) {", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-tpch/src/main/java/com/facebook/presto/tpch/TpchMetadata.java", "methodName": "TpchMetadata"}, {"level": 4, "filename": "presto-tpch/src/main/java/com/facebook/presto/tpch/TpchMetadata.java", "line_number": 117, "column_number": -1, "description": "", "node_tags": [], "snippet": "        this.tableNames = tableNames.build();", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-tpch/src/main/java/com/facebook/presto/tpch/TpchMetadata.java", "methodName": "TpchMetadata"}, {"level": 4, "filename": "presto-tpch/src/main/java/com/facebook/presto/tpch/TpchMetadata.java", "line_number": 118, "column_number": -1, "description": "", "node_tags": [], "snippet": "        this.connectorId = connectorId;", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-tpch/src/main/java/com/facebook/presto/tpch/TpchMetadata.java", "methodName": "TpchMetadata"}, {"level": 4, "filename": "presto-tpch/src/main/java/com/facebook/presto/tpch/TpchMetadata.java", "line_number": 119, "column_number": -1, "description": "", "node_tags": [], "snippet": "        this.predicatePushdownEnabled = predicatePushdownEnabled;", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-tpch/src/main/java/com/facebook/presto/tpch/TpchMetadata.java", "methodName": "TpchMetadata"}, {"level": 4, "filename": "presto-tpch/src/main/java/com/facebook/presto/tpch/TpchMetadata.java", "line_number": 120, "column_number": -1, "description": "", "node_tags": [], "snippet": "        this.columnNaming = columnNaming;", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-tpch/src/main/java/com/facebook/presto/tpch/TpchMetadata.java", "methodName": "TpchMetadata"}, {"level": 4, "filename": "presto-tpch/src/main/java/com/facebook/presto/tpch/TpchMetadata.java", "line_number": 121, "column_number": -1, "description": "", "node_tags": [], "snippet": "        this.statisticsEstimator = createStatisticsEstimator();", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-tpch/src/main/java/com/facebook/presto/tpch/TpchMetadata.java", "methodName": "TpchMetadata"}, {"level": 5, "filename": "presto-tpch/src/main/java/com/facebook/presto/tpch/TpchMetadata.java", "line_number": 124, "column_number": -1, "description": "start of procedure createStatisticsEstimator()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "StatisticsEstimator TpchMetadata.createStatisticsEstimator()"}, {"tag": "name_id", "value": "com.facebook.presto.tpch.TpchMetadata.createStatisticsEstimator():com.facebook.presto.tpch.statistic.beec09085e4dc363c22c7ce1f6a38f9b"}], "snippet": "    private static StatisticsEstimator createStatisticsEstimator()", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-tpch/src/main/java/com/facebook/presto/tpch/TpchMetadata.java", "methodName": "createStatisticsEstimator"}, {"level": 5, "filename": "presto-tpch/src/main/java/com/facebook/presto/tpch/TpchMetadata.java", "line_number": 126, "column_number": -1, "description": "Skipping Jdk8Module(): unknown method", "node_tags": [], "snippet": "        ObjectMapper objectMapper = new ObjectMapper()", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-tpch/src/main/java/com/facebook/presto/tpch/TpchMetadata.java", "methodName": "createStatisticsEstimator"}, {"level": 5, "filename": "presto-tpch/src/main/java/com/facebook/presto/tpch/TpchMetadata.java", "line_number": 127, "column_number": -1, "description": "Skipping registerModule(...): unknown method", "node_tags": [], "snippet": "                .registerModule(new Jdk8Module());", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-tpch/src/main/java/com/facebook/presto/tpch/TpchMetadata.java", "methodName": "createStatisticsEstimator"}, {"level": 5, "filename": "presto-tpch/src/main/java/com/facebook/presto/tpch/TpchMetadata.java", "line_number": 128, "column_number": -1, "description": "", "node_tags": [], "snippet": "        TableStatisticsDataRepository tableStatisticsDataRepository = new TableStatisticsDataRepository(objectMapper);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-tpch/src/main/java/com/facebook/presto/tpch/TpchMetadata.java", "methodName": "createStatisticsEstimator"}, {"level": 6, "filename": "presto-tpch/src/main/java/com/facebook/presto/tpch/statistics/TableStatisticsDataRepository.java", "line_number": 36, "column_number": -1, "description": "start of procedure TableStatisticsDataRepository(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "TableStatisticsDataRepository.<init>(ObjectMapper)"}, {"tag": "name_id", "value": "com.facebook.presto.tpch.statistics.TableStatisticsDataRepository.<init>(com.fasterxml.jackson.datab.5c09c205c4fe012717fcaad9a7fde35c"}], "snippet": "    public TableStatisticsDataRepository(ObjectMapper objectMapper)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-tpch/src/main/java/com/facebook/presto/tpch/statistics/TableStatisticsDataRepository.java", "methodName": "TableStatisticsDataRepository"}, {"level": 6, "filename": "presto-tpch/src/main/java/com/facebook/presto/tpch/statistics/TableStatisticsDataRepository.java", "line_number": 37, "column_number": -1, "description": "", "node_tags": [], "snippet": "    {", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-tpch/src/main/java/com/facebook/presto/tpch/statistics/TableStatisticsDataRepository.java", "methodName": "TableStatisticsDataRepository"}, {"level": 6, "filename": "presto-tpch/src/main/java/com/facebook/presto/tpch/statistics/TableStatisticsDataRepository.java", "line_number": 38, "column_number": -1, "description": "", "node_tags": [], "snippet": "        this.objectMapper = objectMapper;", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-tpch/src/main/java/com/facebook/presto/tpch/statistics/TableStatisticsDataRepository.java", "methodName": "TableStatisticsDataRepository"}, {"level": 6, "filename": "presto-tpch/src/main/java/com/facebook/presto/tpch/statistics/TableStatisticsDataRepository.java", "line_number": 39, "column_number": -1, "description": "return from a call to TableStatisticsDataRepository.<init>(ObjectMapper)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "TableStatisticsDataRepository.<init>(ObjectMapper)"}, {"tag": "name_id", "value": "com.facebook.presto.tpch.statistics.TableStatisticsDataRepository.<init>(com.fasterxml.jackson.datab.5c09c205c4fe012717fcaad9a7fde35c"}], "snippet": "    }", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-tpch/src/main/java/com/facebook/presto/tpch/statistics/TableStatisticsDataRepository.java", "methodName": "TableStatisticsDataRepository"}, {"level": 5, "filename": "presto-tpch/src/main/java/com/facebook/presto/tpch/TpchMetadata.java", "line_number": 129, "column_number": -1, "description": "", "node_tags": [], "snippet": "        return new StatisticsEstimator(tableStatisticsDataRepository);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-tpch/src/main/java/com/facebook/presto/tpch/TpchMetadata.java", "methodName": "createStatisticsEstimator"}, {"level": 6, "filename": "presto-tpch/src/main/java/com/facebook/presto/tpch/statistics/StatisticsEstimator.java", "line_number": 36, "column_number": -1, "description": "start of procedure StatisticsEstimator(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "StatisticsEstimator.<init>(TableStatisticsDataRepository)"}, {"tag": "name_id", "value": "com.facebook.presto.tpch.statistics.StatisticsEstimator.<init>(com.facebook.presto.tpch.statistics.T.a1f14017e14edcf48596c26dfed5e0c1"}], "snippet": "    public StatisticsEstimator(TableStatisticsDataRepository tableStatisticsDataRepository)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-tpch/src/main/java/com/facebook/presto/tpch/statistics/StatisticsEstimator.java", "methodName": "StatisticsEstimator"}, {"level": 6, "filename": "presto-tpch/src/main/java/com/facebook/presto/tpch/statistics/StatisticsEstimator.java", "line_number": 37, "column_number": -1, "description": "", "node_tags": [], "snippet": "    {", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-tpch/src/main/java/com/facebook/presto/tpch/statistics/StatisticsEstimator.java", "methodName": "StatisticsEstimator"}, {"level": 6, "filename": "presto-tpch/src/main/java/com/facebook/presto/tpch/statistics/StatisticsEstimator.java", "line_number": 38, "column_number": -1, "description": "", "node_tags": [], "snippet": "        this.tableStatisticsDataRepository = tableStatisticsDataRepository;", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-tpch/src/main/java/com/facebook/presto/tpch/statistics/StatisticsEstimator.java", "methodName": "StatisticsEstimator"}, {"level": 6, "filename": "presto-tpch/src/main/java/com/facebook/presto/tpch/statistics/StatisticsEstimator.java", "line_number": 39, "column_number": -1, "description": "return from a call to StatisticsEstimator.<init>(TableStatisticsDataRepository)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "StatisticsEstimator.<init>(TableStatisticsDataRepository)"}, {"tag": "name_id", "value": "com.facebook.presto.tpch.statistics.StatisticsEstimator.<init>(com.facebook.presto.tpch.statistics.T.a1f14017e14edcf48596c26dfed5e0c1"}], "snippet": "    }", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-tpch/src/main/java/com/facebook/presto/tpch/statistics/StatisticsEstimator.java", "methodName": "StatisticsEstimator"}, {"level": 5, "filename": "presto-tpch/src/main/java/com/facebook/presto/tpch/TpchMetadata.java", "line_number": 129, "column_number": -1, "description": "return from a call to StatisticsEstimator TpchMetadata.createStatisticsEstimator()", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "StatisticsEstimator TpchMetadata.createStatisticsEstimator()"}, {"tag": "name_id", "value": "com.facebook.presto.tpch.TpchMetadata.createStatisticsEstimator():com.facebook.presto.tpch.statistic.beec09085e4dc363c22c7ce1f6a38f9b"}], "snippet": "        return new StatisticsEstimator(tableStatisticsDataRepository);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-tpch/src/main/java/com/facebook/presto/tpch/TpchMetadata.java", "methodName": "createStatisticsEstimator"}, {"level": 4, "filename": "presto-tpch/src/main/java/com/facebook/presto/tpch/TpchMetadata.java", "line_number": 121, "column_number": -1, "description": "", "node_tags": [], "snippet": "        this.statisticsEstimator = createStatisticsEstimator();", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-tpch/src/main/java/com/facebook/presto/tpch/TpchMetadata.java", "methodName": "TpchMetadata"}, {"level": 4, "filename": "presto-tpch/src/main/java/com/facebook/presto/tpch/TpchMetadata.java", "line_number": 122, "column_number": -1, "description": "return from a call to TpchMetadata.<init>(String,boolean,ColumnNaming)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "TpchMetadata.<init>(String,boolean,ColumnNaming)"}, {"tag": "name_id", "value": "com.facebook.presto.tpch.TpchMetadata.<init>(java.lang.String,boolean,com.facebook.presto.tpch.Colum.8e4106473b251e26dac6c15fe710a53a"}], "snippet": "    }", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-tpch/src/main/java/com/facebook/presto/tpch/TpchMetadata.java", "methodName": "TpchMetadata"}, {"level": 3, "filename": "presto-tpch/src/main/java/com/facebook/presto/tpch/TpchMetadata.java", "line_number": 109, "column_number": -1, "description": "return from a call to TpchMetadata.<init>(String)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "TpchMetadata.<init>(String)"}, {"tag": "name_id", "value": "com.facebook.presto.tpch.TpchMetadata.<init>(java.lang.String).ce3be13c82df83f01a63643c0e8bee2f"}], "snippet": "    }", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-tpch/src/main/java/com/facebook/presto/tpch/TpchMetadata.java", "methodName": "TpchMetadata"}, {"level": 2, "filename": "presto-tests/src/main/java/com/facebook/presto/tests/tpch/TpchIndexedData.java", "line_number": 59, "column_number": -1, "description": "", "node_tags": [], "snippet": "        TpchRecordSetProvider tpchRecordSetProvider = new TpchRecordSetProvider();", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-tests/src/main/java/com/facebook/presto/tests/tpch/TpchIndexedData.java", "methodName": "TpchIndexedData"}, {"level": 3, "filename": "presto-tpch/src/main/java/com/facebook/presto/tpch/TpchRecordSetProvider.java", "line_number": 35, "column_number": -1, "description": "start of procedure TpchRecordSetProvider()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "TpchRecordSetProvider.<init>()"}, {"tag": "name_id", "value": "com.facebook.presto.tpch.TpchRecordSetProvider.<init>().7a203483a602b164adcf5761b9ab23c7"}], "snippet": "public class TpchRecordSetProvider", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-tpch/src/main/java/com/facebook/presto/tpch/TpchRecordSetProvider.java", "methodName": "TpchRecordSetProvider"}, {"level": 3, "filename": "presto-tpch/src/main/java/com/facebook/presto/tpch/TpchRecordSetProvider.java", "line_number": 35, "column_number": -1, "description": "return from a call to TpchRecordSetProvider.<init>()", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "TpchRecordSetProvider.<init>()"}, {"tag": "name_id", "value": "com.facebook.presto.tpch.TpchRecordSetProvider.<init>().7a203483a602b164adcf5761b9ab23c7"}], "snippet": "public class TpchRecordSetProvider", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-tpch/src/main/java/com/facebook/presto/tpch/TpchRecordSetProvider.java", "methodName": "TpchRecordSetProvider"}, {"level": 2, "filename": "presto-tests/src/main/java/com/facebook/presto/tests/tpch/TpchIndexedData.java", "line_number": 61, "column_number": -1, "description": "Skipping builder(): unknown method", "node_tags": [], "snippet": "        ImmutableMap.Builder<Set<TpchScaledColumn>, IndexedTable> indexedTablesBuilder = ImmutableMap.builder();", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-tests/src/main/java/com/facebook/presto/tests/tpch/TpchIndexedData.java", "methodName": "TpchIndexedData"}, {"level": 2, "filename": "presto-tests/src/main/java/com/facebook/presto/tests/tpch/TpchIndexedData.java", "line_number": 63, "column_number": -1, "description": "", "node_tags": [], "snippet": "        Set<TpchScaledTable> tables = tpchIndexSpec.listIndexedTables();", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-tests/src/main/java/com/facebook/presto/tests/tpch/TpchIndexedData.java", "methodName": "TpchIndexedData"}, {"level": 3, "filename": "presto-tests/src/main/java/com/facebook/presto/tests/tpch/TpchIndexSpec.java", "line_number": 34, "column_number": -1, "description": "start of procedure listIndexedTables()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "Set TpchIndexSpec.listIndexedTables()"}, {"tag": "name_id", "value": "com.facebook.presto.tests.tpch.TpchIndexSpec.listIndexedTables():java.util.Set.8eb75b53d31c36c8552bb6eb3a791434"}], "snippet": "    public Set<TpchScaledTable> listIndexedTables()", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-tests/src/main/java/com/facebook/presto/tests/tpch/TpchIndexSpec.java", "methodName": "listIndexedTables"}, {"level": 3, "filename": "presto-tests/src/main/java/com/facebook/presto/tests/tpch/TpchIndexSpec.java", "line_number": 36, "column_number": -1, "description": "return from a call to Set TpchIndexSpec.listIndexedTables()", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "Set TpchIndexSpec.listIndexedTables()"}, {"tag": "name_id", "value": "com.facebook.presto.tests.tpch.TpchIndexSpec.listIndexedTables():java.util.Set.8eb75b53d31c36c8552bb6eb3a791434"}], "snippet": "        return spec.keySet();", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-tests/src/main/java/com/facebook/presto/tests/tpch/TpchIndexSpec.java", "methodName": "listIndexedTables"}, {"level": 2, "filename": "presto-tests/src/main/java/com/facebook/presto/tests/tpch/TpchIndexedData.java", "line_number": 64, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "        for (TpchScaledTable table : tables) {", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-tests/src/main/java/com/facebook/presto/tests/tpch/TpchIndexedData.java", "methodName": "TpchIndexedData"}, {"level": 2, "filename": "presto-tests/src/main/java/com/facebook/presto/tests/tpch/TpchIndexedData.java", "line_number": 65, "column_number": -1, "description": "", "node_tags": [], "snippet": "            SchemaTableName tableName = new SchemaTableName(\"sf\" + table.getScaleFactor(), table.getTableName());", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-tests/src/main/java/com/facebook/presto/tests/tpch/TpchIndexedData.java", "methodName": "TpchIndexedData"}, {"level": 3, "filename": "presto-tests/src/main/java/com/facebook/presto/tests/tpch/TpchScaledTable.java", "line_number": 36, "column_number": -1, "description": "start of procedure getScaleFactor()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "double TpchScaledTable.getScaleFactor()"}, {"tag": "name_id", "value": "com.facebook.presto.tests.tpch.TpchScaledTable.getScaleFactor():double.cef5a9c33d58acd9b3cd8fcb114b8acf"}], "snippet": "    public double getScaleFactor()", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-tests/src/main/java/com/facebook/presto/tests/tpch/TpchScaledTable.java", "methodName": "getScaleFactor"}, {"level": 3, "filename": "presto-tests/src/main/java/com/facebook/presto/tests/tpch/TpchScaledTable.java", "line_number": 38, "column_number": -1, "description": "return from a call to double TpchScaledTable.getScaleFactor()", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "double TpchScaledTable.getScaleFactor()"}, {"tag": "name_id", "value": "com.facebook.presto.tests.tpch.TpchScaledTable.getScaleFactor():double.cef5a9c33d58acd9b3cd8fcb114b8acf"}], "snippet": "        return scaleFactor;", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-tests/src/main/java/com/facebook/presto/tests/tpch/TpchScaledTable.java", "methodName": "getScaleFactor"}, {"level": 2, "filename": "presto-tests/src/main/java/com/facebook/presto/tests/tpch/TpchIndexedData.java", "line_number": 65, "column_number": -1, "description": "", "node_tags": [], "snippet": "            SchemaTableName tableName = new SchemaTableName(\"sf\" + table.getScaleFactor(), table.getTableName());", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-tests/src/main/java/com/facebook/presto/tests/tpch/TpchIndexedData.java", "methodName": "TpchIndexedData"}, {"level": 3, "filename": "presto-tests/src/main/java/com/facebook/presto/tests/tpch/TpchScaledTable.java", "line_number": 31, "column_number": -1, "description": "start of procedure getTableName()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "String TpchScaledTable.getTableName()"}, {"tag": "name_id", "value": "com.facebook.presto.tests.tpch.TpchScaledTable.getTableName():java.lang.String.7824a0b254a3a5eff8fb80e6aa5c321f"}], "snippet": "    public String getTableName()", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-tests/src/main/java/com/facebook/presto/tests/tpch/TpchScaledTable.java", "methodName": "getTableName"}, {"level": 3, "filename": "presto-tests/src/main/java/com/facebook/presto/tests/tpch/TpchScaledTable.java", "line_number": 33, "column_number": -1, "description": "return from a call to String TpchScaledTable.getTableName()", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "String TpchScaledTable.getTableName()"}, {"tag": "name_id", "value": "com.facebook.presto.tests.tpch.TpchScaledTable.getTableName():java.lang.String.7824a0b254a3a5eff8fb80e6aa5c321f"}], "snippet": "        return tableName;", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-tests/src/main/java/com/facebook/presto/tests/tpch/TpchScaledTable.java", "methodName": "getTableName"}, {"level": 2, "filename": "presto-tests/src/main/java/com/facebook/presto/tests/tpch/TpchIndexedData.java", "line_number": 65, "column_number": -1, "description": "", "node_tags": [], "snippet": "            SchemaTableName tableName = new SchemaTableName(\"sf\" + table.getScaleFactor(), table.getTableName());", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-tests/src/main/java/com/facebook/presto/tests/tpch/TpchIndexedData.java", "methodName": "TpchIndexedData"}, {"level": 3, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/SchemaTableName.java", "line_number": 30, "column_number": -1, "description": "start of procedure SchemaTableName(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "SchemaTableName.<init>(String,String)"}, {"tag": "name_id", "value": "com.facebook.presto.spi.SchemaTableName.<init>(java.lang.String,java.lang.String).c9962834c344e9f5686de4e5e75c41cc"}], "snippet": "    public SchemaTableName(@JsonProperty(\"schema\") String schemaName, @JsonProperty(\"table\") String tableName)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-spi/src/main/java/com/facebook/presto/spi/SchemaTableName.java", "methodName": "SchemaTableName"}, {"level": 3, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/SchemaTableName.java", "line_number": 31, "column_number": -1, "description": "", "node_tags": [], "snippet": "    {", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-spi/src/main/java/com/facebook/presto/spi/SchemaTableName.java", "methodName": "SchemaTableName"}, {"level": 3, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/SchemaTableName.java", "line_number": 32, "column_number": -1, "description": "", "node_tags": [], "snippet": "        this.schemaName = checkNotEmpty(schemaName, \"schemaName\").toLowerCase(ENGLISH);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-spi/src/main/java/com/facebook/presto/spi/SchemaTableName.java", "methodName": "SchemaTableName"}, {"level": 4, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/SchemaUtil.java", "line_number": 22, "column_number": -1, "description": "start of procedure checkNotEmpty(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "String SchemaUtil.checkNotEmpty(String,String)"}, {"tag": "name_id", "value": "com.facebook.presto.spi.SchemaUtil.checkNotEmpty(java.lang.String,java.lang.String):java.lang.String.1f9a369cb3c98602848e9ee05ab37cff"}], "snippet": "    static String checkNotEmpty(String value, String name)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-spi/src/main/java/com/facebook/presto/spi/SchemaUtil.java", "methodName": "checkNotEmpty"}, {"level": 4, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/SchemaUtil.java", "line_number": 24, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "        if (value == null) {", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-spi/src/main/java/com/facebook/presto/spi/SchemaUtil.java", "methodName": "checkNotEmpty"}, {"level": 4, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/SchemaUtil.java", "line_number": 25, "column_number": -1, "description": "", "node_tags": [], "snippet": "            throw new NullPointerException(name + \" is null\");", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-spi/src/main/java/com/facebook/presto/spi/SchemaUtil.java", "methodName": "checkNotEmpty"}, {"level": 4, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/SchemaUtil.java", "line_number": 30, "column_number": -1, "description": "exception java.lang.NullPointerException", "node_tags": [{"tag": "name", "value": "java.lang.NullPointerException"}, {"tag": "kind", "value": "exception"}], "snippet": "        return value;", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-spi/src/main/java/com/facebook/presto/spi/SchemaUtil.java", "methodName": "checkNotEmpty"}, {"level": 4, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/SchemaUtil.java", "line_number": 30, "column_number": -1, "description": "return from a call to String SchemaUtil.checkNotEmpty(String,String)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "String SchemaUtil.checkNotEmpty(String,String)"}, {"tag": "name_id", "value": "com.facebook.presto.spi.SchemaUtil.checkNotEmpty(java.lang.String,java.lang.String):java.lang.String.1f9a369cb3c98602848e9ee05ab37cff"}], "snippet": "        return value;", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-spi/src/main/java/com/facebook/presto/spi/SchemaUtil.java", "methodName": "checkNotEmpty"}, {"level": 3, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/SchemaTableName.java", "line_number": 34, "column_number": -1, "description": "exception java.lang.NullPointerException", "node_tags": [{"tag": "name", "value": "java.lang.NullPointerException"}, {"tag": "kind", "value": "exception"}], "snippet": "    }", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-spi/src/main/java/com/facebook/presto/spi/SchemaTableName.java", "methodName": "SchemaTableName"}, {"level": 3, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/SchemaTableName.java", "line_number": 34, "column_number": -1, "description": "return from a call to SchemaTableName.<init>(String,String)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "SchemaTableName.<init>(String,String)"}, {"tag": "name_id", "value": "com.facebook.presto.spi.SchemaTableName.<init>(java.lang.String,java.lang.String).c9962834c344e9f5686de4e5e75c41cc"}], "snippet": "    }", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-spi/src/main/java/com/facebook/presto/spi/SchemaTableName.java", "methodName": "SchemaTableName"}, {"level": 2, "filename": "presto-tests/src/main/java/com/facebook/presto/tests/tpch/TpchIndexedData.java", "line_number": 82, "column_number": -1, "description": "exception java.lang.NullPointerException", "node_tags": [{"tag": "name", "value": "java.lang.NullPointerException"}, {"tag": "kind", "value": "exception"}], "snippet": "    }", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-tests/src/main/java/com/facebook/presto/tests/tpch/TpchIndexedData.java", "methodName": "TpchIndexedData"}, {"level": 2, "filename": "presto-tests/src/main/java/com/facebook/presto/tests/tpch/TpchIndexedData.java", "line_number": 82, "column_number": -1, "description": "return from a call to TpchIndexedData.<init>(String,TpchIndexSpec)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "TpchIndexedData.<init>(String,TpchIndexSpec)"}, {"tag": "name_id", "value": "com.facebook.presto.tests.tpch.TpchIndexedData.<init>(java.lang.String,com.facebook.presto.tests.tpc.51234327fe991c6a73abd08d92954fe7"}], "snippet": "    }", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-tests/src/main/java/com/facebook/presto/tests/tpch/TpchIndexedData.java", "methodName": "TpchIndexedData"}, {"level": 1, "filename": "presto-thrift-testing-server/src/main/java/com/facebook/presto/connector/thrift/server/ThriftIndexedTpchService.java", "line_number": 47, "column_number": -1, "description": "exception java.lang.NullPointerException", "node_tags": [{"tag": "name", "value": "java.lang.NullPointerException"}, {"tag": "kind", "value": "exception"}], "snippet": "    private final TpchIndexedData indexedData = new TpchIndexedData(\"tpchindexed\", INDEX_SPEC);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-thrift-testing-server/src/main/java/com/facebook/presto/connector/thrift/server/ThriftIndexedTpchService.java", "methodName": "ThriftIndexedTpchService"}, {"level": 1, "filename": "presto-thrift-testing-server/src/main/java/com/facebook/presto/connector/thrift/server/ThriftIndexedTpchService.java", "line_number": 47, "column_number": -1, "description": "return from a call to ThriftIndexedTpchService.<init>()", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "ThriftIndexedTpchService.<init>()"}, {"tag": "name_id", "value": "com.facebook.presto.connector.thrift.server.ThriftIndexedTpchService.<init>().d5e90624e1a01f17bad427b5ac7c0d08"}], "snippet": "    private final TpchIndexedData indexedData = new TpchIndexedData(\"tpchindexed\", INDEX_SPEC);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-thrift-testing-server/src/main/java/com/facebook/presto/connector/thrift/server/ThriftIndexedTpchService.java", "methodName": "ThriftIndexedTpchService"}], "combined_records": [{"level": 1, "filename": "presto-thrift-testing-server/src/main/java/com/facebook/presto/connector/thrift/server/ThriftIndexedTpchService.java", "line_number": 43, "column_number": -1, "description": "start of procedure ThriftIndexedTpchService()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "ThriftIndexedTpchService.<init>()"}, {"tag": "name_id", "value": "com.facebook.presto.connector.thrift.server.ThriftIndexedTpchService.<init>().d5e90624e1a01f17bad427b5ac7c0d08"}], "snippet": "41.\n42.public class ThriftIndexedTpchService\n43.>         extends ThriftTpchService\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-thrift-testing-server/src/main/java/com/facebook/presto/connector/thrift/server/ThriftIndexedTpchService.java", "methodName": "ThriftIndexedTpchService", "line_numbers": [43]}, {"level": 2, "filename": "presto-thrift-testing-server/src/main/java/com/facebook/presto/connector/thrift/server/ThriftTpchService.java", "line_number": 75, "column_number": -1, "description": "start of procedure ThriftTpchService()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "ThriftTpchService.<init>()"}, {"tag": "name_id", "value": "com.facebook.presto.connector.thrift.server.ThriftTpchService.<init>().8bc47f44d34c4ecfaed87e5d6c336fed"}], "snippet": "66.\n67.public class ThriftTpchService\n68.>         implements PrestoThriftService\n69.{\n70.    private static final int DEFAULT_NUMBER_OF_SPLITS = 3;\n71.    private static final List<String> SCHEMAS = ImmutableList.of(\"tiny\", \"sf1\");\n72.    protected static final JsonCodec<SplitInfo> SPLIT_INFO_CODEC = jsonCodec(SplitInfo.class);\n73.\n74.    private final ListeningExecutorService executor = listeningDecorator(\n75.>             newFixedThreadPool(Runtime.getRuntime().availableProcessors(), threadsNamed(\"thrift-tpch-%s\")));\n76.> \n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-thrift-testing-server/src/main/java/com/facebook/presto/connector/thrift/server/ThriftTpchService.java", "methodName": "ThriftTpchService", "line_numbers": [68, 76, 75]}, {"level": 1, "filename": "presto-thrift-testing-server/src/main/java/com/facebook/presto/connector/thrift/server/ThriftIndexedTpchService.java", "line_number": 47, "column_number": -1, "description": "", "node_tags": [], "snippet": "45.    private static final int NUMBER_OF_INDEX_SPLITS = 2;\n46.    private final TpchIndexedData indexedData = new TpchIndexedData(\"tpchindexed\", INDEX_SPEC);\n47.> \n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-thrift-testing-server/src/main/java/com/facebook/presto/connector/thrift/server/ThriftIndexedTpchService.java", "methodName": "ThriftIndexedTpchService", "line_numbers": [47]}, {"level": 2, "filename": "presto-tests/src/main/java/com/facebook/presto/tests/tpch/TpchIndexedData.java", "line_number": 58, "column_number": -1, "description": "start of procedure TpchIndexedData(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "TpchIndexedData.<init>(String,TpchIndexSpec)"}, {"tag": "name_id", "value": "com.facebook.presto.tests.tpch.TpchIndexedData.<init>(java.lang.String,com.facebook.presto.tests.tpc.51234327fe991c6a73abd08d92954fe7"}], "snippet": "51.\n52.    public TpchIndexedData(String connectorId, TpchIndexSpec tpchIndexSpec)\n53.>     {\n54.>         requireNonNull(connectorId, \"connectorId is null\");\n55.>         requireNonNull(tpchIndexSpec, \"tpchIndexSpec is null\");\n56.> \n57.        TpchMetadata tpchMetadata = new TpchMetadata(connectorId);\n58.>         TpchRecordSetProvider tpchRecordSetProvider = new TpchRecordSetProvider();\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-tests/src/main/java/com/facebook/presto/tests/tpch/TpchIndexedData.java", "methodName": "TpchIndexedData", "line_numbers": [53, 54, 55, 56, 58]}, {"level": 3, "filename": "presto-tpch/src/main/java/com/facebook/presto/tpch/TpchMetadata.java", "line_number": 108, "column_number": -1, "description": "start of procedure TpchMetadata(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "TpchMetadata.<init>(String)"}, {"tag": "name_id", "value": "com.facebook.presto.tpch.TpchMetadata.<init>(java.lang.String).ce3be13c82df83f01a63643c0e8bee2f"}], "snippet": "104.\n105.    public TpchMetadata(String connectorId)\n106.>     {\n107.        this(connectorId, TpchConnectorFactory.DEFAULT_PREDICATE_PUSHDOWN_ENABLED, ColumnNaming.SIMPLIFIED);\n108.    }\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-tpch/src/main/java/com/facebook/presto/tpch/TpchMetadata.java", "methodName": "TpchMetadata", "line_numbers": [106, 108]}, {"level": 4, "filename": "presto-tpch/src/main/java/com/facebook/presto/tpch/TpchMetadata.java", "line_number": 121, "column_number": -1, "description": "start of procedure TpchMetadata(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "TpchMetadata.<init>(String,boolean,ColumnNaming)"}, {"tag": "name_id", "value": "com.facebook.presto.tpch.TpchMetadata.<init>(java.lang.String,boolean,com.facebook.presto.tpch.Colum.8e4106473b251e26dac6c15fe710a53a"}], "snippet": "109.\n110.    public TpchMetadata(String connectorId, boolean predicatePushdownEnabled, ColumnNaming columnNaming)\n111.>     {\n112.>         ImmutableSet.Builder<String> tableNames = ImmutableSet.builder();\n113.>         for (TpchTable<?> tpchTable : TpchTable.getTables()) {\n114.>             tableNames.add(tpchTable.getTableName());\n115.        }\n116.        this.tableNames = tableNames.build();\n117.>         this.connectorId = connectorId;\n118.>         this.predicatePushdownEnabled = predicatePushdownEnabled;\n119.>         this.columnNaming = columnNaming;\n120.>         this.statisticsEstimator = createStatisticsEstimator();\n121.    }\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-tpch/src/main/java/com/facebook/presto/tpch/TpchMetadata.java", "methodName": "TpchMetadata", "line_numbers": [111, 112, 113, 114, 117, 118, 119, 120, 121]}, {"level": 5, "filename": "presto-tpch/src/main/java/com/facebook/presto/tpch/TpchMetadata.java", "line_number": 128, "column_number": -1, "description": "start of procedure createStatisticsEstimator()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "StatisticsEstimator TpchMetadata.createStatisticsEstimator()"}, {"tag": "name_id", "value": "com.facebook.presto.tpch.TpchMetadata.createStatisticsEstimator():com.facebook.presto.tpch.statistic.beec09085e4dc363c22c7ce1f6a38f9b"}], "snippet": "122.\n123.    private static StatisticsEstimator createStatisticsEstimator()\n124.>     {\n125.        ObjectMapper objectMapper = new ObjectMapper()\n126.>                 .registerModule(new Jdk8Module());\n127.>         TableStatisticsDataRepository tableStatisticsDataRepository = new TableStatisticsDataRepository(objectMapper);\n128.>         return new StatisticsEstimator(tableStatisticsDataRepository);\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-tpch/src/main/java/com/facebook/presto/tpch/TpchMetadata.java", "methodName": "createStatisticsEstimator", "line_numbers": [124, 126, 127, 128]}, {"level": 6, "filename": "presto-tpch/src/main/java/com/facebook/presto/tpch/statistics/TableStatisticsDataRepository.java", "line_number": 39, "column_number": -1, "description": "start of procedure TableStatisticsDataRepository(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "TableStatisticsDataRepository.<init>(ObjectMapper)"}, {"tag": "name_id", "value": "com.facebook.presto.tpch.statistics.TableStatisticsDataRepository.<init>(com.fasterxml.jackson.datab.5c09c205c4fe012717fcaad9a7fde35c"}], "snippet": "34.\n35.    public TableStatisticsDataRepository(ObjectMapper objectMapper)\n36.>     {\n37.>         this.objectMapper = objectMapper;\n38.    }\n39.> \n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-tpch/src/main/java/com/facebook/presto/tpch/statistics/TableStatisticsDataRepository.java", "methodName": "TableStatisticsDataRepository", "line_numbers": [36, 37, 38, 39]}, {"level": 5, "filename": "presto-tpch/src/main/java/com/facebook/presto/tpch/TpchMetadata.java", "line_number": 129, "column_number": -1, "description": "", "node_tags": [], "snippet": "127.        TableStatisticsDataRepository tableStatisticsDataRepository = new TableStatisticsDataRepository(objectMapper);\n128.        return new StatisticsEstimator(tableStatisticsDataRepository);\n129.    }\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-tpch/src/main/java/com/facebook/presto/tpch/TpchMetadata.java", "methodName": "createStatisticsEstimator", "line_numbers": [129]}, {"level": 6, "filename": "presto-tpch/src/main/java/com/facebook/presto/tpch/statistics/StatisticsEstimator.java", "line_number": 39, "column_number": -1, "description": "start of procedure StatisticsEstimator(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "StatisticsEstimator.<init>(TableStatisticsDataRepository)"}, {"tag": "name_id", "value": "com.facebook.presto.tpch.statistics.StatisticsEstimator.<init>(com.facebook.presto.tpch.statistics.T.a1f14017e14edcf48596c26dfed5e0c1"}], "snippet": "34.\n35.    public StatisticsEstimator(TableStatisticsDataRepository tableStatisticsDataRepository)\n36.>     {\n37.>         this.tableStatisticsDataRepository = tableStatisticsDataRepository;\n38.    }\n39.> \n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-tpch/src/main/java/com/facebook/presto/tpch/statistics/StatisticsEstimator.java", "methodName": "StatisticsEstimator", "line_numbers": [36, 37, 38, 39]}, {"level": 5, "filename": "presto-tpch/src/main/java/com/facebook/presto/tpch/TpchMetadata.java", "line_number": 129, "column_number": -1, "description": "return from a call to StatisticsEstimator TpchMetadata.createStatisticsEstimator()", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "StatisticsEstimator TpchMetadata.createStatisticsEstimator()"}, {"tag": "name_id", "value": "com.facebook.presto.tpch.TpchMetadata.createStatisticsEstimator():com.facebook.presto.tpch.statistic.beec09085e4dc363c22c7ce1f6a38f9b"}], "snippet": "127.        TableStatisticsDataRepository tableStatisticsDataRepository = new TableStatisticsDataRepository(objectMapper);\n128.        return new StatisticsEstimator(tableStatisticsDataRepository);\n129.    }\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-tpch/src/main/java/com/facebook/presto/tpch/TpchMetadata.java", "methodName": "createStatisticsEstimator", "line_numbers": [129]}, {"level": 4, "filename": "presto-tpch/src/main/java/com/facebook/presto/tpch/TpchMetadata.java", "line_number": 122, "column_number": -1, "description": "", "node_tags": [], "snippet": "119.        this.columnNaming = columnNaming;\n120.        this.statisticsEstimator = createStatisticsEstimator();\n121.    }\n122.> \n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-tpch/src/main/java/com/facebook/presto/tpch/TpchMetadata.java", "methodName": "TpchMetadata", "line_numbers": [121, 122]}, {"level": 3, "filename": "presto-tpch/src/main/java/com/facebook/presto/tpch/TpchMetadata.java", "line_number": 109, "column_number": -1, "description": "return from a call to TpchMetadata.<init>(String)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "TpchMetadata.<init>(String)"}, {"tag": "name_id", "value": "com.facebook.presto.tpch.TpchMetadata.<init>(java.lang.String).ce3be13c82df83f01a63643c0e8bee2f"}], "snippet": "107.        this(connectorId, TpchConnectorFactory.DEFAULT_PREDICATE_PUSHDOWN_ENABLED, ColumnNaming.SIMPLIFIED);\n108.    }\n109.> \n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-tpch/src/main/java/com/facebook/presto/tpch/TpchMetadata.java", "methodName": "TpchMetadata", "line_numbers": [109]}, {"level": 2, "filename": "presto-tests/src/main/java/com/facebook/presto/tests/tpch/TpchIndexedData.java", "line_number": 59, "column_number": -1, "description": "", "node_tags": [], "snippet": "57.        TpchMetadata tpchMetadata = new TpchMetadata(connectorId);\n58.        TpchRecordSetProvider tpchRecordSetProvider = new TpchRecordSetProvider();\n59.> \n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-tests/src/main/java/com/facebook/presto/tests/tpch/TpchIndexedData.java", "methodName": "TpchIndexedData", "line_numbers": [59]}, {"level": 3, "filename": "presto-tpch/src/main/java/com/facebook/presto/tpch/TpchRecordSetProvider.java", "line_number": 35, "column_number": -1, "description": "start of procedure TpchRecordSetProvider()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "TpchRecordSetProvider.<init>()"}, {"tag": "name_id", "value": "com.facebook.presto.tpch.TpchRecordSetProvider.<init>().7a203483a602b164adcf5761b9ab23c7"}], "snippet": "33.\n34.public class TpchRecordSetProvider\n35.>         implements ConnectorRecordSetProvider\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-tpch/src/main/java/com/facebook/presto/tpch/TpchRecordSetProvider.java", "methodName": "TpchRecordSetProvider", "line_numbers": [35, 35]}, {"level": 2, "filename": "presto-tests/src/main/java/com/facebook/presto/tests/tpch/TpchIndexedData.java", "line_number": 63, "column_number": -1, "description": "Skipping builder(): unknown method", "node_tags": [], "snippet": "59.\n60.        ImmutableMap.Builder<Set<TpchScaledColumn>, IndexedTable> indexedTablesBuilder = ImmutableMap.builder();\n61.> \n62.        Set<TpchScaledTable> tables = tpchIndexSpec.listIndexedTables();\n63.>         for (TpchScaledTable table : tables) {\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-tests/src/main/java/com/facebook/presto/tests/tpch/TpchIndexedData.java", "methodName": "TpchIndexedData", "line_numbers": [61, 63]}, {"level": 3, "filename": "presto-tests/src/main/java/com/facebook/presto/tests/tpch/TpchIndexSpec.java", "line_number": 36, "column_number": -1, "description": "start of procedure listIndexedTables()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "Set TpchIndexSpec.listIndexedTables()"}, {"tag": "name_id", "value": "com.facebook.presto.tests.tpch.TpchIndexSpec.listIndexedTables():java.util.Set.8eb75b53d31c36c8552bb6eb3a791434"}], "snippet": "32.\n33.    public Set<TpchScaledTable> listIndexedTables()\n34.>     {\n35.        return spec.keySet();\n36.    }\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-tests/src/main/java/com/facebook/presto/tests/tpch/TpchIndexSpec.java", "methodName": "listIndexedTables", "line_numbers": [34, 36]}, {"level": 2, "filename": "presto-tests/src/main/java/com/facebook/presto/tests/tpch/TpchIndexedData.java", "line_number": 65, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "62.        Set<TpchScaledTable> tables = tpchIndexSpec.listIndexedTables();\n63.        for (TpchScaledTable table : tables) {\n64.>             SchemaTableName tableName = new SchemaTableName(\"sf\" + table.getScaleFactor(), table.getTableName());\n65.>             TpchTableHandle tableHandle = tpchMetadata.getTableHandle(null, tableName);\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-tests/src/main/java/com/facebook/presto/tests/tpch/TpchIndexedData.java", "methodName": "TpchIndexedData", "line_numbers": [64, 65]}, {"level": 3, "filename": "presto-tests/src/main/java/com/facebook/presto/tests/tpch/TpchScaledTable.java", "line_number": 38, "column_number": -1, "description": "start of procedure getScaleFactor()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "double TpchScaledTable.getScaleFactor()"}, {"tag": "name_id", "value": "com.facebook.presto.tests.tpch.TpchScaledTable.getScaleFactor():double.cef5a9c33d58acd9b3cd8fcb114b8acf"}], "snippet": "34.\n35.    public double getScaleFactor()\n36.>     {\n37.        return scaleFactor;\n38.    }\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-tests/src/main/java/com/facebook/presto/tests/tpch/TpchScaledTable.java", "methodName": "getScaleFactor", "line_numbers": [36, 38]}, {"level": 2, "filename": "presto-tests/src/main/java/com/facebook/presto/tests/tpch/TpchIndexedData.java", "line_number": 65, "column_number": -1, "description": "", "node_tags": [], "snippet": "63.        for (TpchScaledTable table : tables) {\n64.            SchemaTableName tableName = new SchemaTableName(\"sf\" + table.getScaleFactor(), table.getTableName());\n65.>             TpchTableHandle tableHandle = tpchMetadata.getTableHandle(null, tableName);\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-tests/src/main/java/com/facebook/presto/tests/tpch/TpchIndexedData.java", "methodName": "TpchIndexedData", "line_numbers": [65]}, {"level": 3, "filename": "presto-tests/src/main/java/com/facebook/presto/tests/tpch/TpchScaledTable.java", "line_number": 33, "column_number": -1, "description": "start of procedure getTableName()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "String TpchScaledTable.getTableName()"}, {"tag": "name_id", "value": "com.facebook.presto.tests.tpch.TpchScaledTable.getTableName():java.lang.String.7824a0b254a3a5eff8fb80e6aa5c321f"}], "snippet": "29.\n30.    public String getTableName()\n31.>     {\n32.        return tableName;\n33.    }\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-tests/src/main/java/com/facebook/presto/tests/tpch/TpchScaledTable.java", "methodName": "getTableName", "line_numbers": [31, 33]}, {"level": 2, "filename": "presto-tests/src/main/java/com/facebook/presto/tests/tpch/TpchIndexedData.java", "line_number": 65, "column_number": -1, "description": "", "node_tags": [], "snippet": "63.        for (TpchScaledTable table : tables) {\n64.            SchemaTableName tableName = new SchemaTableName(\"sf\" + table.getScaleFactor(), table.getTableName());\n65.>             TpchTableHandle tableHandle = tpchMetadata.getTableHandle(null, tableName);\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-tests/src/main/java/com/facebook/presto/tests/tpch/TpchIndexedData.java", "methodName": "TpchIndexedData", "line_numbers": [65]}, {"level": 3, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/SchemaTableName.java", "line_number": 32, "column_number": -1, "description": "start of procedure SchemaTableName(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "SchemaTableName.<init>(String,String)"}, {"tag": "name_id", "value": "com.facebook.presto.spi.SchemaTableName.<init>(java.lang.String,java.lang.String).c9962834c344e9f5686de4e5e75c41cc"}], "snippet": "28.    @JsonCreator\n29.    public SchemaTableName(@JsonProperty(\"schema\") String schemaName, @JsonProperty(\"table\") String tableName)\n30.>     {\n31.>         this.schemaName = checkNotEmpty(schemaName, \"schemaName\").toLowerCase(ENGLISH);\n32.>         this.tableName = checkNotEmpty(tableName, \"tableName\").toLowerCase(ENGLISH);\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-spi/src/main/java/com/facebook/presto/spi/SchemaTableName.java", "methodName": "SchemaTableName", "line_numbers": [30, 31, 32]}, {"level": 4, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/SchemaUtil.java", "line_number": 30, "column_number": -1, "description": "start of procedure checkNotEmpty(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "String SchemaUtil.checkNotEmpty(String,String)"}, {"tag": "name_id", "value": "com.facebook.presto.spi.SchemaUtil.checkNotEmpty(java.lang.String,java.lang.String):java.lang.String.1f9a369cb3c98602848e9ee05ab37cff"}], "snippet": "20.\n21.    static String checkNotEmpty(String value, String name)\n22.>     {\n23.        if (value == null) {\n24.>             throw new NullPointerException(name + \" is null\");\n25.        }\n26.        if (value.isEmpty()) {\n27.            throw new IllegalArgumentException(name + \" is empty\");\n28.        }\n29.        return value;\n30.    }\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-spi/src/main/java/com/facebook/presto/spi/SchemaUtil.java", "methodName": "checkNotEmpty", "line_numbers": [22, 24, 25, 30, 30]}, {"level": 3, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/SchemaTableName.java", "line_number": 34, "column_number": -1, "description": "exception java.lang.NullPointerException", "node_tags": [{"tag": "name", "value": "java.lang.NullPointerException"}, {"tag": "kind", "value": "exception"}], "snippet": "32.        this.tableName = checkNotEmpty(tableName, \"tableName\").toLowerCase(ENGLISH);\n33.    }\n34.> \n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-spi/src/main/java/com/facebook/presto/spi/SchemaTableName.java", "methodName": "SchemaTableName", "line_numbers": [34, 34]}, {"level": 2, "filename": "presto-tests/src/main/java/com/facebook/presto/tests/tpch/TpchIndexedData.java", "line_number": 82, "column_number": -1, "description": "exception java.lang.NullPointerException", "node_tags": [{"tag": "name", "value": "java.lang.NullPointerException"}, {"tag": "kind", "value": "exception"}], "snippet": "80.        indexedTables = indexedTablesBuilder.build();\n81.    }\n82.> \n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-tests/src/main/java/com/facebook/presto/tests/tpch/TpchIndexedData.java", "methodName": "TpchIndexedData", "line_numbers": [82, 82]}, {"level": 1, "filename": "presto-thrift-testing-server/src/main/java/com/facebook/presto/connector/thrift/server/ThriftIndexedTpchService.java", "line_number": 47, "column_number": -1, "description": "exception java.lang.NullPointerException", "node_tags": [{"tag": "name", "value": "java.lang.NullPointerException"}, {"tag": "kind", "value": "exception"}], "snippet": "45.    private static final int NUMBER_OF_INDEX_SPLITS = 2;\n46.    private final TpchIndexedData indexedData = new TpchIndexedData(\"tpchindexed\", INDEX_SPEC);\n47.> \n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-thrift-testing-server/src/main/java/com/facebook/presto/connector/thrift/server/ThriftIndexedTpchService.java", "methodName": "ThriftIndexedTpchService", "line_numbers": [47, 47]}], "infer_explore": [{"level": 0, "filename": "presto-thrift-connector/src/test/java/com/facebook/presto/connector/thrift/integration/ThriftQueryRunner.java", "line_number": 86, "column_number": -1, "description": "start of procedure startThriftServers(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "List ThriftQueryRunner.startThriftServers(int,boolean)"}, {"tag": "name_id", "value": "com.facebook.presto.connector.thrift.integration.ThriftQueryRunner.startThriftServers(int,boolean):j.edad611a0bc81b6c04911cedd43dbae1"}], "snippet": "83.     }\n84. \n85. >     private static List<ThriftServer> startThriftServers(int thriftServers, boolean enableIndexJoin)\n86.     {\n87.         List<ThriftServer> servers = new ArrayList<>(thriftServers);\n"}, {"level": 0, "filename": "presto-thrift-connector/src/test/java/com/facebook/presto/connector/thrift/integration/ThriftQueryRunner.java", "line_number": 88, "column_number": -1, "description": "Skipping ArrayList(...): unknown method", "node_tags": [], "snippet": "85.     private static List<ThriftServer> startThriftServers(int thriftServers, boolean enableIndexJoin)\n86.     {\n87. >         List<ThriftServer> servers = new ArrayList<>(thriftServers);\n88.         for (int i = 0; i < thriftServers; i++) {\n89.             ThriftTpchService service = enableIndexJoin ? new ThriftIndexedTpchService() : new ThriftTpchService();\n"}, {"level": 0, "filename": "presto-thrift-connector/src/test/java/com/facebook/presto/connector/thrift/integration/ThriftQueryRunner.java", "line_number": 89, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "86.     {\n87.         List<ThriftServer> servers = new ArrayList<>(thriftServers);\n88. >         for (int i = 0; i < thriftServers; i++) {\n89.             ThriftTpchService service = enableIndexJoin ? new ThriftIndexedTpchService() : new ThriftTpchService();\n90.             ThriftServiceProcessor processor = new ThriftServiceProcessor(new ThriftCodecManager(), ImmutableList.of(), service);\n"}, {"level": 0, "filename": "presto-thrift-connector/src/test/java/com/facebook/presto/connector/thrift/integration/ThriftQueryRunner.java", "line_number": 90, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "87.         List<ThriftServer> servers = new ArrayList<>(thriftServers);\n88.         for (int i = 0; i < thriftServers; i++) {\n89. >             ThriftTpchService service = enableIndexJoin ? new ThriftIndexedTpchService() : new ThriftTpchService();\n90.             ThriftServiceProcessor processor = new ThriftServiceProcessor(new ThriftCodecManager(), ImmutableList.of(), service);\n91.             servers.add(new ThriftServer(processor).start());\n"}, {"level": 1, "filename": "presto-thrift-testing-server/src/main/java/com/facebook/presto/connector/thrift/server/ThriftIndexedTpchService.java", "line_number": 43, "column_number": -1, "description": "start of procedure ThriftIndexedTpchService()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "ThriftIndexedTpchService.<init>()"}, {"tag": "name_id", "value": "com.facebook.presto.connector.thrift.server.ThriftIndexedTpchService.<init>().d5e90624e1a01f17bad427b5ac7c0d08"}], "snippet": "40. import static com.google.common.base.Preconditions.checkArgument;\n41. \n42. > public class ThriftIndexedTpchService\n43.         extends ThriftTpchService\n44. {\n"}, {"level": 2, "filename": "presto-thrift-testing-server/src/main/java/com/facebook/presto/connector/thrift/server/ThriftTpchService.java", "line_number": 68, "column_number": -1, "description": "start of procedure ThriftTpchService()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "ThriftTpchService.<init>()"}, {"tag": "name_id", "value": "com.facebook.presto.connector.thrift.server.ThriftTpchService.<init>().8bc47f44d34c4ecfaed87e5d6c336fed"}], "snippet": "65. import static java.util.stream.Collectors.toList;\n66. \n67. > public class ThriftTpchService\n68.         implements PrestoThriftService\n69. {\n"}, {"level": 2, "filename": "presto-thrift-testing-server/src/main/java/com/facebook/presto/connector/thrift/server/ThriftTpchService.java", "line_number": 76, "column_number": -1, "description": "Skipping newFixedThreadPool(...): unknown method", "node_tags": [], "snippet": "73. \n74.     private final ListeningExecutorService executor = listeningDecorator(\n75. >             newFixedThreadPool(Runtime.getRuntime().availableProcessors(), threadsNamed(\"thrift-tpch-%s\")));\n76. \n77.     @Override\n"}, {"level": 2, "filename": "presto-thrift-testing-server/src/main/java/com/facebook/presto/connector/thrift/server/ThriftTpchService.java", "line_number": 75, "column_number": -1, "description": "return from a call to ThriftTpchService.<init>()", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "ThriftTpchService.<init>()"}, {"tag": "name_id", "value": "com.facebook.presto.connector.thrift.server.ThriftTpchService.<init>().8bc47f44d34c4ecfaed87e5d6c336fed"}], "snippet": "72.     protected static final JsonCodec<SplitInfo> SPLIT_INFO_CODEC = jsonCodec(SplitInfo.class);\n73. \n74. >     private final ListeningExecutorService executor = listeningDecorator(\n75.             newFixedThreadPool(Runtime.getRuntime().availableProcessors(), threadsNamed(\"thrift-tpch-%s\")));\n76. \n"}, {"level": 1, "filename": "presto-thrift-testing-server/src/main/java/com/facebook/presto/connector/thrift/server/ThriftIndexedTpchService.java", "line_number": 47, "column_number": -1, "description": "", "node_tags": [], "snippet": "44. {\n45.     private static final int NUMBER_OF_INDEX_SPLITS = 2;\n46. >     private final TpchIndexedData indexedData = new TpchIndexedData(\"tpchindexed\", INDEX_SPEC);\n47. \n48.     @Override\n"}, {"level": 2, "filename": "presto-tests/src/main/java/com/facebook/presto/tests/tpch/TpchIndexedData.java", "line_number": 53, "column_number": -1, "description": "start of procedure TpchIndexedData(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "TpchIndexedData.<init>(String,TpchIndexSpec)"}, {"tag": "name_id", "value": "com.facebook.presto.tests.tpch.TpchIndexedData.<init>(java.lang.String,com.facebook.presto.tests.tpc.51234327fe991c6a73abd08d92954fe7"}], "snippet": "50.     private final Map<Set<TpchScaledColumn>, IndexedTable> indexedTables;\n51. \n52. >     public TpchIndexedData(String connectorId, TpchIndexSpec tpchIndexSpec)\n53.     {\n54.         requireNonNull(connectorId, \"connectorId is null\");\n"}, {"level": 2, "filename": "presto-tests/src/main/java/com/facebook/presto/tests/tpch/TpchIndexedData.java", "line_number": 54, "column_number": -1, "description": "", "node_tags": [], "snippet": "51. \n52.     public TpchIndexedData(String connectorId, TpchIndexSpec tpchIndexSpec)\n53. >     {\n54.         requireNonNull(connectorId, \"connectorId is null\");\n55.         requireNonNull(tpchIndexSpec, \"tpchIndexSpec is null\");\n"}, {"level": 2, "filename": "presto-tests/src/main/java/com/facebook/presto/tests/tpch/TpchIndexedData.java", "line_number": 55, "column_number": -1, "description": "Skipping requireNonNull(...): unknown method", "node_tags": [], "snippet": "52.     public TpchIndexedData(String connectorId, TpchIndexSpec tpchIndexSpec)\n53.     {\n54. >         requireNonNull(connectorId, \"connectorId is null\");\n55.         requireNonNull(tpchIndexSpec, \"tpchIndexSpec is null\");\n56. \n"}, {"level": 2, "filename": "presto-tests/src/main/java/com/facebook/presto/tests/tpch/TpchIndexedData.java", "line_number": 56, "column_number": -1, "description": "Skipping requireNonNull(...): unknown method", "node_tags": [], "snippet": "53.     {\n54.         requireNonNull(connectorId, \"connectorId is null\");\n55. >         requireNonNull(tpchIndexSpec, \"tpchIndexSpec is null\");\n56. \n57.         TpchMetadata tpchMetadata = new TpchMetadata(connectorId);\n"}, {"level": 2, "filename": "presto-tests/src/main/java/com/facebook/presto/tests/tpch/TpchIndexedData.java", "line_number": 58, "column_number": -1, "description": "", "node_tags": [], "snippet": "55.         requireNonNull(tpchIndexSpec, \"tpchIndexSpec is null\");\n56. \n57. >         TpchMetadata tpchMetadata = new TpchMetadata(connectorId);\n58.         TpchRecordSetProvider tpchRecordSetProvider = new TpchRecordSetProvider();\n59. \n"}, {"level": 3, "filename": "presto-tpch/src/main/java/com/facebook/presto/tpch/TpchMetadata.java", "line_number": 106, "column_number": -1, "description": "start of procedure TpchMetadata(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "TpchMetadata.<init>(String)"}, {"tag": "name_id", "value": "com.facebook.presto.tpch.TpchMetadata.<init>(java.lang.String).ce3be13c82df83f01a63643c0e8bee2f"}], "snippet": "103.     private final StatisticsEstimator statisticsEstimator;\n104. \n105. >     public TpchMetadata(String connectorId)\n106.     {\n107.         this(connectorId, TpchConnectorFactory.DEFAULT_PREDICATE_PUSHDOWN_ENABLED, ColumnNaming.SIMPLIFIED);\n"}, {"level": 3, "filename": "presto-tpch/src/main/java/com/facebook/presto/tpch/TpchMetadata.java", "line_number": 108, "column_number": -1, "description": "", "node_tags": [], "snippet": "105.     public TpchMetadata(String connectorId)\n106.     {\n107. >         this(connectorId, TpchConnectorFactory.DEFAULT_PREDICATE_PUSHDOWN_ENABLED, ColumnNaming.SIMPLIFIED);\n108.     }\n109. \n"}, {"level": 4, "filename": "presto-tpch/src/main/java/com/facebook/presto/tpch/TpchMetadata.java", "line_number": 111, "column_number": -1, "description": "start of procedure TpchMetadata(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "TpchMetadata.<init>(String,boolean,ColumnNaming)"}, {"tag": "name_id", "value": "com.facebook.presto.tpch.TpchMetadata.<init>(java.lang.String,boolean,com.facebook.presto.tpch.Colum.8e4106473b251e26dac6c15fe710a53a"}], "snippet": "108.     }\n109. \n110. >     public TpchMetadata(String connectorId, boolean predicatePushdownEnabled, ColumnNaming columnNaming)\n111.     {\n112.         ImmutableSet.Builder<String> tableNames = ImmutableSet.builder();\n"}, {"level": 4, "filename": "presto-tpch/src/main/java/com/facebook/presto/tpch/TpchMetadata.java", "line_number": 112, "column_number": -1, "description": "", "node_tags": [], "snippet": "109. \n110.     public TpchMetadata(String connectorId, boolean predicatePushdownEnabled, ColumnNaming columnNaming)\n111. >     {\n112.         ImmutableSet.Builder<String> tableNames = ImmutableSet.builder();\n113.         for (TpchTable<?> tpchTable : TpchTable.getTables()) {\n"}, {"level": 4, "filename": "presto-tpch/src/main/java/com/facebook/presto/tpch/TpchMetadata.java", "line_number": 113, "column_number": -1, "description": "Skipping builder(): unknown method", "node_tags": [], "snippet": "110.     public TpchMetadata(String connectorId, boolean predicatePushdownEnabled, ColumnNaming columnNaming)\n111.     {\n112. >         ImmutableSet.Builder<String> tableNames = ImmutableSet.builder();\n113.         for (TpchTable<?> tpchTable : TpchTable.getTables()) {\n114.             tableNames.add(tpchTable.getTableName());\n"}, {"level": 4, "filename": "presto-tpch/src/main/java/com/facebook/presto/tpch/TpchMetadata.java", "line_number": 114, "column_number": -1, "description": "Taking false branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "false"}], "snippet": "111.     {\n112.         ImmutableSet.Builder<String> tableNames = ImmutableSet.builder();\n113. >         for (TpchTable<?> tpchTable : TpchTable.getTables()) {\n114.             tableNames.add(tpchTable.getTableName());\n115.         }\n"}, {"level": 4, "filename": "presto-tpch/src/main/java/com/facebook/presto/tpch/TpchMetadata.java", "line_number": 117, "column_number": -1, "description": "", "node_tags": [], "snippet": "114.             tableNames.add(tpchTable.getTableName());\n115.         }\n116. >         this.tableNames = tableNames.build();\n117.         this.connectorId = connectorId;\n118.         this.predicatePushdownEnabled = predicatePushdownEnabled;\n"}, {"level": 4, "filename": "presto-tpch/src/main/java/com/facebook/presto/tpch/TpchMetadata.java", "line_number": 118, "column_number": -1, "description": "", "node_tags": [], "snippet": "115.         }\n116.         this.tableNames = tableNames.build();\n117. >         this.connectorId = connectorId;\n118.         this.predicatePushdownEnabled = predicatePushdownEnabled;\n119.         this.columnNaming = columnNaming;\n"}, {"level": 4, "filename": "presto-tpch/src/main/java/com/facebook/presto/tpch/TpchMetadata.java", "line_number": 119, "column_number": -1, "description": "", "node_tags": [], "snippet": "116.         this.tableNames = tableNames.build();\n117.         this.connectorId = connectorId;\n118. >         this.predicatePushdownEnabled = predicatePushdownEnabled;\n119.         this.columnNaming = columnNaming;\n120.         this.statisticsEstimator = createStatisticsEstimator();\n"}, {"level": 4, "filename": "presto-tpch/src/main/java/com/facebook/presto/tpch/TpchMetadata.java", "line_number": 120, "column_number": -1, "description": "", "node_tags": [], "snippet": "117.         this.connectorId = connectorId;\n118.         this.predicatePushdownEnabled = predicatePushdownEnabled;\n119. >         this.columnNaming = columnNaming;\n120.         this.statisticsEstimator = createStatisticsEstimator();\n121.     }\n"}, {"level": 4, "filename": "presto-tpch/src/main/java/com/facebook/presto/tpch/TpchMetadata.java", "line_number": 121, "column_number": -1, "description": "", "node_tags": [], "snippet": "118.         this.predicatePushdownEnabled = predicatePushdownEnabled;\n119.         this.columnNaming = columnNaming;\n120. >         this.statisticsEstimator = createStatisticsEstimator();\n121.     }\n122. \n"}, {"level": 5, "filename": "presto-tpch/src/main/java/com/facebook/presto/tpch/TpchMetadata.java", "line_number": 124, "column_number": -1, "description": "start of procedure createStatisticsEstimator()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "StatisticsEstimator TpchMetadata.createStatisticsEstimator()"}, {"tag": "name_id", "value": "com.facebook.presto.tpch.TpchMetadata.createStatisticsEstimator():com.facebook.presto.tpch.statistic.beec09085e4dc363c22c7ce1f6a38f9b"}], "snippet": "121.     }\n122. \n123. >     private static StatisticsEstimator createStatisticsEstimator()\n124.     {\n125.         ObjectMapper objectMapper = new ObjectMapper()\n"}, {"level": 5, "filename": "presto-tpch/src/main/java/com/facebook/presto/tpch/TpchMetadata.java", "line_number": 126, "column_number": -1, "description": "Skipping Jdk8Module(): unknown method", "node_tags": [], "snippet": "123.     private static StatisticsEstimator createStatisticsEstimator()\n124.     {\n125. >         ObjectMapper objectMapper = new ObjectMapper()\n126.                 .registerModule(new Jdk8Module());\n127.         TableStatisticsDataRepository tableStatisticsDataRepository = new TableStatisticsDataRepository(objectMapper);\n"}, {"level": 5, "filename": "presto-tpch/src/main/java/com/facebook/presto/tpch/TpchMetadata.java", "line_number": 127, "column_number": -1, "description": "Skipping registerModule(...): unknown method", "node_tags": [], "snippet": "124.     {\n125.         ObjectMapper objectMapper = new ObjectMapper()\n126. >                 .registerModule(new Jdk8Module());\n127.         TableStatisticsDataRepository tableStatisticsDataRepository = new TableStatisticsDataRepository(objectMapper);\n128.         return new StatisticsEstimator(tableStatisticsDataRepository);\n"}, {"level": 5, "filename": "presto-tpch/src/main/java/com/facebook/presto/tpch/TpchMetadata.java", "line_number": 128, "column_number": -1, "description": "", "node_tags": [], "snippet": "125.         ObjectMapper objectMapper = new ObjectMapper()\n126.                 .registerModule(new Jdk8Module());\n127. >         TableStatisticsDataRepository tableStatisticsDataRepository = new TableStatisticsDataRepository(objectMapper);\n128.         return new StatisticsEstimator(tableStatisticsDataRepository);\n129.     }\n"}, {"level": 6, "filename": "presto-tpch/src/main/java/com/facebook/presto/tpch/statistics/TableStatisticsDataRepository.java", "line_number": 36, "column_number": -1, "description": "start of procedure TableStatisticsDataRepository(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "TableStatisticsDataRepository.<init>(ObjectMapper)"}, {"tag": "name_id", "value": "com.facebook.presto.tpch.statistics.TableStatisticsDataRepository.<init>(com.fasterxml.jackson.datab.5c09c205c4fe012717fcaad9a7fde35c"}], "snippet": "33.     private final ObjectMapper objectMapper;\n34. \n35. >     public TableStatisticsDataRepository(ObjectMapper objectMapper)\n36.     {\n37.         this.objectMapper = objectMapper;\n"}, {"level": 6, "filename": "presto-tpch/src/main/java/com/facebook/presto/tpch/statistics/TableStatisticsDataRepository.java", "line_number": 37, "column_number": -1, "description": "", "node_tags": [], "snippet": "34. \n35.     public TableStatisticsDataRepository(ObjectMapper objectMapper)\n36. >     {\n37.         this.objectMapper = objectMapper;\n38.     }\n"}, {"level": 6, "filename": "presto-tpch/src/main/java/com/facebook/presto/tpch/statistics/TableStatisticsDataRepository.java", "line_number": 38, "column_number": -1, "description": "", "node_tags": [], "snippet": "35.     public TableStatisticsDataRepository(ObjectMapper objectMapper)\n36.     {\n37. >         this.objectMapper = objectMapper;\n38.     }\n39. \n"}, {"level": 6, "filename": "presto-tpch/src/main/java/com/facebook/presto/tpch/statistics/TableStatisticsDataRepository.java", "line_number": 39, "column_number": -1, "description": "return from a call to TableStatisticsDataRepository.<init>(ObjectMapper)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "TableStatisticsDataRepository.<init>(ObjectMapper)"}, {"tag": "name_id", "value": "com.facebook.presto.tpch.statistics.TableStatisticsDataRepository.<init>(com.fasterxml.jackson.datab.5c09c205c4fe012717fcaad9a7fde35c"}], "snippet": "36.     {\n37.         this.objectMapper = objectMapper;\n38. >     }\n39. \n40.     public void save(\n"}, {"level": 5, "filename": "presto-tpch/src/main/java/com/facebook/presto/tpch/TpchMetadata.java", "line_number": 129, "column_number": -1, "description": "", "node_tags": [], "snippet": "126.                 .registerModule(new Jdk8Module());\n127.         TableStatisticsDataRepository tableStatisticsDataRepository = new TableStatisticsDataRepository(objectMapper);\n128. >         return new StatisticsEstimator(tableStatisticsDataRepository);\n129.     }\n130. \n"}, {"level": 6, "filename": "presto-tpch/src/main/java/com/facebook/presto/tpch/statistics/StatisticsEstimator.java", "line_number": 36, "column_number": -1, "description": "start of procedure StatisticsEstimator(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "StatisticsEstimator.<init>(TableStatisticsDataRepository)"}, {"tag": "name_id", "value": "com.facebook.presto.tpch.statistics.StatisticsEstimator.<init>(com.facebook.presto.tpch.statistics.T.a1f14017e14edcf48596c26dfed5e0c1"}], "snippet": "33.     private final TableStatisticsDataRepository tableStatisticsDataRepository;\n34. \n35. >     public StatisticsEstimator(TableStatisticsDataRepository tableStatisticsDataRepository)\n36.     {\n37.         this.tableStatisticsDataRepository = tableStatisticsDataRepository;\n"}, {"level": 6, "filename": "presto-tpch/src/main/java/com/facebook/presto/tpch/statistics/StatisticsEstimator.java", "line_number": 37, "column_number": -1, "description": "", "node_tags": [], "snippet": "34. \n35.     public StatisticsEstimator(TableStatisticsDataRepository tableStatisticsDataRepository)\n36. >     {\n37.         this.tableStatisticsDataRepository = tableStatisticsDataRepository;\n38.     }\n"}, {"level": 6, "filename": "presto-tpch/src/main/java/com/facebook/presto/tpch/statistics/StatisticsEstimator.java", "line_number": 38, "column_number": -1, "description": "", "node_tags": [], "snippet": "35.     public StatisticsEstimator(TableStatisticsDataRepository tableStatisticsDataRepository)\n36.     {\n37. >         this.tableStatisticsDataRepository = tableStatisticsDataRepository;\n38.     }\n39. \n"}, {"level": 6, "filename": "presto-tpch/src/main/java/com/facebook/presto/tpch/statistics/StatisticsEstimator.java", "line_number": 39, "column_number": -1, "description": "return from a call to StatisticsEstimator.<init>(TableStatisticsDataRepository)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "StatisticsEstimator.<init>(TableStatisticsDataRepository)"}, {"tag": "name_id", "value": "com.facebook.presto.tpch.statistics.StatisticsEstimator.<init>(com.facebook.presto.tpch.statistics.T.a1f14017e14edcf48596c26dfed5e0c1"}], "snippet": "36.     {\n37.         this.tableStatisticsDataRepository = tableStatisticsDataRepository;\n38. >     }\n39. \n40.     public Optional<TableStatisticsData> estimateStats(TpchTable<?> tpchTable, Map<TpchColumn<?>, List<Object>> columnValuesRestrictions, double scaleFactor)\n"}, {"level": 5, "filename": "presto-tpch/src/main/java/com/facebook/presto/tpch/TpchMetadata.java", "line_number": 129, "column_number": -1, "description": "return from a call to StatisticsEstimator TpchMetadata.createStatisticsEstimator()", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "StatisticsEstimator TpchMetadata.createStatisticsEstimator()"}, {"tag": "name_id", "value": "com.facebook.presto.tpch.TpchMetadata.createStatisticsEstimator():com.facebook.presto.tpch.statistic.beec09085e4dc363c22c7ce1f6a38f9b"}], "snippet": "126.                 .registerModule(new Jdk8Module());\n127.         TableStatisticsDataRepository tableStatisticsDataRepository = new TableStatisticsDataRepository(objectMapper);\n128. >         return new StatisticsEstimator(tableStatisticsDataRepository);\n129.     }\n130. \n"}, {"level": 4, "filename": "presto-tpch/src/main/java/com/facebook/presto/tpch/TpchMetadata.java", "line_number": 121, "column_number": -1, "description": "", "node_tags": [], "snippet": "118.         this.predicatePushdownEnabled = predicatePushdownEnabled;\n119.         this.columnNaming = columnNaming;\n120. >         this.statisticsEstimator = createStatisticsEstimator();\n121.     }\n122. \n"}, {"level": 4, "filename": "presto-tpch/src/main/java/com/facebook/presto/tpch/TpchMetadata.java", "line_number": 122, "column_number": -1, "description": "return from a call to TpchMetadata.<init>(String,boolean,ColumnNaming)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "TpchMetadata.<init>(String,boolean,ColumnNaming)"}, {"tag": "name_id", "value": "com.facebook.presto.tpch.TpchMetadata.<init>(java.lang.String,boolean,com.facebook.presto.tpch.Colum.8e4106473b251e26dac6c15fe710a53a"}], "snippet": "119.         this.columnNaming = columnNaming;\n120.         this.statisticsEstimator = createStatisticsEstimator();\n121. >     }\n122. \n123.     private static StatisticsEstimator createStatisticsEstimator()\n"}, {"level": 3, "filename": "presto-tpch/src/main/java/com/facebook/presto/tpch/TpchMetadata.java", "line_number": 109, "column_number": -1, "description": "return from a call to TpchMetadata.<init>(String)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "TpchMetadata.<init>(String)"}, {"tag": "name_id", "value": "com.facebook.presto.tpch.TpchMetadata.<init>(java.lang.String).ce3be13c82df83f01a63643c0e8bee2f"}], "snippet": "106.     {\n107.         this(connectorId, TpchConnectorFactory.DEFAULT_PREDICATE_PUSHDOWN_ENABLED, ColumnNaming.SIMPLIFIED);\n108. >     }\n109. \n110.     public TpchMetadata(String connectorId, boolean predicatePushdownEnabled, ColumnNaming columnNaming)\n"}, {"level": 2, "filename": "presto-tests/src/main/java/com/facebook/presto/tests/tpch/TpchIndexedData.java", "line_number": 59, "column_number": -1, "description": "", "node_tags": [], "snippet": "56. \n57.         TpchMetadata tpchMetadata = new TpchMetadata(connectorId);\n58. >         TpchRecordSetProvider tpchRecordSetProvider = new TpchRecordSetProvider();\n59. \n60.         ImmutableMap.Builder<Set<TpchScaledColumn>, IndexedTable> indexedTablesBuilder = ImmutableMap.builder();\n"}, {"level": 3, "filename": "presto-tpch/src/main/java/com/facebook/presto/tpch/TpchRecordSetProvider.java", "line_number": 35, "column_number": -1, "description": "start of procedure TpchRecordSetProvider()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "TpchRecordSetProvider.<init>()"}, {"tag": "name_id", "value": "com.facebook.presto.tpch.TpchRecordSetProvider.<init>().7a203483a602b164adcf5761b9ab23c7"}], "snippet": "32. import static io.airlift.tpch.TpchColumnTypes.IDENTIFIER;\n33. \n34. > public class TpchRecordSetProvider\n35.         implements ConnectorRecordSetProvider\n36. {\n"}, {"level": 3, "filename": "presto-tpch/src/main/java/com/facebook/presto/tpch/TpchRecordSetProvider.java", "line_number": 35, "column_number": -1, "description": "return from a call to TpchRecordSetProvider.<init>()", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "TpchRecordSetProvider.<init>()"}, {"tag": "name_id", "value": "com.facebook.presto.tpch.TpchRecordSetProvider.<init>().7a203483a602b164adcf5761b9ab23c7"}], "snippet": "32. import static io.airlift.tpch.TpchColumnTypes.IDENTIFIER;\n33. \n34. > public class TpchRecordSetProvider\n35.         implements ConnectorRecordSetProvider\n36. {\n"}, {"level": 2, "filename": "presto-tests/src/main/java/com/facebook/presto/tests/tpch/TpchIndexedData.java", "line_number": 61, "column_number": -1, "description": "Skipping builder(): unknown method", "node_tags": [], "snippet": "58.         TpchRecordSetProvider tpchRecordSetProvider = new TpchRecordSetProvider();\n59. \n60. >         ImmutableMap.Builder<Set<TpchScaledColumn>, IndexedTable> indexedTablesBuilder = ImmutableMap.builder();\n61. \n62.         Set<TpchScaledTable> tables = tpchIndexSpec.listIndexedTables();\n"}, {"level": 2, "filename": "presto-tests/src/main/java/com/facebook/presto/tests/tpch/TpchIndexedData.java", "line_number": 63, "column_number": -1, "description": "", "node_tags": [], "snippet": "60.         ImmutableMap.Builder<Set<TpchScaledColumn>, IndexedTable> indexedTablesBuilder = ImmutableMap.builder();\n61. \n62. >         Set<TpchScaledTable> tables = tpchIndexSpec.listIndexedTables();\n63.         for (TpchScaledTable table : tables) {\n64.             SchemaTableName tableName = new SchemaTableName(\"sf\" + table.getScaleFactor(), table.getTableName());\n"}, {"level": 3, "filename": "presto-tests/src/main/java/com/facebook/presto/tests/tpch/TpchIndexSpec.java", "line_number": 34, "column_number": -1, "description": "start of procedure listIndexedTables()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "Set TpchIndexSpec.listIndexedTables()"}, {"tag": "name_id", "value": "com.facebook.presto.tests.tpch.TpchIndexSpec.listIndexedTables():java.util.Set.8eb75b53d31c36c8552bb6eb3a791434"}], "snippet": "31.     }\n32. \n33. >     public Set<TpchScaledTable> listIndexedTables()\n34.     {\n35.         return spec.keySet();\n"}, {"level": 3, "filename": "presto-tests/src/main/java/com/facebook/presto/tests/tpch/TpchIndexSpec.java", "line_number": 36, "column_number": -1, "description": "return from a call to Set TpchIndexSpec.listIndexedTables()", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "Set TpchIndexSpec.listIndexedTables()"}, {"tag": "name_id", "value": "com.facebook.presto.tests.tpch.TpchIndexSpec.listIndexedTables():java.util.Set.8eb75b53d31c36c8552bb6eb3a791434"}], "snippet": "33.     public Set<TpchScaledTable> listIndexedTables()\n34.     {\n35. >         return spec.keySet();\n36.     }\n37. \n"}, {"level": 2, "filename": "presto-tests/src/main/java/com/facebook/presto/tests/tpch/TpchIndexedData.java", "line_number": 64, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "61. \n62.         Set<TpchScaledTable> tables = tpchIndexSpec.listIndexedTables();\n63. >         for (TpchScaledTable table : tables) {\n64.             SchemaTableName tableName = new SchemaTableName(\"sf\" + table.getScaleFactor(), table.getTableName());\n65.             TpchTableHandle tableHandle = tpchMetadata.getTableHandle(null, tableName);\n"}, {"level": 2, "filename": "presto-tests/src/main/java/com/facebook/presto/tests/tpch/TpchIndexedData.java", "line_number": 65, "column_number": -1, "description": "", "node_tags": [], "snippet": "62.         Set<TpchScaledTable> tables = tpchIndexSpec.listIndexedTables();\n63.         for (TpchScaledTable table : tables) {\n64. >             SchemaTableName tableName = new SchemaTableName(\"sf\" + table.getScaleFactor(), table.getTableName());\n65.             TpchTableHandle tableHandle = tpchMetadata.getTableHandle(null, tableName);\n66.             Map<String, ColumnHandle> columnHandles = new LinkedHashMap<>(tpchMetadata.getColumnHandles(null, tableHandle));\n"}, {"level": 3, "filename": "presto-tests/src/main/java/com/facebook/presto/tests/tpch/TpchScaledTable.java", "line_number": 36, "column_number": -1, "description": "start of procedure getScaleFactor()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "double TpchScaledTable.getScaleFactor()"}, {"tag": "name_id", "value": "com.facebook.presto.tests.tpch.TpchScaledTable.getScaleFactor():double.cef5a9c33d58acd9b3cd8fcb114b8acf"}], "snippet": "33.     }\n34. \n35. >     public double getScaleFactor()\n36.     {\n37.         return scaleFactor;\n"}, {"level": 3, "filename": "presto-tests/src/main/java/com/facebook/presto/tests/tpch/TpchScaledTable.java", "line_number": 38, "column_number": -1, "description": "return from a call to double TpchScaledTable.getScaleFactor()", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "double TpchScaledTable.getScaleFactor()"}, {"tag": "name_id", "value": "com.facebook.presto.tests.tpch.TpchScaledTable.getScaleFactor():double.cef5a9c33d58acd9b3cd8fcb114b8acf"}], "snippet": "35.     public double getScaleFactor()\n36.     {\n37. >         return scaleFactor;\n38.     }\n39. \n"}, {"level": 2, "filename": "presto-tests/src/main/java/com/facebook/presto/tests/tpch/TpchIndexedData.java", "line_number": 65, "column_number": -1, "description": "", "node_tags": [], "snippet": "62.         Set<TpchScaledTable> tables = tpchIndexSpec.listIndexedTables();\n63.         for (TpchScaledTable table : tables) {\n64. >             SchemaTableName tableName = new SchemaTableName(\"sf\" + table.getScaleFactor(), table.getTableName());\n65.             TpchTableHandle tableHandle = tpchMetadata.getTableHandle(null, tableName);\n66.             Map<String, ColumnHandle> columnHandles = new LinkedHashMap<>(tpchMetadata.getColumnHandles(null, tableHandle));\n"}, {"level": 3, "filename": "presto-tests/src/main/java/com/facebook/presto/tests/tpch/TpchScaledTable.java", "line_number": 31, "column_number": -1, "description": "start of procedure getTableName()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "String TpchScaledTable.getTableName()"}, {"tag": "name_id", "value": "com.facebook.presto.tests.tpch.TpchScaledTable.getTableName():java.lang.String.7824a0b254a3a5eff8fb80e6aa5c321f"}], "snippet": "28.     }\n29. \n30. >     public String getTableName()\n31.     {\n32.         return tableName;\n"}, {"level": 3, "filename": "presto-tests/src/main/java/com/facebook/presto/tests/tpch/TpchScaledTable.java", "line_number": 33, "column_number": -1, "description": "return from a call to String TpchScaledTable.getTableName()", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "String TpchScaledTable.getTableName()"}, {"tag": "name_id", "value": "com.facebook.presto.tests.tpch.TpchScaledTable.getTableName():java.lang.String.7824a0b254a3a5eff8fb80e6aa5c321f"}], "snippet": "30.     public String getTableName()\n31.     {\n32. >         return tableName;\n33.     }\n34. \n"}, {"level": 2, "filename": "presto-tests/src/main/java/com/facebook/presto/tests/tpch/TpchIndexedData.java", "line_number": 65, "column_number": -1, "description": "", "node_tags": [], "snippet": "62.         Set<TpchScaledTable> tables = tpchIndexSpec.listIndexedTables();\n63.         for (TpchScaledTable table : tables) {\n64. >             SchemaTableName tableName = new SchemaTableName(\"sf\" + table.getScaleFactor(), table.getTableName());\n65.             TpchTableHandle tableHandle = tpchMetadata.getTableHandle(null, tableName);\n66.             Map<String, ColumnHandle> columnHandles = new LinkedHashMap<>(tpchMetadata.getColumnHandles(null, tableHandle));\n"}, {"level": 3, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/SchemaTableName.java", "line_number": 30, "column_number": -1, "description": "start of procedure SchemaTableName(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "SchemaTableName.<init>(String,String)"}, {"tag": "name_id", "value": "com.facebook.presto.spi.SchemaTableName.<init>(java.lang.String,java.lang.String).c9962834c344e9f5686de4e5e75c41cc"}], "snippet": "27. \n28.     @JsonCreator\n29. >     public SchemaTableName(@JsonProperty(\"schema\") String schemaName, @JsonProperty(\"table\") String tableName)\n30.     {\n31.         this.schemaName = checkNotEmpty(schemaName, \"schemaName\").toLowerCase(ENGLISH);\n"}, {"level": 3, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/SchemaTableName.java", "line_number": 31, "column_number": -1, "description": "", "node_tags": [], "snippet": "28.     @JsonCreator\n29.     public SchemaTableName(@JsonProperty(\"schema\") String schemaName, @JsonProperty(\"table\") String tableName)\n30. >     {\n31.         this.schemaName = checkNotEmpty(schemaName, \"schemaName\").toLowerCase(ENGLISH);\n32.         this.tableName = checkNotEmpty(tableName, \"tableName\").toLowerCase(ENGLISH);\n"}, {"level": 3, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/SchemaTableName.java", "line_number": 32, "column_number": -1, "description": "", "node_tags": [], "snippet": "29.     public SchemaTableName(@JsonProperty(\"schema\") String schemaName, @JsonProperty(\"table\") String tableName)\n30.     {\n31. >         this.schemaName = checkNotEmpty(schemaName, \"schemaName\").toLowerCase(ENGLISH);\n32.         this.tableName = checkNotEmpty(tableName, \"tableName\").toLowerCase(ENGLISH);\n33.     }\n"}, {"level": 4, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/SchemaUtil.java", "line_number": 22, "column_number": -1, "description": "start of procedure checkNotEmpty(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "String SchemaUtil.checkNotEmpty(String,String)"}, {"tag": "name_id", "value": "com.facebook.presto.spi.SchemaUtil.checkNotEmpty(java.lang.String,java.lang.String):java.lang.String.1f9a369cb3c98602848e9ee05ab37cff"}], "snippet": "19.     }\n20. \n21. >     static String checkNotEmpty(String value, String name)\n22.     {\n23.         if (value == null) {\n"}, {"level": 4, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/SchemaUtil.java", "line_number": 24, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "21.     static String checkNotEmpty(String value, String name)\n22.     {\n23. >         if (value == null) {\n24.             throw new NullPointerException(name + \" is null\");\n25.         }\n"}, {"level": 4, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/SchemaUtil.java", "line_number": 25, "column_number": -1, "description": "", "node_tags": [], "snippet": "22.     {\n23.         if (value == null) {\n24. >             throw new NullPointerException(name + \" is null\");\n25.         }\n26.         if (value.isEmpty()) {\n"}, {"level": 4, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/SchemaUtil.java", "line_number": 30, "column_number": -1, "description": "exception java.lang.NullPointerException", "node_tags": [{"tag": "name", "value": "java.lang.NullPointerException"}, {"tag": "kind", "value": "exception"}], "snippet": "27.             throw new IllegalArgumentException(name + \" is empty\");\n28.         }\n29. >         return value;\n30.     }\n31. }\n"}, {"level": 4, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/SchemaUtil.java", "line_number": 30, "column_number": -1, "description": "return from a call to String SchemaUtil.checkNotEmpty(String,String)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "String SchemaUtil.checkNotEmpty(String,String)"}, {"tag": "name_id", "value": "com.facebook.presto.spi.SchemaUtil.checkNotEmpty(java.lang.String,java.lang.String):java.lang.String.1f9a369cb3c98602848e9ee05ab37cff"}], "snippet": "27.             throw new IllegalArgumentException(name + \" is empty\");\n28.         }\n29. >         return value;\n30.     }\n31. }\n"}, {"level": 3, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/SchemaTableName.java", "line_number": 34, "column_number": -1, "description": "exception java.lang.NullPointerException", "node_tags": [{"tag": "name", "value": "java.lang.NullPointerException"}, {"tag": "kind", "value": "exception"}], "snippet": "31.         this.schemaName = checkNotEmpty(schemaName, \"schemaName\").toLowerCase(ENGLISH);\n32.         this.tableName = checkNotEmpty(tableName, \"tableName\").toLowerCase(ENGLISH);\n33. >     }\n34. \n35.     @JsonProperty(\"schema\")\n"}, {"level": 3, "filename": "presto-spi/src/main/java/com/facebook/presto/spi/SchemaTableName.java", "line_number": 34, "column_number": -1, "description": "return from a call to SchemaTableName.<init>(String,String)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "SchemaTableName.<init>(String,String)"}, {"tag": "name_id", "value": "com.facebook.presto.spi.SchemaTableName.<init>(java.lang.String,java.lang.String).c9962834c344e9f5686de4e5e75c41cc"}], "snippet": "31.         this.schemaName = checkNotEmpty(schemaName, \"schemaName\").toLowerCase(ENGLISH);\n32.         this.tableName = checkNotEmpty(tableName, \"tableName\").toLowerCase(ENGLISH);\n33. >     }\n34. \n35.     @JsonProperty(\"schema\")\n"}, {"level": 2, "filename": "presto-tests/src/main/java/com/facebook/presto/tests/tpch/TpchIndexedData.java", "line_number": 82, "column_number": -1, "description": "exception java.lang.NullPointerException", "node_tags": [{"tag": "name", "value": "java.lang.NullPointerException"}, {"tag": "kind", "value": "exception"}], "snippet": "79. \n80.         indexedTables = indexedTablesBuilder.build();\n81. >     }\n82. \n83.     public Optional<IndexedTable> getIndexedTable(String tableName, double scaleFactor, Set<String> indexColumnNames)\n"}, {"level": 2, "filename": "presto-tests/src/main/java/com/facebook/presto/tests/tpch/TpchIndexedData.java", "line_number": 82, "column_number": -1, "description": "return from a call to TpchIndexedData.<init>(String,TpchIndexSpec)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "TpchIndexedData.<init>(String,TpchIndexSpec)"}, {"tag": "name_id", "value": "com.facebook.presto.tests.tpch.TpchIndexedData.<init>(java.lang.String,com.facebook.presto.tests.tpc.51234327fe991c6a73abd08d92954fe7"}], "snippet": "79. \n80.         indexedTables = indexedTablesBuilder.build();\n81. >     }\n82. \n83.     public Optional<IndexedTable> getIndexedTable(String tableName, double scaleFactor, Set<String> indexColumnNames)\n"}, {"level": 1, "filename": "presto-thrift-testing-server/src/main/java/com/facebook/presto/connector/thrift/server/ThriftIndexedTpchService.java", "line_number": 47, "column_number": -1, "description": "exception java.lang.NullPointerException", "node_tags": [{"tag": "name", "value": "java.lang.NullPointerException"}, {"tag": "kind", "value": "exception"}], "snippet": "44. {\n45.     private static final int NUMBER_OF_INDEX_SPLITS = 2;\n46. >     private final TpchIndexedData indexedData = new TpchIndexedData(\"tpchindexed\", INDEX_SPEC);\n47. \n48.     @Override\n"}, {"level": 1, "filename": "presto-thrift-testing-server/src/main/java/com/facebook/presto/connector/thrift/server/ThriftIndexedTpchService.java", "line_number": 47, "column_number": -1, "description": "return from a call to ThriftIndexedTpchService.<init>()", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "ThriftIndexedTpchService.<init>()"}, {"tag": "name_id", "value": "com.facebook.presto.connector.thrift.server.ThriftIndexedTpchService.<init>().d5e90624e1a01f17bad427b5ac7c0d08"}], "snippet": "44. {\n45.     private static final int NUMBER_OF_INDEX_SPLITS = 2;\n46. >     private final TpchIndexedData indexedData = new TpchIndexedData(\"tpchindexed\", INDEX_SPEC);\n47. \n48.     @Override\n"}]}, {"url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/operator/index/IndexLookupSourceFactory.java", "rawCode": "/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage com.facebook.presto.operator.index;\n\nimport com.facebook.presto.operator.LookupSourceFactory;\nimport com.facebook.presto.operator.LookupSourceProvider;\nimport com.facebook.presto.operator.OuterPositionIterator;\nimport com.facebook.presto.operator.PagesIndex;\nimport com.facebook.presto.operator.StaticLookupSourceProvider;\nimport com.facebook.presto.operator.TaskContext;\nimport com.facebook.presto.spi.type.Type;\nimport com.facebook.presto.sql.gen.JoinCompiler;\nimport com.facebook.presto.sql.planner.Symbol;\nimport com.google.common.collect.ImmutableList;\nimport com.google.common.collect.ImmutableMap;\nimport com.google.common.util.concurrent.Futures;\nimport com.google.common.util.concurrent.ListenableFuture;\nimport io.airlift.units.DataSize;\n\nimport java.util.List;\nimport java.util.Map;\nimport java.util.OptionalInt;\nimport java.util.Set;\nimport java.util.function.Supplier;\n\nimport static com.google.common.base.Preconditions.checkState;\nimport static java.util.Objects.requireNonNull;\n\npublic class IndexLookupSourceFactory\n        implements LookupSourceFactory\n{\n    private final List<Type> outputTypes;\n    private final Map<Symbol, Integer> layout;\n    private final Supplier<IndexLoader> indexLoaderSupplier;\n    private TaskContext taskContext;\n\n    public IndexLookupSourceFactory(\n            Set<Integer> lookupSourceInputChannels,\n            List<Integer> keyOutputChannels,\n            OptionalInt keyOutputHashChannel,\n            List<Type> outputTypes,\n            Map<Symbol, Integer> layout,\n            IndexBuildDriverFactoryProvider indexBuildDriverFactoryProvider,\n            DataSize maxIndexMemorySize,\n            IndexJoinLookupStats stats,\n            boolean shareIndexLoading,\n            PagesIndex.Factory pagesIndexFactory,\n            JoinCompiler joinCompiler)\n    {\n        this.outputTypes = ImmutableList.copyOf(requireNonNull(outputTypes, \"outputTypes is null\"));\n        this.layout = ImmutableMap.copyOf(requireNonNull(layout, \"layout is null\"));\n\n        if (shareIndexLoading) {\n            IndexLoader shared = new IndexLoader(lookupSourceInputChannels, keyOutputChannels, keyOutputHashChannel, outputTypes, indexBuildDriverFactoryProvider, 10_000, maxIndexMemorySize, stats, pagesIndexFactory, joinCompiler);\n            this.indexLoaderSupplier = () -> shared;\n        }\n        else {\n            this.indexLoaderSupplier = () -> new IndexLoader(lookupSourceInputChannels, keyOutputChannels, keyOutputHashChannel, outputTypes, indexBuildDriverFactoryProvider, 10_000, maxIndexMemorySize, stats, pagesIndexFactory, joinCompiler);\n        }\n    }\n\n    @Override\n    public List<Type> getTypes()\n    {\n        return outputTypes;\n    }\n\n    @Override\n    public List<Type> getOutputTypes()\n    {\n        return outputTypes;\n    }\n\n    @Override\n    public Map<Symbol, Integer> getLayout()\n    {\n        return layout;\n    }\n\n    @Override\n    public void setTaskContext(TaskContext taskContext)\n    {\n        this.taskContext = taskContext;\n    }\n\n    @Override\n    public ListenableFuture<LookupSourceProvider> createLookupSourceProvider()\n    {\n        checkState(taskContext != null, \"taskContext not set\");\n\n        IndexLoader indexLoader = indexLoaderSupplier.get();\n        indexLoader.setContext(taskContext);\n        return Futures.immediateFuture(new StaticLookupSourceProvider(new IndexLookupSource(indexLoader)));\n    }\n\n    @Override\n    public int partitions()\n    {\n        throw new UnsupportedOperationException();\n    }\n\n    @Override\n    public OuterPositionIterator getOuterPositionIterator()\n    {\n        throw new UnsupportedOperationException();\n    }\n\n    @Override\n    public void destroy()\n    {\n        // nothing to do\n    }\n}\n", "methodName": "ListenableFuture IndexLookupSourceFactory.createLookupSourceProvider()", "exampleID": 50, "dataset": "infer", "filepath": "presto-main/src/main/java/com/facebook/presto/operator/index/IndexLookupSourceFactory.java", "source": "com.facebook.presto.operator.index.IndexLookupSource", "sourceLine": 104, "qualifier": "Resource of type $$com.facebook.presto.operator.index.IndexLookupSource/$ acquired by call to @@new()/@ is not released", "steps": [{"line": 26, "source": "com.facebook.presto.operator.index.IndexLookupSource", "filepath": "presto-main/src/main/java/com/facebook/presto/operator/StaticLookupSourceProvider.java", "methodName": "StaticLookupSourceProvider.StaticLookupSourceProvider", "exampleID": 51}], "line_number": 104, "records": [{"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/operator/index/IndexLookupSource.java", "line_number": 34, "column_number": -1, "description": "start of procedure IndexLookupSource(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "IndexLookupSource.<init>(IndexLoader)"}, {"tag": "name_id", "value": "com.facebook.presto.operator.index.IndexLookupSource.<init>(com.facebook.presto.operator.index.Index.c36717667407f9c34d50f584a8daa42f"}], "snippet": "    public IndexLookupSource(IndexLoader indexLoader)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/operator/index/IndexLookupSource.java", "methodName": "IndexLookupSource"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/operator/index/IndexLookupSource.java", "line_number": 35, "column_number": -1, "description": "", "node_tags": [], "snippet": "    {", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/operator/index/IndexLookupSource.java", "methodName": "IndexLookupSource"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/operator/index/IndexLookupSource.java", "line_number": 36, "column_number": -1, "description": "", "node_tags": [], "snippet": "        this.indexLoader = requireNonNull(indexLoader, \"indexLoader is null\");", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/operator/index/IndexLookupSource.java", "methodName": "IndexLookupSource"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/operator/index/IndexLookupSource.java", "line_number": 37, "column_number": -1, "description": "", "node_tags": [], "snippet": "        this.indexedData = indexLoader.getIndexSnapshot();", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/operator/index/IndexLookupSource.java", "methodName": "IndexLookupSource"}, {"level": 2, "filename": "presto-main/src/main/java/com/facebook/presto/operator/index/IndexLoader.java", "line_number": 150, "column_number": -1, "description": "start of procedure getIndexSnapshot()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "IndexSnapshot IndexLoader.getIndexSnapshot()"}, {"tag": "name_id", "value": "com.facebook.presto.operator.index.IndexLoader.getIndexSnapshot():com.facebook.presto.operator.index.fe7027eb0a64a2cf3491d8f4ec2fa141"}], "snippet": "    public IndexSnapshot getIndexSnapshot()", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/operator/index/IndexLoader.java", "methodName": "getIndexSnapshot"}, {"level": 2, "filename": "presto-main/src/main/java/com/facebook/presto/operator/index/IndexLoader.java", "line_number": 152, "column_number": -1, "description": "return from a call to IndexSnapshot IndexLoader.getIndexSnapshot()", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "IndexSnapshot IndexLoader.getIndexSnapshot()"}, {"tag": "name_id", "value": "com.facebook.presto.operator.index.IndexLoader.getIndexSnapshot():com.facebook.presto.operator.index.fe7027eb0a64a2cf3491d8f4ec2fa141"}], "snippet": "        return indexSnapshotReference.get();", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/operator/index/IndexLoader.java", "methodName": "getIndexSnapshot"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/operator/index/IndexLookupSource.java", "line_number": 37, "column_number": -1, "description": "", "node_tags": [], "snippet": "        this.indexedData = indexLoader.getIndexSnapshot();", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/operator/index/IndexLookupSource.java", "methodName": "IndexLookupSource"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/operator/index/IndexLookupSource.java", "line_number": 38, "column_number": -1, "description": "return from a call to IndexLookupSource.<init>(IndexLoader)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "IndexLookupSource.<init>(IndexLoader)"}, {"tag": "name_id", "value": "com.facebook.presto.operator.index.IndexLookupSource.<init>(com.facebook.presto.operator.index.Index.c36717667407f9c34d50f584a8daa42f"}], "snippet": "    }", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/operator/index/IndexLookupSource.java", "methodName": "IndexLookupSource"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/operator/StaticLookupSourceProvider.java", "line_number": 26, "column_number": -1, "description": "start of procedure StaticLookupSourceProvider(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "StaticLookupSourceProvider.<init>(IndexLookupSource)"}, {"tag": "name_id", "value": "com.facebook.presto.operator.StaticLookupSourceProvider.<init>(com.facebook.presto.operator.index.In.097a7ac675d743131ef532cc6f86ba9a"}], "snippet": "    public StaticLookupSourceProvider(LookupSource lookupSource)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/operator/StaticLookupSourceProvider.java", "methodName": "StaticLookupSourceProvider"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/operator/StaticLookupSourceProvider.java", "line_number": 27, "column_number": -1, "description": "", "node_tags": [], "snippet": "    {", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/operator/StaticLookupSourceProvider.java", "methodName": "StaticLookupSourceProvider"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/operator/StaticLookupSourceProvider.java", "line_number": 28, "column_number": -1, "description": "", "node_tags": [], "snippet": "        this.lookupSource = requireNonNull(lookupSource, \"lookupSource is null\");", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/operator/StaticLookupSourceProvider.java", "methodName": "StaticLookupSourceProvider"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/operator/StaticLookupSourceProvider.java", "line_number": 29, "column_number": -1, "description": "return from a call to StaticLookupSourceProvider.<init>(IndexLookupSource)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "StaticLookupSourceProvider.<init>(IndexLookupSource)"}, {"tag": "name_id", "value": "com.facebook.presto.operator.StaticLookupSourceProvider.<init>(com.facebook.presto.operator.index.In.097a7ac675d743131ef532cc6f86ba9a"}], "snippet": "    }", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/operator/StaticLookupSourceProvider.java", "methodName": "StaticLookupSourceProvider"}], "combined_records": [{"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/operator/index/IndexLookupSource.java", "line_number": 37, "column_number": -1, "description": "start of procedure IndexLookupSource(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "IndexLookupSource.<init>(IndexLoader)"}, {"tag": "name_id", "value": "com.facebook.presto.operator.index.IndexLookupSource.<init>(com.facebook.presto.operator.index.Index.c36717667407f9c34d50f584a8daa42f"}], "snippet": "32.\n33.    public IndexLookupSource(IndexLoader indexLoader)\n34.>     {\n35.>         this.indexLoader = requireNonNull(indexLoader, \"indexLoader is null\");\n36.>         this.indexedData = indexLoader.getIndexSnapshot();\n37.    }\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/operator/index/IndexLookupSource.java", "methodName": "IndexLookupSource", "line_numbers": [34, 35, 36, 37]}, {"level": 2, "filename": "presto-main/src/main/java/com/facebook/presto/operator/index/IndexLoader.java", "line_number": 152, "column_number": -1, "description": "start of procedure getIndexSnapshot()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "IndexSnapshot IndexLoader.getIndexSnapshot()"}, {"tag": "name_id", "value": "com.facebook.presto.operator.index.IndexLoader.getIndexSnapshot():com.facebook.presto.operator.index.fe7027eb0a64a2cf3491d8f4ec2fa141"}], "snippet": "148.\n149.    public IndexSnapshot getIndexSnapshot()\n150.>     {\n151.        return indexSnapshotReference.get();\n152.    }\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/operator/index/IndexLoader.java", "methodName": "getIndexSnapshot", "line_numbers": [150, 152]}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/operator/index/IndexLookupSource.java", "line_number": 38, "column_number": -1, "description": "", "node_tags": [], "snippet": "35.        this.indexLoader = requireNonNull(indexLoader, \"indexLoader is null\");\n36.        this.indexedData = indexLoader.getIndexSnapshot();\n37.    }\n38.> \n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/operator/index/IndexLookupSource.java", "methodName": "IndexLookupSource", "line_numbers": [37, 38]}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/operator/StaticLookupSourceProvider.java", "line_number": 29, "column_number": -1, "description": "start of procedure StaticLookupSourceProvider(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "StaticLookupSourceProvider.<init>(IndexLookupSource)"}, {"tag": "name_id", "value": "com.facebook.presto.operator.StaticLookupSourceProvider.<init>(com.facebook.presto.operator.index.In.097a7ac675d743131ef532cc6f86ba9a"}], "snippet": "24.\n25.    public StaticLookupSourceProvider(LookupSource lookupSource)\n26.>     {\n27.>         this.lookupSource = requireNonNull(lookupSource, \"lookupSource is null\");\n28.    }\n29.> \n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/operator/StaticLookupSourceProvider.java", "methodName": "StaticLookupSourceProvider", "line_numbers": [26, 27, 28, 29]}], "infer_explore": [{"level": 0, "filename": "presto-main/src/main/java/com/facebook/presto/operator/index/IndexLookupSourceFactory.java", "line_number": 98, "column_number": -1, "description": "start of procedure createLookupSourceProvider()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "ListenableFuture IndexLookupSourceFactory.createLookupSourceProvider()"}, {"tag": "name_id", "value": "com.facebook.presto.operator.index.IndexLookupSourceFactory.createLookupSourceProvider():com.google..0c92843ee6fcfea9886a0861eb8ac001"}], "snippet": "95. \n96.     @Override\n97. >     public ListenableFuture<LookupSourceProvider> createLookupSourceProvider()\n98.     {\n99.         checkState(taskContext != null, \"taskContext not set\");\n"}, {"level": 0, "filename": "presto-main/src/main/java/com/facebook/presto/operator/index/IndexLookupSourceFactory.java", "line_number": 100, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "97.     public ListenableFuture<LookupSourceProvider> createLookupSourceProvider()\n98.     {\n99. >         checkState(taskContext != null, \"taskContext not set\");\n100. \n101.         IndexLoader indexLoader = indexLoaderSupplier.get();\n"}, {"level": 0, "filename": "presto-main/src/main/java/com/facebook/presto/operator/index/IndexLookupSourceFactory.java", "line_number": 102, "column_number": -1, "description": "", "node_tags": [], "snippet": "99.         checkState(taskContext != null, \"taskContext not set\");\n100. \n101. >         IndexLoader indexLoader = indexLoaderSupplier.get();\n102.         indexLoader.setContext(taskContext);\n103.         return Futures.immediateFuture(new StaticLookupSourceProvider(new IndexLookupSource(indexLoader)));\n"}, {"level": 0, "filename": "presto-main/src/main/java/com/facebook/presto/operator/index/IndexLookupSourceFactory.java", "line_number": 103, "column_number": -1, "description": "", "node_tags": [], "snippet": "100. \n101.         IndexLoader indexLoader = indexLoaderSupplier.get();\n102. >         indexLoader.setContext(taskContext);\n103.         return Futures.immediateFuture(new StaticLookupSourceProvider(new IndexLookupSource(indexLoader)));\n104.     }\n"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/operator/index/IndexLoader.java", "line_number": 135, "column_number": -1, "description": "start of procedure setContext(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void IndexLoader.setContext(TaskContext)"}, {"tag": "name_id", "value": "com.facebook.presto.operator.index.IndexLoader.setContext(com.facebook.presto.operator.TaskContext):.38a89a3ecc24538342d44e20e7059be4"}], "snippet": "132. \n133.     // This is a ghetto way to acquire a TaskContext at runtime (unavailable at planning)\n134. >     public void setContext(TaskContext taskContext)\n135.     {\n136.         taskContextReference.compareAndSet(null, taskContext);\n"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/operator/index/IndexLoader.java", "line_number": 137, "column_number": -1, "description": "Skipping compareAndSet(...): unknown method", "node_tags": [], "snippet": "134.     public void setContext(TaskContext taskContext)\n135.     {\n136. >         taskContextReference.compareAndSet(null, taskContext);\n137.     }\n138. \n"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/operator/index/IndexLoader.java", "line_number": 138, "column_number": -1, "description": "return from a call to void IndexLoader.setContext(TaskContext)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "void IndexLoader.setContext(TaskContext)"}, {"tag": "name_id", "value": "com.facebook.presto.operator.index.IndexLoader.setContext(com.facebook.presto.operator.TaskContext):.38a89a3ecc24538342d44e20e7059be4"}], "snippet": "135.     {\n136.         taskContextReference.compareAndSet(null, taskContext);\n137. >     }\n138. \n139.     public int getChannelCount()\n"}, {"level": 0, "filename": "presto-main/src/main/java/com/facebook/presto/operator/index/IndexLookupSourceFactory.java", "line_number": 104, "column_number": -1, "description": "", "node_tags": [], "snippet": "101.         IndexLoader indexLoader = indexLoaderSupplier.get();\n102.         indexLoader.setContext(taskContext);\n103. >         return Futures.immediateFuture(new StaticLookupSourceProvider(new IndexLookupSource(indexLoader)));\n104.     }\n105. \n"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/operator/index/IndexLookupSource.java", "line_number": 34, "column_number": -1, "description": "start of procedure IndexLookupSource(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "IndexLookupSource.<init>(IndexLoader)"}, {"tag": "name_id", "value": "com.facebook.presto.operator.index.IndexLookupSource.<init>(com.facebook.presto.operator.index.Index.c36717667407f9c34d50f584a8daa42f"}], "snippet": "31.     private IndexedData indexedData;\n32. \n33. >     public IndexLookupSource(IndexLoader indexLoader)\n34.     {\n35.         this.indexLoader = requireNonNull(indexLoader, \"indexLoader is null\");\n"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/operator/index/IndexLookupSource.java", "line_number": 35, "column_number": -1, "description": "", "node_tags": [], "snippet": "32. \n33.     public IndexLookupSource(IndexLoader indexLoader)\n34. >     {\n35.         this.indexLoader = requireNonNull(indexLoader, \"indexLoader is null\");\n36.         this.indexedData = indexLoader.getIndexSnapshot();\n"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/operator/index/IndexLookupSource.java", "line_number": 36, "column_number": -1, "description": "", "node_tags": [], "snippet": "33.     public IndexLookupSource(IndexLoader indexLoader)\n34.     {\n35. >         this.indexLoader = requireNonNull(indexLoader, \"indexLoader is null\");\n36.         this.indexedData = indexLoader.getIndexSnapshot();\n37.     }\n"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/operator/index/IndexLookupSource.java", "line_number": 37, "column_number": -1, "description": "", "node_tags": [], "snippet": "34.     {\n35.         this.indexLoader = requireNonNull(indexLoader, \"indexLoader is null\");\n36. >         this.indexedData = indexLoader.getIndexSnapshot();\n37.     }\n38. \n"}, {"level": 2, "filename": "presto-main/src/main/java/com/facebook/presto/operator/index/IndexLoader.java", "line_number": 150, "column_number": -1, "description": "start of procedure getIndexSnapshot()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "IndexSnapshot IndexLoader.getIndexSnapshot()"}, {"tag": "name_id", "value": "com.facebook.presto.operator.index.IndexLoader.getIndexSnapshot():com.facebook.presto.operator.index.fe7027eb0a64a2cf3491d8f4ec2fa141"}], "snippet": "147.     }\n148. \n149. >     public IndexSnapshot getIndexSnapshot()\n150.     {\n151.         return indexSnapshotReference.get();\n"}, {"level": 2, "filename": "presto-main/src/main/java/com/facebook/presto/operator/index/IndexLoader.java", "line_number": 152, "column_number": -1, "description": "return from a call to IndexSnapshot IndexLoader.getIndexSnapshot()", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "IndexSnapshot IndexLoader.getIndexSnapshot()"}, {"tag": "name_id", "value": "com.facebook.presto.operator.index.IndexLoader.getIndexSnapshot():com.facebook.presto.operator.index.fe7027eb0a64a2cf3491d8f4ec2fa141"}], "snippet": "149.     public IndexSnapshot getIndexSnapshot()\n150.     {\n151. >         return indexSnapshotReference.get();\n152.     }\n153. \n"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/operator/index/IndexLookupSource.java", "line_number": 37, "column_number": -1, "description": "", "node_tags": [], "snippet": "34.     {\n35.         this.indexLoader = requireNonNull(indexLoader, \"indexLoader is null\");\n36. >         this.indexedData = indexLoader.getIndexSnapshot();\n37.     }\n38. \n"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/operator/index/IndexLookupSource.java", "line_number": 38, "column_number": -1, "description": "return from a call to IndexLookupSource.<init>(IndexLoader)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "IndexLookupSource.<init>(IndexLoader)"}, {"tag": "name_id", "value": "com.facebook.presto.operator.index.IndexLookupSource.<init>(com.facebook.presto.operator.index.Index.c36717667407f9c34d50f584a8daa42f"}], "snippet": "35.         this.indexLoader = requireNonNull(indexLoader, \"indexLoader is null\");\n36.         this.indexedData = indexLoader.getIndexSnapshot();\n37. >     }\n38. \n39.     @Override\n"}, {"level": 0, "filename": "presto-main/src/main/java/com/facebook/presto/operator/index/IndexLookupSourceFactory.java", "line_number": 104, "column_number": -1, "description": "", "node_tags": [], "snippet": "101.         IndexLoader indexLoader = indexLoaderSupplier.get();\n102.         indexLoader.setContext(taskContext);\n103. >         return Futures.immediateFuture(new StaticLookupSourceProvider(new IndexLookupSource(indexLoader)));\n104.     }\n105. \n"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/operator/StaticLookupSourceProvider.java", "line_number": 26, "column_number": -1, "description": "start of procedure StaticLookupSourceProvider(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "StaticLookupSourceProvider.<init>(IndexLookupSource)"}, {"tag": "name_id", "value": "com.facebook.presto.operator.StaticLookupSourceProvider.<init>(com.facebook.presto.operator.index.In.097a7ac675d743131ef532cc6f86ba9a"}], "snippet": "23.     private final LookupSource lookupSource;\n24. \n25. >     public StaticLookupSourceProvider(LookupSource lookupSource)\n26.     {\n27.         this.lookupSource = requireNonNull(lookupSource, \"lookupSource is null\");\n"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/operator/StaticLookupSourceProvider.java", "line_number": 27, "column_number": -1, "description": "", "node_tags": [], "snippet": "24. \n25.     public StaticLookupSourceProvider(LookupSource lookupSource)\n26. >     {\n27.         this.lookupSource = requireNonNull(lookupSource, \"lookupSource is null\");\n28.     }\n"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/operator/StaticLookupSourceProvider.java", "line_number": 28, "column_number": -1, "description": "", "node_tags": [], "snippet": "25.     public StaticLookupSourceProvider(LookupSource lookupSource)\n26.     {\n27. >         this.lookupSource = requireNonNull(lookupSource, \"lookupSource is null\");\n28.     }\n29. \n"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/operator/StaticLookupSourceProvider.java", "line_number": 29, "column_number": -1, "description": "return from a call to StaticLookupSourceProvider.<init>(IndexLookupSource)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "StaticLookupSourceProvider.<init>(IndexLookupSource)"}, {"tag": "name_id", "value": "com.facebook.presto.operator.StaticLookupSourceProvider.<init>(com.facebook.presto.operator.index.In.097a7ac675d743131ef532cc6f86ba9a"}], "snippet": "26.     {\n27.         this.lookupSource = requireNonNull(lookupSource, \"lookupSource is null\");\n28. >     }\n29. \n30.     @Override\n"}]}, {"url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/util/JsonUtil.java", "rawCode": "/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage com.facebook.presto.util;\n\nimport com.facebook.presto.spi.ConnectorSession;\nimport com.facebook.presto.spi.PrestoException;\nimport com.facebook.presto.spi.block.Block;\nimport com.facebook.presto.spi.block.BlockBuilder;\nimport com.facebook.presto.spi.block.SingleRowBlockWriter;\nimport com.facebook.presto.spi.type.ArrayType;\nimport com.facebook.presto.spi.type.DecimalType;\nimport com.facebook.presto.spi.type.Decimals;\nimport com.facebook.presto.spi.type.MapType;\nimport com.facebook.presto.spi.type.RowType;\nimport com.facebook.presto.spi.type.RowType.RowField;\nimport com.facebook.presto.spi.type.StandardTypes;\nimport com.facebook.presto.spi.type.Type;\nimport com.facebook.presto.type.BigintOperators;\nimport com.facebook.presto.type.BooleanOperators;\nimport com.facebook.presto.type.DoubleOperators;\nimport com.facebook.presto.type.UnknownType;\nimport com.facebook.presto.type.VarcharOperators;\nimport com.fasterxml.jackson.core.JsonFactory;\nimport com.fasterxml.jackson.core.JsonGenerator;\nimport com.fasterxml.jackson.core.JsonParser;\nimport com.fasterxml.jackson.core.JsonToken;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport com.google.common.primitives.Shorts;\nimport com.google.common.primitives.SignedBytes;\nimport io.airlift.slice.Slice;\nimport io.airlift.slice.SliceOutput;\nimport io.airlift.slice.Slices;\n\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.OutputStream;\nimport java.math.BigDecimal;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.Optional;\nimport java.util.TreeMap;\n\nimport static com.facebook.presto.spi.StandardErrorCode.GENERIC_INSUFFICIENT_RESOURCES;\nimport static com.facebook.presto.spi.StandardErrorCode.INVALID_CAST_ARGUMENT;\nimport static com.facebook.presto.spi.StandardErrorCode.INVALID_FUNCTION_ARGUMENT;\nimport static com.facebook.presto.spi.type.BigintType.BIGINT;\nimport static com.facebook.presto.spi.type.BooleanType.BOOLEAN;\nimport static com.facebook.presto.spi.type.DateType.DATE;\nimport static com.facebook.presto.spi.type.Decimals.decodeUnscaledValue;\nimport static com.facebook.presto.spi.type.Decimals.encodeUnscaledValue;\nimport static com.facebook.presto.spi.type.Decimals.isShortDecimal;\nimport static com.facebook.presto.spi.type.DoubleType.DOUBLE;\nimport static com.facebook.presto.spi.type.IntegerType.INTEGER;\nimport static com.facebook.presto.spi.type.RealType.REAL;\nimport static com.facebook.presto.spi.type.SmallintType.SMALLINT;\nimport static com.facebook.presto.spi.type.TimestampType.TIMESTAMP;\nimport static com.facebook.presto.spi.type.TinyintType.TINYINT;\nimport static com.facebook.presto.type.JsonType.JSON;\nimport static com.facebook.presto.type.TypeUtils.hashPosition;\nimport static com.facebook.presto.type.TypeUtils.positionEqualsPosition;\nimport static com.facebook.presto.util.DateTimeUtils.printDate;\nimport static com.facebook.presto.util.DateTimeUtils.printTimestampWithoutTimeZone;\nimport static com.facebook.presto.util.JsonUtil.ObjectKeyProvider.createObjectKeyProvider;\nimport static com.fasterxml.jackson.core.JsonFactory.Feature.CANONICALIZE_FIELD_NAMES;\nimport static com.fasterxml.jackson.core.JsonToken.END_ARRAY;\nimport static com.fasterxml.jackson.core.JsonToken.END_OBJECT;\nimport static com.fasterxml.jackson.core.JsonToken.FIELD_NAME;\nimport static com.fasterxml.jackson.core.JsonToken.START_ARRAY;\nimport static com.fasterxml.jackson.core.JsonToken.START_OBJECT;\nimport static com.google.common.base.Preconditions.checkArgument;\nimport static com.google.common.base.Verify.verify;\nimport static it.unimi.dsi.fastutil.HashCommon.arraySize;\nimport static java.lang.Float.floatToRawIntBits;\nimport static java.lang.Float.intBitsToFloat;\nimport static java.lang.Math.toIntExact;\nimport static java.lang.String.format;\nimport static java.math.RoundingMode.HALF_UP;\nimport static java.nio.charset.StandardCharsets.UTF_8;\nimport static java.util.Objects.requireNonNull;\n\npublic final class JsonUtil\n{\n    public static final JsonFactory JSON_FACTORY = new JsonFactory().disable(CANONICALIZE_FIELD_NAMES);\n\n    // This object mapper is constructed without .configure(ORDER_MAP_ENTRIES_BY_KEYS, true) because\n    // `OBJECT_MAPPER.writeValueAsString(parser.readValueAsTree());` preserves input order.\n    // Be aware. Using it arbitrarily can produce invalid json (ordered by key is required in Presto).\n    private static final ObjectMapper OBJECT_MAPPED_UNORDERED = new ObjectMapper(JSON_FACTORY);\n\n    private static final int MAX_JSON_LENGTH_IN_ERROR_MESSAGE = 10_000;\n\n    private JsonUtil() {}\n\n    public static JsonParser createJsonParser(JsonFactory factory, Slice json)\n            throws IOException\n    {\n        // Jackson tries to detect the character encoding automatically when using InputStream\n        // so we pass an InputStreamReader instead.\n        return factory.createParser(new InputStreamReader(json.getInput(), UTF_8));\n    }\n\n    public static JsonGenerator createJsonGenerator(JsonFactory factory, SliceOutput output)\n            throws IOException\n    {\n        return factory.createGenerator((OutputStream) output);\n    }\n\n    public static String truncateIfNecessaryForErrorMessage(Slice json)\n    {\n        if (json.length() <= MAX_JSON_LENGTH_IN_ERROR_MESSAGE) {\n            return json.toStringUtf8();\n        }\n        else {\n            return json.slice(0, MAX_JSON_LENGTH_IN_ERROR_MESSAGE).toStringUtf8() + \"...(truncated)\";\n        }\n    }\n\n    public static boolean canCastToJson(Type type)\n    {\n        String baseType = type.getTypeSignature().getBase();\n        if (baseType.equals(UnknownType.NAME) ||\n                baseType.equals(StandardTypes.BOOLEAN) ||\n                baseType.equals(StandardTypes.TINYINT) ||\n                baseType.equals(StandardTypes.SMALLINT) ||\n                baseType.equals(StandardTypes.INTEGER) ||\n                baseType.equals(StandardTypes.BIGINT) ||\n                baseType.equals(StandardTypes.REAL) ||\n                baseType.equals(StandardTypes.DOUBLE) ||\n                baseType.equals(StandardTypes.DECIMAL) ||\n                baseType.equals(StandardTypes.VARCHAR) ||\n                baseType.equals(StandardTypes.JSON) ||\n                baseType.equals(StandardTypes.TIMESTAMP) ||\n                baseType.equals(StandardTypes.DATE)) {\n            return true;\n        }\n        if (type instanceof ArrayType) {\n            return canCastToJson(((ArrayType) type).getElementType());\n        }\n        if (type instanceof MapType) {\n            MapType mapType = (MapType) type;\n            return (mapType.getKeyType().getTypeSignature().getBase().equals(UnknownType.NAME) ||\n                    isValidJsonObjectKeyType(mapType.getKeyType())) &&\n                    canCastToJson(mapType.getValueType());\n        }\n        if (type instanceof RowType) {\n            return type.getTypeParameters().stream().allMatch(JsonUtil::canCastToJson);\n        }\n        return false;\n    }\n\n    public static boolean canCastFromJson(Type type)\n    {\n        String baseType = type.getTypeSignature().getBase();\n        if (baseType.equals(StandardTypes.BOOLEAN) ||\n                baseType.equals(StandardTypes.TINYINT) ||\n                baseType.equals(StandardTypes.SMALLINT) ||\n                baseType.equals(StandardTypes.INTEGER) ||\n                baseType.equals(StandardTypes.BIGINT) ||\n                baseType.equals(StandardTypes.REAL) ||\n                baseType.equals(StandardTypes.DOUBLE) ||\n                baseType.equals(StandardTypes.VARCHAR) ||\n                baseType.equals(StandardTypes.DECIMAL) ||\n                baseType.equals(StandardTypes.JSON)) {\n            return true;\n        }\n        if (type instanceof ArrayType) {\n            return canCastFromJson(((ArrayType) type).getElementType());\n        }\n        if (type instanceof MapType) {\n            return isValidJsonObjectKeyType(((MapType) type).getKeyType()) && canCastFromJson(((MapType) type).getValueType());\n        }\n        if (type instanceof RowType) {\n            return type.getTypeParameters().stream().allMatch(JsonUtil::canCastFromJson);\n        }\n        return false;\n    }\n\n    private static boolean isValidJsonObjectKeyType(Type type)\n    {\n        String baseType = type.getTypeSignature().getBase();\n        return baseType.equals(StandardTypes.BOOLEAN) ||\n                baseType.equals(StandardTypes.TINYINT) ||\n                baseType.equals(StandardTypes.SMALLINT) ||\n                baseType.equals(StandardTypes.INTEGER) ||\n                baseType.equals(StandardTypes.BIGINT) ||\n                baseType.equals(StandardTypes.REAL) ||\n                baseType.equals(StandardTypes.DOUBLE) ||\n                baseType.equals(StandardTypes.DECIMAL) ||\n                baseType.equals(StandardTypes.VARCHAR);\n    }\n\n    // transform the map key into string for use as JSON object key\n    public interface ObjectKeyProvider\n    {\n        String getObjectKey(Block block, int position);\n\n        static ObjectKeyProvider createObjectKeyProvider(Type type)\n        {\n            String baseType = type.getTypeSignature().getBase();\n            switch (baseType) {\n                case UnknownType.NAME:\n                    return (block, position) -> null;\n                case StandardTypes.BOOLEAN:\n                    return (block, position) -> type.getBoolean(block, position) ? \"true\" : \"false\";\n                case StandardTypes.TINYINT:\n                case StandardTypes.SMALLINT:\n                case StandardTypes.INTEGER:\n                case StandardTypes.BIGINT:\n                    return (block, position) -> String.valueOf(type.getLong(block, position));\n                case StandardTypes.REAL:\n                    return (block, position) -> String.valueOf(intBitsToFloat((int) type.getLong(block, position)));\n                case StandardTypes.DOUBLE:\n                    return (block, position) -> String.valueOf(type.getDouble(block, position));\n                case StandardTypes.DECIMAL:\n                    DecimalType decimalType = (DecimalType) type;\n                    if (isShortDecimal(decimalType)) {\n                        return (block, position) -> Decimals.toString(decimalType.getLong(block, position), decimalType.getScale());\n                    }\n                    else {\n                        return (block, position) -> Decimals.toString(\n                                decodeUnscaledValue(type.getSlice(block, position)),\n                                decimalType.getScale());\n                    }\n                case StandardTypes.VARCHAR:\n                    return (block, position) -> type.getSlice(block, position).toStringUtf8();\n                default:\n                    throw new PrestoException(INVALID_FUNCTION_ARGUMENT, format(\"Unsupported type: %s\", type));\n            }\n        }\n    }\n\n    // given block and position, write to JsonGenerator\n    public interface JsonGeneratorWriter\n    {\n        // write a Json value into the JsonGenerator, provided by block and position\n        void writeJsonValue(JsonGenerator jsonGenerator, Block block, int position, ConnectorSession session)\n                throws IOException;\n\n        static JsonGeneratorWriter createJsonGeneratorWriter(Type type)\n        {\n            String baseType = type.getTypeSignature().getBase();\n            switch (baseType) {\n                case UnknownType.NAME:\n                    return new UnknownJsonGeneratorWriter();\n                case StandardTypes.BOOLEAN:\n                    return new BooleanJsonGeneratorWriter();\n                case StandardTypes.TINYINT:\n                case StandardTypes.SMALLINT:\n                case StandardTypes.INTEGER:\n                case StandardTypes.BIGINT:\n                    return new LongJsonGeneratorWriter(type);\n                case StandardTypes.REAL:\n                    return new RealJsonGeneratorWriter();\n                case StandardTypes.DOUBLE:\n                    return new DoubleJsonGeneratorWriter();\n                case StandardTypes.DECIMAL:\n                    if (isShortDecimal(type)) {\n                        return new ShortDecimalJsonGeneratorWriter((DecimalType) type);\n                    }\n                    else {\n                        return new LongDeicmalJsonGeneratorWriter((DecimalType) type);\n                    }\n                case StandardTypes.VARCHAR:\n                    return new VarcharJsonGeneratorWriter(type);\n                case StandardTypes.JSON:\n                    return new JsonJsonGeneratorWriter();\n                case StandardTypes.TIMESTAMP:\n                    return new TimestampJsonGeneratorWriter();\n                case StandardTypes.DATE:\n                    return new DateGeneratorWriter();\n                case StandardTypes.ARRAY:\n                    ArrayType arrayType = (ArrayType) type;\n                    return new ArrayJsonGeneratorWriter(\n                            arrayType,\n                            createJsonGeneratorWriter(arrayType.getElementType()));\n                case StandardTypes.MAP:\n                    MapType mapType = (MapType) type;\n                    return new MapJsonGeneratorWriter(\n                            mapType,\n                            createObjectKeyProvider(mapType.getKeyType()),\n                            createJsonGeneratorWriter(mapType.getValueType()));\n                case StandardTypes.ROW:\n                    List<Type> fieldTypes = type.getTypeParameters();\n                    List<JsonGeneratorWriter> fieldWriters = new ArrayList<>(fieldTypes.size());\n                    for (int i = 0; i < fieldTypes.size(); i++) {\n                        fieldWriters.add(createJsonGeneratorWriter(fieldTypes.get(i)));\n                    }\n                    return new RowJsonGeneratorWriter((RowType) type, fieldWriters);\n                default:\n                    throw new PrestoException(INVALID_FUNCTION_ARGUMENT, format(\"Unsupported type: %s\", type));\n            }\n        }\n    }\n\n    private static class UnknownJsonGeneratorWriter\n            implements JsonGeneratorWriter\n    {\n        @Override\n        public void writeJsonValue(JsonGenerator jsonGenerator, Block block, int position, ConnectorSession session)\n                throws IOException\n        {\n            jsonGenerator.writeNull();\n        }\n    }\n\n    private static class BooleanJsonGeneratorWriter\n            implements JsonGeneratorWriter\n    {\n        @Override\n        public void writeJsonValue(JsonGenerator jsonGenerator, Block block, int position, ConnectorSession session)\n                throws IOException\n        {\n            if (block.isNull(position)) {\n                jsonGenerator.writeNull();\n            }\n            else {\n                boolean value = BOOLEAN.getBoolean(block, position);\n                jsonGenerator.writeBoolean(value);\n            }\n        }\n    }\n\n    private static class LongJsonGeneratorWriter\n            implements JsonGeneratorWriter\n    {\n        private final Type type;\n\n        public LongJsonGeneratorWriter(Type type)\n        {\n            this.type = type;\n        }\n\n        @Override\n        public void writeJsonValue(JsonGenerator jsonGenerator, Block block, int position, ConnectorSession session)\n                throws IOException\n        {\n            if (block.isNull(position)) {\n                jsonGenerator.writeNull();\n            }\n            else {\n                long value = type.getLong(block, position);\n                jsonGenerator.writeNumber(value);\n            }\n        }\n    }\n\n    private static class RealJsonGeneratorWriter\n            implements JsonGeneratorWriter\n    {\n        @Override\n        public void writeJsonValue(JsonGenerator jsonGenerator, Block block, int position, ConnectorSession session)\n                throws IOException\n        {\n            if (block.isNull(position)) {\n                jsonGenerator.writeNull();\n            }\n            else {\n                float value = intBitsToFloat((int) REAL.getLong(block, position));\n                jsonGenerator.writeNumber(value);\n            }\n        }\n    }\n\n    private static class DoubleJsonGeneratorWriter\n            implements JsonGeneratorWriter\n    {\n        @Override\n        public void writeJsonValue(JsonGenerator jsonGenerator, Block block, int position, ConnectorSession session)\n                throws IOException\n        {\n            if (block.isNull(position)) {\n                jsonGenerator.writeNull();\n            }\n            else {\n                double value = DOUBLE.getDouble(block, position);\n                jsonGenerator.writeNumber(value);\n            }\n        }\n    }\n\n    private static class ShortDecimalJsonGeneratorWriter\n            implements JsonGeneratorWriter\n    {\n        private final DecimalType type;\n\n        public ShortDecimalJsonGeneratorWriter(DecimalType type)\n        {\n            this.type = type;\n        }\n\n        @Override\n        public void writeJsonValue(JsonGenerator jsonGenerator, Block block, int position, ConnectorSession session)\n                throws IOException\n        {\n            if (block.isNull(position)) {\n                jsonGenerator.writeNull();\n            }\n            else {\n                BigDecimal value = BigDecimal.valueOf(type.getLong(block, position), type.getScale());\n                jsonGenerator.writeNumber(value);\n            }\n        }\n    }\n\n    private static class LongDeicmalJsonGeneratorWriter\n            implements JsonGeneratorWriter\n    {\n        private final DecimalType type;\n\n        public LongDeicmalJsonGeneratorWriter(DecimalType type)\n        {\n            this.type = type;\n        }\n\n        @Override\n        public void writeJsonValue(JsonGenerator jsonGenerator, Block block, int position, ConnectorSession session)\n                throws IOException\n        {\n            if (block.isNull(position)) {\n                jsonGenerator.writeNull();\n            }\n            else {\n                BigDecimal value = new BigDecimal(\n                        decodeUnscaledValue(type.getSlice(block, position)),\n                        type.getScale());\n                jsonGenerator.writeNumber(value);\n            }\n        }\n    }\n\n    private static class VarcharJsonGeneratorWriter\n            implements JsonGeneratorWriter\n    {\n        private final Type type;\n\n        public VarcharJsonGeneratorWriter(Type type)\n        {\n            this.type = type;\n        }\n\n        @Override\n        public void writeJsonValue(JsonGenerator jsonGenerator, Block block, int position, ConnectorSession session)\n                throws IOException\n        {\n            if (block.isNull(position)) {\n                jsonGenerator.writeNull();\n            }\n            else {\n                Slice value = type.getSlice(block, position);\n                jsonGenerator.writeString(value.toStringUtf8());\n            }\n        }\n    }\n\n    private static class JsonJsonGeneratorWriter\n            implements JsonGeneratorWriter\n    {\n        @Override\n        public void writeJsonValue(JsonGenerator jsonGenerator, Block block, int position, ConnectorSession session)\n                throws IOException\n        {\n            if (block.isNull(position)) {\n                jsonGenerator.writeNull();\n            }\n            else {\n                Slice value = JSON.getSlice(block, position);\n                jsonGenerator.writeRawValue(value.toStringUtf8());\n            }\n        }\n    }\n\n    private static class TimestampJsonGeneratorWriter\n            implements JsonGeneratorWriter\n    {\n        @Override\n        public void writeJsonValue(JsonGenerator jsonGenerator, Block block, int position, ConnectorSession session)\n                throws IOException\n        {\n            if (block.isNull(position)) {\n                jsonGenerator.writeNull();\n            }\n            else {\n                long value = TIMESTAMP.getLong(block, position);\n                jsonGenerator.writeString(printTimestampWithoutTimeZone(session.getTimeZoneKey(), value));\n            }\n        }\n    }\n\n    private static class DateGeneratorWriter\n            implements JsonGeneratorWriter\n    {\n        @Override\n        public void writeJsonValue(JsonGenerator jsonGenerator, Block block, int position, ConnectorSession session)\n                throws IOException\n        {\n            if (block.isNull(position)) {\n                jsonGenerator.writeNull();\n            }\n            else {\n                long value = DATE.getLong(block, position);\n                jsonGenerator.writeString(printDate((int) value));\n            }\n        }\n    }\n\n    private static class ArrayJsonGeneratorWriter\n            implements JsonGeneratorWriter\n    {\n        private final ArrayType type;\n        private final JsonGeneratorWriter elementWriter;\n\n        public ArrayJsonGeneratorWriter(ArrayType type, JsonGeneratorWriter elementWriter)\n        {\n            this.type = type;\n            this.elementWriter = elementWriter;\n        }\n\n        @Override\n        public void writeJsonValue(JsonGenerator jsonGenerator, Block block, int position, ConnectorSession session)\n                throws IOException\n        {\n            if (block.isNull(position)) {\n                jsonGenerator.writeNull();\n            }\n            else {\n                Block arrayBlock = type.getObject(block, position);\n                jsonGenerator.writeStartArray();\n                for (int i = 0; i < arrayBlock.getPositionCount(); i++) {\n                    elementWriter.writeJsonValue(jsonGenerator, arrayBlock, i, session);\n                }\n                jsonGenerator.writeEndArray();\n            }\n        }\n    }\n\n    private static class MapJsonGeneratorWriter\n            implements JsonGeneratorWriter\n    {\n        private final MapType type;\n        private final ObjectKeyProvider keyProvider;\n        private final JsonGeneratorWriter valueWriter;\n\n        public MapJsonGeneratorWriter(MapType type, ObjectKeyProvider keyProvider, JsonGeneratorWriter valueWriter)\n        {\n            this.type = type;\n            this.keyProvider = keyProvider;\n            this.valueWriter = valueWriter;\n        }\n\n        @Override\n        public void writeJsonValue(JsonGenerator jsonGenerator, Block block, int position, ConnectorSession session)\n                throws IOException\n        {\n            if (block.isNull(position)) {\n                jsonGenerator.writeNull();\n            }\n            else {\n                Block mapBlock = type.getObject(block, position);\n                Map<String, Integer> orderedKeyToValuePosition = new TreeMap<>();\n                for (int i = 0; i < mapBlock.getPositionCount(); i += 2) {\n                    String objectKey = keyProvider.getObjectKey(mapBlock, i);\n                    orderedKeyToValuePosition.put(objectKey, i + 1);\n                }\n\n                jsonGenerator.writeStartObject();\n                for (Map.Entry<String, Integer> entry : orderedKeyToValuePosition.entrySet()) {\n                    jsonGenerator.writeFieldName(entry.getKey());\n                    valueWriter.writeJsonValue(jsonGenerator, mapBlock, entry.getValue(), session);\n                }\n                jsonGenerator.writeEndObject();\n            }\n        }\n    }\n\n    private static class RowJsonGeneratorWriter\n            implements JsonGeneratorWriter\n    {\n        private final RowType type;\n        private final List<JsonGeneratorWriter> fieldWriters;\n\n        public RowJsonGeneratorWriter(RowType type, List<JsonGeneratorWriter> fieldWriters)\n        {\n            this.type = type;\n            this.fieldWriters = fieldWriters;\n        }\n\n        @Override\n        public void writeJsonValue(JsonGenerator jsonGenerator, Block block, int position, ConnectorSession session)\n                throws IOException\n        {\n            if (block.isNull(position)) {\n                jsonGenerator.writeNull();\n            }\n            else {\n                Block rowBlock = type.getObject(block, position);\n                jsonGenerator.writeStartArray();\n                for (int i = 0; i < rowBlock.getPositionCount(); i++) {\n                    fieldWriters.get(i).writeJsonValue(jsonGenerator, rowBlock, i, session);\n                }\n                jsonGenerator.writeEndArray();\n            }\n        }\n    }\n\n    // utility classes and functions for cast from JSON\n    public static Slice currentTokenAsVarchar(JsonParser parser)\n            throws IOException\n    {\n        switch (parser.currentToken()) {\n            case VALUE_NULL:\n                return null;\n            case VALUE_STRING:\n            case FIELD_NAME:\n                return Slices.utf8Slice(parser.getText());\n            case VALUE_NUMBER_FLOAT:\n                // Avoidance of loss of precision does not seem to be possible here because of Jackson implementation.\n                return DoubleOperators.castToVarchar(parser.getDoubleValue());\n            case VALUE_NUMBER_INT:\n                // An alternative is calling getLongValue and then BigintOperators.castToVarchar.\n                // It doesn't work as well because it can result in overflow and underflow exceptions for large integral numbers.\n                return Slices.utf8Slice(parser.getText());\n            case VALUE_TRUE:\n                return BooleanOperators.castToVarchar(true);\n            case VALUE_FALSE:\n                return BooleanOperators.castToVarchar(false);\n            default:\n                throw new JsonCastException(format(\"Unexpected token when cast to %s: %s\", StandardTypes.VARCHAR, parser.getText()));\n        }\n    }\n\n    public static Long currentTokenAsBigint(JsonParser parser)\n            throws IOException\n    {\n        switch (parser.currentToken()) {\n            case VALUE_NULL:\n                return null;\n            case VALUE_STRING:\n            case FIELD_NAME:\n                return VarcharOperators.castToBigint(Slices.utf8Slice(parser.getText()));\n            case VALUE_NUMBER_FLOAT:\n                return DoubleOperators.castToLong(parser.getDoubleValue());\n            case VALUE_NUMBER_INT:\n                return parser.getLongValue();\n            case VALUE_TRUE:\n                return BooleanOperators.castToBigint(true);\n            case VALUE_FALSE:\n                return BooleanOperators.castToBigint(false);\n            default:\n                throw new JsonCastException(format(\"Unexpected token when cast to %s: %s\", StandardTypes.BIGINT, parser.getText()));\n        }\n    }\n\n    public static Long currentTokenAsInteger(JsonParser parser)\n            throws IOException\n    {\n        switch (parser.currentToken()) {\n            case VALUE_NULL:\n                return null;\n            case VALUE_STRING:\n            case FIELD_NAME:\n                return VarcharOperators.castToInteger(Slices.utf8Slice(parser.getText()));\n            case VALUE_NUMBER_FLOAT:\n                return DoubleOperators.castToInteger(parser.getDoubleValue());\n            case VALUE_NUMBER_INT:\n                return (long) toIntExact(parser.getLongValue());\n            case VALUE_TRUE:\n                return BooleanOperators.castToInteger(true);\n            case VALUE_FALSE:\n                return BooleanOperators.castToInteger(false);\n            default:\n                throw new JsonCastException(format(\"Unexpected token when cast to %s: %s\", StandardTypes.INTEGER, parser.getText()));\n        }\n    }\n\n    public static Long currentTokenAsSmallint(JsonParser parser)\n            throws IOException\n    {\n        switch (parser.currentToken()) {\n            case VALUE_NULL:\n                return null;\n            case VALUE_STRING:\n            case FIELD_NAME:\n                return VarcharOperators.castToSmallint(Slices.utf8Slice(parser.getText()));\n            case VALUE_NUMBER_FLOAT:\n                return DoubleOperators.castToSmallint(parser.getDoubleValue());\n            case VALUE_NUMBER_INT:\n                return (long) Shorts.checkedCast(parser.getLongValue());\n            case VALUE_TRUE:\n                return BooleanOperators.castToSmallint(true);\n            case VALUE_FALSE:\n                return BooleanOperators.castToSmallint(false);\n            default:\n                throw new JsonCastException(format(\"Unexpected token when cast to %s: %s\", StandardTypes.SMALLINT, parser.getText()));\n        }\n    }\n\n    public static Long currentTokenAsTinyint(JsonParser parser)\n            throws IOException\n    {\n        switch (parser.currentToken()) {\n            case VALUE_NULL:\n                return null;\n            case VALUE_STRING:\n            case FIELD_NAME:\n                return VarcharOperators.castToTinyint(Slices.utf8Slice(parser.getText()));\n            case VALUE_NUMBER_FLOAT:\n                return DoubleOperators.castToTinyint(parser.getDoubleValue());\n            case VALUE_NUMBER_INT:\n                return (long) SignedBytes.checkedCast(parser.getLongValue());\n            case VALUE_TRUE:\n                return BooleanOperators.castToTinyint(true);\n            case VALUE_FALSE:\n                return BooleanOperators.castToTinyint(false);\n            default:\n                throw new JsonCastException(format(\"Unexpected token when cast to %s: %s\", StandardTypes.TINYINT, parser.getText()));\n        }\n    }\n\n    public static Double currentTokenAsDouble(JsonParser parser)\n            throws IOException\n    {\n        switch (parser.currentToken()) {\n            case VALUE_NULL:\n                return null;\n            case VALUE_STRING:\n            case FIELD_NAME:\n                return VarcharOperators.castToDouble(Slices.utf8Slice(parser.getText()));\n            case VALUE_NUMBER_FLOAT:\n                return parser.getDoubleValue();\n            case VALUE_NUMBER_INT:\n                // An alternative is calling getLongValue and then BigintOperators.castToDouble.\n                // It doesn't work as well because it can result in overflow and underflow exceptions for large integral numbers.\n                return parser.getDoubleValue();\n            case VALUE_TRUE:\n                return BooleanOperators.castToDouble(true);\n            case VALUE_FALSE:\n                return BooleanOperators.castToDouble(false);\n            default:\n                throw new JsonCastException(format(\"Unexpected token when cast to %s: %s\", StandardTypes.DOUBLE, parser.getText()));\n        }\n    }\n\n    public static Long currentTokenAsReal(JsonParser parser)\n            throws IOException\n    {\n        switch (parser.currentToken()) {\n            case VALUE_NULL:\n                return null;\n            case VALUE_STRING:\n            case FIELD_NAME:\n                return VarcharOperators.castToFloat(Slices.utf8Slice(parser.getText()));\n            case VALUE_NUMBER_FLOAT:\n                return (long) floatToRawIntBits(parser.getFloatValue());\n            case VALUE_NUMBER_INT:\n                // An alternative is calling getLongValue and then BigintOperators.castToReal.\n                // It doesn't work as well because it can result in overflow and underflow exceptions for large integral numbers.\n                return (long) floatToRawIntBits(parser.getFloatValue());\n            case VALUE_TRUE:\n                return BooleanOperators.castToReal(true);\n            case VALUE_FALSE:\n                return BooleanOperators.castToReal(false);\n            default:\n                throw new JsonCastException(format(\"Unexpected token when cast to %s: %s\", StandardTypes.REAL, parser.getText()));\n        }\n    }\n\n    public static Boolean currentTokenAsBoolean(JsonParser parser)\n            throws IOException\n    {\n        switch (parser.currentToken()) {\n            case VALUE_NULL:\n                return null;\n            case VALUE_STRING:\n            case FIELD_NAME:\n                return VarcharOperators.castToBoolean(Slices.utf8Slice(parser.getText()));\n            case VALUE_NUMBER_FLOAT:\n                return DoubleOperators.castToBoolean(parser.getDoubleValue());\n            case VALUE_NUMBER_INT:\n                return BigintOperators.castToBoolean(parser.getLongValue());\n            case VALUE_TRUE:\n                return true;\n            case VALUE_FALSE:\n                return false;\n            default:\n                throw new JsonCastException(format(\"Unexpected token when cast to %s: %s\", StandardTypes.BOOLEAN, parser.getText()));\n        }\n    }\n\n    public static Long currentTokenAsShortDecimal(JsonParser parser, int precision, int scale)\n            throws IOException\n    {\n        BigDecimal bigDecimal = currentTokenAsJavaDecimal(parser, precision, scale);\n        return bigDecimal != null ? bigDecimal.unscaledValue().longValue() : null;\n    }\n\n    public static Slice currentTokenAsLongDecimal(JsonParser parser, int precision, int scale)\n            throws IOException\n    {\n        BigDecimal bigDecimal = currentTokenAsJavaDecimal(parser, precision, scale);\n        if (bigDecimal == null) {\n            return null;\n        }\n        return encodeUnscaledValue(bigDecimal.unscaledValue());\n    }\n\n    // TODO: Instead of having BigDecimal as an intermediate step,\n    // an alternative way is to make currentTokenAsShortDecimal and currentTokenAsLongDecimal\n    // directly return the Long or Slice representation of the cast result\n    // by calling the corresponding cast-to-decimal function, similar to other JSON cast function.\n    private static BigDecimal currentTokenAsJavaDecimal(JsonParser parser, int precision, int scale)\n            throws IOException\n    {\n        BigDecimal result;\n        switch (parser.getCurrentToken()) {\n            case VALUE_NULL:\n                return null;\n            case VALUE_STRING:\n            case FIELD_NAME:\n                result = new BigDecimal(parser.getText());\n                result = result.setScale(scale, HALF_UP);\n                break;\n            case VALUE_NUMBER_FLOAT:\n            case VALUE_NUMBER_INT:\n                result = parser.getDecimalValue();\n                result = result.setScale(scale, HALF_UP);\n                break;\n            case VALUE_TRUE:\n                result = BigDecimal.ONE.setScale(scale, HALF_UP);\n                break;\n            case VALUE_FALSE:\n                result = BigDecimal.ZERO.setScale(scale, HALF_UP);\n                break;\n            default:\n                throw new JsonCastException(format(\"Unexpected token when cast to DECIMAL(%s,%s): %s\", precision, scale, parser.getText()));\n        }\n\n        if (result.precision() > precision) {\n            // TODO: Should we use NUMERIC_VALUE_OUT_OF_RANGE instead?\n            throw new PrestoException(INVALID_CAST_ARGUMENT, format(\"Cannot cast input json to DECIMAL(%s,%s)\", precision, scale));\n        }\n        return result;\n    }\n\n    // given a JSON parser, write to the BlockBuilder\n    public interface BlockBuilderAppender\n    {\n        void append(JsonParser parser, BlockBuilder blockBuilder)\n                throws IOException;\n\n        static BlockBuilderAppender createBlockBuilderAppender(Type type)\n        {\n            String baseType = type.getTypeSignature().getBase();\n            switch (baseType) {\n                case StandardTypes.BOOLEAN:\n                    return new BooleanBlockBuilderAppender();\n                case StandardTypes.TINYINT:\n                    return new TinyintBlockBuilderAppender();\n                case StandardTypes.SMALLINT:\n                    return new SmallintBlockBuilderAppender();\n                case StandardTypes.INTEGER:\n                    return new IntegerBlockBuilderAppender();\n                case StandardTypes.BIGINT:\n                    return new BigintBlockBuilderAppender();\n                case StandardTypes.REAL:\n                    return new RealBlockBuilderAppender();\n                case StandardTypes.DOUBLE:\n                    return new DoubleBlockBuilderAppender();\n                case StandardTypes.DECIMAL:\n                    if (isShortDecimal(type)) {\n                        return new ShortDecimalBlockBuilderAppender((DecimalType) type);\n                    }\n                    else {\n                        return new LongDecimalBlockBuilderAppender((DecimalType) type);\n                    }\n                case StandardTypes.VARCHAR:\n                    return new VarcharBlockBuilderAppender(type);\n                case StandardTypes.JSON:\n                    return (parser, blockBuilder) -> {\n                        String json = OBJECT_MAPPED_UNORDERED.writeValueAsString(parser.readValueAsTree());\n                        JSON.writeSlice(blockBuilder, Slices.utf8Slice(json));\n                    };\n                case StandardTypes.ARRAY:\n                    return new ArrayBlockBuilderAppender(createBlockBuilderAppender(((ArrayType) type).getElementType()));\n                case StandardTypes.MAP:\n                    MapType mapType = (MapType) type;\n                    return new MapBlockBuilderAppender(\n                            createBlockBuilderAppender(mapType.getKeyType()),\n                            createBlockBuilderAppender(mapType.getValueType()),\n                            mapType.getKeyType());\n                case StandardTypes.ROW:\n                    RowType rowType = (RowType) type;\n                    List<RowField> rowFields = rowType.getFields();\n                    BlockBuilderAppender[] fieldAppenders = new BlockBuilderAppender[rowFields.size()];\n                    for (int i = 0; i < fieldAppenders.length; i++) {\n                        fieldAppenders[i] = createBlockBuilderAppender(rowFields.get(i).getType());\n                    }\n                    return new RowBlockBuilderAppender(fieldAppenders, getFieldNameToIndex(rowFields));\n                default:\n                    throw new PrestoException(INVALID_FUNCTION_ARGUMENT, format(\"Unsupported type: %s\", type));\n            }\n        }\n    }\n\n    private static class BooleanBlockBuilderAppender\n            implements BlockBuilderAppender\n    {\n        @Override\n        public void append(JsonParser parser, BlockBuilder blockBuilder)\n                throws IOException\n        {\n            Boolean result = currentTokenAsBoolean(parser);\n            if (result == null) {\n                blockBuilder.appendNull();\n            }\n            else {\n                BOOLEAN.writeBoolean(blockBuilder, result);\n            }\n        }\n    }\n\n    private static class TinyintBlockBuilderAppender\n            implements BlockBuilderAppender\n    {\n        @Override\n        public void append(JsonParser parser, BlockBuilder blockBuilder)\n                throws IOException\n        {\n            Long result = currentTokenAsTinyint(parser);\n            if (result == null) {\n                blockBuilder.appendNull();\n            }\n            else {\n                TINYINT.writeLong(blockBuilder, result);\n            }\n        }\n    }\n\n    private static class SmallintBlockBuilderAppender\n            implements BlockBuilderAppender\n    {\n        @Override\n        public void append(JsonParser parser, BlockBuilder blockBuilder)\n                throws IOException\n        {\n            Long result = currentTokenAsInteger(parser);\n            if (result == null) {\n                blockBuilder.appendNull();\n            }\n            else {\n                SMALLINT.writeLong(blockBuilder, result);\n            }\n        }\n    }\n\n    private static class IntegerBlockBuilderAppender\n            implements BlockBuilderAppender\n    {\n        @Override\n        public void append(JsonParser parser, BlockBuilder blockBuilder)\n                throws IOException\n        {\n            Long result = currentTokenAsInteger(parser);\n            if (result == null) {\n                blockBuilder.appendNull();\n            }\n            else {\n                INTEGER.writeLong(blockBuilder, result);\n            }\n        }\n    }\n\n    private static class BigintBlockBuilderAppender\n            implements BlockBuilderAppender\n    {\n        @Override\n        public void append(JsonParser parser, BlockBuilder blockBuilder)\n                throws IOException\n        {\n            Long result = currentTokenAsBigint(parser);\n            if (result == null) {\n                blockBuilder.appendNull();\n            }\n            else {\n                BIGINT.writeLong(blockBuilder, result);\n            }\n        }\n    }\n\n    private static class RealBlockBuilderAppender\n            implements BlockBuilderAppender\n    {\n        @Override\n        public void append(JsonParser parser, BlockBuilder blockBuilder)\n                throws IOException\n        {\n            Long result = currentTokenAsReal(parser);\n            if (result == null) {\n                blockBuilder.appendNull();\n            }\n            else {\n                REAL.writeLong(blockBuilder, result);\n            }\n        }\n    }\n\n    private static class DoubleBlockBuilderAppender\n            implements BlockBuilderAppender\n    {\n        @Override\n        public void append(JsonParser parser, BlockBuilder blockBuilder)\n                throws IOException\n        {\n            Double result = currentTokenAsDouble(parser);\n            if (result == null) {\n                blockBuilder.appendNull();\n            }\n            else {\n                DOUBLE.writeDouble(blockBuilder, result);\n            }\n        }\n    }\n\n    private static class ShortDecimalBlockBuilderAppender\n            implements BlockBuilderAppender\n    {\n        DecimalType type;\n\n        ShortDecimalBlockBuilderAppender(DecimalType type)\n        {\n            this.type = type;\n        }\n\n        @Override\n        public void append(JsonParser parser, BlockBuilder blockBuilder)\n                throws IOException\n        {\n            Long result = currentTokenAsShortDecimal(parser, type.getPrecision(), type.getScale());\n\n            if (result == null) {\n                blockBuilder.appendNull();\n            }\n            else {\n                type.writeLong(blockBuilder, result);\n            }\n        }\n    }\n\n    private static class LongDecimalBlockBuilderAppender\n            implements BlockBuilderAppender\n    {\n        DecimalType type;\n\n        LongDecimalBlockBuilderAppender(DecimalType type)\n        {\n            this.type = type;\n        }\n\n        @Override\n        public void append(JsonParser parser, BlockBuilder blockBuilder)\n                throws IOException\n        {\n            Slice result = currentTokenAsLongDecimal(parser, type.getPrecision(), type.getScale());\n\n            if (result == null) {\n                blockBuilder.appendNull();\n            }\n            else {\n                type.writeSlice(blockBuilder, result);\n            }\n        }\n    }\n\n    private static class VarcharBlockBuilderAppender\n            implements BlockBuilderAppender\n    {\n        Type type;\n\n        VarcharBlockBuilderAppender(Type type)\n        {\n            this.type = type;\n        }\n\n        @Override\n        public void append(JsonParser parser, BlockBuilder blockBuilder)\n                throws IOException\n        {\n            Slice result = currentTokenAsVarchar(parser);\n            if (result == null) {\n                blockBuilder.appendNull();\n            }\n            else {\n                type.writeSlice(blockBuilder, result);\n            }\n        }\n    }\n\n    private static class ArrayBlockBuilderAppender\n            implements BlockBuilderAppender\n    {\n        BlockBuilderAppender elementAppender;\n\n        ArrayBlockBuilderAppender(BlockBuilderAppender elementAppender)\n        {\n            this.elementAppender = elementAppender;\n        }\n\n        @Override\n        public void append(JsonParser parser, BlockBuilder blockBuilder)\n                throws IOException\n        {\n            if (parser.getCurrentToken() == JsonToken.VALUE_NULL) {\n                blockBuilder.appendNull();\n                return;\n            }\n\n            if (parser.getCurrentToken() != START_ARRAY) {\n                throw new JsonCastException(format(\"Expected a json array, but got %s\", parser.getText()));\n            }\n            BlockBuilder entryBuilder = blockBuilder.beginBlockEntry();\n            while (parser.nextToken() != END_ARRAY) {\n                elementAppender.append(parser, entryBuilder);\n            }\n            blockBuilder.closeEntry();\n        }\n    }\n\n    private static class MapBlockBuilderAppender\n            implements BlockBuilderAppender\n    {\n        BlockBuilderAppender keyAppender;\n        BlockBuilderAppender valueAppender;\n        Type keyType;\n\n        MapBlockBuilderAppender(BlockBuilderAppender keyAppender, BlockBuilderAppender valueAppender, Type keyType)\n        {\n            this.keyAppender = keyAppender;\n            this.valueAppender = valueAppender;\n            this.keyType = keyType;\n        }\n\n        @Override\n        public void append(JsonParser parser, BlockBuilder blockBuilder)\n                throws IOException\n        {\n            if (parser.getCurrentToken() == JsonToken.VALUE_NULL) {\n                blockBuilder.appendNull();\n                return;\n            }\n\n            if (parser.getCurrentToken() != START_OBJECT) {\n                throw new JsonCastException(format(\"Expected a json object, but got %s\", parser.getText()));\n            }\n            BlockBuilder entryBuilder = blockBuilder.beginBlockEntry();\n            HashTable entryBuilderHashTable = new HashTable(keyType, entryBuilder);\n            int position = 0;\n            while (parser.nextToken() != END_OBJECT) {\n                keyAppender.append(parser, entryBuilder);\n                parser.nextToken();\n                valueAppender.append(parser, entryBuilder);\n                if (!entryBuilderHashTable.addIfAbsent(position)) {\n                    throw new JsonCastException(\"Duplicate keys are not allowed\");\n                }\n                position += 2;\n            }\n            blockBuilder.closeEntry();\n        }\n    }\n\n    private static class RowBlockBuilderAppender\n            implements BlockBuilderAppender\n    {\n        BlockBuilderAppender[] fieldAppenders;\n        Optional<Map<String, Integer>> fieldNameToIndex;\n\n        RowBlockBuilderAppender(BlockBuilderAppender[] fieldAppenders, Optional<Map<String, Integer>> fieldNameToIndex)\n        {\n            this.fieldAppenders = fieldAppenders;\n            this.fieldNameToIndex = fieldNameToIndex;\n        }\n\n        @Override\n        public void append(JsonParser parser, BlockBuilder blockBuilder)\n                throws IOException\n        {\n            if (parser.getCurrentToken() == JsonToken.VALUE_NULL) {\n                blockBuilder.appendNull();\n                return;\n            }\n\n            if (parser.getCurrentToken() != START_ARRAY && parser.getCurrentToken() != START_OBJECT) {\n                throw new JsonCastException(format(\"Expected a json array or object, but got %s\", parser.getText()));\n            }\n\n            parseJsonToSingleRowBlock(\n                    parser,\n                    (SingleRowBlockWriter) blockBuilder.beginBlockEntry(),\n                    fieldAppenders,\n                    fieldNameToIndex);\n            blockBuilder.closeEntry();\n        }\n    }\n\n    public static Optional<Map<String, Integer>> getFieldNameToIndex(List<RowField> rowFields)\n    {\n        if (!rowFields.get(0).getName().isPresent()) {\n            return Optional.empty();\n        }\n\n        Map<String, Integer> fieldNameToIndex = new HashMap<>(rowFields.size());\n        for (int i = 0; i < rowFields.size(); i++) {\n            fieldNameToIndex.put(rowFields.get(i).getName().get(), i);\n        }\n        return Optional.of(fieldNameToIndex);\n    }\n\n    // TODO: Once CAST function supports cachedInstanceFactory or directly write to BlockBuilder,\n    // JsonToRowCast::toRow can use RowBlockBuilderAppender::append to parse JSON and append to the block builder.\n    // Thus there will be single call to this method, so this method can be inlined.\n    public static void parseJsonToSingleRowBlock(\n            JsonParser parser,\n            SingleRowBlockWriter singleRowBlockWriter,\n            BlockBuilderAppender[] fieldAppenders,\n            Optional<Map<String, Integer>> fieldNameToIndex)\n            throws IOException\n    {\n        if (parser.getCurrentToken() == START_ARRAY) {\n            for (int i = 0; i < fieldAppenders.length; i++) {\n                parser.nextToken();\n                fieldAppenders[i].append(parser, singleRowBlockWriter);\n            }\n            if (parser.nextToken() != JsonToken.END_ARRAY) {\n                throw new JsonCastException(format(\"Expected json array ending, but got %s\", parser.getText()));\n            }\n        }\n        else {\n            verify(parser.getCurrentToken() == START_OBJECT);\n            if (!fieldNameToIndex.isPresent()) {\n                throw new JsonCastException(\"Cannot cast a JSON object to anonymous row type. Input must be a JSON array.\");\n            }\n            boolean[] fieldWritten = new boolean[fieldAppenders.length];\n            int numFieldsWritten = 0;\n\n            while (parser.nextToken() != JsonToken.END_OBJECT) {\n                if (parser.currentToken() != FIELD_NAME) {\n                    throw new JsonCastException(format(\"Expected a json field name, but got %s\", parser.getText()));\n                }\n                String fieldName = parser.getText().toLowerCase();\n                Integer fieldIndex = fieldNameToIndex.get().get(fieldName);\n                parser.nextToken();\n                if (fieldIndex != null) {\n                    if (fieldWritten[fieldIndex]) {\n                        throw new JsonCastException(\"Duplicate field: \" + fieldName);\n                    }\n                    fieldWritten[fieldIndex] = true;\n                    numFieldsWritten++;\n                    fieldAppenders[fieldIndex].append(parser, singleRowBlockWriter.getFieldBlockBuilder(fieldIndex));\n                }\n                else {\n                    parser.skipChildren();\n                }\n            }\n\n            if (numFieldsWritten != fieldAppenders.length) {\n                for (int i = 0; i < fieldWritten.length; i++) {\n                    if (!fieldWritten[i]) {\n                        singleRowBlockWriter.getFieldBlockBuilder(i).appendNull();\n                    }\n                }\n            }\n        }\n    }\n\n    // TODO: This class might be useful to other Map functions (transform_key, cast map to map, map_concat, etc)\n    // It is caller's responsibility to make the block data synchronized with the hash table\n    public static class HashTable\n    {\n        private static final int EXPECTED_ENTRIES = 20;\n        private static final float FILL_RATIO = 0.75f;\n        private static final int EMPTY_SLOT = -1;\n\n        private final Type type;\n        private final BlockBuilder block;\n\n        private int[] positionByHash;\n        private int hashCapacity;\n        private int maxFill;\n        private int hashMask;\n        private int size;\n\n        public HashTable(Type type, BlockBuilder block)\n        {\n            this.type = requireNonNull(type, \"type is null\");\n            this.block = requireNonNull(block, \"block is null\");\n\n            hashCapacity = arraySize(EXPECTED_ENTRIES, FILL_RATIO);\n            this.maxFill = calculateMaxFill(hashCapacity);\n            this.hashMask = hashCapacity - 1;\n            positionByHash = new int[hashCapacity];\n            Arrays.fill(positionByHash, EMPTY_SLOT);\n        }\n\n        public boolean contains(int position)\n        {\n            checkArgument(position >= 0, \"position is negative\");\n            return positionByHash[getHashPosition(position)] != EMPTY_SLOT;\n        }\n\n        public boolean addIfAbsent(int position)\n        {\n            checkArgument(position >= 0, \"position is negative\");\n            int hashPosition = getHashPosition(position);\n            if (positionByHash[hashPosition] == EMPTY_SLOT) {\n                positionByHash[hashPosition] = position;\n                size++;\n                if (size >= maxFill) {\n                    rehash();\n                }\n                return true;\n            }\n            else {\n                return false;\n            }\n        }\n\n        private int getHashPosition(int position)\n        {\n            int hashPosition = getMaskedHash(hashPosition(type, block, position));\n            while (true) {\n                if (positionByHash[hashPosition] == EMPTY_SLOT) {\n                    return hashPosition;\n                }\n                else if (positionEqualsPosition(type, block, positionByHash[hashPosition], block, position)) {\n                    return hashPosition;\n                }\n                hashPosition = getMaskedHash(hashPosition + 1);\n            }\n        }\n\n        private void rehash()\n        {\n            long newCapacityLong = hashCapacity * 2L;\n            if (newCapacityLong > Integer.MAX_VALUE) {\n                throw new PrestoException(GENERIC_INSUFFICIENT_RESOURCES, \"Size of hash table cannot exceed 1 billion entries\");\n            }\n            int newCapacity = (int) newCapacityLong;\n            hashCapacity = newCapacity;\n            hashMask = newCapacity - 1;\n            maxFill = calculateMaxFill(newCapacity);\n            int[] oldPositionByHash = positionByHash;\n            positionByHash = new int[newCapacity];\n            Arrays.fill(positionByHash, EMPTY_SLOT);\n            for (int position : oldPositionByHash) {\n                if (position != EMPTY_SLOT) {\n                    positionByHash[getHashPosition(position)] = position;\n                }\n            }\n        }\n\n        private static int calculateMaxFill(int hashSize)\n        {\n            checkArgument(hashSize > 0, \"hashSize must be greater than 0\");\n            int maxFill = (int) Math.ceil(hashSize * FILL_RATIO);\n            if (maxFill == hashSize) {\n                maxFill--;\n            }\n            checkArgument(hashSize > maxFill, \"hashSize must be larger than maxFill\");\n            return maxFill;\n        }\n\n        private int getMaskedHash(long rawHash)\n        {\n            return (int) (rawHash & hashMask);\n        }\n    }\n}\n", "methodName": "JsonParser JsonUtil.createJsonParser(JsonFactory,Slice)", "exampleID": 52, "dataset": "infer", "filepath": "presto-main/src/main/java/com/facebook/presto/util/JsonUtil.java", "source": "java.io.InputStreamReader", "sourceLine": 113, "qualifier": "Resource of type $$java.io.InputStreamReader/$ acquired by call to @@new()/@ is not released", "steps": [{"line": 113, "source": "java.io.InputStreamReader", "filepath": "presto-main/src/main/java/com/facebook/presto/util/JsonUtil.java", "methodName": "JsonParser JsonUtil.createJsonParser(JsonFactory,Slice)", "exampleID": 53}], "line_number": 113, "records": [], "combined_records": [], "infer_explore": [{"level": 0, "filename": "presto-main/src/main/java/com/facebook/presto/util/JsonUtil.java", "line_number": 108, "column_number": -1, "description": "start of procedure createJsonParser(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "JsonParser JsonUtil.createJsonParser(JsonFactory,Slice)"}, {"tag": "name_id", "value": "com.facebook.presto.util.JsonUtil.createJsonParser(com.fasterxml.jackson.core.JsonFactory,io.airlift.f2edf3bc998912eb20bd939cf596dcaa"}], "snippet": "105.     private JsonUtil() {}\n106. \n107. >     public static JsonParser createJsonParser(JsonFactory factory, Slice json)\n108.             throws IOException\n109.     {\n"}, {"level": 0, "filename": "presto-main/src/main/java/com/facebook/presto/util/JsonUtil.java", "line_number": 113, "column_number": -1, "description": "", "node_tags": [], "snippet": "110.         // Jackson tries to detect the character encoding automatically when using InputStream\n111.         // so we pass an InputStreamReader instead.\n112. >         return factory.createParser(new InputStreamReader(json.getInput(), UTF_8));\n113.     }\n114. \n"}]}, {"url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/test/java/com/facebook/presto/operator/TestHttpPageBufferClient.java", "rawCode": "/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage com.facebook.presto.operator;\n\nimport com.facebook.presto.execution.buffer.PagesSerde;\nimport com.facebook.presto.execution.buffer.SerializedPage;\nimport com.facebook.presto.operator.HttpPageBufferClient.ClientCallback;\nimport com.facebook.presto.spi.HostAddress;\nimport com.facebook.presto.spi.Page;\nimport com.google.common.base.Throwables;\nimport com.google.common.collect.ImmutableListMultimap;\nimport io.airlift.http.client.HttpStatus;\nimport io.airlift.http.client.Request;\nimport io.airlift.http.client.Response;\nimport io.airlift.http.client.testing.TestingHttpClient;\nimport io.airlift.http.client.testing.TestingResponse;\nimport io.airlift.testing.TestingTicker;\nimport io.airlift.units.DataSize;\nimport io.airlift.units.DataSize.Unit;\nimport io.airlift.units.Duration;\nimport org.testng.annotations.AfterClass;\nimport org.testng.annotations.BeforeClass;\nimport org.testng.annotations.Test;\n\nimport java.net.URI;\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.List;\nimport java.util.concurrent.BrokenBarrierException;\nimport java.util.concurrent.CyclicBarrier;\nimport java.util.concurrent.ExecutorService;\nimport java.util.concurrent.Executors;\nimport java.util.concurrent.ScheduledExecutorService;\nimport java.util.concurrent.TimeUnit;\nimport java.util.concurrent.TimeoutException;\nimport java.util.concurrent.atomic.AtomicInteger;\nimport java.util.concurrent.atomic.AtomicReference;\nimport java.util.stream.Collectors;\n\nimport static com.facebook.presto.PrestoMediaTypes.PRESTO_PAGES;\nimport static com.facebook.presto.execution.buffer.TestingPagesSerdeFactory.testingPagesSerde;\nimport static com.facebook.presto.spi.StandardErrorCode.PAGE_TOO_LARGE;\nimport static com.facebook.presto.spi.StandardErrorCode.PAGE_TRANSPORT_ERROR;\nimport static com.facebook.presto.spi.StandardErrorCode.PAGE_TRANSPORT_TIMEOUT;\nimport static com.facebook.presto.util.Failures.WORKER_NODE_ERROR;\nimport static com.google.common.net.HttpHeaders.CONTENT_TYPE;\nimport static io.airlift.concurrent.Threads.daemonThreadsNamed;\nimport static io.airlift.testing.Assertions.assertContains;\nimport static io.airlift.testing.Assertions.assertInstanceOf;\nimport static java.util.concurrent.Executors.newScheduledThreadPool;\nimport static org.testng.Assert.assertEquals;\n\npublic class TestHttpPageBufferClient\n{\n    private ScheduledExecutorService scheduler;\n    private ExecutorService pageBufferClientCallbackExecutor;\n\n    private static final PagesSerde PAGES_SERDE = testingPagesSerde();\n\n    @BeforeClass\n    public void setUp()\n    {\n        scheduler = newScheduledThreadPool(4, daemonThreadsNamed(\"test-%s\"));\n        pageBufferClientCallbackExecutor = Executors.newSingleThreadExecutor();\n    }\n\n    @AfterClass(alwaysRun = true)\n    public void tearDown()\n    {\n        if (scheduler != null) {\n            scheduler.shutdownNow();\n            scheduler = null;\n        }\n        if (pageBufferClientCallbackExecutor != null) {\n            pageBufferClientCallbackExecutor.shutdownNow();\n            pageBufferClientCallbackExecutor = null;\n        }\n    }\n\n    @Test\n    public void testHappyPath()\n            throws Exception\n    {\n        Page expectedPage = new Page(100);\n\n        DataSize expectedMaxSize = new DataSize(11, Unit.MEGABYTE);\n        MockExchangeRequestProcessor processor = new MockExchangeRequestProcessor(expectedMaxSize);\n\n        CyclicBarrier requestComplete = new CyclicBarrier(2);\n\n        TestingClientCallback callback = new TestingClientCallback(requestComplete);\n\n        URI location = URI.create(\"http://localhost:8080\");\n        HttpPageBufferClient client = new HttpPageBufferClient(new TestingHttpClient(processor, scheduler),\n                expectedMaxSize,\n                new Duration(1, TimeUnit.MINUTES),\n                new Duration(1, TimeUnit.MINUTES),\n                location,\n                callback,\n                scheduler,\n                pageBufferClientCallbackExecutor);\n\n        assertStatus(client, location, \"queued\", 0, 0, 0, 0, \"not scheduled\");\n\n        // fetch a page and verify\n        processor.addPage(location, expectedPage);\n        callback.resetStats();\n        client.scheduleRequest();\n        requestComplete.await(10, TimeUnit.SECONDS);\n\n        assertEquals(callback.getPages().size(), 1);\n        assertPageEquals(expectedPage, callback.getPages().get(0));\n        assertEquals(callback.getCompletedRequests(), 1);\n        assertEquals(callback.getFinishedBuffers(), 0);\n        assertStatus(client, location, \"queued\", 1, 1, 1, 0, \"not scheduled\");\n\n        // fetch no data and verify\n        callback.resetStats();\n        client.scheduleRequest();\n        requestComplete.await(10, TimeUnit.SECONDS);\n\n        assertEquals(callback.getPages().size(), 0);\n        assertEquals(callback.getCompletedRequests(), 1);\n        assertEquals(callback.getFinishedBuffers(), 0);\n        assertStatus(client, location, \"queued\", 1, 2, 2, 0, \"not scheduled\");\n\n        // fetch two more pages and verify\n        processor.addPage(location, expectedPage);\n        processor.addPage(location, expectedPage);\n        callback.resetStats();\n        client.scheduleRequest();\n        requestComplete.await(10, TimeUnit.SECONDS);\n\n        assertEquals(callback.getPages().size(), 2);\n        assertPageEquals(expectedPage, callback.getPages().get(0));\n        assertPageEquals(expectedPage, callback.getPages().get(1));\n        assertEquals(callback.getCompletedRequests(), 1);\n        assertEquals(callback.getFinishedBuffers(), 0);\n        assertEquals(callback.getFailedBuffers(), 0);\n        callback.resetStats();\n        assertStatus(client, location, \"queued\", 3, 3, 3, 0, \"not scheduled\");\n\n        // finish and verify\n        callback.resetStats();\n        processor.setComplete(location);\n        client.scheduleRequest();\n        requestComplete.await(10, TimeUnit.SECONDS);\n\n        // get the buffer complete signal\n        assertEquals(callback.getPages().size(), 0);\n        assertEquals(callback.getCompletedRequests(), 1);\n\n        // schedule the delete call to the buffer\n        callback.resetStats();\n        client.scheduleRequest();\n        requestComplete.await(10, TimeUnit.SECONDS);\n        assertEquals(callback.getFinishedBuffers(), 1);\n\n        assertEquals(callback.getPages().size(), 0);\n        assertEquals(callback.getCompletedRequests(), 0);\n        assertEquals(callback.getFailedBuffers(), 0);\n\n        assertStatus(client, location, \"closed\", 3, 5, 5, 0, \"not scheduled\");\n    }\n\n    @Test\n    public void testLifecycle()\n            throws Exception\n    {\n        CyclicBarrier beforeRequest = new CyclicBarrier(2);\n        CyclicBarrier afterRequest = new CyclicBarrier(2);\n        StaticRequestProcessor processor = new StaticRequestProcessor(beforeRequest, afterRequest);\n        processor.setResponse(new TestingResponse(HttpStatus.NO_CONTENT, ImmutableListMultimap.of(), new byte[0]));\n\n        CyclicBarrier requestComplete = new CyclicBarrier(2);\n        TestingClientCallback callback = new TestingClientCallback(requestComplete);\n\n        URI location = URI.create(\"http://localhost:8080\");\n        HttpPageBufferClient client = new HttpPageBufferClient(new TestingHttpClient(processor, scheduler),\n                new DataSize(10, Unit.MEGABYTE),\n                new Duration(1, TimeUnit.MINUTES),\n                new Duration(1, TimeUnit.MINUTES),\n                location,\n                callback,\n                scheduler,\n                pageBufferClientCallbackExecutor);\n\n        assertStatus(client, location, \"queued\", 0, 0, 0, 0, \"not scheduled\");\n\n        client.scheduleRequest();\n        beforeRequest.await(10, TimeUnit.SECONDS);\n        assertStatus(client, location, \"running\", 0, 1, 0, 0, \"PROCESSING_REQUEST\");\n        assertEquals(client.isRunning(), true);\n        afterRequest.await(10, TimeUnit.SECONDS);\n\n        requestComplete.await(10, TimeUnit.SECONDS);\n        assertStatus(client, location, \"queued\", 0, 1, 1, 1, \"not scheduled\");\n\n        client.close();\n        beforeRequest.await(10, TimeUnit.SECONDS);\n        assertStatus(client, location, \"closed\", 0, 1, 1, 1, \"PROCESSING_REQUEST\");\n        afterRequest.await(10, TimeUnit.SECONDS);\n        requestComplete.await(10, TimeUnit.SECONDS);\n        assertStatus(client, location, \"closed\", 0, 1, 2, 1, \"not scheduled\");\n    }\n\n    @Test\n    public void testInvalidResponses()\n            throws Exception\n    {\n        CyclicBarrier beforeRequest = new CyclicBarrier(1);\n        CyclicBarrier afterRequest = new CyclicBarrier(1);\n        StaticRequestProcessor processor = new StaticRequestProcessor(beforeRequest, afterRequest);\n\n        CyclicBarrier requestComplete = new CyclicBarrier(2);\n        TestingClientCallback callback = new TestingClientCallback(requestComplete);\n\n        URI location = URI.create(\"http://localhost:8080\");\n        HttpPageBufferClient client = new HttpPageBufferClient(new TestingHttpClient(processor, scheduler),\n                new DataSize(10, Unit.MEGABYTE),\n                new Duration(1, TimeUnit.MINUTES),\n                new Duration(1, TimeUnit.MINUTES),\n                location,\n                callback,\n                scheduler,\n                pageBufferClientCallbackExecutor);\n\n        assertStatus(client, location, \"queued\", 0, 0, 0, 0, \"not scheduled\");\n\n        // send not found response and verify response was ignored\n        processor.setResponse(new TestingResponse(HttpStatus.NOT_FOUND, ImmutableListMultimap.of(CONTENT_TYPE, PRESTO_PAGES), new byte[0]));\n        client.scheduleRequest();\n        requestComplete.await(10, TimeUnit.SECONDS);\n        assertEquals(callback.getPages().size(), 0);\n        assertEquals(callback.getCompletedRequests(), 1);\n        assertEquals(callback.getFinishedBuffers(), 0);\n        assertEquals(callback.getFailedBuffers(), 1);\n        assertInstanceOf(callback.getFailure(), PageTransportErrorException.class);\n        assertContains(callback.getFailure().getMessage(), \"Expected response code to be 200, but was 404 Not Found\");\n        assertStatus(client, location, \"queued\", 0, 1, 1, 1, \"not scheduled\");\n\n        // send invalid content type response and verify response was ignored\n        callback.resetStats();\n        processor.setResponse(new TestingResponse(HttpStatus.OK, ImmutableListMultimap.of(CONTENT_TYPE, \"INVALID_TYPE\"), new byte[0]));\n        client.scheduleRequest();\n        requestComplete.await(10, TimeUnit.SECONDS);\n        assertEquals(callback.getPages().size(), 0);\n        assertEquals(callback.getCompletedRequests(), 1);\n        assertEquals(callback.getFinishedBuffers(), 0);\n        assertEquals(callback.getFailedBuffers(), 1);\n        assertInstanceOf(callback.getFailure(), PageTransportErrorException.class);\n        assertContains(callback.getFailure().getMessage(), \"Expected application/x-presto-pages response from server but got INVALID_TYPE\");\n        assertStatus(client, location, \"queued\", 0, 2, 2, 2, \"not scheduled\");\n\n        // send unexpected content type response and verify response was ignored\n        callback.resetStats();\n        processor.setResponse(new TestingResponse(HttpStatus.OK, ImmutableListMultimap.of(CONTENT_TYPE, \"text/plain\"), new byte[0]));\n        client.scheduleRequest();\n        requestComplete.await(10, TimeUnit.SECONDS);\n        assertEquals(callback.getPages().size(), 0);\n        assertEquals(callback.getCompletedRequests(), 1);\n        assertEquals(callback.getFinishedBuffers(), 0);\n        assertEquals(callback.getFailedBuffers(), 1);\n        assertInstanceOf(callback.getFailure(), PageTransportErrorException.class);\n        assertContains(callback.getFailure().getMessage(), \"Expected application/x-presto-pages response from server but got text/plain\");\n        assertStatus(client, location, \"queued\", 0, 3, 3, 3, \"not scheduled\");\n\n        // close client and verify\n        client.close();\n        requestComplete.await(10, TimeUnit.SECONDS);\n        assertStatus(client, location, \"closed\", 0, 3, 4, 3, \"not scheduled\");\n    }\n\n    @Test\n    public void testCloseDuringPendingRequest()\n            throws Exception\n    {\n        CyclicBarrier beforeRequest = new CyclicBarrier(2);\n        CyclicBarrier afterRequest = new CyclicBarrier(2);\n        StaticRequestProcessor processor = new StaticRequestProcessor(beforeRequest, afterRequest);\n        processor.setResponse(new TestingResponse(HttpStatus.NO_CONTENT, ImmutableListMultimap.of(), new byte[0]));\n\n        CyclicBarrier requestComplete = new CyclicBarrier(2);\n        TestingClientCallback callback = new TestingClientCallback(requestComplete);\n\n        URI location = URI.create(\"http://localhost:8080\");\n        HttpPageBufferClient client = new HttpPageBufferClient(new TestingHttpClient(processor, scheduler),\n                new DataSize(10, Unit.MEGABYTE),\n                new Duration(1, TimeUnit.MINUTES),\n                new Duration(1, TimeUnit.MINUTES),\n                location,\n                callback,\n                scheduler,\n                pageBufferClientCallbackExecutor);\n\n        assertStatus(client, location, \"queued\", 0, 0, 0, 0, \"not scheduled\");\n\n        // send request\n        client.scheduleRequest();\n        beforeRequest.await(10, TimeUnit.SECONDS);\n        assertStatus(client, location, \"running\", 0, 1, 0, 0, \"PROCESSING_REQUEST\");\n        assertEquals(client.isRunning(), true);\n        // request is pending, now close it\n        client.close();\n\n        try {\n            requestComplete.await(10, TimeUnit.SECONDS);\n        }\n        catch (BrokenBarrierException ignored) {\n        }\n        try {\n            afterRequest.await(10, TimeUnit.SECONDS);\n        }\n        catch (BrokenBarrierException ignored) {\n            afterRequest.reset();\n        }\n        // client.close() triggers a DELETE request, so wait for it to finish\n        beforeRequest.await(10, TimeUnit.SECONDS);\n        afterRequest.await(10, TimeUnit.SECONDS);\n        requestComplete.await(10, TimeUnit.SECONDS);\n        assertStatus(client, location, \"closed\", 0, 1, 2, 1, \"not scheduled\");\n    }\n\n    @Test\n    public void testExceptionFromResponseHandler()\n            throws Exception\n    {\n        TestingTicker ticker = new TestingTicker();\n        AtomicReference<Duration> tickerIncrement = new AtomicReference<>(new Duration(0, TimeUnit.SECONDS));\n\n        TestingHttpClient.Processor processor = (input) -> {\n            Duration delta = tickerIncrement.get();\n            ticker.increment(delta.toMillis(), TimeUnit.MILLISECONDS);\n            throw new RuntimeException(\"Foo\");\n        };\n\n        CyclicBarrier requestComplete = new CyclicBarrier(2);\n        TestingClientCallback callback = new TestingClientCallback(requestComplete);\n\n        URI location = URI.create(\"http://localhost:8080\");\n        HttpPageBufferClient client = new HttpPageBufferClient(new TestingHttpClient(processor, scheduler),\n                new DataSize(10, Unit.MEGABYTE),\n                new Duration(1, TimeUnit.MINUTES),\n                new Duration(1, TimeUnit.MINUTES),\n                location,\n                callback,\n                scheduler,\n                ticker,\n                pageBufferClientCallbackExecutor);\n\n        assertStatus(client, location, \"queued\", 0, 0, 0, 0, \"not scheduled\");\n\n        // request processor will throw exception, verify the request is marked a completed\n        // this starts the error stopwatch\n        client.scheduleRequest();\n        requestComplete.await(10, TimeUnit.SECONDS);\n        assertEquals(callback.getPages().size(), 0);\n        assertEquals(callback.getCompletedRequests(), 1);\n        assertEquals(callback.getFinishedBuffers(), 0);\n        assertEquals(callback.getFailedBuffers(), 0);\n        assertStatus(client, location, \"queued\", 0, 1, 1, 1, \"not scheduled\");\n\n        // advance time forward, but not enough to fail the client\n        tickerIncrement.set(new Duration(30, TimeUnit.SECONDS));\n\n        // verify that the client has not failed\n        client.scheduleRequest();\n        requestComplete.await(10, TimeUnit.SECONDS);\n        assertEquals(callback.getPages().size(), 0);\n        assertEquals(callback.getCompletedRequests(), 2);\n        assertEquals(callback.getFinishedBuffers(), 0);\n        assertEquals(callback.getFailedBuffers(), 0);\n        assertStatus(client, location, \"queued\", 0, 2, 2, 2, \"not scheduled\");\n\n        // advance time forward beyond the minimum error duration\n        tickerIncrement.set(new Duration(31, TimeUnit.SECONDS));\n\n        // verify that the client has failed\n        client.scheduleRequest();\n        requestComplete.await(10, TimeUnit.SECONDS);\n        assertEquals(callback.getPages().size(), 0);\n        assertEquals(callback.getCompletedRequests(), 3);\n        assertEquals(callback.getFinishedBuffers(), 0);\n        assertEquals(callback.getFailedBuffers(), 1);\n        assertInstanceOf(callback.getFailure(), PageTransportTimeoutException.class);\n        assertContains(callback.getFailure().getMessage(), WORKER_NODE_ERROR + \" (http://localhost:8080/0 - 3 failures, time since last success 61.00s)\");\n        assertStatus(client, location, \"queued\", 0, 3, 3, 3, \"not scheduled\");\n    }\n\n    @Test\n    public void testErrorCodes()\n            throws Exception\n    {\n        assertEquals(new PageTooLargeException().getErrorCode(), PAGE_TOO_LARGE.toErrorCode());\n        assertEquals(new PageTransportErrorException(\"\").getErrorCode(), PAGE_TRANSPORT_ERROR.toErrorCode());\n        assertEquals(new PageTransportTimeoutException(HostAddress.fromParts(\"127.0.0.1\", 8080), \"\", null).getErrorCode(), PAGE_TRANSPORT_TIMEOUT.toErrorCode());\n    }\n\n    private static void assertStatus(\n            HttpPageBufferClient client,\n            URI location, String status,\n            int pagesReceived,\n            int requestsScheduled,\n            int requestsCompleted,\n            int requestsFailed,\n            String httpRequestState)\n    {\n        PageBufferClientStatus actualStatus = client.getStatus();\n        assertEquals(actualStatus.getUri(), location);\n        assertEquals(actualStatus.getState(), status, \"status\");\n        assertEquals(actualStatus.getPagesReceived(), pagesReceived, \"pagesReceived\");\n        assertEquals(actualStatus.getRequestsScheduled(), requestsScheduled, \"requestsScheduled\");\n        assertEquals(actualStatus.getRequestsCompleted(), requestsCompleted, \"requestsCompleted\");\n        assertEquals(actualStatus.getRequestsFailed(), requestsFailed, \"requestsFailed\");\n        assertEquals(actualStatus.getHttpRequestState(), httpRequestState, \"httpRequestState\");\n    }\n\n    private static void assertPageEquals(Page expectedPage, Page actualPage)\n    {\n        assertEquals(actualPage.getPositionCount(), expectedPage.getPositionCount());\n        assertEquals(actualPage.getChannelCount(), expectedPage.getChannelCount());\n    }\n\n    private static class TestingClientCallback\n            implements ClientCallback\n    {\n        private final CyclicBarrier done;\n        private final List<SerializedPage> pages = Collections.synchronizedList(new ArrayList<>());\n        private final AtomicInteger completedRequests = new AtomicInteger();\n        private final AtomicInteger finishedBuffers = new AtomicInteger();\n        private final AtomicInteger failedBuffers = new AtomicInteger();\n        private final AtomicReference<Throwable> failure = new AtomicReference<>();\n\n        public TestingClientCallback(CyclicBarrier done)\n        {\n            this.done = done;\n        }\n\n        public List<Page> getPages()\n        {\n            return pages.stream()\n                    .map(PAGES_SERDE::deserialize)\n                    .collect(Collectors.toList());\n        }\n\n        private int getCompletedRequests()\n        {\n            return completedRequests.get();\n        }\n\n        private int getFinishedBuffers()\n        {\n            return finishedBuffers.get();\n        }\n\n        public int getFailedBuffers()\n        {\n            return failedBuffers.get();\n        }\n\n        public Throwable getFailure()\n        {\n            return failure.get();\n        }\n\n        @Override\n        public boolean addPages(HttpPageBufferClient client, List<SerializedPage> pages)\n        {\n            this.pages.addAll(pages);\n            return true;\n        }\n\n        @Override\n        public void requestComplete(HttpPageBufferClient client)\n        {\n            completedRequests.getAndIncrement();\n            awaitDone();\n        }\n\n        @Override\n        public void clientFinished(HttpPageBufferClient client)\n        {\n            finishedBuffers.getAndIncrement();\n            awaitDone();\n        }\n\n        @Override\n        public void clientFailed(HttpPageBufferClient client, Throwable cause)\n        {\n            failedBuffers.getAndIncrement();\n            failure.compareAndSet(null, cause);\n            // requestComplete() will be called after this\n        }\n\n        public void resetStats()\n        {\n            pages.clear();\n            completedRequests.set(0);\n            finishedBuffers.set(0);\n            failedBuffers.set(0);\n            failure.set(null);\n        }\n\n        private void awaitDone()\n        {\n            try {\n                done.await(10, TimeUnit.SECONDS);\n            }\n            catch (InterruptedException e) {\n                Thread.currentThread().interrupt();\n                throw Throwables.propagate(e);\n            }\n            catch (BrokenBarrierException | TimeoutException e) {\n                throw Throwables.propagate(e);\n            }\n        }\n    }\n\n    private static class StaticRequestProcessor\n            implements TestingHttpClient.Processor\n    {\n        private final AtomicReference<Response> response = new AtomicReference<>();\n        private final CyclicBarrier beforeRequest;\n        private final CyclicBarrier afterRequest;\n\n        private StaticRequestProcessor(CyclicBarrier beforeRequest, CyclicBarrier afterRequest)\n        {\n            this.beforeRequest = beforeRequest;\n            this.afterRequest = afterRequest;\n        }\n\n        private void setResponse(Response response)\n        {\n            this.response.set(response);\n        }\n\n        @SuppressWarnings({\"ThrowFromFinallyBlock\", \"Finally\"})\n        @Override\n        public Response handle(Request request)\n                throws Exception\n        {\n            beforeRequest.await(10, TimeUnit.SECONDS);\n\n            try {\n                return response.get();\n            }\n            finally {\n                afterRequest.await(10, TimeUnit.SECONDS);\n            }\n        }\n    }\n}\n", "methodName": "void TestHttpPageBufferClient.testInvalidResponses()", "exampleID": 54, "dataset": "infer", "filepath": "presto-main/src/test/java/com/facebook/presto/operator/TestHttpPageBufferClient.java", "source": "io.airlift.http.client.testing.TestingHttpClient", "sourceLine": 230, "qualifier": "Resource of type $$io.airlift.http.client.testing.TestingHttpClient/$ acquired by call to @@new()/@ is not released", "steps": [{"line": 144, "source": "io.airlift.http.client.testing.TestingHttpClient", "filepath": "presto-main/src/main/java/com/facebook/presto/operator/HttpPageBufferClient.java", "methodName": "HttpPageBufferClient.HttpPageBufferClient", "exampleID": 55}], "line_number": 230, "records": [{"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/operator/HttpPageBufferClient.java", "line_number": 144, "column_number": -1, "description": "start of procedure HttpPageBufferClient(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "HttpPageBufferClient.<init>(TestingHttpClient,DataSize,Duration,Duration,URI,TestHttpPageBufferClient$TestingClientCallback,ScheduledExecutorService,Executor)"}, {"tag": "name_id", "value": "com.facebook.presto.operator.HttpPageBufferClient.<init>(io.airlift.http.client.testing.TestingHttpC.c1b7e4e859205f1bc249eb20930c3ca2"}], "snippet": "    public HttpPageBufferClient(", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/operator/HttpPageBufferClient.java", "methodName": "HttpPageBufferClient"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/operator/HttpPageBufferClient.java", "line_number": 154, "column_number": -1, "description": "Skipping HttpPageBufferClient(...): empty list of specs", "node_tags": [], "snippet": "        this(httpClient, maxResponseSize, minErrorDuration, maxErrorDuration, location, clientCallback, scheduler, Ticker.systemTicker(), pageBufferClientCallbackExecutor);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/operator/HttpPageBufferClient.java", "methodName": "HttpPageBufferClient"}, {"level": 2, "filename": "presto-main/src/main/java/com/facebook/presto/operator/HttpPageBufferClient.java", "line_number": 157, "column_number": -1, "description": "Definition of HttpPageBufferClient(...)", "node_tags": [], "snippet": "    public HttpPageBufferClient(", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/operator/HttpPageBufferClient.java", "methodName": "HttpPageBufferClient"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/operator/HttpPageBufferClient.java", "line_number": 155, "column_number": -1, "description": "return from a call to HttpPageBufferClient.<init>(TestingHttpClient,DataSize,Duration,Duration,URI,TestHttpPageBufferClient$TestingClientCallback,ScheduledExecutorService,Executor)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "HttpPageBufferClient.<init>(TestingHttpClient,DataSize,Duration,Duration,URI,TestHttpPageBufferClient$TestingClientCallback,ScheduledExecutorService,Executor)"}, {"tag": "name_id", "value": "com.facebook.presto.operator.HttpPageBufferClient.<init>(io.airlift.http.client.testing.TestingHttpC.c1b7e4e859205f1bc249eb20930c3ca2"}], "snippet": "    }", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/operator/HttpPageBufferClient.java", "methodName": "HttpPageBufferClient"}], "combined_records": [{"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/operator/HttpPageBufferClient.java", "line_number": 154, "column_number": -1, "description": "start of procedure HttpPageBufferClient(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "HttpPageBufferClient.<init>(TestingHttpClient,DataSize,Duration,Duration,URI,TestHttpPageBufferClient$TestingClientCallback,ScheduledExecutorService,Executor)"}, {"tag": "name_id", "value": "com.facebook.presto.operator.HttpPageBufferClient.<init>(io.airlift.http.client.testing.TestingHttpC.c1b7e4e859205f1bc249eb20930c3ca2"}], "snippet": "142.\n143.    public HttpPageBufferClient(\n144.>             HttpClient httpClient,\n145.            DataSize maxResponseSize,\n146.            Duration minErrorDuration,\n147.            Duration maxErrorDuration,\n148.            URI location,\n149.            ClientCallback clientCallback,\n150.            ScheduledExecutorService scheduler,\n151.            Executor pageBufferClientCallbackExecutor)\n152.    {\n153.        this(httpClient, maxResponseSize, minErrorDuration, maxErrorDuration, location, clientCallback, scheduler, Ticker.systemTicker(), pageBufferClientCallbackExecutor);\n154.    }\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/operator/HttpPageBufferClient.java", "methodName": "HttpPageBufferClient", "line_numbers": [144, 154]}, {"level": 2, "filename": "presto-main/src/main/java/com/facebook/presto/operator/HttpPageBufferClient.java", "line_number": 157, "column_number": -1, "description": "Definition of HttpPageBufferClient(...)", "node_tags": [], "snippet": "155.\n156.    public HttpPageBufferClient(\n157.>             HttpClient httpClient,\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/operator/HttpPageBufferClient.java", "methodName": "HttpPageBufferClient", "line_numbers": [157]}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/operator/HttpPageBufferClient.java", "line_number": 155, "column_number": -1, "description": "return from a call to HttpPageBufferClient.<init>(TestingHttpClient,DataSize,Duration,Duration,URI,TestHttpPageBufferClient$TestingClientCallback,ScheduledExecutorService,Executor)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "HttpPageBufferClient.<init>(TestingHttpClient,DataSize,Duration,Duration,URI,TestHttpPageBufferClient$TestingClientCallback,ScheduledExecutorService,Executor)"}, {"tag": "name_id", "value": "com.facebook.presto.operator.HttpPageBufferClient.<init>(io.airlift.http.client.testing.TestingHttpC.c1b7e4e859205f1bc249eb20930c3ca2"}], "snippet": "153.        this(httpClient, maxResponseSize, minErrorDuration, maxErrorDuration, location, clientCallback, scheduler, Ticker.systemTicker(), pageBufferClientCallbackExecutor);\n154.    }\n155.> \n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/operator/HttpPageBufferClient.java", "methodName": "HttpPageBufferClient", "line_numbers": [155]}], "infer_explore": [{"level": 0, "filename": "presto-main/src/test/java/com/facebook/presto/operator/TestHttpPageBufferClient.java", "line_number": 219, "column_number": -1, "description": "start of procedure testInvalidResponses()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void TestHttpPageBufferClient.testInvalidResponses()"}, {"tag": "name_id", "value": "com.facebook.presto.operator.TestHttpPageBufferClient.testInvalidResponses():void.3f1a1a716ea7ef1e75e735a3c1956393"}], "snippet": "216. \n217.     @Test\n218. >     public void testInvalidResponses()\n219.             throws Exception\n220.     {\n"}, {"level": 0, "filename": "presto-main/src/test/java/com/facebook/presto/operator/TestHttpPageBufferClient.java", "line_number": 222, "column_number": -1, "description": "Skipping CyclicBarrier(...): unknown method", "node_tags": [], "snippet": "219.             throws Exception\n220.     {\n221. >         CyclicBarrier beforeRequest = new CyclicBarrier(1);\n222.         CyclicBarrier afterRequest = new CyclicBarrier(1);\n223.         StaticRequestProcessor processor = new StaticRequestProcessor(beforeRequest, afterRequest);\n"}, {"level": 0, "filename": "presto-main/src/test/java/com/facebook/presto/operator/TestHttpPageBufferClient.java", "line_number": 223, "column_number": -1, "description": "Skipping CyclicBarrier(...): unknown method", "node_tags": [], "snippet": "220.     {\n221.         CyclicBarrier beforeRequest = new CyclicBarrier(1);\n222. >         CyclicBarrier afterRequest = new CyclicBarrier(1);\n223.         StaticRequestProcessor processor = new StaticRequestProcessor(beforeRequest, afterRequest);\n224. \n"}, {"level": 0, "filename": "presto-main/src/test/java/com/facebook/presto/operator/TestHttpPageBufferClient.java", "line_number": 224, "column_number": -1, "description": "", "node_tags": [], "snippet": "221.         CyclicBarrier beforeRequest = new CyclicBarrier(1);\n222.         CyclicBarrier afterRequest = new CyclicBarrier(1);\n223. >         StaticRequestProcessor processor = new StaticRequestProcessor(beforeRequest, afterRequest);\n224. \n225.         CyclicBarrier requestComplete = new CyclicBarrier(2);\n"}, {"level": 1, "filename": "presto-main/src/test/java/com/facebook/presto/operator/TestHttpPageBufferClient.java", "line_number": 537, "column_number": -1, "description": "start of procedure TestHttpPageBufferClient$StaticRequestProcessor(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "TestHttpPageBufferClient$StaticRequestProcessor.<init>(CyclicBarrier,CyclicBarrier)"}, {"tag": "name_id", "value": "com.facebook.presto.operator.TestHttpPageBufferClient$StaticRequestProcessor.<init>(java.util.concur.f6a2a7c8192d4ac32015e92826a869dc"}], "snippet": "534.         private final CyclicBarrier afterRequest;\n535. \n536. >         private StaticRequestProcessor(CyclicBarrier beforeRequest, CyclicBarrier afterRequest)\n537.         {\n538.             this.beforeRequest = beforeRequest;\n"}, {"level": 1, "filename": "presto-main/src/test/java/com/facebook/presto/operator/TestHttpPageBufferClient.java", "line_number": 538, "column_number": -1, "description": "", "node_tags": [], "snippet": "535. \n536.         private StaticRequestProcessor(CyclicBarrier beforeRequest, CyclicBarrier afterRequest)\n537. >         {\n538.             this.beforeRequest = beforeRequest;\n539.             this.afterRequest = afterRequest;\n"}, {"level": 1, "filename": "presto-main/src/test/java/com/facebook/presto/operator/TestHttpPageBufferClient.java", "line_number": 533, "column_number": -1, "description": "", "node_tags": [], "snippet": "530.             implements TestingHttpClient.Processor\n531.     {\n532. >         private final AtomicReference<Response> response = new AtomicReference<>();\n533.         private final CyclicBarrier beforeRequest;\n534.         private final CyclicBarrier afterRequest;\n"}, {"level": 1, "filename": "presto-main/src/test/java/com/facebook/presto/operator/TestHttpPageBufferClient.java", "line_number": 539, "column_number": -1, "description": "", "node_tags": [], "snippet": "536.         private StaticRequestProcessor(CyclicBarrier beforeRequest, CyclicBarrier afterRequest)\n537.         {\n538. >             this.beforeRequest = beforeRequest;\n539.             this.afterRequest = afterRequest;\n540.         }\n"}, {"level": 1, "filename": "presto-main/src/test/java/com/facebook/presto/operator/TestHttpPageBufferClient.java", "line_number": 540, "column_number": -1, "description": "", "node_tags": [], "snippet": "537.         {\n538.             this.beforeRequest = beforeRequest;\n539. >             this.afterRequest = afterRequest;\n540.         }\n541. \n"}, {"level": 1, "filename": "presto-main/src/test/java/com/facebook/presto/operator/TestHttpPageBufferClient.java", "line_number": 541, "column_number": -1, "description": "return from a call to TestHttpPageBufferClient$StaticRequestProcessor.<init>(CyclicBarrier,CyclicBarrier)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "TestHttpPageBufferClient$StaticRequestProcessor.<init>(CyclicBarrier,CyclicBarrier)"}, {"tag": "name_id", "value": "com.facebook.presto.operator.TestHttpPageBufferClient$StaticRequestProcessor.<init>(java.util.concur.f6a2a7c8192d4ac32015e92826a869dc"}], "snippet": "538.             this.beforeRequest = beforeRequest;\n539.             this.afterRequest = afterRequest;\n540. >         }\n541. \n542.         private void setResponse(Response response)\n"}, {"level": 0, "filename": "presto-main/src/test/java/com/facebook/presto/operator/TestHttpPageBufferClient.java", "line_number": 226, "column_number": -1, "description": "Skipping CyclicBarrier(...): unknown method", "node_tags": [], "snippet": "223.         StaticRequestProcessor processor = new StaticRequestProcessor(beforeRequest, afterRequest);\n224. \n225. >         CyclicBarrier requestComplete = new CyclicBarrier(2);\n226.         TestingClientCallback callback = new TestingClientCallback(requestComplete);\n227. \n"}, {"level": 0, "filename": "presto-main/src/test/java/com/facebook/presto/operator/TestHttpPageBufferClient.java", "line_number": 227, "column_number": -1, "description": "", "node_tags": [], "snippet": "224. \n225.         CyclicBarrier requestComplete = new CyclicBarrier(2);\n226. >         TestingClientCallback callback = new TestingClientCallback(requestComplete);\n227. \n228.         URI location = URI.create(\"http://localhost:8080\");\n"}, {"level": 1, "filename": "presto-main/src/test/java/com/facebook/presto/operator/TestHttpPageBufferClient.java", "line_number": 445, "column_number": -1, "description": "start of procedure TestHttpPageBufferClient$TestingClientCallback(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "TestHttpPageBufferClient$TestingClientCallback.<init>(CyclicBarrier)"}, {"tag": "name_id", "value": "com.facebook.presto.operator.TestHttpPageBufferClient$TestingClientCallback.<init>(java.util.concurr.424313fe5416cd8b3384a36b493a7dbd"}], "snippet": "442.         private final AtomicReference<Throwable> failure = new AtomicReference<>();\n443. \n444. >         public TestingClientCallback(CyclicBarrier done)\n445.         {\n446.             this.done = done;\n"}, {"level": 1, "filename": "presto-main/src/test/java/com/facebook/presto/operator/TestHttpPageBufferClient.java", "line_number": 446, "column_number": -1, "description": "", "node_tags": [], "snippet": "443. \n444.         public TestingClientCallback(CyclicBarrier done)\n445. >         {\n446.             this.done = done;\n447.         }\n"}, {"level": 1, "filename": "presto-main/src/test/java/com/facebook/presto/operator/TestHttpPageBufferClient.java", "line_number": 439, "column_number": -1, "description": "", "node_tags": [], "snippet": "436.     {\n437.         private final CyclicBarrier done;\n438. >         private final List<SerializedPage> pages = Collections.synchronizedList(new ArrayList<>());\n439.         private final AtomicInteger completedRequests = new AtomicInteger();\n440.         private final AtomicInteger finishedBuffers = new AtomicInteger();\n"}, {"level": 1, "filename": "presto-main/src/test/java/com/facebook/presto/operator/TestHttpPageBufferClient.java", "line_number": 440, "column_number": -1, "description": "", "node_tags": [], "snippet": "437.         private final CyclicBarrier done;\n438.         private final List<SerializedPage> pages = Collections.synchronizedList(new ArrayList<>());\n439. >         private final AtomicInteger completedRequests = new AtomicInteger();\n440.         private final AtomicInteger finishedBuffers = new AtomicInteger();\n441.         private final AtomicInteger failedBuffers = new AtomicInteger();\n"}, {"level": 1, "filename": "presto-main/src/test/java/com/facebook/presto/operator/TestHttpPageBufferClient.java", "line_number": 441, "column_number": -1, "description": "", "node_tags": [], "snippet": "438.         private final List<SerializedPage> pages = Collections.synchronizedList(new ArrayList<>());\n439.         private final AtomicInteger completedRequests = new AtomicInteger();\n440. >         private final AtomicInteger finishedBuffers = new AtomicInteger();\n441.         private final AtomicInteger failedBuffers = new AtomicInteger();\n442.         private final AtomicReference<Throwable> failure = new AtomicReference<>();\n"}, {"level": 1, "filename": "presto-main/src/test/java/com/facebook/presto/operator/TestHttpPageBufferClient.java", "line_number": 442, "column_number": -1, "description": "", "node_tags": [], "snippet": "439.         private final AtomicInteger completedRequests = new AtomicInteger();\n440.         private final AtomicInteger finishedBuffers = new AtomicInteger();\n441. >         private final AtomicInteger failedBuffers = new AtomicInteger();\n442.         private final AtomicReference<Throwable> failure = new AtomicReference<>();\n443. \n"}, {"level": 1, "filename": "presto-main/src/test/java/com/facebook/presto/operator/TestHttpPageBufferClient.java", "line_number": 443, "column_number": -1, "description": "", "node_tags": [], "snippet": "440.         private final AtomicInteger finishedBuffers = new AtomicInteger();\n441.         private final AtomicInteger failedBuffers = new AtomicInteger();\n442. >         private final AtomicReference<Throwable> failure = new AtomicReference<>();\n443. \n444.         public TestingClientCallback(CyclicBarrier done)\n"}, {"level": 1, "filename": "presto-main/src/test/java/com/facebook/presto/operator/TestHttpPageBufferClient.java", "line_number": 447, "column_number": -1, "description": "", "node_tags": [], "snippet": "444.         public TestingClientCallback(CyclicBarrier done)\n445.         {\n446. >             this.done = done;\n447.         }\n448. \n"}, {"level": 1, "filename": "presto-main/src/test/java/com/facebook/presto/operator/TestHttpPageBufferClient.java", "line_number": 448, "column_number": -1, "description": "return from a call to TestHttpPageBufferClient$TestingClientCallback.<init>(CyclicBarrier)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "TestHttpPageBufferClient$TestingClientCallback.<init>(CyclicBarrier)"}, {"tag": "name_id", "value": "com.facebook.presto.operator.TestHttpPageBufferClient$TestingClientCallback.<init>(java.util.concurr.424313fe5416cd8b3384a36b493a7dbd"}], "snippet": "445.         {\n446.             this.done = done;\n447. >         }\n448. \n449.         public List<Page> getPages()\n"}, {"level": 0, "filename": "presto-main/src/test/java/com/facebook/presto/operator/TestHttpPageBufferClient.java", "line_number": 229, "column_number": -1, "description": "Skipping create(...): unknown method", "node_tags": [], "snippet": "226.         TestingClientCallback callback = new TestingClientCallback(requestComplete);\n227. \n228. >         URI location = URI.create(\"http://localhost:8080\");\n229.         HttpPageBufferClient client = new HttpPageBufferClient(new TestingHttpClient(processor, scheduler),\n230.                 new DataSize(10, Unit.MEGABYTE),\n"}, {"level": 0, "filename": "presto-main/src/test/java/com/facebook/presto/operator/TestHttpPageBufferClient.java", "line_number": 230, "column_number": -1, "description": "", "node_tags": [], "snippet": "227. \n228.         URI location = URI.create(\"http://localhost:8080\");\n229. >         HttpPageBufferClient client = new HttpPageBufferClient(new TestingHttpClient(processor, scheduler),\n230.                 new DataSize(10, Unit.MEGABYTE),\n231.                 new Duration(1, TimeUnit.MINUTES),\n"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/operator/HttpPageBufferClient.java", "line_number": 144, "column_number": -1, "description": "start of procedure HttpPageBufferClient(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "HttpPageBufferClient.<init>(TestingHttpClient,DataSize,Duration,Duration,URI,TestHttpPageBufferClient$TestingClientCallback,ScheduledExecutorService,Executor)"}, {"tag": "name_id", "value": "com.facebook.presto.operator.HttpPageBufferClient.<init>(io.airlift.http.client.testing.TestingHttpC.c1b7e4e859205f1bc249eb20930c3ca2"}], "snippet": "141.     private final Executor pageBufferClientCallbackExecutor;\n142. \n143. >     public HttpPageBufferClient(\n144.             HttpClient httpClient,\n145.             DataSize maxResponseSize,\n"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/operator/HttpPageBufferClient.java", "line_number": 154, "column_number": -1, "description": "Skipping HttpPageBufferClient(...): empty list of specs", "node_tags": [], "snippet": "151.             Executor pageBufferClientCallbackExecutor)\n152.     {\n153. >         this(httpClient, maxResponseSize, minErrorDuration, maxErrorDuration, location, clientCallback, scheduler, Ticker.systemTicker(), pageBufferClientCallbackExecutor);\n154.     }\n155. \n"}, {"level": 2, "filename": "presto-main/src/main/java/com/facebook/presto/operator/HttpPageBufferClient.java", "line_number": 157, "column_number": -1, "description": "Definition of HttpPageBufferClient(...)", "node_tags": [], "snippet": "154.     }\n155. \n156. >     public HttpPageBufferClient(\n157.             HttpClient httpClient,\n158.             DataSize maxResponseSize,\n"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/operator/HttpPageBufferClient.java", "line_number": 155, "column_number": -1, "description": "return from a call to HttpPageBufferClient.<init>(TestingHttpClient,DataSize,Duration,Duration,URI,TestHttpPageBufferClient$TestingClientCallback,ScheduledExecutorService,Executor)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "HttpPageBufferClient.<init>(TestingHttpClient,DataSize,Duration,Duration,URI,TestHttpPageBufferClient$TestingClientCallback,ScheduledExecutorService,Executor)"}, {"tag": "name_id", "value": "com.facebook.presto.operator.HttpPageBufferClient.<init>(io.airlift.http.client.testing.TestingHttpC.c1b7e4e859205f1bc249eb20930c3ca2"}], "snippet": "152.     {\n153.         this(httpClient, maxResponseSize, minErrorDuration, maxErrorDuration, location, clientCallback, scheduler, Ticker.systemTicker(), pageBufferClientCallbackExecutor);\n154. >     }\n155. \n156.     public HttpPageBufferClient(\n"}]}, {"url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestRcFileReaderManual.java", "rawCode": "/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage com.facebook.presto.rcfile;\n\nimport com.facebook.presto.rcfile.binary.BinaryRcFileEncoding;\nimport com.facebook.presto.spi.block.Block;\nimport com.google.common.collect.ImmutableList;\nimport com.google.common.collect.ImmutableMap;\nimport io.airlift.slice.DynamicSliceOutput;\nimport io.airlift.slice.Slice;\nimport io.airlift.slice.SliceOutput;\nimport io.airlift.units.DataSize;\nimport org.testng.annotations.Test;\n\nimport java.io.IOException;\nimport java.util.List;\n\nimport static com.facebook.presto.spi.type.SmallintType.SMALLINT;\nimport static com.google.common.base.Preconditions.checkArgument;\nimport static io.airlift.slice.Slices.utf8Slice;\nimport static io.airlift.units.DataSize.Unit.MEGABYTE;\nimport static java.lang.Math.toIntExact;\nimport static java.util.stream.Collectors.toList;\nimport static org.testng.Assert.assertEquals;\n\npublic class TestRcFileReaderManual\n{\n    private static final Slice COLUMN_COUNT_METADATA_KEY = utf8Slice(\"hive.io.rcfile.column.number\");\n    private static final Slice RCFILE_MAGIC = utf8Slice(\"RCF\");\n    private static final int CURRENT_VERSION = 1;\n    private static final long syncFirst = 0x1234_5678_9012_3456L;\n    private static final long syncSecond = 0x7890_1234_5678_9012L;\n\n    @Test\n    public void testNoStartSync()\n            throws Exception\n    {\n        SliceOutput output = new DynamicSliceOutput(10 * 1024);\n\n        List<Segment> segments = ImmutableList.of(\n                writeSegment(output, ImmutableList.of(ImmutableList.of(0, 2, 3, 4), ImmutableList.of(10, 12, 13))),\n                writeSegment(output, ImmutableList.of(ImmutableList.of(20, 22), ImmutableList.of(30, 33), ImmutableList.of(40, 44))),\n                writeSegment(output, ImmutableList.of(ImmutableList.of(100, 101, 102))));\n\n        assertFileSegments(output.slice(), segments);\n    }\n\n    @Test\n    public void testStartSync()\n            throws Exception\n    {\n        SliceOutput output = new DynamicSliceOutput(10 * 1024);\n\n        List<Segment> segments = ImmutableList.of(\n                writeSegment(output, ImmutableList.of()),\n                writeSegment(output, ImmutableList.of(ImmutableList.of(0, 2, 3, 4), ImmutableList.of(10, 12, 13))),\n                writeSegment(output, ImmutableList.of(ImmutableList.of(20, 22), ImmutableList.of(30, 33), ImmutableList.of(40, 44))),\n                writeSegment(output, ImmutableList.of(ImmutableList.of(100, 101, 102))));\n\n        assertFileSegments(output.slice(), segments);\n    }\n\n    private static void assertFileSegments(Slice file, List<Segment> segments)\n            throws IOException\n    {\n        // read whole file\n        List<Integer> allValues = segments.stream()\n                .map(Segment::getValues)\n                .flatMap(List::stream)\n                .collect(toList());\n        assertEquals(allValues, readValues(file, 0, file.length()));\n\n        for (Segment segment : segments) {\n            // whole segment\n            assertEquals(segment.getValues(), readValues(file, segment.getOffset(), segment.getLength()));\n            // first byte of segment\n            assertEquals(segment.getValues(), readValues(file, segment.getOffset(), 1));\n            // straddle segment start\n            assertEquals(segment.getValues(), readValues(file, segment.getOffset() - 1, 2));\n\n            // regions entirely within the the segment\n            assertEquals(ImmutableList.of(), readValues(file, segment.getOffset() + 1, 1));\n            assertEquals(ImmutableList.of(), readValues(file, segment.getOffset() + 1, segment.getLength() - 1));\n\n            for (int rowGroupOffset : segment.getRowGroupSegmentOffsets()) {\n                // segment header to row group start\n                assertEquals(segment.getValues(), readValues(file, segment.getOffset(), rowGroupOffset));\n                assertEquals(segment.getValues(), readValues(file, segment.getOffset(), rowGroupOffset - 1));\n                assertEquals(segment.getValues(), readValues(file, segment.getOffset(), rowGroupOffset + 1));\n\n                // region from grow group start until end of file (row group offset is always inside of the segment since a\n                // segment starts with a file header or sync sequence)\n                assertEquals(ImmutableList.of(), readValues(file, segment.getOffset() + rowGroupOffset, segment.getLength() - rowGroupOffset));\n            }\n        }\n\n        // all combinations of segments\n        for (int startSegmentIndex = 0; startSegmentIndex < segments.size(); startSegmentIndex++) {\n            Segment startSegment = segments.get(startSegmentIndex);\n            for (int endSegmentIndex = startSegmentIndex; endSegmentIndex < segments.size(); endSegmentIndex++) {\n                Segment endSegment = segments.get(endSegmentIndex);\n\n                List<Integer> segmentsValues = segments.subList(startSegmentIndex, endSegmentIndex + 1).stream()\n                        .map(Segment::getValues)\n                        .flatMap(List::stream)\n                        .collect(toList());\n\n                assertEquals(segmentsValues, readValues(file, startSegment.getOffset(), endSegment.getOffset() + endSegment.getLength() - startSegment.getOffset()));\n                assertEquals(segmentsValues, readValues(file, startSegment.getOffset(), endSegment.getOffset() + 1 - startSegment.getOffset()));\n                assertEquals(segmentsValues, readValues(file, startSegment.getOffset() - 1, endSegment.getOffset() + 1 + endSegment.getLength() - startSegment.getOffset()));\n                assertEquals(segmentsValues, readValues(file, startSegment.getOffset() - 1, endSegment.getOffset() + 1 + 1 - startSegment.getOffset()));\n            }\n        }\n    }\n\n    private static Segment writeSegment(SliceOutput output, List<List<Integer>> rowGroups)\n    {\n        int offset = output.size();\n\n        // if we are at the beginning of the file write a file header, otherwise write a sync\n        if (offset == 0) {\n            writeFileHeader(output);\n        }\n        else {\n            writeSync(output);\n        }\n\n        ImmutableList.Builder<Integer> rowGroupOffsets = ImmutableList.builder();\n        for (List<Integer> rowGroup : rowGroups) {\n            rowGroupOffsets.add(output.size() - offset);\n            writeRowGroup(output, rowGroup);\n        }\n        int length = output.size() - offset;\n\n        return new Segment(\n                rowGroups.stream()\n                        .flatMap(List::stream)\n                        .collect(toList()),\n                offset,\n                length,\n                rowGroupOffsets.build());\n    }\n\n    private static void writeFileHeader(SliceOutput output)\n    {\n        // write header\n        output.writeBytes(RCFILE_MAGIC);\n        output.writeByte(CURRENT_VERSION);\n\n        // write codec information\n        output.writeBoolean(false);\n\n        // write metadata (which contains just the column count)\n        output.writeInt(Integer.reverseBytes(1));\n        output.writeByte(COLUMN_COUNT_METADATA_KEY.length());\n        output.writeBytes(COLUMN_COUNT_METADATA_KEY);\n        output.writeByte(1);\n        output.writeByte('1');\n\n        // write sync sequence\n        output.writeLong(syncFirst);\n        output.writeLong(syncSecond);\n    }\n\n    private static void writeSync(SliceOutput output)\n    {\n        output.writeInt(-1);\n        output.writeLong(syncFirst);\n        output.writeLong(syncSecond);\n    }\n\n    private static void writeRowGroup(SliceOutput output, List<Integer> shortValues)\n    {\n        // add arbitrary limit assure all lengths write as a simple single vint byte\n        checkArgument(shortValues.size() < 32);\n\n        // key section is 4 vint sizes followed by the column data\n        int columnLengthsLength = shortValues.size();\n        int keySectionLength = 4 + columnLengthsLength;\n\n        int columnDataLength = shortValues.size() * 2;\n\n        // write the sum of the uncompressed key length and compressed value length\n        // this number is useless to the reader\n        output.writeInt(Integer.reverseBytes(keySectionLength + columnDataLength));\n\n        // key section: uncompressed size\n        output.writeInt(Integer.reverseBytes(keySectionLength));\n        // key section: compressed size\n        output.writeInt(Integer.reverseBytes(keySectionLength));\n        // key section: row count\n        output.writeByte(shortValues.size());\n\n        // key section: column data compressed size\n        output.writeByte(columnDataLength);\n        // key section: column data uncompressed size\n        output.writeByte(columnDataLength);\n        // key section: column lengths uncompressed size\n        output.writeByte(columnLengthsLength);\n        // key section: column lengths\n        for (int ignored : shortValues) {\n            output.write(2);\n        }\n\n        // value section: data\n        for (int value : shortValues) {\n            output.writeShort(Short.reverseBytes((short) value));\n        }\n    }\n\n    private static List<Integer> readValues(Slice data, int offset, int length)\n            throws IOException\n    {\n        // to simplify the testing:\n        //     change negative offsets to 0\n        //     truncate length so it is not off the end of the file\n\n        if (offset < 0) {\n            // adjust length to new offset\n            length += offset;\n            offset = 0;\n        }\n        if (offset + length > data.length()) {\n            length = data.length() - offset;\n        }\n\n        RcFileReader reader = new RcFileReader(\n                new SliceRcFileDataSource(data),\n                new BinaryRcFileEncoding(),\n                ImmutableMap.of(0, SMALLINT),\n                new BogusRcFileCodecFactory(),\n                offset,\n                length,\n                new DataSize(8, MEGABYTE));\n\n        ImmutableList.Builder<Integer> values = ImmutableList.builder();\n        while (reader.advance() >= 0) {\n            Block block = reader.readBlock(0);\n            for (int position = 0; position < block.getPositionCount(); position++) {\n                values.add((int) SMALLINT.getLong(block, position));\n            }\n        }\n\n        return values.build();\n    }\n\n    private static class Segment\n    {\n        private final List<Integer> values;\n        private final int offset;\n        private final int length;\n        private final List<Integer> rowGroupSegmentOffsets;\n\n        public Segment(List<Integer> values, int offset, int length, List<Integer> rowGroupSegmentOffsets)\n        {\n            this.values = ImmutableList.copyOf(values);\n            this.offset = offset;\n            this.length = length;\n            this.rowGroupSegmentOffsets = ImmutableList.copyOf(rowGroupSegmentOffsets);\n        }\n\n        public List<Integer> getValues()\n        {\n            return values;\n        }\n\n        public int getOffset()\n        {\n            return offset;\n        }\n\n        public int getLength()\n        {\n            return length;\n        }\n\n        public List<Integer> getRowGroupSegmentOffsets()\n        {\n            return rowGroupSegmentOffsets;\n        }\n    }\n\n    private static class SliceRcFileDataSource\n            implements RcFileDataSource\n    {\n        private final Slice data;\n\n        public SliceRcFileDataSource(Slice data)\n        {\n            this.data = data;\n        }\n\n        @Override\n        public long getReadBytes()\n        {\n            return 0;\n        }\n\n        @Override\n        public long getReadTimeNanos()\n        {\n            return 0;\n        }\n\n        @Override\n        public long getSize()\n        {\n            return data.length();\n        }\n\n        @Override\n        public void readFully(long position, byte[] buffer, int bufferOffset, int bufferLength)\n        {\n            data.getBytes(toIntExact(position), buffer, bufferOffset, bufferLength);\n        }\n\n        @Override\n        public void close()\n        {\n        }\n    }\n\n    private static class BogusRcFileCodecFactory\n            implements RcFileCodecFactory\n    {\n        @Override\n        public RcFileCompressor createCompressor(String codecName)\n        {\n            throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public RcFileDecompressor createDecompressor(String codecName)\n        {\n            throw new UnsupportedOperationException();\n        }\n    }\n}\n", "methodName": "List TestRcFileReaderManual.readValues(Slice,int,int)", "exampleID": 56, "dataset": "infer", "filepath": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestRcFileReaderManual.java", "source": "com.facebook.presto.rcfile.TestRcFileReaderManual$SliceRcFileDataSource", "sourceLine": 238, "qualifier": "Resource of type $$com.facebook.presto.rcfile.TestRcFileReaderManual$SliceRcFileDataSource/$ acquired by call to @@new()/@ is not released", "steps": [{"line": 26, "source": "com.facebook.presto.rcfile.TestRcFileReaderManual$SliceRcFileDataSource", "filepath": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/binary/BinaryRcFileEncoding.java", "methodName": "BinaryRcFileEncoding.BinaryRcFileEncoding", "exampleID": 57}], "line_number": 238, "records": [{"level": 1, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestRcFileReaderManual.java", "line_number": 299, "column_number": -1, "description": "start of procedure TestRcFileReaderManual$SliceRcFileDataSource(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "TestRcFileReaderManual$SliceRcFileDataSource.<init>(Slice)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.TestRcFileReaderManual$SliceRcFileDataSource.<init>(io.airlift.slice.Slic.a4844217198e5ae56f52df24274f1e0b"}], "snippet": "        public SliceRcFileDataSource(Slice data)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestRcFileReaderManual.java", "methodName": "TestRcFileReaderManual$SliceRcFileDataSource"}, {"level": 1, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestRcFileReaderManual.java", "line_number": 300, "column_number": -1, "description": "", "node_tags": [], "snippet": "        {", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestRcFileReaderManual.java", "methodName": "TestRcFileReaderManual$SliceRcFileDataSource"}, {"level": 1, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestRcFileReaderManual.java", "line_number": 301, "column_number": -1, "description": "", "node_tags": [], "snippet": "            this.data = data;", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestRcFileReaderManual.java", "methodName": "TestRcFileReaderManual$SliceRcFileDataSource"}, {"level": 1, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestRcFileReaderManual.java", "line_number": 302, "column_number": -1, "description": "return from a call to TestRcFileReaderManual$SliceRcFileDataSource.<init>(Slice)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "TestRcFileReaderManual$SliceRcFileDataSource.<init>(Slice)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.TestRcFileReaderManual$SliceRcFileDataSource.<init>(io.airlift.slice.Slic.a4844217198e5ae56f52df24274f1e0b"}], "snippet": "        }", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestRcFileReaderManual.java", "methodName": "TestRcFileReaderManual$SliceRcFileDataSource"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/binary/BinaryRcFileEncoding.java", "line_number": 26, "column_number": -1, "description": "start of procedure BinaryRcFileEncoding()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "BinaryRcFileEncoding.<init>()"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.binary.BinaryRcFileEncoding.<init>().37c94f25a2567d92e184c7a3ba645d59"}], "snippet": "public class BinaryRcFileEncoding", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/binary/BinaryRcFileEncoding.java", "methodName": "BinaryRcFileEncoding"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/binary/BinaryRcFileEncoding.java", "line_number": 26, "column_number": -1, "description": "return from a call to BinaryRcFileEncoding.<init>()", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "BinaryRcFileEncoding.<init>()"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.binary.BinaryRcFileEncoding.<init>().37c94f25a2567d92e184c7a3ba645d59"}], "snippet": "public class BinaryRcFileEncoding", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/binary/BinaryRcFileEncoding.java", "methodName": "BinaryRcFileEncoding"}, {"level": 1, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestRcFileReaderManual.java", "line_number": 334, "column_number": -1, "description": "start of procedure TestRcFileReaderManual$BogusRcFileCodecFactory()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "TestRcFileReaderManual$BogusRcFileCodecFactory.<init>()"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.TestRcFileReaderManual$BogusRcFileCodecFactory.<init>().e5006cdcb0392ac4e7bcd01a22064d92"}], "snippet": "    private static class BogusRcFileCodecFactory", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestRcFileReaderManual.java", "methodName": "TestRcFileReaderManual$BogusRcFileCodecFactory"}, {"level": 1, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestRcFileReaderManual.java", "line_number": 334, "column_number": -1, "description": "return from a call to TestRcFileReaderManual$BogusRcFileCodecFactory.<init>()", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "TestRcFileReaderManual$BogusRcFileCodecFactory.<init>()"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.TestRcFileReaderManual$BogusRcFileCodecFactory.<init>().e5006cdcb0392ac4e7bcd01a22064d92"}], "snippet": "    private static class BogusRcFileCodecFactory", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestRcFileReaderManual.java", "methodName": "TestRcFileReaderManual$BogusRcFileCodecFactory"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/RcFileReader.java", "line_number": 109, "column_number": -1, "description": "start of procedure RcFileReader(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "RcFileReader.<init>(TestRcFileReaderManual$SliceRcFileDataSource,BinaryRcFileEncoding,Map,TestRcFileReaderManual$BogusRcFileCodecFactory,long,long,DataSize)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.RcFileReader.<init>(com.facebook.presto.rcfile.TestRcFileReaderManual$Sli.bc11f2e58b6d75772109e3087603bc5e"}], "snippet": "    public RcFileReader(", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/RcFileReader.java", "methodName": "RcFileReader"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/RcFileReader.java", "line_number": 119, "column_number": -1, "description": "Skipping RcFileReader(...): empty list of specs", "node_tags": [], "snippet": "        this(dataSource, encoding, readColumns, codecFactory, offset, length, bufferSize, Optional.empty());", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/RcFileReader.java", "methodName": "RcFileReader"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/RcFileReader.java", "line_number": 122, "column_number": -1, "description": "Definition of RcFileReader(...)", "node_tags": [], "snippet": "    private RcFileReader(", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/RcFileReader.java", "methodName": "RcFileReader"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/RcFileReader.java", "line_number": 120, "column_number": -1, "description": "return from a call to RcFileReader.<init>(TestRcFileReaderManual$SliceRcFileDataSource,BinaryRcFileEncoding,Map,TestRcFileReaderManual$BogusRcFileCodecFactory,long,long,DataSize)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "RcFileReader.<init>(TestRcFileReaderManual$SliceRcFileDataSource,BinaryRcFileEncoding,Map,TestRcFileReaderManual$BogusRcFileCodecFactory,long,long,DataSize)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.RcFileReader.<init>(com.facebook.presto.rcfile.TestRcFileReaderManual$Sli.bc11f2e58b6d75772109e3087603bc5e"}], "snippet": "    }", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/RcFileReader.java", "methodName": "RcFileReader"}], "combined_records": [{"level": 1, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestRcFileReaderManual.java", "line_number": 302, "column_number": -1, "description": "start of procedure TestRcFileReaderManual$SliceRcFileDataSource(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "TestRcFileReaderManual$SliceRcFileDataSource.<init>(Slice)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.TestRcFileReaderManual$SliceRcFileDataSource.<init>(io.airlift.slice.Slic.a4844217198e5ae56f52df24274f1e0b"}], "snippet": "297.\n298.        public SliceRcFileDataSource(Slice data)\n299.>         {\n300.>             this.data = data;\n301.        }\n302.> \n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestRcFileReaderManual.java", "methodName": "TestRcFileReaderManual$SliceRcFileDataSource", "line_numbers": [299, 300, 301, 302]}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/binary/BinaryRcFileEncoding.java", "line_number": 26, "column_number": -1, "description": "start of procedure BinaryRcFileEncoding()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "BinaryRcFileEncoding.<init>()"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.binary.BinaryRcFileEncoding.<init>().37c94f25a2567d92e184c7a3ba645d59"}], "snippet": "24.\n25.public class BinaryRcFileEncoding\n26.>         implements RcFileEncoding\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/binary/BinaryRcFileEncoding.java", "methodName": "BinaryRcFileEncoding", "line_numbers": [26, 26]}, {"level": 1, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestRcFileReaderManual.java", "line_number": 334, "column_number": -1, "description": "start of procedure TestRcFileReaderManual$BogusRcFileCodecFactory()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "TestRcFileReaderManual$BogusRcFileCodecFactory.<init>()"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.TestRcFileReaderManual$BogusRcFileCodecFactory.<init>().e5006cdcb0392ac4e7bcd01a22064d92"}], "snippet": "332.\n333.    private static class BogusRcFileCodecFactory\n334.>             implements RcFileCodecFactory\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestRcFileReaderManual.java", "methodName": "TestRcFileReaderManual$BogusRcFileCodecFactory", "line_numbers": [334, 334]}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/RcFileReader.java", "line_number": 119, "column_number": -1, "description": "start of procedure RcFileReader(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "RcFileReader.<init>(TestRcFileReaderManual$SliceRcFileDataSource,BinaryRcFileEncoding,Map,TestRcFileReaderManual$BogusRcFileCodecFactory,long,long,DataSize)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.RcFileReader.<init>(com.facebook.presto.rcfile.TestRcFileReaderManual$Sli.bc11f2e58b6d75772109e3087603bc5e"}], "snippet": "107.\n108.    public RcFileReader(\n109.>             RcFileDataSource dataSource,\n110.            RcFileEncoding encoding,\n111.            Map<Integer, Type> readColumns,\n112.            RcFileCodecFactory codecFactory,\n113.            long offset,\n114.            long length,\n115.            DataSize bufferSize)\n116.            throws IOException\n117.    {\n118.        this(dataSource, encoding, readColumns, codecFactory, offset, length, bufferSize, Optional.empty());\n119.    }\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/RcFileReader.java", "methodName": "RcFileReader", "line_numbers": [109, 119]}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/RcFileReader.java", "line_number": 122, "column_number": -1, "description": "Definition of RcFileReader(...)", "node_tags": [], "snippet": "120.\n121.    private RcFileReader(\n122.>             RcFileDataSource dataSource,\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/RcFileReader.java", "methodName": "RcFileReader", "line_numbers": [122]}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/RcFileReader.java", "line_number": 120, "column_number": -1, "description": "return from a call to RcFileReader.<init>(TestRcFileReaderManual$SliceRcFileDataSource,BinaryRcFileEncoding,Map,TestRcFileReaderManual$BogusRcFileCodecFactory,long,long,DataSize)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "RcFileReader.<init>(TestRcFileReaderManual$SliceRcFileDataSource,BinaryRcFileEncoding,Map,TestRcFileReaderManual$BogusRcFileCodecFactory,long,long,DataSize)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.RcFileReader.<init>(com.facebook.presto.rcfile.TestRcFileReaderManual$Sli.bc11f2e58b6d75772109e3087603bc5e"}], "snippet": "118.        this(dataSource, encoding, readColumns, codecFactory, offset, length, bufferSize, Optional.empty());\n119.    }\n120.> \n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-rcfile/src/main/java/com/facebook/presto/rcfile/RcFileReader.java", "methodName": "RcFileReader", "line_numbers": [120]}], "infer_explore": [{"level": 0, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestRcFileReaderManual.java", "line_number": 222, "column_number": -1, "description": "start of procedure readValues(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "List TestRcFileReaderManual.readValues(Slice,int,int)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.TestRcFileReaderManual.readValues(io.airlift.slice.Slice,int,int):java.ut.a2289d2fb10ebea375d3ba45e1a90ca9"}], "snippet": "219.     }\n220. \n221. >     private static List<Integer> readValues(Slice data, int offset, int length)\n222.             throws IOException\n223.     {\n"}, {"level": 0, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestRcFileReaderManual.java", "line_number": 229, "column_number": -1, "description": "Taking false branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "false"}], "snippet": "226.         //     truncate length so it is not off the end of the file\n227. \n228. >         if (offset < 0) {\n229.             // adjust length to new offset\n230.             length += offset;\n"}, {"level": 0, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestRcFileReaderManual.java", "line_number": 234, "column_number": -1, "description": "Taking false branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "false"}], "snippet": "231.             offset = 0;\n232.         }\n233. >         if (offset + length > data.length()) {\n234.             length = data.length() - offset;\n235.         }\n"}, {"level": 0, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestRcFileReaderManual.java", "line_number": 238, "column_number": -1, "description": "", "node_tags": [], "snippet": "235.         }\n236. \n237. >         RcFileReader reader = new RcFileReader(\n238.                 new SliceRcFileDataSource(data),\n239.                 new BinaryRcFileEncoding(),\n"}, {"level": 1, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestRcFileReaderManual.java", "line_number": 299, "column_number": -1, "description": "start of procedure TestRcFileReaderManual$SliceRcFileDataSource(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "TestRcFileReaderManual$SliceRcFileDataSource.<init>(Slice)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.TestRcFileReaderManual$SliceRcFileDataSource.<init>(io.airlift.slice.Slic.a4844217198e5ae56f52df24274f1e0b"}], "snippet": "296.         private final Slice data;\n297. \n298. >         public SliceRcFileDataSource(Slice data)\n299.         {\n300.             this.data = data;\n"}, {"level": 1, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestRcFileReaderManual.java", "line_number": 300, "column_number": -1, "description": "", "node_tags": [], "snippet": "297. \n298.         public SliceRcFileDataSource(Slice data)\n299. >         {\n300.             this.data = data;\n301.         }\n"}, {"level": 1, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestRcFileReaderManual.java", "line_number": 301, "column_number": -1, "description": "", "node_tags": [], "snippet": "298.         public SliceRcFileDataSource(Slice data)\n299.         {\n300. >             this.data = data;\n301.         }\n302. \n"}, {"level": 1, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestRcFileReaderManual.java", "line_number": 302, "column_number": -1, "description": "return from a call to TestRcFileReaderManual$SliceRcFileDataSource.<init>(Slice)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "TestRcFileReaderManual$SliceRcFileDataSource.<init>(Slice)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.TestRcFileReaderManual$SliceRcFileDataSource.<init>(io.airlift.slice.Slic.a4844217198e5ae56f52df24274f1e0b"}], "snippet": "299.         {\n300.             this.data = data;\n301. >         }\n302. \n303.         @Override\n"}, {"level": 0, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestRcFileReaderManual.java", "line_number": 238, "column_number": -1, "description": "", "node_tags": [], "snippet": "235.         }\n236. \n237. >         RcFileReader reader = new RcFileReader(\n238.                 new SliceRcFileDataSource(data),\n239.                 new BinaryRcFileEncoding(),\n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/binary/BinaryRcFileEncoding.java", "line_number": 26, "column_number": -1, "description": "start of procedure BinaryRcFileEncoding()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "BinaryRcFileEncoding.<init>()"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.binary.BinaryRcFileEncoding.<init>().37c94f25a2567d92e184c7a3ba645d59"}], "snippet": "23. import static com.facebook.presto.spi.type.Decimals.isShortDecimal;\n24. \n25. > public class BinaryRcFileEncoding\n26.         implements RcFileEncoding\n27. {\n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/binary/BinaryRcFileEncoding.java", "line_number": 26, "column_number": -1, "description": "return from a call to BinaryRcFileEncoding.<init>()", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "BinaryRcFileEncoding.<init>()"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.binary.BinaryRcFileEncoding.<init>().37c94f25a2567d92e184c7a3ba645d59"}], "snippet": "23. import static com.facebook.presto.spi.type.Decimals.isShortDecimal;\n24. \n25. > public class BinaryRcFileEncoding\n26.         implements RcFileEncoding\n27. {\n"}, {"level": 0, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestRcFileReaderManual.java", "line_number": 241, "column_number": -1, "description": "", "node_tags": [], "snippet": "238.                 new SliceRcFileDataSource(data),\n239.                 new BinaryRcFileEncoding(),\n240. >                 ImmutableMap.of(0, SMALLINT),\n241.                 new BogusRcFileCodecFactory(),\n242.                 offset,\n"}, {"level": 1, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestRcFileReaderManual.java", "line_number": 334, "column_number": -1, "description": "start of procedure TestRcFileReaderManual$BogusRcFileCodecFactory()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "TestRcFileReaderManual$BogusRcFileCodecFactory.<init>()"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.TestRcFileReaderManual$BogusRcFileCodecFactory.<init>().e5006cdcb0392ac4e7bcd01a22064d92"}], "snippet": "331.     }\n332. \n333. >     private static class BogusRcFileCodecFactory\n334.             implements RcFileCodecFactory\n335.     {\n"}, {"level": 1, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestRcFileReaderManual.java", "line_number": 334, "column_number": -1, "description": "return from a call to TestRcFileReaderManual$BogusRcFileCodecFactory.<init>()", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "TestRcFileReaderManual$BogusRcFileCodecFactory.<init>()"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.TestRcFileReaderManual$BogusRcFileCodecFactory.<init>().e5006cdcb0392ac4e7bcd01a22064d92"}], "snippet": "331.     }\n332. \n333. >     private static class BogusRcFileCodecFactory\n334.             implements RcFileCodecFactory\n335.     {\n"}, {"level": 0, "filename": "presto-rcfile/src/test/java/com/facebook/presto/rcfile/TestRcFileReaderManual.java", "line_number": 241, "column_number": -1, "description": "", "node_tags": [], "snippet": "238.                 new SliceRcFileDataSource(data),\n239.                 new BinaryRcFileEncoding(),\n240. >                 ImmutableMap.of(0, SMALLINT),\n241.                 new BogusRcFileCodecFactory(),\n242.                 offset,\n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/RcFileReader.java", "line_number": 109, "column_number": -1, "description": "start of procedure RcFileReader(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "RcFileReader.<init>(TestRcFileReaderManual$SliceRcFileDataSource,BinaryRcFileEncoding,Map,TestRcFileReaderManual$BogusRcFileCodecFactory,long,long,DataSize)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.RcFileReader.<init>(com.facebook.presto.rcfile.TestRcFileReaderManual$Sli.bc11f2e58b6d75772109e3087603bc5e"}], "snippet": "106.     private final Optional<WriteChecksumBuilder> writeChecksumBuilder;\n107. \n108. >     public RcFileReader(\n109.             RcFileDataSource dataSource,\n110.             RcFileEncoding encoding,\n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/RcFileReader.java", "line_number": 119, "column_number": -1, "description": "Skipping RcFileReader(...): empty list of specs", "node_tags": [], "snippet": "116.             throws IOException\n117.     {\n118. >         this(dataSource, encoding, readColumns, codecFactory, offset, length, bufferSize, Optional.empty());\n119.     }\n120. \n"}, {"level": 2, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/RcFileReader.java", "line_number": 122, "column_number": -1, "description": "Definition of RcFileReader(...)", "node_tags": [], "snippet": "119.     }\n120. \n121. >     private RcFileReader(\n122.             RcFileDataSource dataSource,\n123.             RcFileEncoding encoding,\n"}, {"level": 1, "filename": "presto-rcfile/src/main/java/com/facebook/presto/rcfile/RcFileReader.java", "line_number": 120, "column_number": -1, "description": "return from a call to RcFileReader.<init>(TestRcFileReaderManual$SliceRcFileDataSource,BinaryRcFileEncoding,Map,TestRcFileReaderManual$BogusRcFileCodecFactory,long,long,DataSize)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "RcFileReader.<init>(TestRcFileReaderManual$SliceRcFileDataSource,BinaryRcFileEncoding,Map,TestRcFileReaderManual$BogusRcFileCodecFactory,long,long,DataSize)"}, {"tag": "name_id", "value": "com.facebook.presto.rcfile.RcFileReader.<init>(com.facebook.presto.rcfile.TestRcFileReaderManual$Sli.bc11f2e58b6d75772109e3087603bc5e"}], "snippet": "117.     {\n118.         this(dataSource, encoding, readColumns, codecFactory, offset, length, bufferSize, Optional.empty());\n119. >     }\n120. \n121.     private RcFileReader(\n"}]}, {"url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/server/PluginManager.java", "rawCode": "/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage com.facebook.presto.server;\n\nimport com.facebook.presto.block.BlockEncodingManager;\nimport com.facebook.presto.connector.ConnectorManager;\nimport com.facebook.presto.eventlistener.EventListenerManager;\nimport com.facebook.presto.execution.resourceGroups.ResourceGroupManager;\nimport com.facebook.presto.metadata.Metadata;\nimport com.facebook.presto.security.AccessControlManager;\nimport com.facebook.presto.spi.Plugin;\nimport com.facebook.presto.spi.block.BlockEncodingFactory;\nimport com.facebook.presto.spi.classloader.ThreadContextClassLoader;\nimport com.facebook.presto.spi.connector.ConnectorFactory;\nimport com.facebook.presto.spi.eventlistener.EventListenerFactory;\nimport com.facebook.presto.spi.resourceGroups.ResourceGroupConfigurationManagerFactory;\nimport com.facebook.presto.spi.security.SystemAccessControlFactory;\nimport com.facebook.presto.spi.session.SessionPropertyConfigurationManagerFactory;\nimport com.facebook.presto.spi.type.ParametricType;\nimport com.facebook.presto.spi.type.Type;\nimport com.facebook.presto.type.TypeRegistry;\nimport com.google.common.collect.ImmutableList;\nimport com.google.common.collect.Ordering;\nimport io.airlift.http.server.HttpServerInfo;\nimport io.airlift.log.Logger;\nimport io.airlift.node.NodeInfo;\nimport io.airlift.resolver.ArtifactResolver;\nimport io.airlift.resolver.DefaultArtifact;\nimport org.sonatype.aether.artifact.Artifact;\n\nimport javax.annotation.concurrent.ThreadSafe;\nimport javax.inject.Inject;\n\nimport java.io.File;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.net.URLClassLoader;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.List;\nimport java.util.ServiceLoader;\nimport java.util.Set;\nimport java.util.concurrent.atomic.AtomicBoolean;\n\nimport static com.facebook.presto.metadata.FunctionExtractor.extractFunctions;\nimport static com.facebook.presto.server.PluginDiscovery.discoverPlugins;\nimport static com.facebook.presto.server.PluginDiscovery.writePluginServices;\nimport static java.util.Objects.requireNonNull;\n\n@ThreadSafe\npublic class PluginManager\n{\n    private static final ImmutableList<String> SPI_PACKAGES = ImmutableList.<String>builder()\n            .add(\"com.facebook.presto.spi.\")\n            .add(\"com.fasterxml.jackson.annotation.\")\n            .add(\"io.airlift.slice.\")\n            .add(\"io.airlift.units.\")\n            .add(\"org.openjdk.jol.\")\n            .build();\n\n    private static final Logger log = Logger.get(PluginManager.class);\n\n    private final ConnectorManager connectorManager;\n    private final Metadata metadata;\n    private final ResourceGroupManager resourceGroupManager;\n    private final AccessControlManager accessControlManager;\n    private final EventListenerManager eventListenerManager;\n    private final BlockEncodingManager blockEncodingManager;\n    private final SessionSupplier sessionSupplier;\n    private final TypeRegistry typeRegistry;\n    private final ArtifactResolver resolver;\n    private final File installedPluginsDir;\n    private final List<String> plugins;\n    private final AtomicBoolean pluginsLoading = new AtomicBoolean();\n    private final AtomicBoolean pluginsLoaded = new AtomicBoolean();\n\n    @Inject\n    public PluginManager(\n            NodeInfo nodeInfo,\n            HttpServerInfo httpServerInfo,\n            PluginManagerConfig config,\n            ConnectorManager connectorManager,\n            Metadata metadata,\n            ResourceGroupManager resourceGroupManager,\n            AccessControlManager accessControlManager,\n            EventListenerManager eventListenerManager,\n            BlockEncodingManager blockEncodingManager,\n            SessionSupplier sessionSupplier,\n            TypeRegistry typeRegistry)\n    {\n        requireNonNull(nodeInfo, \"nodeInfo is null\");\n        requireNonNull(httpServerInfo, \"httpServerInfo is null\");\n        requireNonNull(config, \"config is null\");\n\n        installedPluginsDir = config.getInstalledPluginsDir();\n        if (config.getPlugins() == null) {\n            this.plugins = ImmutableList.of();\n        }\n        else {\n            this.plugins = ImmutableList.copyOf(config.getPlugins());\n        }\n        this.resolver = new ArtifactResolver(config.getMavenLocalRepository(), config.getMavenRemoteRepository());\n\n        this.connectorManager = requireNonNull(connectorManager, \"connectorManager is null\");\n        this.metadata = requireNonNull(metadata, \"metadata is null\");\n        this.resourceGroupManager = requireNonNull(resourceGroupManager, \"resourceGroupManager is null\");\n        this.accessControlManager = requireNonNull(accessControlManager, \"accessControlManager is null\");\n        this.eventListenerManager = requireNonNull(eventListenerManager, \"eventListenerManager is null\");\n        this.blockEncodingManager = requireNonNull(blockEncodingManager, \"blockEncodingManager is null\");\n        this.sessionSupplier = requireNonNull(sessionSupplier, \"sessionSupplier is null\");\n        this.typeRegistry = requireNonNull(typeRegistry, \"typeRegistry is null\");\n    }\n\n    public void loadPlugins()\n            throws Exception\n    {\n        if (!pluginsLoading.compareAndSet(false, true)) {\n            return;\n        }\n\n        for (File file : listFiles(installedPluginsDir)) {\n            if (file.isDirectory()) {\n                loadPlugin(file.getAbsolutePath());\n            }\n        }\n\n        for (String plugin : plugins) {\n            loadPlugin(plugin);\n        }\n\n        metadata.verifyComparableOrderableContract();\n\n        pluginsLoaded.set(true);\n    }\n\n    private void loadPlugin(String plugin)\n            throws Exception\n    {\n        log.info(\"-- Loading plugin %s --\", plugin);\n        URLClassLoader pluginClassLoader = buildClassLoader(plugin);\n        try (ThreadContextClassLoader ignored = new ThreadContextClassLoader(pluginClassLoader)) {\n            loadPlugin(pluginClassLoader);\n        }\n        log.info(\"-- Finished loading plugin %s --\", plugin);\n    }\n\n    private void loadPlugin(URLClassLoader pluginClassLoader)\n            throws Exception\n    {\n        ServiceLoader<Plugin> serviceLoader = ServiceLoader.load(Plugin.class, pluginClassLoader);\n        List<Plugin> plugins = ImmutableList.copyOf(serviceLoader);\n\n        if (plugins.isEmpty()) {\n            log.warn(\"No service providers of type %s\", Plugin.class.getName());\n        }\n\n        for (Plugin plugin : plugins) {\n            log.info(\"Installing %s\", plugin.getClass().getName());\n            installPlugin(plugin);\n        }\n    }\n\n    public void installPlugin(Plugin plugin)\n    {\n        for (BlockEncodingFactory<?> blockEncodingFactory : plugin.getBlockEncodingFactories(blockEncodingManager)) {\n            log.info(\"Registering block encoding %s\", blockEncodingFactory.getName());\n            blockEncodingManager.addBlockEncodingFactory(blockEncodingFactory);\n        }\n\n        for (Type type : plugin.getTypes()) {\n            log.info(\"Registering type %s\", type.getTypeSignature());\n            typeRegistry.addType(type);\n        }\n\n        for (ParametricType parametricType : plugin.getParametricTypes()) {\n            log.info(\"Registering parametric type %s\", parametricType.getName());\n            typeRegistry.addParametricType(parametricType);\n        }\n\n        for (ConnectorFactory connectorFactory : plugin.getConnectorFactories()) {\n            log.info(\"Registering connector %s\", connectorFactory.getName());\n            connectorManager.addConnectorFactory(connectorFactory);\n        }\n\n        for (Class<?> functionClass : plugin.getFunctions()) {\n            log.info(\"Registering functions from %s\", functionClass.getName());\n            metadata.addFunctions(extractFunctions(functionClass));\n        }\n\n        for (SessionPropertyConfigurationManagerFactory sessionConfigFactory : plugin.getSessionPropertyConfigurationManagerFactories()) {\n            log.info(\"Registering session property configuration manager %s\", sessionConfigFactory.getName());\n            sessionSupplier.addConfigurationManager(sessionConfigFactory);\n        }\n\n        for (ResourceGroupConfigurationManagerFactory configurationManagerFactory : plugin.getResourceGroupConfigurationManagerFactories()) {\n            log.info(\"Registering resource group configuration manager %s\", configurationManagerFactory.getName());\n            resourceGroupManager.addConfigurationManagerFactory(configurationManagerFactory);\n        }\n\n        for (SystemAccessControlFactory accessControlFactory : plugin.getSystemAccessControlFactories()) {\n            log.info(\"Registering system access control %s\", accessControlFactory.getName());\n            accessControlManager.addSystemAccessControlFactory(accessControlFactory);\n        }\n\n        for (EventListenerFactory eventListenerFactory : plugin.getEventListenerFactories()) {\n            log.info(\"Registering event listener %s\", eventListenerFactory.getName());\n            eventListenerManager.addEventListenerFactory(eventListenerFactory);\n        }\n    }\n\n    private URLClassLoader buildClassLoader(String plugin)\n            throws Exception\n    {\n        File file = new File(plugin);\n        if (file.isFile() && (file.getName().equals(\"pom.xml\") || file.getName().endsWith(\".pom\"))) {\n            return buildClassLoaderFromPom(file);\n        }\n        if (file.isDirectory()) {\n            return buildClassLoaderFromDirectory(file);\n        }\n        return buildClassLoaderFromCoordinates(plugin);\n    }\n\n    private URLClassLoader buildClassLoaderFromPom(File pomFile)\n            throws Exception\n    {\n        List<Artifact> artifacts = resolver.resolvePom(pomFile);\n        URLClassLoader classLoader = createClassLoader(artifacts, pomFile.getPath());\n\n        Artifact artifact = artifacts.get(0);\n        Set<String> plugins = discoverPlugins(artifact, classLoader);\n        if (!plugins.isEmpty()) {\n            writePluginServices(plugins, artifact.getFile());\n        }\n\n        return classLoader;\n    }\n\n    private URLClassLoader buildClassLoaderFromDirectory(File dir)\n            throws Exception\n    {\n        log.debug(\"Classpath for %s:\", dir.getName());\n        List<URL> urls = new ArrayList<>();\n        for (File file : listFiles(dir)) {\n            log.debug(\"    %s\", file);\n            urls.add(file.toURI().toURL());\n        }\n        return createClassLoader(urls);\n    }\n\n    private URLClassLoader buildClassLoaderFromCoordinates(String coordinates)\n            throws Exception\n    {\n        Artifact rootArtifact = new DefaultArtifact(coordinates);\n        List<Artifact> artifacts = resolver.resolveArtifacts(rootArtifact);\n        return createClassLoader(artifacts, rootArtifact.toString());\n    }\n\n    private URLClassLoader createClassLoader(List<Artifact> artifacts, String name)\n            throws IOException\n    {\n        log.debug(\"Classpath for %s:\", name);\n        List<URL> urls = new ArrayList<>();\n        for (Artifact artifact : sortedArtifacts(artifacts)) {\n            if (artifact.getFile() == null) {\n                throw new RuntimeException(\"Could not resolve artifact: \" + artifact);\n            }\n            File file = artifact.getFile().getCanonicalFile();\n            log.debug(\"    %s\", file);\n            urls.add(file.toURI().toURL());\n        }\n        return createClassLoader(urls);\n    }\n\n    private URLClassLoader createClassLoader(List<URL> urls)\n    {\n        ClassLoader parent = getClass().getClassLoader();\n        return new PluginClassLoader(urls, parent, SPI_PACKAGES);\n    }\n\n    private static List<File> listFiles(File installedPluginsDir)\n    {\n        if (installedPluginsDir != null && installedPluginsDir.isDirectory()) {\n            File[] files = installedPluginsDir.listFiles();\n            if (files != null) {\n                Arrays.sort(files);\n                return ImmutableList.copyOf(files);\n            }\n        }\n        return ImmutableList.of();\n    }\n\n    private static List<Artifact> sortedArtifacts(List<Artifact> artifacts)\n    {\n        List<Artifact> list = new ArrayList<>(artifacts);\n        Collections.sort(list, Ordering.natural().nullsLast().onResultOf(Artifact::getFile));\n        return list;\n    }\n}\n", "methodName": "URLClassLoader PluginManager.buildClassLoaderFromPom(File)", "exampleID": 58, "dataset": "infer", "filepath": "presto-main/src/main/java/com/facebook/presto/server/PluginManager.java", "source": "com.facebook.presto.server.PluginClassLoader", "sourceLine": 240, "qualifier": "Resource of type $$com.facebook.presto.server.PluginClassLoader/$ acquired by call to @@createClassLoader(...)/@ is not released", "steps": [{"line": 271, "source": "com.facebook.presto.server.PluginClassLoader", "filepath": "presto-main/src/main/java/com/facebook/presto/server/PluginManager.java", "methodName": "PluginManager.createClassLoader", "exampleID": 59}], "line_number": 240, "records": [{"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginManager.java", "line_number": 271, "column_number": -1, "description": "start of procedure createClassLoader(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "URLClassLoader PluginManager.createClassLoader(List,String)"}, {"tag": "name_id", "value": "com.facebook.presto.server.PluginManager.createClassLoader(java.util.List,java.lang.String):java.net.886b87f382ecbda6cc4614c856dcb2cd"}], "snippet": "    private URLClassLoader createClassLoader(List<Artifact> artifacts, String name)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/server/PluginManager.java", "methodName": "createClassLoader"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginManager.java", "line_number": 274, "column_number": -1, "description": "Skipping debug(...): unknown method", "node_tags": [], "snippet": "        log.debug(\"Classpath for %s:\", name);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/server/PluginManager.java", "methodName": "createClassLoader"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginManager.java", "line_number": 275, "column_number": -1, "description": "", "node_tags": [], "snippet": "        List<URL> urls = new ArrayList<>();", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/server/PluginManager.java", "methodName": "createClassLoader"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginManager.java", "line_number": 276, "column_number": -1, "description": "", "node_tags": [], "snippet": "        for (Artifact artifact : sortedArtifacts(artifacts)) {", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/server/PluginManager.java", "methodName": "createClassLoader"}, {"level": 2, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginManager.java", "line_number": 305, "column_number": -1, "description": "start of procedure sortedArtifacts(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "List PluginManager.sortedArtifacts(List)"}, {"tag": "name_id", "value": "com.facebook.presto.server.PluginManager.sortedArtifacts(java.util.List):java.util.List.10120d9e894742381a4f5e0ed4bdf907"}], "snippet": "    private static List<Artifact> sortedArtifacts(List<Artifact> artifacts)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/server/PluginManager.java", "methodName": "sortedArtifacts"}, {"level": 2, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginManager.java", "line_number": 307, "column_number": -1, "description": "Skipping ArrayList(...): unknown method", "node_tags": [], "snippet": "        List<Artifact> list = new ArrayList<>(artifacts);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/server/PluginManager.java", "methodName": "sortedArtifacts"}, {"level": 2, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginManager.java", "line_number": 308, "column_number": -1, "description": "Skipping sort(...): unknown method", "node_tags": [], "snippet": "        Collections.sort(list, Ordering.natural().nullsLast().onResultOf(Artifact::getFile));", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/server/PluginManager.java", "methodName": "sortedArtifacts"}, {"level": 2, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginManager.java", "line_number": 309, "column_number": -1, "description": "return from a call to List PluginManager.sortedArtifacts(List)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "List PluginManager.sortedArtifacts(List)"}, {"tag": "name_id", "value": "com.facebook.presto.server.PluginManager.sortedArtifacts(java.util.List):java.util.List.10120d9e894742381a4f5e0ed4bdf907"}], "snippet": "        return list;", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/server/PluginManager.java", "methodName": "sortedArtifacts"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginManager.java", "line_number": 276, "column_number": -1, "description": "Taking false branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "false"}], "snippet": "        for (Artifact artifact : sortedArtifacts(artifacts)) {", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/server/PluginManager.java", "methodName": "createClassLoader"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginManager.java", "line_number": 284, "column_number": -1, "description": "", "node_tags": [], "snippet": "        return createClassLoader(urls);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/server/PluginManager.java", "methodName": "createClassLoader"}, {"level": 2, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginManager.java", "line_number": 287, "column_number": -1, "description": "start of procedure createClassLoader(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "URLClassLoader PluginManager.createClassLoader(ArrayList)"}, {"tag": "name_id", "value": "com.facebook.presto.server.PluginManager.createClassLoader(java.util.ArrayList):java.net.URLClassLoa.856daf56d173c64db91588384bb016ee"}], "snippet": "    private URLClassLoader createClassLoader(List<URL> urls)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/server/PluginManager.java", "methodName": "createClassLoader"}, {"level": 2, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginManager.java", "line_number": 289, "column_number": -1, "description": "Skipping getClassLoader(): unknown method", "node_tags": [], "snippet": "        ClassLoader parent = getClass().getClassLoader();", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/server/PluginManager.java", "methodName": "createClassLoader"}, {"level": 2, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginManager.java", "line_number": 290, "column_number": -1, "description": "", "node_tags": [], "snippet": "        return new PluginClassLoader(urls, parent, SPI_PACKAGES);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/server/PluginManager.java", "methodName": "createClassLoader"}, {"level": 3, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginClassLoader.java", "line_number": 34, "column_number": -1, "description": "start of procedure PluginClassLoader(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "PluginClassLoader.<init>(List,ClassLoader,Iterable)"}, {"tag": "name_id", "value": "com.facebook.presto.server.PluginClassLoader.<init>(java.util.List,java.lang.ClassLoader,java.lang.I.ad62f303ba09074823f3e3d6edc83125"}], "snippet": "    public PluginClassLoader(", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/server/PluginClassLoader.java", "methodName": "PluginClassLoader"}, {"level": 3, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginClassLoader.java", "line_number": 39, "column_number": -1, "description": "Skipping apply(): unknown method", "node_tags": [], "snippet": "        this(urls,", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/server/PluginClassLoader.java", "methodName": "PluginClassLoader"}, {"level": 3, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginClassLoader.java", "line_number": 42, "column_number": -1, "description": "Skipping transform(...): unknown method", "node_tags": [], "snippet": "                Iterables.transform(spiPackages, PluginClassLoader::classNameToResource));", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/server/PluginClassLoader.java", "methodName": "PluginClassLoader"}, {"level": 3, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginClassLoader.java", "line_number": 39, "column_number": -1, "description": "", "node_tags": [], "snippet": "        this(urls,", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/server/PluginClassLoader.java", "methodName": "PluginClassLoader"}, {"level": 4, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginClassLoader.java", "line_number": 45, "column_number": -1, "description": "start of procedure PluginClassLoader(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "PluginClassLoader.<init>(List,ClassLoader,Iterable,Iterable)"}, {"tag": "name_id", "value": "com.facebook.presto.server.PluginClassLoader.<init>(java.util.List,java.lang.ClassLoader,java.lang.I.0303ad0f578e41ca9d4cf1a61bf9b647"}], "snippet": "    private PluginClassLoader(", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/server/PluginClassLoader.java", "methodName": "PluginClassLoader"}, {"level": 4, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginClassLoader.java", "line_number": 52, "column_number": -1, "description": "Skipping URLClassLoader(...): unknown method", "node_tags": [], "snippet": "        super(urls.toArray(new URL[urls.size()]), null);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/server/PluginClassLoader.java", "methodName": "PluginClassLoader"}, {"level": 4, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginClassLoader.java", "line_number": 53, "column_number": -1, "description": "", "node_tags": [], "snippet": "        this.spiClassLoader = requireNonNull(spiClassLoader, \"spiClassLoader is null\");", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/server/PluginClassLoader.java", "methodName": "PluginClassLoader"}, {"level": 4, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginClassLoader.java", "line_number": 54, "column_number": -1, "description": "", "node_tags": [], "snippet": "        this.spiPackages = ImmutableList.copyOf(spiPackages);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/server/PluginClassLoader.java", "methodName": "PluginClassLoader"}, {"level": 4, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginClassLoader.java", "line_number": 55, "column_number": -1, "description": "", "node_tags": [], "snippet": "        this.spiResources = ImmutableList.copyOf(spiResources);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/server/PluginClassLoader.java", "methodName": "PluginClassLoader"}, {"level": 4, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginClassLoader.java", "line_number": 56, "column_number": -1, "description": "return from a call to PluginClassLoader.<init>(List,ClassLoader,Iterable,Iterable)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "PluginClassLoader.<init>(List,ClassLoader,Iterable,Iterable)"}, {"tag": "name_id", "value": "com.facebook.presto.server.PluginClassLoader.<init>(java.util.List,java.lang.ClassLoader,java.lang.I.0303ad0f578e41ca9d4cf1a61bf9b647"}], "snippet": "    }", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/server/PluginClassLoader.java", "methodName": "PluginClassLoader"}, {"level": 3, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginClassLoader.java", "line_number": 43, "column_number": -1, "description": "return from a call to PluginClassLoader.<init>(List,ClassLoader,Iterable)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "PluginClassLoader.<init>(List,ClassLoader,Iterable)"}, {"tag": "name_id", "value": "com.facebook.presto.server.PluginClassLoader.<init>(java.util.List,java.lang.ClassLoader,java.lang.I.ad62f303ba09074823f3e3d6edc83125"}], "snippet": "    }", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/server/PluginClassLoader.java", "methodName": "PluginClassLoader"}, {"level": 2, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginManager.java", "line_number": 290, "column_number": -1, "description": "return from a call to URLClassLoader PluginManager.createClassLoader(ArrayList)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "URLClassLoader PluginManager.createClassLoader(ArrayList)"}, {"tag": "name_id", "value": "com.facebook.presto.server.PluginManager.createClassLoader(java.util.ArrayList):java.net.URLClassLoa.856daf56d173c64db91588384bb016ee"}], "snippet": "        return new PluginClassLoader(urls, parent, SPI_PACKAGES);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/server/PluginManager.java", "methodName": "createClassLoader"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginManager.java", "line_number": 284, "column_number": -1, "description": "return from a call to URLClassLoader PluginManager.createClassLoader(List,String)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "URLClassLoader PluginManager.createClassLoader(List,String)"}, {"tag": "name_id", "value": "com.facebook.presto.server.PluginManager.createClassLoader(java.util.List,java.lang.String):java.net.886b87f382ecbda6cc4614c856dcb2cd"}], "snippet": "        return createClassLoader(urls);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/server/PluginManager.java", "methodName": "createClassLoader"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginDiscovery.java", "line_number": 50, "column_number": -1, "description": "start of procedure discoverPlugins(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "Set PluginDiscovery.discoverPlugins(Artifact,PluginClassLoader)"}, {"tag": "name_id", "value": "com.facebook.presto.server.PluginDiscovery.discoverPlugins(org.sonatype.aether.artifact.Artifact,com.27a8a1328b9a429a9200ffbb59955baf"}], "snippet": "    public static Set<String> discoverPlugins(Artifact artifact, ClassLoader classLoader)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/server/PluginDiscovery.java", "methodName": "discoverPlugins"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginDiscovery.java", "line_number": 53, "column_number": -1, "description": "Taking false branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "false"}], "snippet": "        if (!artifact.getExtension().equals(\"presto-plugin\")) {", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/server/PluginDiscovery.java", "methodName": "discoverPlugins"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginDiscovery.java", "line_number": 57, "column_number": -1, "description": "Skipping getFile(): unknown method", "node_tags": [], "snippet": "        File file = artifact.getFile();", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/server/PluginDiscovery.java", "methodName": "discoverPlugins"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginDiscovery.java", "line_number": 58, "column_number": -1, "description": "Taking false branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "false"}], "snippet": "        if (!file.getPath().endsWith(\"/target/classes\")) {", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/server/PluginDiscovery.java", "methodName": "discoverPlugins"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginDiscovery.java", "line_number": 61, "column_number": -1, "description": "Taking false branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "false"}], "snippet": "        if (!file.isDirectory()) {", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/server/PluginDiscovery.java", "methodName": "discoverPlugins"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginDiscovery.java", "line_number": 65, "column_number": -1, "description": "Taking false branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "false"}], "snippet": "        if (new File(file, SERVICES_FILE).exists()) {", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/server/PluginDiscovery.java", "methodName": "discoverPlugins"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginDiscovery.java", "line_number": 69, "column_number": -1, "description": "", "node_tags": [], "snippet": "        return listClasses(file.toPath()).stream()", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/server/PluginDiscovery.java", "methodName": "discoverPlugins"}, {"level": 2, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginDiscovery.java", "line_number": 86, "column_number": -1, "description": "start of procedure listClasses(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "List PluginDiscovery.listClasses(Path)"}, {"tag": "name_id", "value": "com.facebook.presto.server.PluginDiscovery.listClasses(java.nio.file.Path):java.util.List.7001dfe3eb05342ad4bacd18a9d55a2e"}], "snippet": "    private static List<String> listClasses(Path base)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/server/PluginDiscovery.java", "methodName": "listClasses"}, {"level": 2, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginDiscovery.java", "line_number": 89, "column_number": -1, "description": "Skipping builder(): unknown method", "node_tags": [], "snippet": "        ImmutableList.Builder<String> list = ImmutableList.builder();", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/server/PluginDiscovery.java", "methodName": "listClasses"}, {"level": 2, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginDiscovery.java", "line_number": 90, "column_number": -1, "description": "", "node_tags": [], "snippet": "        walkFileTree(base, new SimpleFileVisitor<Path>()", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/server/PluginDiscovery.java", "methodName": "listClasses"}, {"level": 3, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginDiscovery.java", "line_number": 91, "column_number": -1, "description": "start of procedure PluginDiscovery$1(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "PluginDiscovery$1.<init>(Path,ImmutableList$Builder)"}, {"tag": "name_id", "value": "com.facebook.presto.server.PluginDiscovery$1.<init>(java.nio.file.Path,com.google.common.collect.Imm.cc87a38cf452306e4bc08ffb3813a3ef"}], "snippet": "        {", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/server/PluginDiscovery.java", "methodName": "PluginDiscovery$1"}, {"level": 3, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginDiscovery.java", "line_number": 91, "column_number": -1, "description": "return from a call to PluginDiscovery$1.<init>(Path,ImmutableList$Builder)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "PluginDiscovery$1.<init>(Path,ImmutableList$Builder)"}, {"tag": "name_id", "value": "com.facebook.presto.server.PluginDiscovery$1.<init>(java.nio.file.Path,com.google.common.collect.Imm.cc87a38cf452306e4bc08ffb3813a3ef"}], "snippet": "        {", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/server/PluginDiscovery.java", "methodName": "PluginDiscovery$1"}, {"level": 2, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginDiscovery.java", "line_number": 90, "column_number": -1, "description": "Skipping walkFileTree(...): unknown method", "node_tags": [], "snippet": "        walkFileTree(base, new SimpleFileVisitor<Path>()", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/server/PluginDiscovery.java", "methodName": "listClasses"}, {"level": 2, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginDiscovery.java", "line_number": 103, "column_number": -1, "description": "return from a call to List PluginDiscovery.listClasses(Path)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "List PluginDiscovery.listClasses(Path)"}, {"tag": "name_id", "value": "com.facebook.presto.server.PluginDiscovery.listClasses(java.nio.file.Path):java.util.List.7001dfe3eb05342ad4bacd18a9d55a2e"}], "snippet": "        return list.build();", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/server/PluginDiscovery.java", "methodName": "listClasses"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginDiscovery.java", "line_number": 69, "column_number": -1, "description": "Skipping test(...): unknown method", "node_tags": [], "snippet": "        return listClasses(file.toPath()).stream()", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/server/PluginDiscovery.java", "methodName": "discoverPlugins"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginDiscovery.java", "line_number": 70, "column_number": -1, "description": "Skipping filter(...): unknown method", "node_tags": [], "snippet": "                .filter(name -> classInterfaces(name, classLoader).contains(Plugin.class.getName()))", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/server/PluginDiscovery.java", "methodName": "discoverPlugins"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginDiscovery.java", "line_number": 71, "column_number": -1, "description": "Skipping collect(...): unknown method", "node_tags": [], "snippet": "                .collect(toImmutableSet());", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/server/PluginDiscovery.java", "methodName": "discoverPlugins"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginDiscovery.java", "line_number": 69, "column_number": -1, "description": "return from a call to Set PluginDiscovery.discoverPlugins(Artifact,PluginClassLoader)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "Set PluginDiscovery.discoverPlugins(Artifact,PluginClassLoader)"}, {"tag": "name_id", "value": "com.facebook.presto.server.PluginDiscovery.discoverPlugins(org.sonatype.aether.artifact.Artifact,com.27a8a1328b9a429a9200ffbb59955baf"}], "snippet": "        return listClasses(file.toPath()).stream()", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/server/PluginDiscovery.java", "methodName": "discoverPlugins"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginDiscovery.java", "line_number": 74, "column_number": -1, "description": "start of procedure writePluginServices(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void PluginDiscovery.writePluginServices(Set,File)"}, {"tag": "name_id", "value": "com.facebook.presto.server.PluginDiscovery.writePluginServices(java.util.Set,java.io.File):void.5db1fe39896b0f8a2452b71631e3283c"}], "snippet": "    public static void writePluginServices(Iterable<String> plugins, File root)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/server/PluginDiscovery.java", "methodName": "writePluginServices"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginDiscovery.java", "line_number": 77, "column_number": -1, "description": "Skipping resolve(...): unknown method", "node_tags": [], "snippet": "        Path path = root.toPath().resolve(SERVICES_FILE);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/server/PluginDiscovery.java", "methodName": "writePluginServices"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginDiscovery.java", "line_number": 78, "column_number": -1, "description": "Skipping createDirectories(...): unknown method", "node_tags": [], "snippet": "        createDirectories(path.getParent());", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/server/PluginDiscovery.java", "methodName": "writePluginServices"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginDiscovery.java", "line_number": 79, "column_number": -1, "description": "", "node_tags": [], "snippet": "        try (Writer out = new OutputStreamWriter(new FileOutputStream(path.toFile()), UTF_8)) {", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/server/PluginDiscovery.java", "methodName": "writePluginServices"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginDiscovery.java", "line_number": 84, "column_number": -1, "description": "exception java.io.FileNotFoundException", "node_tags": [{"tag": "name", "value": "java.io.FileNotFoundException"}, {"tag": "kind", "value": "exception"}], "snippet": "    }", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/server/PluginDiscovery.java", "methodName": "writePluginServices"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginDiscovery.java", "line_number": 84, "column_number": -1, "description": "return from a call to void PluginDiscovery.writePluginServices(Set,File)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "void PluginDiscovery.writePluginServices(Set,File)"}, {"tag": "name_id", "value": "com.facebook.presto.server.PluginDiscovery.writePluginServices(java.util.Set,java.io.File):void.5db1fe39896b0f8a2452b71631e3283c"}], "snippet": "    }", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/server/PluginDiscovery.java", "methodName": "writePluginServices"}], "combined_records": [{"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginManager.java", "line_number": 276, "column_number": -1, "description": "start of procedure createClassLoader(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "URLClassLoader PluginManager.createClassLoader(List,String)"}, {"tag": "name_id", "value": "com.facebook.presto.server.PluginManager.createClassLoader(java.util.List,java.lang.String):java.net.886b87f382ecbda6cc4614c856dcb2cd"}], "snippet": "269.\n270.    private URLClassLoader createClassLoader(List<Artifact> artifacts, String name)\n271.>             throws IOException\n272.    {\n273.        log.debug(\"Classpath for %s:\", name);\n274.>         List<URL> urls = new ArrayList<>();\n275.>         for (Artifact artifact : sortedArtifacts(artifacts)) {\n276.>             if (artifact.getFile() == null) {\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/server/PluginManager.java", "methodName": "createClassLoader", "line_numbers": [271, 274, 275, 276]}, {"level": 2, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginManager.java", "line_number": 309, "column_number": -1, "description": "start of procedure sortedArtifacts(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "List PluginManager.sortedArtifacts(List)"}, {"tag": "name_id", "value": "com.facebook.presto.server.PluginManager.sortedArtifacts(java.util.List):java.util.List.10120d9e894742381a4f5e0ed4bdf907"}], "snippet": "303.\n304.    private static List<Artifact> sortedArtifacts(List<Artifact> artifacts)\n305.>     {\n306.        List<Artifact> list = new ArrayList<>(artifacts);\n307.>         Collections.sort(list, Ordering.natural().nullsLast().onResultOf(Artifact::getFile));\n308.>         return list;\n309.    }\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/server/PluginManager.java", "methodName": "sortedArtifacts", "line_numbers": [305, 307, 308, 309]}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginManager.java", "line_number": 284, "column_number": -1, "description": "Taking false branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "false"}], "snippet": "274.        List<URL> urls = new ArrayList<>();\n275.        for (Artifact artifact : sortedArtifacts(artifacts)) {\n276.>             if (artifact.getFile() == null) {\n277.                throw new RuntimeException(\"Could not resolve artifact: \" + artifact);\n278.            }\n279.            File file = artifact.getFile().getCanonicalFile();\n280.            log.debug(\"    %s\", file);\n281.            urls.add(file.toURI().toURL());\n282.        }\n283.        return createClassLoader(urls);\n284.    }\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/server/PluginManager.java", "methodName": "createClassLoader", "line_numbers": [276, 284]}, {"level": 2, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginManager.java", "line_number": 290, "column_number": -1, "description": "start of procedure createClassLoader(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "URLClassLoader PluginManager.createClassLoader(ArrayList)"}, {"tag": "name_id", "value": "com.facebook.presto.server.PluginManager.createClassLoader(java.util.ArrayList):java.net.URLClassLoa.856daf56d173c64db91588384bb016ee"}], "snippet": "285.\n286.    private URLClassLoader createClassLoader(List<URL> urls)\n287.>     {\n288.        ClassLoader parent = getClass().getClassLoader();\n289.>         return new PluginClassLoader(urls, parent, SPI_PACKAGES);\n290.    }\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/server/PluginManager.java", "methodName": "createClassLoader", "line_numbers": [287, 289, 290]}, {"level": 3, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginClassLoader.java", "line_number": 39, "column_number": -1, "description": "start of procedure PluginClassLoader(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "PluginClassLoader.<init>(List,ClassLoader,Iterable)"}, {"tag": "name_id", "value": "com.facebook.presto.server.PluginClassLoader.<init>(java.util.List,java.lang.ClassLoader,java.lang.I.ad62f303ba09074823f3e3d6edc83125"}], "snippet": "32.\n33.    public PluginClassLoader(\n34.>             List<URL> urls,\n35.            ClassLoader spiClassLoader,\n36.            Iterable<String> spiPackages)\n37.    {\n38.        this(urls,\n39.>                 spiClassLoader,\n40.                spiPackages,\n41.                Iterables.transform(spiPackages, PluginClassLoader::classNameToResource));\n42.    }\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/server/PluginClassLoader.java", "methodName": "PluginClassLoader", "line_numbers": [34, 39, 42, 39]}, {"level": 4, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginClassLoader.java", "line_number": 56, "column_number": -1, "description": "start of procedure PluginClassLoader(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "PluginClassLoader.<init>(List,ClassLoader,Iterable,Iterable)"}, {"tag": "name_id", "value": "com.facebook.presto.server.PluginClassLoader.<init>(java.util.List,java.lang.ClassLoader,java.lang.I.0303ad0f578e41ca9d4cf1a61bf9b647"}], "snippet": "43.\n44.    private PluginClassLoader(\n45.>             List<URL> urls,\n46.            ClassLoader spiClassLoader,\n47.            Iterable<String> spiPackages,\n48.            Iterable<String> spiResources)\n49.    {\n50.        // use a null parent to prevent delegation to the system class loader\n51.        super(urls.toArray(new URL[urls.size()]), null);\n52.>         this.spiClassLoader = requireNonNull(spiClassLoader, \"spiClassLoader is null\");\n53.>         this.spiPackages = ImmutableList.copyOf(spiPackages);\n54.>         this.spiResources = ImmutableList.copyOf(spiResources);\n55.    }\n56.> \n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/server/PluginClassLoader.java", "methodName": "PluginClassLoader", "line_numbers": [45, 52, 53, 54, 55, 56]}, {"level": 3, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginClassLoader.java", "line_number": 43, "column_number": -1, "description": "return from a call to PluginClassLoader.<init>(List,ClassLoader,Iterable)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "PluginClassLoader.<init>(List,ClassLoader,Iterable)"}, {"tag": "name_id", "value": "com.facebook.presto.server.PluginClassLoader.<init>(java.util.List,java.lang.ClassLoader,java.lang.I.ad62f303ba09074823f3e3d6edc83125"}], "snippet": "41.                Iterables.transform(spiPackages, PluginClassLoader::classNameToResource));\n42.    }\n43.> \n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/server/PluginClassLoader.java", "methodName": "PluginClassLoader", "line_numbers": [43]}, {"level": 2, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginManager.java", "line_number": 290, "column_number": -1, "description": "return from a call to URLClassLoader PluginManager.createClassLoader(ArrayList)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "URLClassLoader PluginManager.createClassLoader(ArrayList)"}, {"tag": "name_id", "value": "com.facebook.presto.server.PluginManager.createClassLoader(java.util.ArrayList):java.net.URLClassLoa.856daf56d173c64db91588384bb016ee"}], "snippet": "288.        ClassLoader parent = getClass().getClassLoader();\n289.        return new PluginClassLoader(urls, parent, SPI_PACKAGES);\n290.    }\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/server/PluginManager.java", "methodName": "createClassLoader", "line_numbers": [290]}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginManager.java", "line_number": 284, "column_number": -1, "description": "return from a call to URLClassLoader PluginManager.createClassLoader(List,String)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "URLClassLoader PluginManager.createClassLoader(List,String)"}, {"tag": "name_id", "value": "com.facebook.presto.server.PluginManager.createClassLoader(java.util.List,java.lang.String):java.net.886b87f382ecbda6cc4614c856dcb2cd"}], "snippet": "282.        }\n283.        return createClassLoader(urls);\n284.    }\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/server/PluginManager.java", "methodName": "createClassLoader", "line_numbers": [284]}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginDiscovery.java", "line_number": 69, "column_number": -1, "description": "start of procedure discoverPlugins(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "Set PluginDiscovery.discoverPlugins(Artifact,PluginClassLoader)"}, {"tag": "name_id", "value": "com.facebook.presto.server.PluginDiscovery.discoverPlugins(org.sonatype.aether.artifact.Artifact,com.27a8a1328b9a429a9200ffbb59955baf"}], "snippet": "48.\n49.    public static Set<String> discoverPlugins(Artifact artifact, ClassLoader classLoader)\n50.>             throws IOException\n51.    {\n52.        if (!artifact.getExtension().equals(\"presto-plugin\")) {\n53.>             throw new RuntimeException(\"Unexpected extension for main artifact: \" + artifact);\n54.        }\n55.\n56.        File file = artifact.getFile();\n57.>         if (!file.getPath().endsWith(\"/target/classes\")) {\n58.>             throw new RuntimeException(\"Unexpected file for main artifact: \" + file);\n59.        }\n60.        if (!file.isDirectory()) {\n61.>             throw new RuntimeException(\"Main artifact file is not a directory: \" + file);\n62.        }\n63.\n64.        if (new File(file, SERVICES_FILE).exists()) {\n65.>             return ImmutableSet.of();\n66.        }\n67.\n68.        return listClasses(file.toPath()).stream()\n69.>                 .filter(name -> classInterfaces(name, classLoader).contains(Plugin.class.getName()))\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/server/PluginDiscovery.java", "methodName": "discoverPlugins", "line_numbers": [50, 53, 57, 58, 61, 65, 69]}, {"level": 2, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginDiscovery.java", "line_number": 90, "column_number": -1, "description": "start of procedure listClasses(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "List PluginDiscovery.listClasses(Path)"}, {"tag": "name_id", "value": "com.facebook.presto.server.PluginDiscovery.listClasses(java.nio.file.Path):java.util.List.7001dfe3eb05342ad4bacd18a9d55a2e"}], "snippet": "84.\n85.    private static List<String> listClasses(Path base)\n86.>             throws IOException\n87.    {\n88.        ImmutableList.Builder<String> list = ImmutableList.builder();\n89.>         walkFileTree(base, new SimpleFileVisitor<Path>()\n90.>         {\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/server/PluginDiscovery.java", "methodName": "listClasses", "line_numbers": [86, 89, 90]}, {"level": 3, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginDiscovery.java", "line_number": 91, "column_number": -1, "description": "start of procedure PluginDiscovery$1(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "PluginDiscovery$1.<init>(Path,ImmutableList$Builder)"}, {"tag": "name_id", "value": "com.facebook.presto.server.PluginDiscovery$1.<init>(java.nio.file.Path,com.google.common.collect.Imm.cc87a38cf452306e4bc08ffb3813a3ef"}], "snippet": "89.        walkFileTree(base, new SimpleFileVisitor<Path>()\n90.        {\n91.>             @Override\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/server/PluginDiscovery.java", "methodName": "PluginDiscovery$1", "line_numbers": [91, 91]}, {"level": 2, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginDiscovery.java", "line_number": 103, "column_number": -1, "description": "Skipping walkFileTree(...): unknown method", "node_tags": [], "snippet": "88.        ImmutableList.Builder<String> list = ImmutableList.builder();\n89.        walkFileTree(base, new SimpleFileVisitor<Path>()\n90.>         {\n91.            @Override\n92.            public FileVisitResult visitFile(Path file, BasicFileAttributes attributes)\n93.                    throws IOException\n94.            {\n95.                if (file.getFileName().toString().endsWith(CLASS_FILE_SUFFIX)) {\n96.                    String name = file.subpath(base.getNameCount(), file.getNameCount()).toString();\n97.                    list.add(javaName(name.substring(0, name.length() - CLASS_FILE_SUFFIX.length())));\n98.                }\n99.                return FileVisitResult.CONTINUE;\n100.            }\n101.        });\n102.        return list.build();\n103.    }\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/server/PluginDiscovery.java", "methodName": "listClasses", "line_numbers": [90, 103]}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginDiscovery.java", "line_number": 69, "column_number": -1, "description": "Skipping test(...): unknown method", "node_tags": [], "snippet": "67.\n68.        return listClasses(file.toPath()).stream()\n69.>                 .filter(name -> classInterfaces(name, classLoader).contains(Plugin.class.getName()))\n70.>                 .collect(toImmutableSet());\n71.    }\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/server/PluginDiscovery.java", "methodName": "discoverPlugins", "line_numbers": [69, 70, 71, 69]}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginDiscovery.java", "line_number": 84, "column_number": -1, "description": "start of procedure writePluginServices(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void PluginDiscovery.writePluginServices(Set,File)"}, {"tag": "name_id", "value": "com.facebook.presto.server.PluginDiscovery.writePluginServices(java.util.Set,java.io.File):void.5db1fe39896b0f8a2452b71631e3283c"}], "snippet": "72.\n73.    public static void writePluginServices(Iterable<String> plugins, File root)\n74.>             throws IOException\n75.    {\n76.        Path path = root.toPath().resolve(SERVICES_FILE);\n77.>         createDirectories(path.getParent());\n78.>         try (Writer out = new OutputStreamWriter(new FileOutputStream(path.toFile()), UTF_8)) {\n79.>             for (String plugin : plugins) {\n80.                out.write(plugin + \"\\n\");\n81.            }\n82.        }\n83.    }\n84.> \n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/server/PluginDiscovery.java", "methodName": "writePluginServices", "line_numbers": [74, 77, 78, 79, 84, 84]}], "infer_explore": [{"level": 0, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginManager.java", "line_number": 236, "column_number": -1, "description": "start of procedure buildClassLoaderFromPom(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "URLClassLoader PluginManager.buildClassLoaderFromPom(File)"}, {"tag": "name_id", "value": "com.facebook.presto.server.PluginManager.buildClassLoaderFromPom(java.io.File):java.net.URLClassLoad.df94471223bc515cbd65b231f1dab60c"}], "snippet": "233.     }\n234. \n235. >     private URLClassLoader buildClassLoaderFromPom(File pomFile)\n236.             throws Exception\n237.     {\n"}, {"level": 0, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginManager.java", "line_number": 239, "column_number": -1, "description": "Skipping resolvePom(...): unknown method", "node_tags": [], "snippet": "236.             throws Exception\n237.     {\n238. >         List<Artifact> artifacts = resolver.resolvePom(pomFile);\n239.         URLClassLoader classLoader = createClassLoader(artifacts, pomFile.getPath());\n240. \n"}, {"level": 0, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginManager.java", "line_number": 240, "column_number": -1, "description": "", "node_tags": [], "snippet": "237.     {\n238.         List<Artifact> artifacts = resolver.resolvePom(pomFile);\n239. >         URLClassLoader classLoader = createClassLoader(artifacts, pomFile.getPath());\n240. \n241.         Artifact artifact = artifacts.get(0);\n"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginManager.java", "line_number": 271, "column_number": -1, "description": "start of procedure createClassLoader(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "URLClassLoader PluginManager.createClassLoader(List,String)"}, {"tag": "name_id", "value": "com.facebook.presto.server.PluginManager.createClassLoader(java.util.List,java.lang.String):java.net.886b87f382ecbda6cc4614c856dcb2cd"}], "snippet": "268.     }\n269. \n270. >     private URLClassLoader createClassLoader(List<Artifact> artifacts, String name)\n271.             throws IOException\n272.     {\n"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginManager.java", "line_number": 274, "column_number": -1, "description": "Skipping debug(...): unknown method", "node_tags": [], "snippet": "271.             throws IOException\n272.     {\n273. >         log.debug(\"Classpath for %s:\", name);\n274.         List<URL> urls = new ArrayList<>();\n275.         for (Artifact artifact : sortedArtifacts(artifacts)) {\n"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginManager.java", "line_number": 275, "column_number": -1, "description": "", "node_tags": [], "snippet": "272.     {\n273.         log.debug(\"Classpath for %s:\", name);\n274. >         List<URL> urls = new ArrayList<>();\n275.         for (Artifact artifact : sortedArtifacts(artifacts)) {\n276.             if (artifact.getFile() == null) {\n"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginManager.java", "line_number": 276, "column_number": -1, "description": "", "node_tags": [], "snippet": "273.         log.debug(\"Classpath for %s:\", name);\n274.         List<URL> urls = new ArrayList<>();\n275. >         for (Artifact artifact : sortedArtifacts(artifacts)) {\n276.             if (artifact.getFile() == null) {\n277.                 throw new RuntimeException(\"Could not resolve artifact: \" + artifact);\n"}, {"level": 2, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginManager.java", "line_number": 305, "column_number": -1, "description": "start of procedure sortedArtifacts(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "List PluginManager.sortedArtifacts(List)"}, {"tag": "name_id", "value": "com.facebook.presto.server.PluginManager.sortedArtifacts(java.util.List):java.util.List.10120d9e894742381a4f5e0ed4bdf907"}], "snippet": "302.     }\n303. \n304. >     private static List<Artifact> sortedArtifacts(List<Artifact> artifacts)\n305.     {\n306.         List<Artifact> list = new ArrayList<>(artifacts);\n"}, {"level": 2, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginManager.java", "line_number": 307, "column_number": -1, "description": "Skipping ArrayList(...): unknown method", "node_tags": [], "snippet": "304.     private static List<Artifact> sortedArtifacts(List<Artifact> artifacts)\n305.     {\n306. >         List<Artifact> list = new ArrayList<>(artifacts);\n307.         Collections.sort(list, Ordering.natural().nullsLast().onResultOf(Artifact::getFile));\n308.         return list;\n"}, {"level": 2, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginManager.java", "line_number": 308, "column_number": -1, "description": "Skipping sort(...): unknown method", "node_tags": [], "snippet": "305.     {\n306.         List<Artifact> list = new ArrayList<>(artifacts);\n307. >         Collections.sort(list, Ordering.natural().nullsLast().onResultOf(Artifact::getFile));\n308.         return list;\n309.     }\n"}, {"level": 2, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginManager.java", "line_number": 309, "column_number": -1, "description": "return from a call to List PluginManager.sortedArtifacts(List)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "List PluginManager.sortedArtifacts(List)"}, {"tag": "name_id", "value": "com.facebook.presto.server.PluginManager.sortedArtifacts(java.util.List):java.util.List.10120d9e894742381a4f5e0ed4bdf907"}], "snippet": "306.         List<Artifact> list = new ArrayList<>(artifacts);\n307.         Collections.sort(list, Ordering.natural().nullsLast().onResultOf(Artifact::getFile));\n308. >         return list;\n309.     }\n310. }\n"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginManager.java", "line_number": 276, "column_number": -1, "description": "Taking false branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "false"}], "snippet": "273.         log.debug(\"Classpath for %s:\", name);\n274.         List<URL> urls = new ArrayList<>();\n275. >         for (Artifact artifact : sortedArtifacts(artifacts)) {\n276.             if (artifact.getFile() == null) {\n277.                 throw new RuntimeException(\"Could not resolve artifact: \" + artifact);\n"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginManager.java", "line_number": 284, "column_number": -1, "description": "", "node_tags": [], "snippet": "281.             urls.add(file.toURI().toURL());\n282.         }\n283. >         return createClassLoader(urls);\n284.     }\n285. \n"}, {"level": 2, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginManager.java", "line_number": 287, "column_number": -1, "description": "start of procedure createClassLoader(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "URLClassLoader PluginManager.createClassLoader(ArrayList)"}, {"tag": "name_id", "value": "com.facebook.presto.server.PluginManager.createClassLoader(java.util.ArrayList):java.net.URLClassLoa.856daf56d173c64db91588384bb016ee"}], "snippet": "284.     }\n285. \n286. >     private URLClassLoader createClassLoader(List<URL> urls)\n287.     {\n288.         ClassLoader parent = getClass().getClassLoader();\n"}, {"level": 2, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginManager.java", "line_number": 289, "column_number": -1, "description": "Skipping getClassLoader(): unknown method", "node_tags": [], "snippet": "286.     private URLClassLoader createClassLoader(List<URL> urls)\n287.     {\n288. >         ClassLoader parent = getClass().getClassLoader();\n289.         return new PluginClassLoader(urls, parent, SPI_PACKAGES);\n290.     }\n"}, {"level": 2, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginManager.java", "line_number": 290, "column_number": -1, "description": "", "node_tags": [], "snippet": "287.     {\n288.         ClassLoader parent = getClass().getClassLoader();\n289. >         return new PluginClassLoader(urls, parent, SPI_PACKAGES);\n290.     }\n291. \n"}, {"level": 3, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginClassLoader.java", "line_number": 34, "column_number": -1, "description": "start of procedure PluginClassLoader(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "PluginClassLoader.<init>(List,ClassLoader,Iterable)"}, {"tag": "name_id", "value": "com.facebook.presto.server.PluginClassLoader.<init>(java.util.List,java.lang.ClassLoader,java.lang.I.ad62f303ba09074823f3e3d6edc83125"}], "snippet": "31.     private final List<String> spiResources;\n32. \n33. >     public PluginClassLoader(\n34.             List<URL> urls,\n35.             ClassLoader spiClassLoader,\n"}, {"level": 3, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginClassLoader.java", "line_number": 39, "column_number": -1, "description": "Skipping apply(): unknown method", "node_tags": [], "snippet": "36.             Iterable<String> spiPackages)\n37.     {\n38. >         this(urls,\n39.                 spiClassLoader,\n40.                 spiPackages,\n"}, {"level": 3, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginClassLoader.java", "line_number": 42, "column_number": -1, "description": "Skipping transform(...): unknown method", "node_tags": [], "snippet": "39.                 spiClassLoader,\n40.                 spiPackages,\n41. >                 Iterables.transform(spiPackages, PluginClassLoader::classNameToResource));\n42.     }\n43. \n"}, {"level": 3, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginClassLoader.java", "line_number": 39, "column_number": -1, "description": "", "node_tags": [], "snippet": "36.             Iterable<String> spiPackages)\n37.     {\n38. >         this(urls,\n39.                 spiClassLoader,\n40.                 spiPackages,\n"}, {"level": 4, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginClassLoader.java", "line_number": 45, "column_number": -1, "description": "start of procedure PluginClassLoader(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "PluginClassLoader.<init>(List,ClassLoader,Iterable,Iterable)"}, {"tag": "name_id", "value": "com.facebook.presto.server.PluginClassLoader.<init>(java.util.List,java.lang.ClassLoader,java.lang.I.0303ad0f578e41ca9d4cf1a61bf9b647"}], "snippet": "42.     }\n43. \n44. >     private PluginClassLoader(\n45.             List<URL> urls,\n46.             ClassLoader spiClassLoader,\n"}, {"level": 4, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginClassLoader.java", "line_number": 52, "column_number": -1, "description": "Skipping URLClassLoader(...): unknown method", "node_tags": [], "snippet": "49.     {\n50.         // use a null parent to prevent delegation to the system class loader\n51. >         super(urls.toArray(new URL[urls.size()]), null);\n52.         this.spiClassLoader = requireNonNull(spiClassLoader, \"spiClassLoader is null\");\n53.         this.spiPackages = ImmutableList.copyOf(spiPackages);\n"}, {"level": 4, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginClassLoader.java", "line_number": 53, "column_number": -1, "description": "", "node_tags": [], "snippet": "50.         // use a null parent to prevent delegation to the system class loader\n51.         super(urls.toArray(new URL[urls.size()]), null);\n52. >         this.spiClassLoader = requireNonNull(spiClassLoader, \"spiClassLoader is null\");\n53.         this.spiPackages = ImmutableList.copyOf(spiPackages);\n54.         this.spiResources = ImmutableList.copyOf(spiResources);\n"}, {"level": 4, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginClassLoader.java", "line_number": 54, "column_number": -1, "description": "", "node_tags": [], "snippet": "51.         super(urls.toArray(new URL[urls.size()]), null);\n52.         this.spiClassLoader = requireNonNull(spiClassLoader, \"spiClassLoader is null\");\n53. >         this.spiPackages = ImmutableList.copyOf(spiPackages);\n54.         this.spiResources = ImmutableList.copyOf(spiResources);\n55.     }\n"}, {"level": 4, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginClassLoader.java", "line_number": 55, "column_number": -1, "description": "", "node_tags": [], "snippet": "52.         this.spiClassLoader = requireNonNull(spiClassLoader, \"spiClassLoader is null\");\n53.         this.spiPackages = ImmutableList.copyOf(spiPackages);\n54. >         this.spiResources = ImmutableList.copyOf(spiResources);\n55.     }\n56. \n"}, {"level": 4, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginClassLoader.java", "line_number": 56, "column_number": -1, "description": "return from a call to PluginClassLoader.<init>(List,ClassLoader,Iterable,Iterable)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "PluginClassLoader.<init>(List,ClassLoader,Iterable,Iterable)"}, {"tag": "name_id", "value": "com.facebook.presto.server.PluginClassLoader.<init>(java.util.List,java.lang.ClassLoader,java.lang.I.0303ad0f578e41ca9d4cf1a61bf9b647"}], "snippet": "53.         this.spiPackages = ImmutableList.copyOf(spiPackages);\n54.         this.spiResources = ImmutableList.copyOf(spiResources);\n55. >     }\n56. \n57.     @Override\n"}, {"level": 3, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginClassLoader.java", "line_number": 43, "column_number": -1, "description": "return from a call to PluginClassLoader.<init>(List,ClassLoader,Iterable)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "PluginClassLoader.<init>(List,ClassLoader,Iterable)"}, {"tag": "name_id", "value": "com.facebook.presto.server.PluginClassLoader.<init>(java.util.List,java.lang.ClassLoader,java.lang.I.ad62f303ba09074823f3e3d6edc83125"}], "snippet": "40.                 spiPackages,\n41.                 Iterables.transform(spiPackages, PluginClassLoader::classNameToResource));\n42. >     }\n43. \n44.     private PluginClassLoader(\n"}, {"level": 2, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginManager.java", "line_number": 290, "column_number": -1, "description": "return from a call to URLClassLoader PluginManager.createClassLoader(ArrayList)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "URLClassLoader PluginManager.createClassLoader(ArrayList)"}, {"tag": "name_id", "value": "com.facebook.presto.server.PluginManager.createClassLoader(java.util.ArrayList):java.net.URLClassLoa.856daf56d173c64db91588384bb016ee"}], "snippet": "287.     {\n288.         ClassLoader parent = getClass().getClassLoader();\n289. >         return new PluginClassLoader(urls, parent, SPI_PACKAGES);\n290.     }\n291. \n"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginManager.java", "line_number": 284, "column_number": -1, "description": "return from a call to URLClassLoader PluginManager.createClassLoader(List,String)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "URLClassLoader PluginManager.createClassLoader(List,String)"}, {"tag": "name_id", "value": "com.facebook.presto.server.PluginManager.createClassLoader(java.util.List,java.lang.String):java.net.886b87f382ecbda6cc4614c856dcb2cd"}], "snippet": "281.             urls.add(file.toURI().toURL());\n282.         }\n283. >         return createClassLoader(urls);\n284.     }\n285. \n"}, {"level": 0, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginManager.java", "line_number": 242, "column_number": -1, "description": "", "node_tags": [], "snippet": "239.         URLClassLoader classLoader = createClassLoader(artifacts, pomFile.getPath());\n240. \n241. >         Artifact artifact = artifacts.get(0);\n242.         Set<String> plugins = discoverPlugins(artifact, classLoader);\n243.         if (!plugins.isEmpty()) {\n"}, {"level": 0, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginManager.java", "line_number": 243, "column_number": -1, "description": "", "node_tags": [], "snippet": "240. \n241.         Artifact artifact = artifacts.get(0);\n242. >         Set<String> plugins = discoverPlugins(artifact, classLoader);\n243.         if (!plugins.isEmpty()) {\n244.             writePluginServices(plugins, artifact.getFile());\n"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginDiscovery.java", "line_number": 50, "column_number": -1, "description": "start of procedure discoverPlugins(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "Set PluginDiscovery.discoverPlugins(Artifact,PluginClassLoader)"}, {"tag": "name_id", "value": "com.facebook.presto.server.PluginDiscovery.discoverPlugins(org.sonatype.aether.artifact.Artifact,com.27a8a1328b9a429a9200ffbb59955baf"}], "snippet": "47.     private PluginDiscovery() {}\n48. \n49. >     public static Set<String> discoverPlugins(Artifact artifact, ClassLoader classLoader)\n50.             throws IOException\n51.     {\n"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginDiscovery.java", "line_number": 53, "column_number": -1, "description": "Taking false branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "false"}], "snippet": "50.             throws IOException\n51.     {\n52. >         if (!artifact.getExtension().equals(\"presto-plugin\")) {\n53.             throw new RuntimeException(\"Unexpected extension for main artifact: \" + artifact);\n54.         }\n"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginDiscovery.java", "line_number": 57, "column_number": -1, "description": "Skipping getFile(): unknown method", "node_tags": [], "snippet": "54.         }\n55. \n56. >         File file = artifact.getFile();\n57.         if (!file.getPath().endsWith(\"/target/classes\")) {\n58.             throw new RuntimeException(\"Unexpected file for main artifact: \" + file);\n"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginDiscovery.java", "line_number": 58, "column_number": -1, "description": "Taking false branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "false"}], "snippet": "55. \n56.         File file = artifact.getFile();\n57. >         if (!file.getPath().endsWith(\"/target/classes\")) {\n58.             throw new RuntimeException(\"Unexpected file for main artifact: \" + file);\n59.         }\n"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginDiscovery.java", "line_number": 61, "column_number": -1, "description": "Taking false branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "false"}], "snippet": "58.             throw new RuntimeException(\"Unexpected file for main artifact: \" + file);\n59.         }\n60. >         if (!file.isDirectory()) {\n61.             throw new RuntimeException(\"Main artifact file is not a directory: \" + file);\n62.         }\n"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginDiscovery.java", "line_number": 65, "column_number": -1, "description": "Taking false branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "false"}], "snippet": "62.         }\n63. \n64. >         if (new File(file, SERVICES_FILE).exists()) {\n65.             return ImmutableSet.of();\n66.         }\n"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginDiscovery.java", "line_number": 69, "column_number": -1, "description": "", "node_tags": [], "snippet": "66.         }\n67. \n68. >         return listClasses(file.toPath()).stream()\n69.                 .filter(name -> classInterfaces(name, classLoader).contains(Plugin.class.getName()))\n70.                 .collect(toImmutableSet());\n"}, {"level": 2, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginDiscovery.java", "line_number": 86, "column_number": -1, "description": "start of procedure listClasses(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "List PluginDiscovery.listClasses(Path)"}, {"tag": "name_id", "value": "com.facebook.presto.server.PluginDiscovery.listClasses(java.nio.file.Path):java.util.List.7001dfe3eb05342ad4bacd18a9d55a2e"}], "snippet": "83.     }\n84. \n85. >     private static List<String> listClasses(Path base)\n86.             throws IOException\n87.     {\n"}, {"level": 2, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginDiscovery.java", "line_number": 89, "column_number": -1, "description": "Skipping builder(): unknown method", "node_tags": [], "snippet": "86.             throws IOException\n87.     {\n88. >         ImmutableList.Builder<String> list = ImmutableList.builder();\n89.         walkFileTree(base, new SimpleFileVisitor<Path>()\n90.         {\n"}, {"level": 2, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginDiscovery.java", "line_number": 90, "column_number": -1, "description": "", "node_tags": [], "snippet": "87.     {\n88.         ImmutableList.Builder<String> list = ImmutableList.builder();\n89. >         walkFileTree(base, new SimpleFileVisitor<Path>()\n90.         {\n91.             @Override\n"}, {"level": 3, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginDiscovery.java", "line_number": 91, "column_number": -1, "description": "start of procedure PluginDiscovery$1(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "PluginDiscovery$1.<init>(Path,ImmutableList$Builder)"}, {"tag": "name_id", "value": "com.facebook.presto.server.PluginDiscovery$1.<init>(java.nio.file.Path,com.google.common.collect.Imm.cc87a38cf452306e4bc08ffb3813a3ef"}], "snippet": "88.         ImmutableList.Builder<String> list = ImmutableList.builder();\n89.         walkFileTree(base, new SimpleFileVisitor<Path>()\n90. >         {\n91.             @Override\n92.             public FileVisitResult visitFile(Path file, BasicFileAttributes attributes)\n"}, {"level": 3, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginDiscovery.java", "line_number": 91, "column_number": -1, "description": "return from a call to PluginDiscovery$1.<init>(Path,ImmutableList$Builder)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "PluginDiscovery$1.<init>(Path,ImmutableList$Builder)"}, {"tag": "name_id", "value": "com.facebook.presto.server.PluginDiscovery$1.<init>(java.nio.file.Path,com.google.common.collect.Imm.cc87a38cf452306e4bc08ffb3813a3ef"}], "snippet": "88.         ImmutableList.Builder<String> list = ImmutableList.builder();\n89.         walkFileTree(base, new SimpleFileVisitor<Path>()\n90. >         {\n91.             @Override\n92.             public FileVisitResult visitFile(Path file, BasicFileAttributes attributes)\n"}, {"level": 2, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginDiscovery.java", "line_number": 90, "column_number": -1, "description": "Skipping walkFileTree(...): unknown method", "node_tags": [], "snippet": "87.     {\n88.         ImmutableList.Builder<String> list = ImmutableList.builder();\n89. >         walkFileTree(base, new SimpleFileVisitor<Path>()\n90.         {\n91.             @Override\n"}, {"level": 2, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginDiscovery.java", "line_number": 103, "column_number": -1, "description": "return from a call to List PluginDiscovery.listClasses(Path)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "List PluginDiscovery.listClasses(Path)"}, {"tag": "name_id", "value": "com.facebook.presto.server.PluginDiscovery.listClasses(java.nio.file.Path):java.util.List.7001dfe3eb05342ad4bacd18a9d55a2e"}], "snippet": "100.             }\n101.         });\n102. >         return list.build();\n103.     }\n104. \n"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginDiscovery.java", "line_number": 69, "column_number": -1, "description": "Skipping test(...): unknown method", "node_tags": [], "snippet": "66.         }\n67. \n68. >         return listClasses(file.toPath()).stream()\n69.                 .filter(name -> classInterfaces(name, classLoader).contains(Plugin.class.getName()))\n70.                 .collect(toImmutableSet());\n"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginDiscovery.java", "line_number": 70, "column_number": -1, "description": "Skipping filter(...): unknown method", "node_tags": [], "snippet": "67. \n68.         return listClasses(file.toPath()).stream()\n69. >                 .filter(name -> classInterfaces(name, classLoader).contains(Plugin.class.getName()))\n70.                 .collect(toImmutableSet());\n71.     }\n"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginDiscovery.java", "line_number": 71, "column_number": -1, "description": "Skipping collect(...): unknown method", "node_tags": [], "snippet": "68.         return listClasses(file.toPath()).stream()\n69.                 .filter(name -> classInterfaces(name, classLoader).contains(Plugin.class.getName()))\n70. >                 .collect(toImmutableSet());\n71.     }\n72. \n"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginDiscovery.java", "line_number": 69, "column_number": -1, "description": "return from a call to Set PluginDiscovery.discoverPlugins(Artifact,PluginClassLoader)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "Set PluginDiscovery.discoverPlugins(Artifact,PluginClassLoader)"}, {"tag": "name_id", "value": "com.facebook.presto.server.PluginDiscovery.discoverPlugins(org.sonatype.aether.artifact.Artifact,com.27a8a1328b9a429a9200ffbb59955baf"}], "snippet": "66.         }\n67. \n68. >         return listClasses(file.toPath()).stream()\n69.                 .filter(name -> classInterfaces(name, classLoader).contains(Plugin.class.getName()))\n70.                 .collect(toImmutableSet());\n"}, {"level": 0, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginManager.java", "line_number": 244, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "241.         Artifact artifact = artifacts.get(0);\n242.         Set<String> plugins = discoverPlugins(artifact, classLoader);\n243. >         if (!plugins.isEmpty()) {\n244.             writePluginServices(plugins, artifact.getFile());\n245.         }\n"}, {"level": 0, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginManager.java", "line_number": 245, "column_number": -1, "description": "", "node_tags": [], "snippet": "242.         Set<String> plugins = discoverPlugins(artifact, classLoader);\n243.         if (!plugins.isEmpty()) {\n244. >             writePluginServices(plugins, artifact.getFile());\n245.         }\n246. \n"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginDiscovery.java", "line_number": 74, "column_number": -1, "description": "start of procedure writePluginServices(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void PluginDiscovery.writePluginServices(Set,File)"}, {"tag": "name_id", "value": "com.facebook.presto.server.PluginDiscovery.writePluginServices(java.util.Set,java.io.File):void.5db1fe39896b0f8a2452b71631e3283c"}], "snippet": "71.     }\n72. \n73. >     public static void writePluginServices(Iterable<String> plugins, File root)\n74.             throws IOException\n75.     {\n"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginDiscovery.java", "line_number": 77, "column_number": -1, "description": "Skipping resolve(...): unknown method", "node_tags": [], "snippet": "74.             throws IOException\n75.     {\n76. >         Path path = root.toPath().resolve(SERVICES_FILE);\n77.         createDirectories(path.getParent());\n78.         try (Writer out = new OutputStreamWriter(new FileOutputStream(path.toFile()), UTF_8)) {\n"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginDiscovery.java", "line_number": 78, "column_number": -1, "description": "Skipping createDirectories(...): unknown method", "node_tags": [], "snippet": "75.     {\n76.         Path path = root.toPath().resolve(SERVICES_FILE);\n77. >         createDirectories(path.getParent());\n78.         try (Writer out = new OutputStreamWriter(new FileOutputStream(path.toFile()), UTF_8)) {\n79.             for (String plugin : plugins) {\n"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginDiscovery.java", "line_number": 79, "column_number": -1, "description": "", "node_tags": [], "snippet": "76.         Path path = root.toPath().resolve(SERVICES_FILE);\n77.         createDirectories(path.getParent());\n78. >         try (Writer out = new OutputStreamWriter(new FileOutputStream(path.toFile()), UTF_8)) {\n79.             for (String plugin : plugins) {\n80.                 out.write(plugin + \"\\n\");\n"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginDiscovery.java", "line_number": 84, "column_number": -1, "description": "exception java.io.FileNotFoundException", "node_tags": [{"tag": "name", "value": "java.io.FileNotFoundException"}, {"tag": "kind", "value": "exception"}], "snippet": "81.             }\n82.         }\n83. >     }\n84. \n85.     private static List<String> listClasses(Path base)\n"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginDiscovery.java", "line_number": 84, "column_number": -1, "description": "return from a call to void PluginDiscovery.writePluginServices(Set,File)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "void PluginDiscovery.writePluginServices(Set,File)"}, {"tag": "name_id", "value": "com.facebook.presto.server.PluginDiscovery.writePluginServices(java.util.Set,java.io.File):void.5db1fe39896b0f8a2452b71631e3283c"}], "snippet": "81.             }\n82.         }\n83. >     }\n84. \n85.     private static List<String> listClasses(Path base)\n"}, {"level": 0, "filename": "presto-main/src/main/java/com/facebook/presto/server/PluginManager.java", "line_number": 248, "column_number": -1, "description": "", "node_tags": [], "snippet": "245.         }\n246. \n247. >         return classLoader;\n248.     }\n249. \n"}]}, {"url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/operator/scalar/JsonExtract.java", "rawCode": "/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage com.facebook.presto.operator.scalar;\n\nimport com.facebook.presto.spi.PrestoException;\nimport com.fasterxml.jackson.core.JsonFactory;\nimport com.fasterxml.jackson.core.JsonGenerator;\nimport com.fasterxml.jackson.core.JsonParseException;\nimport com.fasterxml.jackson.core.JsonParser;\nimport com.fasterxml.jackson.core.JsonToken;\nimport com.fasterxml.jackson.core.io.SerializedString;\nimport com.google.common.collect.ImmutableList;\nimport io.airlift.slice.DynamicSliceOutput;\nimport io.airlift.slice.Slice;\n\nimport java.io.IOException;\nimport java.io.UncheckedIOException;\n\nimport static com.facebook.presto.spi.StandardErrorCode.INVALID_FUNCTION_ARGUMENT;\nimport static com.facebook.presto.util.JsonUtil.createJsonGenerator;\nimport static com.facebook.presto.util.JsonUtil.createJsonParser;\nimport static com.fasterxml.jackson.core.JsonFactory.Feature.CANONICALIZE_FIELD_NAMES;\nimport static com.fasterxml.jackson.core.JsonToken.END_ARRAY;\nimport static com.fasterxml.jackson.core.JsonToken.END_OBJECT;\nimport static com.fasterxml.jackson.core.JsonToken.FIELD_NAME;\nimport static com.fasterxml.jackson.core.JsonToken.START_ARRAY;\nimport static com.fasterxml.jackson.core.JsonToken.START_OBJECT;\nimport static com.fasterxml.jackson.core.JsonToken.VALUE_NULL;\nimport static io.airlift.slice.Slices.utf8Slice;\nimport static java.util.Objects.requireNonNull;\n\n/**\n * Extracts values from JSON\n * <p/>\n * Supports the following JSON path primitives:\n * <pre>\n *    $ : Root object\n *    . or [] : Child operator\n *   [] : Subscript operator for array\n * </pre>\n * <p/>\n * Supported JSON Path Examples:\n * <pre>\n *    { \"store\": {\n *        \"book\": [\n *          { \"category\": \"reference\",\n *            \"author\": \"Nigel Rees\",\n *            \"title\": \"Sayings of the Century\",\n *            \"price\": 8.95,\n *            \"contributors\": [[\"Adam\", \"Levine\"], [\"Bob\", \"Strong\"]]\n *          },\n *          { \"category\": \"fiction\",\n *            \"author\": \"Evelyn Waugh\",\n *            \"title\": \"Sword of Honour\",\n *            \"price\": 12.99,\n *            \"isbn\": \"0-553-21311-3\",\n *            \"last_owner\": null\n *          }\n *        ],\n *        \"bicycle\": {\n *          \"color\": \"red\",\n *          \"price\": 19.95\n *        }\n *      }\n *    }\n * </pre>\n * <p/>\n * With only scalar values using dot-notation of path:\n * <pre>\n *    $.store.book[0].author => Nigel Rees\n *    $.store.bicycle.price => 19.95\n *    $.store.book[0].isbn => NULL (Doesn't exist becomes java null)\n *    $.store.book[1].last_owner => NULL (json null becomes java null)\n *    $.store.book[0].contributors[0][1] => Levine\n * </pre>\n * <p/>\n * With json values using dot-notation of path:\n * <pre>\n *    $.store.book[0].author => \"Nigel Rees\"\n *    $.store.bicycle.price => 19.95\n *    $.store.book[0].isbn => NULL (Doesn't exist becomes java null)\n *    $.store.book[1].last_owner => null (json null becomes the string \"null\")\n *    $.store.book[0].contributors[0] => [\"Adam\", \"Levine\"]\n *    $.store.bicycle => {\"color\": \"red\", \"price\": 19.95}\n * </pre>\n * With only scalar values using bracket-notation of path:\n * <pre>\n *    $[\"store\"][\"book\"][0][\"author\"] => Nigel Rees\n *    $[\"store\"][\"bicycle\"][\"price\"] => 19.95\n *    $[\"store\"][\"book\"][0][\"isbn\"] => NULL (Doesn't exist becomes java null)\n *    $[\"store\"][\"book\"][1][\"last_owner\"] => NULL (json null becomes java null)\n *    $[\"store\"][\"book\"][0][\"contributors\"][0][1] => Levine\n * </pre>\n * <p/>\n * With json values using bracket-notation of path:\n * <pre>\n *    $[\"store\"][\"book\"][0][\"author\"] => \"Nigel Rees\"\n *    $[\"store\"][\"bicycle\"][\"price\"] => 19.95\n *    $[\"store\"][\"book\"][0][\"isbn\"] => NULL (Doesn't exist becomes java null)\n *    $[\"store\"][\"book\"][1][\"last_owner\"] => null (json null becomes the string \"null\")\n *    $[\"store\"][\"book\"][0][\"contributors\"][0] => [\"Adam\", \"Levine\"]\n *    $[\"store\"][\"bicycle\"] => {\"color\": \"red\", \"price\": 19.95}\n * </pre>\n */\npublic final class JsonExtract\n{\n    private static final int ESTIMATED_JSON_OUTPUT_SIZE = 512;\n\n    private static final JsonFactory JSON_FACTORY = new JsonFactory()\n            .disable(CANONICALIZE_FIELD_NAMES);\n\n    private JsonExtract() {}\n\n    public static <T> T extract(Slice jsonInput, JsonExtractor<T> jsonExtractor)\n    {\n        requireNonNull(jsonInput, \"jsonInput is null\");\n        try {\n            try (JsonParser jsonParser = createJsonParser(JSON_FACTORY, jsonInput)) {\n                // Initialize by advancing to first token and make sure it exists\n                if (jsonParser.nextToken() == null) {\n                    return null;\n                }\n\n                return jsonExtractor.extract(jsonParser);\n            }\n        }\n        catch (JsonParseException e) {\n            // Return null if we failed to parse something\n            return null;\n        }\n        catch (IOException e) {\n            throw new UncheckedIOException(e);\n        }\n    }\n\n    public static <T> JsonExtractor<T> generateExtractor(String path, JsonExtractor<T> rootExtractor)\n    {\n        return generateExtractor(path, rootExtractor, false);\n    }\n\n    public static <T> JsonExtractor<T> generateExtractor(String path, JsonExtractor<T> rootExtractor, boolean exceptionOnOutOfBounds)\n    {\n        ImmutableList<String> tokens = ImmutableList.copyOf(new JsonPathTokenizer(path));\n\n        JsonExtractor<T> jsonExtractor = rootExtractor;\n        for (String token : tokens.reverse()) {\n            jsonExtractor = new ObjectFieldJsonExtractor<>(token, jsonExtractor, exceptionOnOutOfBounds);\n        }\n        return jsonExtractor;\n    }\n\n    public interface JsonExtractor<T>\n    {\n        /**\n         * Executes the extraction on the existing content of the JsonParser and outputs the match.\n         * <p/>\n         * Notes:\n         * <ul>\n         * <li>JsonParser must be on the FIRST token of the value to be processed when extract is called</li>\n         * <li>INVARIANT: when extract() returns, the current token of the parser will be the LAST token of the value</li>\n         * </ul>\n         *\n         * @return the value, or null if not applicable\n         */\n        T extract(JsonParser jsonParser)\n                throws IOException;\n    }\n\n    public static class ObjectFieldJsonExtractor<T>\n            implements JsonExtractor<T>\n    {\n        private final SerializedString fieldName;\n        private final JsonExtractor<? extends T> delegate;\n        private final int index;\n        private final boolean exceptionOnOutOfBounds;\n\n        public ObjectFieldJsonExtractor(String fieldName, JsonExtractor<? extends T> delegate)\n        {\n            this(fieldName, delegate, false);\n        }\n\n        public ObjectFieldJsonExtractor(String fieldName, JsonExtractor<? extends T> delegate, boolean exceptionOnOutOfBounds)\n        {\n            this.fieldName = new SerializedString(requireNonNull(fieldName, \"fieldName is null\"));\n            this.delegate = requireNonNull(delegate, \"delegate is null\");\n            this.exceptionOnOutOfBounds = exceptionOnOutOfBounds;\n            this.index = tryParseInt(fieldName, -1);\n        }\n\n        @Override\n        public T extract(JsonParser jsonParser)\n                throws IOException\n        {\n            if (jsonParser.getCurrentToken() == START_OBJECT) {\n                return processJsonObject(jsonParser);\n            }\n\n            if (jsonParser.getCurrentToken() == START_ARRAY) {\n                return processJsonArray(jsonParser);\n            }\n\n            throw new JsonParseException(jsonParser, \"Expected a JSON object or array\");\n        }\n\n        public T processJsonObject(JsonParser jsonParser)\n                throws IOException\n        {\n            while (!jsonParser.nextFieldName(fieldName)) {\n                if (!jsonParser.hasCurrentToken()) {\n                    throw new JsonParseException(jsonParser, \"Unexpected end of object\");\n                }\n                if (jsonParser.getCurrentToken() == END_OBJECT) {\n                    // Unable to find matching field\n                    return null;\n                }\n                jsonParser.skipChildren(); // Skip nested structure if currently at the start of one\n            }\n\n            jsonParser.nextToken(); // Shift to first token of the value\n\n            return delegate.extract(jsonParser);\n        }\n\n        public T processJsonArray(JsonParser jsonParser)\n                throws IOException\n        {\n            int currentIndex = 0;\n            while (true) {\n                JsonToken token = jsonParser.nextToken();\n                if (token == null) {\n                    throw new JsonParseException(jsonParser, \"Unexpected end of array\");\n                }\n                if (token == END_ARRAY) {\n                    // Index out of bounds\n                    if (exceptionOnOutOfBounds) {\n                        throw new PrestoException(INVALID_FUNCTION_ARGUMENT, \"Index out of bounds\");\n                    }\n                    return null;\n                }\n                if (currentIndex == index) {\n                    break;\n                }\n                currentIndex++;\n                jsonParser.skipChildren(); // Skip nested structure if currently at the start of one\n            }\n\n            return delegate.extract(jsonParser);\n        }\n    }\n\n    public static class ScalarValueJsonExtractor\n            implements JsonExtractor<Slice>\n    {\n        @Override\n        public Slice extract(JsonParser jsonParser)\n                throws IOException\n        {\n            JsonToken token = jsonParser.getCurrentToken();\n            if (token == null) {\n                throw new JsonParseException(jsonParser, \"Unexpected end of value\");\n            }\n            if (!token.isScalarValue() || token == VALUE_NULL) {\n                return null;\n            }\n            return utf8Slice(jsonParser.getText());\n        }\n    }\n\n    public static class JsonValueJsonExtractor\n            implements JsonExtractor<Slice>\n    {\n        @Override\n        public Slice extract(JsonParser jsonParser)\n                throws IOException\n        {\n            if (!jsonParser.hasCurrentToken()) {\n                throw new JsonParseException(jsonParser, \"Unexpected end of value\");\n            }\n\n            DynamicSliceOutput dynamicSliceOutput = new DynamicSliceOutput(ESTIMATED_JSON_OUTPUT_SIZE);\n            try (JsonGenerator jsonGenerator = createJsonGenerator(JSON_FACTORY, dynamicSliceOutput)) {\n                jsonGenerator.copyCurrentStructure(jsonParser);\n            }\n            return dynamicSliceOutput.slice();\n        }\n    }\n\n    public static class JsonSizeExtractor\n            implements JsonExtractor<Long>\n    {\n        @Override\n        public Long extract(JsonParser jsonParser)\n                throws IOException\n        {\n            if (!jsonParser.hasCurrentToken()) {\n                throw new JsonParseException(jsonParser, \"Unexpected end of value\");\n            }\n\n            if (jsonParser.getCurrentToken() == START_ARRAY) {\n                long length = 0;\n                while (true) {\n                    JsonToken token = jsonParser.nextToken();\n                    if (token == null) {\n                        return null;\n                    }\n                    if (token == END_ARRAY) {\n                        return length;\n                    }\n                    jsonParser.skipChildren();\n\n                    length++;\n                }\n            }\n\n            if (jsonParser.getCurrentToken() == START_OBJECT) {\n                long length = 0;\n                while (true) {\n                    JsonToken token = jsonParser.nextToken();\n                    if (token == null) {\n                        return null;\n                    }\n                    if (token == END_OBJECT) {\n                        return length;\n                    }\n\n                    if (token == FIELD_NAME) {\n                        length++;\n                    }\n                    else {\n                        jsonParser.skipChildren();\n                    }\n                }\n            }\n\n            return 0L;\n        }\n    }\n\n    private static int tryParseInt(String fieldName, int defaultValue)\n    {\n        int index = defaultValue;\n        try {\n            index = Integer.parseInt(fieldName);\n        }\n        catch (NumberFormatException ignored) {\n        }\n        return index;\n    }\n}\n", "methodName": "Slice JsonExtract$JsonValueJsonExtractor.extract(JsonParser)", "exampleID": 60, "dataset": "infer", "filepath": "presto-main/src/main/java/com/facebook/presto/operator/scalar/JsonExtract.java", "source": "io.airlift.slice.DynamicSliceOutput", "sourceLine": 291, "qualifier": "Resource of type $$io.airlift.slice.DynamicSliceOutput/$ acquired by call to @@new()/@ is not released", "steps": [{"line": 116, "source": "io.airlift.slice.DynamicSliceOutput", "filepath": "presto-main/src/main/java/com/facebook/presto/util/JsonUtil.java", "methodName": "JsonUtil.createJsonGenerator", "exampleID": 61}], "line_number": 291, "records": [{"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/util/JsonUtil.java", "line_number": 116, "column_number": -1, "description": "start of procedure createJsonGenerator(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "JsonGenerator JsonUtil.createJsonGenerator(JsonFactory,DynamicSliceOutput)"}, {"tag": "name_id", "value": "com.facebook.presto.util.JsonUtil.createJsonGenerator(com.fasterxml.jackson.core.JsonFactory,io.airl.9b352ceb3a8d50df077e16b581e09582"}], "snippet": "    public static JsonGenerator createJsonGenerator(JsonFactory factory, SliceOutput output)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/util/JsonUtil.java", "methodName": "createJsonGenerator"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/util/JsonUtil.java", "line_number": 119, "column_number": -1, "description": "return from a call to JsonGenerator JsonUtil.createJsonGenerator(JsonFactory,DynamicSliceOutput)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "JsonGenerator JsonUtil.createJsonGenerator(JsonFactory,DynamicSliceOutput)"}, {"tag": "name_id", "value": "com.facebook.presto.util.JsonUtil.createJsonGenerator(com.fasterxml.jackson.core.JsonFactory,io.airl.9b352ceb3a8d50df077e16b581e09582"}], "snippet": "        return factory.createGenerator((OutputStream) output);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/util/JsonUtil.java", "methodName": "createJsonGenerator"}], "combined_records": [{"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/util/JsonUtil.java", "line_number": 119, "column_number": -1, "description": "start of procedure createJsonGenerator(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "JsonGenerator JsonUtil.createJsonGenerator(JsonFactory,DynamicSliceOutput)"}, {"tag": "name_id", "value": "com.facebook.presto.util.JsonUtil.createJsonGenerator(com.fasterxml.jackson.core.JsonFactory,io.airl.9b352ceb3a8d50df077e16b581e09582"}], "snippet": "114.\n115.    public static JsonGenerator createJsonGenerator(JsonFactory factory, SliceOutput output)\n116.>             throws IOException\n117.    {\n118.        return factory.createGenerator((OutputStream) output);\n119.    }\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/util/JsonUtil.java", "methodName": "createJsonGenerator", "line_numbers": [116, 119]}], "infer_explore": [{"level": 0, "filename": "presto-main/src/main/java/com/facebook/presto/operator/scalar/JsonExtract.java", "line_number": 284, "column_number": -1, "description": "start of procedure extract(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "Slice JsonExtract$JsonValueJsonExtractor.extract(JsonParser)"}, {"tag": "name_id", "value": "com.facebook.presto.operator.scalar.JsonExtract$JsonValueJsonExtractor.extract(com.fasterxml.jackson.9a096a0476944deaefacd5c7e33f82a3"}], "snippet": "281.     {\n282.         @Override\n283. >         public Slice extract(JsonParser jsonParser)\n284.                 throws IOException\n285.         {\n"}, {"level": 0, "filename": "presto-main/src/main/java/com/facebook/presto/operator/scalar/JsonExtract.java", "line_number": 287, "column_number": -1, "description": "Taking false branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "false"}], "snippet": "284.                 throws IOException\n285.         {\n286. >             if (!jsonParser.hasCurrentToken()) {\n287.                 throw new JsonParseException(jsonParser, \"Unexpected end of value\");\n288.             }\n"}, {"level": 0, "filename": "presto-main/src/main/java/com/facebook/presto/operator/scalar/JsonExtract.java", "line_number": 291, "column_number": -1, "description": "Skipping DynamicSliceOutput(...): unknown method", "node_tags": [], "snippet": "288.             }\n289. \n290. >             DynamicSliceOutput dynamicSliceOutput = new DynamicSliceOutput(ESTIMATED_JSON_OUTPUT_SIZE);\n291.             try (JsonGenerator jsonGenerator = createJsonGenerator(JSON_FACTORY, dynamicSliceOutput)) {\n292.                 jsonGenerator.copyCurrentStructure(jsonParser);\n"}, {"level": 0, "filename": "presto-main/src/main/java/com/facebook/presto/operator/scalar/JsonExtract.java", "line_number": 292, "column_number": -1, "description": "", "node_tags": [], "snippet": "289. \n290.             DynamicSliceOutput dynamicSliceOutput = new DynamicSliceOutput(ESTIMATED_JSON_OUTPUT_SIZE);\n291. >             try (JsonGenerator jsonGenerator = createJsonGenerator(JSON_FACTORY, dynamicSliceOutput)) {\n292.                 jsonGenerator.copyCurrentStructure(jsonParser);\n293.             }\n"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/util/JsonUtil.java", "line_number": 116, "column_number": -1, "description": "start of procedure createJsonGenerator(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "JsonGenerator JsonUtil.createJsonGenerator(JsonFactory,DynamicSliceOutput)"}, {"tag": "name_id", "value": "com.facebook.presto.util.JsonUtil.createJsonGenerator(com.fasterxml.jackson.core.JsonFactory,io.airl.9b352ceb3a8d50df077e16b581e09582"}], "snippet": "113.     }\n114. \n115. >     public static JsonGenerator createJsonGenerator(JsonFactory factory, SliceOutput output)\n116.             throws IOException\n117.     {\n"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/util/JsonUtil.java", "line_number": 119, "column_number": -1, "description": "return from a call to JsonGenerator JsonUtil.createJsonGenerator(JsonFactory,DynamicSliceOutput)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "JsonGenerator JsonUtil.createJsonGenerator(JsonFactory,DynamicSliceOutput)"}, {"tag": "name_id", "value": "com.facebook.presto.util.JsonUtil.createJsonGenerator(com.fasterxml.jackson.core.JsonFactory,io.airl.9b352ceb3a8d50df077e16b581e09582"}], "snippet": "116.             throws IOException\n117.     {\n118. >         return factory.createGenerator((OutputStream) output);\n119.     }\n120. \n"}, {"level": 0, "filename": "presto-main/src/main/java/com/facebook/presto/operator/scalar/JsonExtract.java", "line_number": 292, "column_number": -1, "description": "", "node_tags": [], "snippet": "289. \n290.             DynamicSliceOutput dynamicSliceOutput = new DynamicSliceOutput(ESTIMATED_JSON_OUTPUT_SIZE);\n291. >             try (JsonGenerator jsonGenerator = createJsonGenerator(JSON_FACTORY, dynamicSliceOutput)) {\n292.                 jsonGenerator.copyCurrentStructure(jsonParser);\n293.             }\n"}, {"level": 0, "filename": "presto-main/src/main/java/com/facebook/presto/operator/scalar/JsonExtract.java", "line_number": 293, "column_number": -1, "description": "Skipping copyCurrentStructure(...): unknown method", "node_tags": [], "snippet": "290.             DynamicSliceOutput dynamicSliceOutput = new DynamicSliceOutput(ESTIMATED_JSON_OUTPUT_SIZE);\n291.             try (JsonGenerator jsonGenerator = createJsonGenerator(JSON_FACTORY, dynamicSliceOutput)) {\n292. >                 jsonGenerator.copyCurrentStructure(jsonParser);\n293.             }\n294.             return dynamicSliceOutput.slice();\n"}, {"level": 0, "filename": "presto-main/src/main/java/com/facebook/presto/operator/scalar/JsonExtract.java", "line_number": 294, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "291.             try (JsonGenerator jsonGenerator = createJsonGenerator(JSON_FACTORY, dynamicSliceOutput)) {\n292.                 jsonGenerator.copyCurrentStructure(jsonParser);\n293. >             }\n294.             return dynamicSliceOutput.slice();\n295.         }\n"}, {"level": 0, "filename": "presto-main/src/main/java/com/facebook/presto/operator/scalar/JsonExtract.java", "line_number": 294, "column_number": -1, "description": "Taking false branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "false"}], "snippet": "291.             try (JsonGenerator jsonGenerator = createJsonGenerator(JSON_FACTORY, dynamicSliceOutput)) {\n292.                 jsonGenerator.copyCurrentStructure(jsonParser);\n293. >             }\n294.             return dynamicSliceOutput.slice();\n295.         }\n"}, {"level": 0, "filename": "presto-main/src/main/java/com/facebook/presto/operator/scalar/JsonExtract.java", "line_number": 295, "column_number": -1, "description": "Skipping slice(): unknown method", "node_tags": [], "snippet": "292.                 jsonGenerator.copyCurrentStructure(jsonParser);\n293.             }\n294. >             return dynamicSliceOutput.slice();\n295.         }\n296.     }\n"}]}, {"url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-local-file/src/main/java/com/facebook/presto/localfile/LocalFileRecordCursor.java", "rawCode": "/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage com.facebook.presto.localfile;\n\nimport com.facebook.presto.spi.HostAddress;\nimport com.facebook.presto.spi.PrestoException;\nimport com.facebook.presto.spi.RecordCursor;\nimport com.facebook.presto.spi.SchemaTableName;\nimport com.facebook.presto.spi.predicate.Domain;\nimport com.facebook.presto.spi.predicate.TupleDomain;\nimport com.facebook.presto.spi.type.Type;\nimport com.google.common.base.Joiner;\nimport com.google.common.base.Splitter;\nimport com.google.common.base.Strings;\nimport com.google.common.collect.Iterables;\nimport io.airlift.slice.Slice;\nimport io.airlift.slice.Slices;\nimport org.joda.time.format.DateTimeFormatter;\nimport org.joda.time.format.DateTimeFormatterBuilder;\nimport org.joda.time.format.ISODateTimeFormat;\n\nimport java.io.BufferedReader;\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.RandomAccessFile;\nimport java.io.UncheckedIOException;\nimport java.util.Iterator;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.Optional;\nimport java.util.OptionalInt;\nimport java.util.Set;\nimport java.util.zip.GZIPInputStream;\n\nimport static com.facebook.presto.localfile.LocalFileColumnHandle.SERVER_ADDRESS_ORDINAL_POSITION;\nimport static com.facebook.presto.localfile.LocalFileErrorCode.LOCAL_FILE_READ_ERROR;\nimport static com.facebook.presto.spi.type.BigintType.BIGINT;\nimport static com.facebook.presto.spi.type.BooleanType.BOOLEAN;\nimport static com.facebook.presto.spi.type.DoubleType.DOUBLE;\nimport static com.facebook.presto.spi.type.IntegerType.INTEGER;\nimport static com.facebook.presto.spi.type.TimestampType.TIMESTAMP;\nimport static com.facebook.presto.spi.type.VarcharType.createUnboundedVarcharType;\nimport static com.google.common.base.Preconditions.checkArgument;\nimport static com.google.common.base.Preconditions.checkState;\nimport static java.lang.String.format;\nimport static java.util.Objects.requireNonNull;\nimport static java.util.stream.Collectors.toSet;\nimport static java.util.zip.GZIPInputStream.GZIP_MAGIC;\n\npublic class LocalFileRecordCursor\n        implements RecordCursor\n{\n    private static final Splitter LINE_SPLITTER = Splitter.on(\"\\t\").trimResults();\n\n    // TODO This should be a config option as it may be different for different log files\n    public static final DateTimeFormatter ISO_FORMATTER = new DateTimeFormatterBuilder()\n            .append(ISODateTimeFormat.dateHourMinuteSecondFraction())\n            .appendTimeZoneOffset(\"Z\", true, 2, 2)\n            .toFormatter();\n\n    private final int[] fieldToColumnIndex;\n    private final HostAddress address;\n    private final List<LocalFileColumnHandle> columns;\n    private final FilesReader reader;\n    private final boolean includeServer;\n\n    private List<String> fields;\n\n    public LocalFileRecordCursor(LocalFileTables localFileTables, List<LocalFileColumnHandle> columns, SchemaTableName tableName, HostAddress address, TupleDomain<LocalFileColumnHandle> predicate)\n    {\n        this.columns = requireNonNull(columns, \"columns is null\");\n        this.address = requireNonNull(address, \"address is null\");\n\n        fieldToColumnIndex = new int[columns.size()];\n        for (int i = 0; i < columns.size(); i++) {\n            LocalFileColumnHandle columnHandle = columns.get(i);\n            fieldToColumnIndex[i] = columnHandle.getOrdinalPosition();\n        }\n        this.includeServer = isThisServerIncluded(address, predicate, localFileTables.getTable(tableName));\n        this.reader = includeServer ? getFilesReader(localFileTables, predicate, tableName) : null;\n    }\n\n    private static boolean isThisServerIncluded(HostAddress address, TupleDomain<LocalFileColumnHandle> predicate, LocalFileTableHandle table)\n    {\n        if (!table.getServerAddressColumn().isPresent()) {\n            return true;\n        }\n\n        Optional<Map<LocalFileColumnHandle, Domain>> domains = predicate.getDomains();\n        if (!domains.isPresent()) {\n            return true;\n        }\n\n        Set<Domain> serverAddressDomain = domains.get().entrySet().stream()\n                .filter(entry -> entry.getKey().getOrdinalPosition() == table.getServerAddressColumn().getAsInt())\n                .map(Map.Entry::getValue)\n                .collect(toSet());\n\n        if (serverAddressDomain.isEmpty()) {\n            return true;\n        }\n\n        for (Domain domain : serverAddressDomain) {\n            if (domain.includesNullableValue(Slices.utf8Slice(address.toString()))) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    private static FilesReader getFilesReader(LocalFileTables localFileTables, TupleDomain<LocalFileColumnHandle> predicate, SchemaTableName tableName)\n    {\n        LocalFileTableHandle table = localFileTables.getTable(tableName);\n        List<File> fileNames = localFileTables.getFiles(tableName);\n        try {\n            return new FilesReader(table.getTimestampColumn(), fileNames.iterator(), predicate);\n        }\n        catch (IOException e) {\n            throw new UncheckedIOException(e);\n        }\n    }\n\n    @Override\n    public long getCompletedBytes()\n    {\n        return 0;\n    }\n\n    @Override\n    public long getReadTimeNanos()\n    {\n        return 0;\n    }\n\n    @Override\n    public Type getType(int field)\n    {\n        checkArgument(field < columns.size(), \"Invalid field index\");\n        return columns.get(field).getColumnType();\n    }\n\n    @Override\n    public boolean advanceNextPosition()\n    {\n        if (!includeServer) {\n            return false;\n        }\n\n        try {\n            fields = reader.readFields();\n            return fields != null;\n        }\n        catch (IOException e) {\n            throw new UncheckedIOException(e);\n        }\n    }\n\n    private String getFieldValue(int field)\n    {\n        checkState(fields != null, \"Cursor has not been advanced yet\");\n\n        int columnIndex = fieldToColumnIndex[field];\n        if (columnIndex == SERVER_ADDRESS_ORDINAL_POSITION) {\n            return address.toString();\n        }\n        if (columnIndex >= fields.size()) {\n            return null;\n        }\n        return fields.get(columnIndex);\n    }\n\n    @Override\n    public boolean getBoolean(int field)\n    {\n        checkFieldType(field, BOOLEAN);\n        return Boolean.parseBoolean(getFieldValue(field));\n    }\n\n    @Override\n    public long getLong(int field)\n    {\n        if (getType(field).equals(TIMESTAMP)) {\n            return ISO_FORMATTER.parseDateTime(getFieldValue(field)).getMillis();\n        }\n        else {\n            checkFieldType(field, BIGINT, INTEGER);\n            return Long.parseLong(getFieldValue(field));\n        }\n    }\n\n    @Override\n    public double getDouble(int field)\n    {\n        checkFieldType(field, DOUBLE);\n        return Double.parseDouble(getFieldValue(field));\n    }\n\n    @Override\n    public Slice getSlice(int field)\n    {\n        checkFieldType(field, createUnboundedVarcharType());\n        return Slices.utf8Slice(getFieldValue(field));\n    }\n\n    @Override\n    public Object getObject(int field)\n    {\n        throw new UnsupportedOperationException();\n    }\n\n    @Override\n    public boolean isNull(int field)\n    {\n        checkArgument(field < columns.size(), \"Invalid field index\");\n        String fieldValue = getFieldValue(field);\n        return \"null\".equals(fieldValue) || Strings.isNullOrEmpty(fieldValue);\n    }\n\n    private void checkFieldType(int field, Type... expected)\n    {\n        Type actual = getType(field);\n        for (Type type : expected) {\n            if (actual.equals(type)) {\n                return;\n            }\n        }\n        String expectedTypes = Joiner.on(\", \").join(expected);\n        throw new IllegalArgumentException(format(\"Expected field %s to be type %s but is %s\", field, expectedTypes, actual));\n    }\n\n    @Override\n    public void close()\n    {\n        reader.close();\n    }\n\n    private static class FilesReader\n    {\n        private final Iterator<File> files;\n        private final Optional<Domain> domain;\n        private final OptionalInt timestampOrdinalPosition;\n\n        private BufferedReader reader;\n\n        public FilesReader(OptionalInt timestampOrdinalPosition, Iterator<File> files, TupleDomain<LocalFileColumnHandle> predicate)\n                throws IOException\n        {\n            requireNonNull(files, \"files is null\");\n            this.files = files;\n\n            requireNonNull(predicate, \"predicate is null\");\n            this.domain = getDomain(timestampOrdinalPosition, predicate);\n\n            this.timestampOrdinalPosition = timestampOrdinalPosition;\n\n            reader = createNextReader();\n        }\n\n        private static Optional<Domain> getDomain(OptionalInt timestampOrdinalPosition, TupleDomain<LocalFileColumnHandle> predicate)\n        {\n            Optional<Map<LocalFileColumnHandle, Domain>> domains = predicate.getDomains();\n            Domain domain = null;\n            if (domains.isPresent() && timestampOrdinalPosition.isPresent()) {\n                Map<LocalFileColumnHandle, Domain> domainMap = domains.get();\n                Set<Domain> timestampDomain = domainMap.entrySet().stream()\n                        .filter(entry -> entry.getKey().getOrdinalPosition() == timestampOrdinalPosition.getAsInt())\n                        .map(Map.Entry::getValue)\n                        .collect(toSet());\n\n                if (!timestampDomain.isEmpty()) {\n                    domain = Iterables.getOnlyElement(timestampDomain);\n                }\n            }\n            return Optional.ofNullable(domain);\n        }\n\n        private BufferedReader createNextReader()\n                throws IOException\n        {\n            if (!files.hasNext()) {\n                return null;\n            }\n            File file = files.next();\n            FileInputStream fileInputStream = new FileInputStream(file);\n\n            InputStream in = isGZipped(file) ? new GZIPInputStream(fileInputStream) : fileInputStream;\n            return new BufferedReader(new InputStreamReader(in));\n        }\n\n        public static boolean isGZipped(File file)\n                throws IOException\n        {\n            try (RandomAccessFile inputFile = new RandomAccessFile(file, \"r\")) {\n                int magic = inputFile.read() & 0xff | ((inputFile.read() << 8) & 0xff00);\n                return magic == GZIP_MAGIC;\n            }\n            catch (IOException e) {\n                throw new PrestoException(LOCAL_FILE_READ_ERROR, \"Error reading file: \" + file.getName(), e);\n            }\n        }\n\n        public List<String> readFields()\n                throws IOException\n        {\n            List<String> fields = null;\n            boolean newReader = false;\n\n            while (fields == null) {\n                if (reader == null) {\n                    return null;\n                }\n                String line = reader.readLine();\n                if (line != null) {\n                    fields = LINE_SPLITTER.splitToList(line);\n                    if (!newReader || meetsPredicate(fields)) {\n                        return fields;\n                    }\n                }\n                reader.close();\n                reader = createNextReader();\n                newReader = true;\n            }\n            return fields;\n        }\n\n        private boolean meetsPredicate(List<String> fields)\n        {\n            if (!timestampOrdinalPosition.isPresent() || !domain.isPresent()) {\n                return true;\n            }\n\n            long millis = ISO_FORMATTER.parseDateTime(fields.get(timestampOrdinalPosition.getAsInt())).getMillis();\n            return domain.get().includesNullableValue(millis);\n        }\n\n        public void close()\n        {\n            if (reader != null) {\n                try {\n                    reader.close();\n                }\n                catch (IOException ignored) {\n                }\n            }\n        }\n    }\n}\n", "methodName": "BufferedReader LocalFileRecordCursor$FilesReader.createNextReader()", "exampleID": 62, "dataset": "infer", "filepath": "presto-local-file/src/main/java/com/facebook/presto/localfile/LocalFileRecordCursor.java", "source": "java.io.FileInputStream", "sourceLine": 298, "qualifier": "Resource of type $$java.io.FileInputStream/$ acquired by call to @@FileInputStream(...)/@ is not released", "steps": [{"line": 304, "source": "java.io.FileInputStream", "filepath": "presto-local-file/src/main/java/com/facebook/presto/localfile/LocalFileRecordCursor.java", "methodName": "BufferedReader LocalFileRecordCursor$FilesReader.createNextReader()", "exampleID": 63}], "line_number": 298, "records": [{"level": 1, "filename": "presto-local-file/src/main/java/com/facebook/presto/localfile/LocalFileRecordCursor.java", "line_number": 304, "column_number": -1, "description": "Definition of isGZipped(...)", "node_tags": [], "snippet": "        public static boolean isGZipped(File file)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-local-file/src/main/java/com/facebook/presto/localfile/LocalFileRecordCursor.java", "methodName": "isGZipped"}], "combined_records": [{"level": 1, "filename": "presto-local-file/src/main/java/com/facebook/presto/localfile/LocalFileRecordCursor.java", "line_number": 304, "column_number": -1, "description": "Definition of isGZipped(...)", "node_tags": [], "snippet": "302.\n303.        public static boolean isGZipped(File file)\n304.>                 throws IOException\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-local-file/src/main/java/com/facebook/presto/localfile/LocalFileRecordCursor.java", "methodName": "isGZipped", "line_numbers": [304]}], "infer_explore": [{"level": 0, "filename": "presto-local-file/src/main/java/com/facebook/presto/localfile/LocalFileRecordCursor.java", "line_number": 291, "column_number": -1, "description": "start of procedure createNextReader()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "BufferedReader LocalFileRecordCursor$FilesReader.createNextReader()"}, {"tag": "name_id", "value": "com.facebook.presto.localfile.LocalFileRecordCursor$FilesReader.createNextReader():java.io.BufferedR.7d218b120e34dab12e5fdb0e37935999"}], "snippet": "288.         }\n289. \n290. >         private BufferedReader createNextReader()\n291.                 throws IOException\n292.         {\n"}, {"level": 0, "filename": "presto-local-file/src/main/java/com/facebook/presto/localfile/LocalFileRecordCursor.java", "line_number": 294, "column_number": -1, "description": "Taking false branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "false"}], "snippet": "291.                 throws IOException\n292.         {\n293. >             if (!files.hasNext()) {\n294.                 return null;\n295.             }\n"}, {"level": 0, "filename": "presto-local-file/src/main/java/com/facebook/presto/localfile/LocalFileRecordCursor.java", "line_number": 297, "column_number": -1, "description": "", "node_tags": [], "snippet": "294.                 return null;\n295.             }\n296. >             File file = files.next();\n297.             FileInputStream fileInputStream = new FileInputStream(file);\n298. \n"}, {"level": 0, "filename": "presto-local-file/src/main/java/com/facebook/presto/localfile/LocalFileRecordCursor.java", "line_number": 298, "column_number": -1, "description": "", "node_tags": [], "snippet": "295.             }\n296.             File file = files.next();\n297. >             FileInputStream fileInputStream = new FileInputStream(file);\n298. \n299.             InputStream in = isGZipped(file) ? new GZIPInputStream(fileInputStream) : fileInputStream;\n"}, {"level": 0, "filename": "presto-local-file/src/main/java/com/facebook/presto/localfile/LocalFileRecordCursor.java", "line_number": 300, "column_number": -1, "description": "Skipping isGZipped(...): empty list of specs", "node_tags": [], "snippet": "297.             FileInputStream fileInputStream = new FileInputStream(file);\n298. \n299. >             InputStream in = isGZipped(file) ? new GZIPInputStream(fileInputStream) : fileInputStream;\n300.             return new BufferedReader(new InputStreamReader(in));\n301.         }\n"}, {"level": 1, "filename": "presto-local-file/src/main/java/com/facebook/presto/localfile/LocalFileRecordCursor.java", "line_number": 304, "column_number": -1, "description": "Definition of isGZipped(...)", "node_tags": [], "snippet": "301.         }\n302. \n303. >         public static boolean isGZipped(File file)\n304.                 throws IOException\n305.         {\n"}, {"level": 0, "filename": "presto-local-file/src/main/java/com/facebook/presto/localfile/LocalFileRecordCursor.java", "line_number": 300, "column_number": -1, "description": "Taking true branch", "node_tags": [{"tag": "kind", "value": "condition"}, {"tag": "branch", "value": "true"}], "snippet": "297.             FileInputStream fileInputStream = new FileInputStream(file);\n298. \n299. >             InputStream in = isGZipped(file) ? new GZIPInputStream(fileInputStream) : fileInputStream;\n300.             return new BufferedReader(new InputStreamReader(in));\n301.         }\n"}]}, {"url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/operator/index/IndexLoader.java", "rawCode": "/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage com.facebook.presto.operator.index;\n\nimport com.facebook.presto.ScheduledSplit;\nimport com.facebook.presto.TaskSource;\nimport com.facebook.presto.connector.ConnectorId;\nimport com.facebook.presto.metadata.Split;\nimport com.facebook.presto.operator.Driver;\nimport com.facebook.presto.operator.DriverFactory;\nimport com.facebook.presto.operator.LookupSource;\nimport com.facebook.presto.operator.PagesIndex;\nimport com.facebook.presto.operator.PipelineContext;\nimport com.facebook.presto.operator.TaskContext;\nimport com.facebook.presto.spi.Page;\nimport com.facebook.presto.spi.PageBuilder;\nimport com.facebook.presto.spi.block.Block;\nimport com.facebook.presto.spi.connector.ConnectorTransactionHandle;\nimport com.facebook.presto.spi.type.Type;\nimport com.facebook.presto.sql.gen.JoinCompiler;\nimport com.facebook.presto.sql.planner.plan.PlanNodeId;\nimport com.google.common.base.Throwables;\nimport com.google.common.collect.ImmutableList;\nimport com.google.common.collect.ImmutableSet;\nimport com.google.common.collect.Iterables;\nimport com.google.common.util.concurrent.ListenableFuture;\nimport io.airlift.units.DataSize;\n\nimport javax.annotation.concurrent.GuardedBy;\nimport javax.annotation.concurrent.NotThreadSafe;\nimport javax.annotation.concurrent.ThreadSafe;\n\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.OptionalInt;\nimport java.util.Set;\nimport java.util.concurrent.BlockingQueue;\nimport java.util.concurrent.LinkedBlockingQueue;\nimport java.util.concurrent.atomic.AtomicReference;\n\nimport static com.google.common.base.Preconditions.checkArgument;\nimport static com.google.common.base.Preconditions.checkState;\nimport static com.google.common.base.Predicates.equalTo;\nimport static com.google.common.base.Predicates.not;\nimport static com.google.common.collect.Iterables.filter;\nimport static java.util.Objects.requireNonNull;\n\n@ThreadSafe\npublic class IndexLoader\n{\n    private static final ConnectorId INDEX_CONNECTOR_ID = new ConnectorId(\"$index\");\n    private final BlockingQueue<UpdateRequest> updateRequests = new LinkedBlockingQueue<>();\n\n    private final List<Type> outputTypes;\n    private final IndexBuildDriverFactoryProvider indexBuildDriverFactoryProvider;\n    private final int expectedPositions;\n    private final DataSize maxIndexMemorySize;\n    private final IndexJoinLookupStats stats;\n\n    private final AtomicReference<TaskContext> taskContextReference = new AtomicReference<>();\n    private final Set<Integer> lookupSourceInputChannels;\n    private final List<Integer> keyOutputChannels;\n    private final OptionalInt keyOutputHashChannel;\n    private final List<Type> keyTypes;\n    private final PagesIndex.Factory pagesIndexFactory;\n    private final JoinCompiler joinCompiler;\n\n    @GuardedBy(\"this\")\n    private IndexSnapshotLoader indexSnapshotLoader; // Lazily initialized\n\n    @GuardedBy(\"this\")\n    private PipelineContext pipelineContext; // Lazily initialized\n\n    @GuardedBy(\"this\")\n    private final AtomicReference<IndexSnapshot> indexSnapshotReference;\n\n    public IndexLoader(\n            Set<Integer> lookupSourceInputChannels,\n            List<Integer> keyOutputChannels,\n            OptionalInt keyOutputHashChannel,\n            List<Type> outputTypes,\n            IndexBuildDriverFactoryProvider indexBuildDriverFactoryProvider,\n            int expectedPositions,\n            DataSize maxIndexMemorySize,\n            IndexJoinLookupStats stats,\n            PagesIndex.Factory pagesIndexFactory,\n            JoinCompiler joinCompiler)\n    {\n        requireNonNull(lookupSourceInputChannels, \"lookupSourceInputChannels is null\");\n        checkArgument(!lookupSourceInputChannels.isEmpty(), \"lookupSourceInputChannels must not be empty\");\n        requireNonNull(keyOutputChannels, \"keyOutputChannels is null\");\n        checkArgument(!keyOutputChannels.isEmpty(), \"keyOutputChannels must not be empty\");\n        requireNonNull(keyOutputHashChannel, \"keyOutputHashChannel is null\");\n        checkArgument(lookupSourceInputChannels.size() <= keyOutputChannels.size(), \"Lookup channels must supply a subset of the actual index columns\");\n        requireNonNull(outputTypes, \"outputTypes is null\");\n        requireNonNull(indexBuildDriverFactoryProvider, \"indexBuildDriverFactoryProvider is null\");\n        requireNonNull(maxIndexMemorySize, \"maxIndexMemorySize is null\");\n        requireNonNull(stats, \"stats is null\");\n        requireNonNull(pagesIndexFactory, \"pagesIndexFactory is null\");\n        requireNonNull(joinCompiler, \"joinCompiler is null\");\n\n        this.lookupSourceInputChannels = ImmutableSet.copyOf(lookupSourceInputChannels);\n        this.keyOutputChannels = ImmutableList.copyOf(keyOutputChannels);\n        this.keyOutputHashChannel = keyOutputHashChannel;\n        this.outputTypes = ImmutableList.copyOf(outputTypes);\n        this.indexBuildDriverFactoryProvider = indexBuildDriverFactoryProvider;\n        this.expectedPositions = expectedPositions;\n        this.maxIndexMemorySize = maxIndexMemorySize;\n        this.stats = stats;\n        this.pagesIndexFactory = pagesIndexFactory;\n        this.joinCompiler = joinCompiler;\n\n        ImmutableList.Builder<Type> keyTypeBuilder = ImmutableList.builder();\n        for (int keyOutputChannel : keyOutputChannels) {\n            keyTypeBuilder.add(outputTypes.get(keyOutputChannel));\n        }\n        this.keyTypes = keyTypeBuilder.build();\n\n        // start with an empty source\n        this.indexSnapshotReference = new AtomicReference<>(new IndexSnapshot(new EmptyLookupSource(outputTypes.size()), new EmptyLookupSource(keyOutputChannels.size())));\n    }\n\n    // This is a ghetto way to acquire a TaskContext at runtime (unavailable at planning)\n    public void setContext(TaskContext taskContext)\n    {\n        taskContextReference.compareAndSet(null, taskContext);\n    }\n\n    public int getChannelCount()\n    {\n        return outputTypes.size();\n    }\n\n    public List<Type> getOutputTypes()\n    {\n        return outputTypes;\n    }\n\n    public IndexSnapshot getIndexSnapshot()\n    {\n        return indexSnapshotReference.get();\n    }\n\n    private static Block[] sliceBlocks(Block[] indexBlocks, int startPosition, int length)\n    {\n        Block[] slicedIndexBlocks = new Block[indexBlocks.length];\n        for (int i = 0; i < indexBlocks.length; i++) {\n            slicedIndexBlocks[i] = indexBlocks[i].getRegion(startPosition, length);\n        }\n        return slicedIndexBlocks;\n    }\n\n    public IndexedData getIndexedDataForKeys(int position, Block[] indexBlocks)\n    {\n        // Normalize the indexBlocks so that they only encompass the unloaded positions\n        int totalPositions = indexBlocks[0].getPositionCount();\n        int remainingPositions = totalPositions - position;\n        return getIndexedDataForKeys(sliceBlocks(indexBlocks, position, remainingPositions));\n    }\n\n    private IndexedData getIndexedDataForKeys(Block[] indexBlocks)\n    {\n        UpdateRequest myUpdateRequest = new UpdateRequest(indexBlocks);\n        updateRequests.add(myUpdateRequest);\n\n        synchronized (this) {\n            if (!myUpdateRequest.isFinished()) {\n                stats.recordIndexJoinLookup();\n                initializeStateIfNecessary();\n\n                List<UpdateRequest> requests = new ArrayList<>();\n                updateRequests.drainTo(requests);\n\n                try {\n                    long initialCacheSizeInBytes = indexSnapshotLoader.getCacheSizeInBytes();\n\n                    // TODO: add heuristic to jump to load strategy that is most likely to succeed\n\n                    // Try to load all the requests\n                    if (indexSnapshotLoader.load(requests)) {\n                        return myUpdateRequest.getFinishedIndexSnapshot();\n                    }\n\n                    // Retry again if there was initial data (load failures will clear the cache automatically)\n                    if (initialCacheSizeInBytes > 0 && indexSnapshotLoader.load(requests)) {\n                        stats.recordSuccessfulIndexJoinLookupByCacheReset();\n                        return myUpdateRequest.getFinishedIndexSnapshot();\n                    }\n                }\n                catch (Throwable t) {\n                    // Mark requests as failed since they will not be requeued\n                    for (UpdateRequest request : requests) {\n                        request.failed(t);\n                    }\n                    Throwables.propagate(t);\n                }\n\n                // Try loading just my request\n                if (requests.size() > 1) {\n                    // Add all other requests back into the queue\n                    Iterables.addAll(updateRequests, filter(requests, not(equalTo(myUpdateRequest))));\n\n                    if (indexSnapshotLoader.load(ImmutableList.of(myUpdateRequest))) {\n                        stats.recordSuccessfulIndexJoinLookupBySingleRequest();\n                        return myUpdateRequest.getFinishedIndexSnapshot();\n                    }\n                }\n\n                // Repeatedly decrease the number of rows to load by a factor of 10\n                int totalPositions = indexBlocks[0].getPositionCount();\n                int attemptedPositions = totalPositions / 10;\n                while (attemptedPositions > 1) {\n                    myUpdateRequest = new UpdateRequest(sliceBlocks(indexBlocks, 0, attemptedPositions));\n                    if (indexSnapshotLoader.load(ImmutableList.of(myUpdateRequest))) {\n                        stats.recordSuccessfulIndexJoinLookupByLimitedRequest();\n                        return myUpdateRequest.getFinishedIndexSnapshot();\n                    }\n                    attemptedPositions /= 10;\n                }\n\n                // Just load the single index key in a streaming fashion (no caching)\n                stats.recordStreamedIndexJoinLookup();\n                return streamIndexDataForSingleKey(myUpdateRequest);\n            }\n        }\n\n        // return the snapshot from the update request as another thread may have already flushed the request\n        return myUpdateRequest.getFinishedIndexSnapshot();\n    }\n\n    public IndexedData streamIndexDataForSingleKey(UpdateRequest updateRequest)\n    {\n        Page indexKeyTuple = new Page(sliceBlocks(updateRequest.getBlocks(), 0, 1));\n\n        PageBuffer pageBuffer = new PageBuffer(100);\n        DriverFactory driverFactory = indexBuildDriverFactoryProvider.createStreaming(pageBuffer, indexKeyTuple);\n        Driver driver = driverFactory.createDriver(pipelineContext.addDriverContext());\n\n        PageRecordSet pageRecordSet = new PageRecordSet(keyTypes, indexKeyTuple);\n        PlanNodeId planNodeId = driverFactory.getSourceId().get();\n        ScheduledSplit split = new ScheduledSplit(0, planNodeId, new Split(INDEX_CONNECTOR_ID, new ConnectorTransactionHandle() {}, new IndexSplit(pageRecordSet)));\n        driver.updateSource(new TaskSource(planNodeId, ImmutableSet.of(split), true));\n\n        return new StreamingIndexedData(outputTypes, keyTypes, indexKeyTuple, pageBuffer, driver);\n    }\n\n    private synchronized void initializeStateIfNecessary()\n    {\n        if (pipelineContext == null) {\n            TaskContext taskContext = taskContextReference.get();\n            checkState(taskContext != null, \"Task context must be set before index can be built\");\n            pipelineContext = taskContext.addPipelineContext(indexBuildDriverFactoryProvider.getPipelineId(), false, false);\n        }\n        if (indexSnapshotLoader == null) {\n            indexSnapshotLoader = new IndexSnapshotLoader(\n                    indexBuildDriverFactoryProvider,\n                    pipelineContext,\n                    indexSnapshotReference,\n                    lookupSourceInputChannels,\n                    keyTypes,\n                    keyOutputChannels,\n                    keyOutputHashChannel,\n                    expectedPositions,\n                    maxIndexMemorySize,\n                    pagesIndexFactory,\n                    joinCompiler);\n        }\n    }\n\n    @NotThreadSafe\n    private static class IndexSnapshotLoader\n    {\n        private final DriverFactory driverFactory;\n        private final PipelineContext pipelineContext;\n        private final Set<Integer> lookupSourceInputChannels;\n        private final Set<Integer> allInputChannels;\n        private final List<Type> outputTypes;\n        private final List<Type> indexTypes;\n        private final AtomicReference<IndexSnapshot> indexSnapshotReference;\n        private final JoinCompiler joinCompiler;\n\n        private final IndexSnapshotBuilder indexSnapshotBuilder;\n\n        private IndexSnapshotLoader(IndexBuildDriverFactoryProvider indexBuildDriverFactoryProvider,\n                PipelineContext pipelineContext,\n                AtomicReference<IndexSnapshot> indexSnapshotReference,\n                Set<Integer> lookupSourceInputChannels,\n                List<Type> indexTypes,\n                List<Integer> keyOutputChannels,\n                OptionalInt keyOutputHashChannel,\n                int expectedPositions,\n                DataSize maxIndexMemorySize,\n                PagesIndex.Factory pagesIndexFactory,\n                JoinCompiler joinCompiler)\n        {\n            this.pipelineContext = pipelineContext;\n            this.indexSnapshotReference = indexSnapshotReference;\n            this.lookupSourceInputChannels = lookupSourceInputChannels;\n            this.outputTypes = indexBuildDriverFactoryProvider.getOutputTypes();\n            this.indexTypes = indexTypes;\n            this.joinCompiler = joinCompiler;\n\n            this.indexSnapshotBuilder = new IndexSnapshotBuilder(\n                    outputTypes,\n                    keyOutputChannels,\n                    keyOutputHashChannel,\n                    pipelineContext.addDriverContext(),\n                    maxIndexMemorySize,\n                    expectedPositions,\n                    pagesIndexFactory);\n            this.driverFactory = indexBuildDriverFactoryProvider.createSnapshot(pipelineContext.getPipelineId(), this.indexSnapshotBuilder);\n\n            ImmutableSet.Builder<Integer> builder = ImmutableSet.builder();\n            for (int i = 0; i < indexTypes.size(); i++) {\n                builder.add(i);\n            }\n            this.allInputChannels = builder.build();\n        }\n\n        public long getCacheSizeInBytes()\n        {\n            return indexSnapshotBuilder.getMemoryInBytes();\n        }\n\n        public boolean load(List<UpdateRequest> requests)\n        {\n            // Generate a RecordSet that only presents index keys that have not been cached and are deduped based on lookupSourceInputChannels\n            UnloadedIndexKeyRecordSet recordSetForLookupSource = new UnloadedIndexKeyRecordSet(pipelineContext.getSession(), indexSnapshotReference.get(), lookupSourceInputChannels, indexTypes, requests, joinCompiler);\n\n            // Drive index lookup to produce the output (landing in indexSnapshotBuilder)\n            try (Driver driver = driverFactory.createDriver(pipelineContext.addDriverContext())) {\n                PlanNodeId sourcePlanNodeId = driverFactory.getSourceId().get();\n                ScheduledSplit split = new ScheduledSplit(0, sourcePlanNodeId, new Split(INDEX_CONNECTOR_ID, new ConnectorTransactionHandle() {}, new IndexSplit(recordSetForLookupSource)));\n                driver.updateSource(new TaskSource(sourcePlanNodeId, ImmutableSet.of(split), true));\n                while (!driver.isFinished()) {\n                    ListenableFuture<?> process = driver.process();\n                    checkState(process.isDone(), \"Driver should never block\");\n                }\n            }\n\n            if (indexSnapshotBuilder.isMemoryExceeded()) {\n                clearCachedData();\n                return false;\n            }\n\n            // Generate a RecordSet that presents unique index keys that have not been cached\n            UnloadedIndexKeyRecordSet indexKeysRecordSet = (lookupSourceInputChannels.equals(allInputChannels))\n                    ? recordSetForLookupSource\n                    : new UnloadedIndexKeyRecordSet(pipelineContext.getSession(), indexSnapshotReference.get(), allInputChannels, indexTypes, requests, joinCompiler);\n\n            // Create lookup source with new data\n            IndexSnapshot newValue = indexSnapshotBuilder.createIndexSnapshot(indexKeysRecordSet);\n            if (newValue == null) {\n                clearCachedData();\n                return false;\n            }\n\n            indexSnapshotReference.set(newValue);\n            for (UpdateRequest request : requests) {\n                request.finished(newValue);\n            }\n            return true;\n        }\n\n        private void clearCachedData()\n        {\n            indexSnapshotReference.set(new IndexSnapshot(new EmptyLookupSource(outputTypes.size()), new EmptyLookupSource(indexTypes.size())));\n            indexSnapshotBuilder.reset();\n        }\n    }\n\n    private static class EmptyLookupSource\n            implements LookupSource\n    {\n        private final int channelCount;\n\n        public EmptyLookupSource(int channelCount)\n        {\n            this.channelCount = channelCount;\n        }\n\n        @Override\n        public int getChannelCount()\n        {\n            return channelCount;\n        }\n\n        @Override\n        public long getJoinPositionCount()\n        {\n            return 0;\n        }\n\n        @Override\n        public long getInMemorySizeInBytes()\n        {\n            return 0;\n        }\n\n        @Override\n        public long joinPositionWithinPartition(long joinPosition)\n        {\n            throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public long getJoinPosition(int position, Page page, Page allChannelsPage, long rawHash)\n        {\n            return IndexSnapshot.UNLOADED_INDEX_KEY;\n        }\n\n        @Override\n        public long getJoinPosition(int position, Page hashChannelsPage, Page allChannelsPage)\n        {\n            return IndexSnapshot.UNLOADED_INDEX_KEY;\n        }\n\n        @Override\n        public long getNextJoinPosition(long currentJoinPosition, int probePosition, Page allProbeChannelsPage)\n        {\n            return IndexSnapshot.UNLOADED_INDEX_KEY;\n        }\n\n        @Override\n        public boolean isJoinPositionEligible(long currentJoinPosition, int probePosition, Page allProbeChannelsPage)\n        {\n            return true;\n        }\n\n        @Override\n        public void appendTo(long position, PageBuilder pageBuilder, int outputChannelOffset)\n        {\n            throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public void close()\n        {\n        }\n    }\n}\n", "methodName": "void IndexLoader$IndexSnapshotLoader.clearCachedData()", "exampleID": 64, "dataset": "infer", "filepath": "presto-main/src/main/java/com/facebook/presto/operator/index/IndexLoader.java", "source": "com.facebook.presto.operator.index.IndexLoader$EmptyLookupSource", "sourceLine": 378, "qualifier": "Resource of type $$com.facebook.presto.operator.index.IndexLoader$EmptyLookupSource/$ acquired by call to @@new()/@ is not released", "steps": [{"line": 33, "source": "com.facebook.presto.operator.index.IndexLoader$EmptyLookupSource", "filepath": "presto-main/src/main/java/com/facebook/presto/operator/index/IndexSnapshot.java", "methodName": "IndexSnapshot.IndexSnapshot", "exampleID": 65}], "line_number": 378, "records": [{"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/operator/index/IndexLoader.java", "line_number": 388, "column_number": -1, "description": "start of procedure IndexLoader$EmptyLookupSource(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "IndexLoader$EmptyLookupSource.<init>(int)"}, {"tag": "name_id", "value": "com.facebook.presto.operator.index.IndexLoader$EmptyLookupSource.<init>(int).108629cf0248fe138eec4d05ef3587e4"}], "snippet": "        public EmptyLookupSource(int channelCount)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/operator/index/IndexLoader.java", "methodName": "IndexLoader$EmptyLookupSource"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/operator/index/IndexLoader.java", "line_number": 389, "column_number": -1, "description": "", "node_tags": [], "snippet": "        {", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/operator/index/IndexLoader.java", "methodName": "IndexLoader$EmptyLookupSource"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/operator/index/IndexLoader.java", "line_number": 390, "column_number": -1, "description": "", "node_tags": [], "snippet": "            this.channelCount = channelCount;", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/operator/index/IndexLoader.java", "methodName": "IndexLoader$EmptyLookupSource"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/operator/index/IndexLoader.java", "line_number": 391, "column_number": -1, "description": "return from a call to IndexLoader$EmptyLookupSource.<init>(int)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "IndexLoader$EmptyLookupSource.<init>(int)"}, {"tag": "name_id", "value": "com.facebook.presto.operator.index.IndexLoader$EmptyLookupSource.<init>(int).108629cf0248fe138eec4d05ef3587e4"}], "snippet": "        }", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/operator/index/IndexLoader.java", "methodName": "IndexLoader$EmptyLookupSource"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/operator/index/IndexLoader.java", "line_number": 388, "column_number": -1, "description": "start of procedure IndexLoader$EmptyLookupSource(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "IndexLoader$EmptyLookupSource.<init>(int)"}, {"tag": "name_id", "value": "com.facebook.presto.operator.index.IndexLoader$EmptyLookupSource.<init>(int).108629cf0248fe138eec4d05ef3587e4"}], "snippet": "        public EmptyLookupSource(int channelCount)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/operator/index/IndexLoader.java", "methodName": "IndexLoader$EmptyLookupSource"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/operator/index/IndexLoader.java", "line_number": 389, "column_number": -1, "description": "", "node_tags": [], "snippet": "        {", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/operator/index/IndexLoader.java", "methodName": "IndexLoader$EmptyLookupSource"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/operator/index/IndexLoader.java", "line_number": 390, "column_number": -1, "description": "", "node_tags": [], "snippet": "            this.channelCount = channelCount;", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/operator/index/IndexLoader.java", "methodName": "IndexLoader$EmptyLookupSource"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/operator/index/IndexLoader.java", "line_number": 391, "column_number": -1, "description": "return from a call to IndexLoader$EmptyLookupSource.<init>(int)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "IndexLoader$EmptyLookupSource.<init>(int)"}, {"tag": "name_id", "value": "com.facebook.presto.operator.index.IndexLoader$EmptyLookupSource.<init>(int).108629cf0248fe138eec4d05ef3587e4"}], "snippet": "        }", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/operator/index/IndexLoader.java", "methodName": "IndexLoader$EmptyLookupSource"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/operator/index/IndexSnapshot.java", "line_number": 33, "column_number": -1, "description": "start of procedure IndexSnapshot(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "IndexSnapshot.<init>(IndexLoader$EmptyLookupSource,IndexLoader$EmptyLookupSource)"}, {"tag": "name_id", "value": "com.facebook.presto.operator.index.IndexSnapshot.<init>(com.facebook.presto.operator.index.IndexLoad.637a934a74fbe33e91d30b2d1dc6f459"}], "snippet": "    public IndexSnapshot(LookupSource values, LookupSource missingKeys)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/operator/index/IndexSnapshot.java", "methodName": "IndexSnapshot"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/operator/index/IndexSnapshot.java", "line_number": 34, "column_number": -1, "description": "", "node_tags": [], "snippet": "    {", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/operator/index/IndexSnapshot.java", "methodName": "IndexSnapshot"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/operator/index/IndexSnapshot.java", "line_number": 35, "column_number": -1, "description": "", "node_tags": [], "snippet": "        this.values = requireNonNull(values, \"values is null\");", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/operator/index/IndexSnapshot.java", "methodName": "IndexSnapshot"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/operator/index/IndexSnapshot.java", "line_number": 36, "column_number": -1, "description": "", "node_tags": [], "snippet": "        this.missingKeys = requireNonNull(missingKeys, \"missingKeys is null\");", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/operator/index/IndexSnapshot.java", "methodName": "IndexSnapshot"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/operator/index/IndexSnapshot.java", "line_number": 37, "column_number": -1, "description": "return from a call to IndexSnapshot.<init>(IndexLoader$EmptyLookupSource,IndexLoader$EmptyLookupSource)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "IndexSnapshot.<init>(IndexLoader$EmptyLookupSource,IndexLoader$EmptyLookupSource)"}, {"tag": "name_id", "value": "com.facebook.presto.operator.index.IndexSnapshot.<init>(com.facebook.presto.operator.index.IndexLoad.637a934a74fbe33e91d30b2d1dc6f459"}], "snippet": "    }", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/operator/index/IndexSnapshot.java", "methodName": "IndexSnapshot"}], "combined_records": [{"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/operator/index/IndexLoader.java", "line_number": 391, "column_number": -1, "description": "start of procedure IndexLoader$EmptyLookupSource(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "IndexLoader$EmptyLookupSource.<init>(int)"}, {"tag": "name_id", "value": "com.facebook.presto.operator.index.IndexLoader$EmptyLookupSource.<init>(int).108629cf0248fe138eec4d05ef3587e4"}], "snippet": "386.\n387.        public EmptyLookupSource(int channelCount)\n388.>         {\n389.>             this.channelCount = channelCount;\n390.        }\n391.> \n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/operator/index/IndexLoader.java", "methodName": "IndexLoader$EmptyLookupSource", "line_numbers": [388, 389, 390, 391, 388, 389, 390, 391]}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/operator/index/IndexSnapshot.java", "line_number": 37, "column_number": -1, "description": "start of procedure IndexSnapshot(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "IndexSnapshot.<init>(IndexLoader$EmptyLookupSource,IndexLoader$EmptyLookupSource)"}, {"tag": "name_id", "value": "com.facebook.presto.operator.index.IndexSnapshot.<init>(com.facebook.presto.operator.index.IndexLoad.637a934a74fbe33e91d30b2d1dc6f459"}], "snippet": "31.\n32.    public IndexSnapshot(LookupSource values, LookupSource missingKeys)\n33.>     {\n34.>         this.values = requireNonNull(values, \"values is null\");\n35.>         this.missingKeys = requireNonNull(missingKeys, \"missingKeys is null\");\n36.    }\n37.> \n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/operator/index/IndexSnapshot.java", "methodName": "IndexSnapshot", "line_numbers": [33, 34, 35, 36, 37]}], "infer_explore": [{"level": 0, "filename": "presto-main/src/main/java/com/facebook/presto/operator/index/IndexLoader.java", "line_number": 376, "column_number": -1, "description": "start of procedure clearCachedData()", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void IndexLoader$IndexSnapshotLoader.clearCachedData()"}, {"tag": "name_id", "value": "com.facebook.presto.operator.index.IndexLoader$IndexSnapshotLoader.clearCachedData():void.b6e91158bcd999f4129dc6bcdcf9dccd"}], "snippet": "373.         }\n374. \n375. >         private void clearCachedData()\n376.         {\n377.             indexSnapshotReference.set(new IndexSnapshot(new EmptyLookupSource(outputTypes.size()), new EmptyLookupSource(indexTypes.size())));\n"}, {"level": 0, "filename": "presto-main/src/main/java/com/facebook/presto/operator/index/IndexLoader.java", "line_number": 378, "column_number": -1, "description": "", "node_tags": [], "snippet": "375.         private void clearCachedData()\n376.         {\n377. >             indexSnapshotReference.set(new IndexSnapshot(new EmptyLookupSource(outputTypes.size()), new EmptyLookupSource(indexTypes.size())));\n378.             indexSnapshotBuilder.reset();\n379.         }\n"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/operator/index/IndexLoader.java", "line_number": 388, "column_number": -1, "description": "start of procedure IndexLoader$EmptyLookupSource(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "IndexLoader$EmptyLookupSource.<init>(int)"}, {"tag": "name_id", "value": "com.facebook.presto.operator.index.IndexLoader$EmptyLookupSource.<init>(int).108629cf0248fe138eec4d05ef3587e4"}], "snippet": "385.         private final int channelCount;\n386. \n387. >         public EmptyLookupSource(int channelCount)\n388.         {\n389.             this.channelCount = channelCount;\n"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/operator/index/IndexLoader.java", "line_number": 389, "column_number": -1, "description": "", "node_tags": [], "snippet": "386. \n387.         public EmptyLookupSource(int channelCount)\n388. >         {\n389.             this.channelCount = channelCount;\n390.         }\n"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/operator/index/IndexLoader.java", "line_number": 390, "column_number": -1, "description": "", "node_tags": [], "snippet": "387.         public EmptyLookupSource(int channelCount)\n388.         {\n389. >             this.channelCount = channelCount;\n390.         }\n391. \n"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/operator/index/IndexLoader.java", "line_number": 391, "column_number": -1, "description": "return from a call to IndexLoader$EmptyLookupSource.<init>(int)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "IndexLoader$EmptyLookupSource.<init>(int)"}, {"tag": "name_id", "value": "com.facebook.presto.operator.index.IndexLoader$EmptyLookupSource.<init>(int).108629cf0248fe138eec4d05ef3587e4"}], "snippet": "388.         {\n389.             this.channelCount = channelCount;\n390. >         }\n391. \n392.         @Override\n"}, {"level": 0, "filename": "presto-main/src/main/java/com/facebook/presto/operator/index/IndexLoader.java", "line_number": 378, "column_number": -1, "description": "", "node_tags": [], "snippet": "375.         private void clearCachedData()\n376.         {\n377. >             indexSnapshotReference.set(new IndexSnapshot(new EmptyLookupSource(outputTypes.size()), new EmptyLookupSource(indexTypes.size())));\n378.             indexSnapshotBuilder.reset();\n379.         }\n"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/operator/index/IndexLoader.java", "line_number": 388, "column_number": -1, "description": "start of procedure IndexLoader$EmptyLookupSource(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "IndexLoader$EmptyLookupSource.<init>(int)"}, {"tag": "name_id", "value": "com.facebook.presto.operator.index.IndexLoader$EmptyLookupSource.<init>(int).108629cf0248fe138eec4d05ef3587e4"}], "snippet": "385.         private final int channelCount;\n386. \n387. >         public EmptyLookupSource(int channelCount)\n388.         {\n389.             this.channelCount = channelCount;\n"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/operator/index/IndexLoader.java", "line_number": 389, "column_number": -1, "description": "", "node_tags": [], "snippet": "386. \n387.         public EmptyLookupSource(int channelCount)\n388. >         {\n389.             this.channelCount = channelCount;\n390.         }\n"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/operator/index/IndexLoader.java", "line_number": 390, "column_number": -1, "description": "", "node_tags": [], "snippet": "387.         public EmptyLookupSource(int channelCount)\n388.         {\n389. >             this.channelCount = channelCount;\n390.         }\n391. \n"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/operator/index/IndexLoader.java", "line_number": 391, "column_number": -1, "description": "return from a call to IndexLoader$EmptyLookupSource.<init>(int)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "IndexLoader$EmptyLookupSource.<init>(int)"}, {"tag": "name_id", "value": "com.facebook.presto.operator.index.IndexLoader$EmptyLookupSource.<init>(int).108629cf0248fe138eec4d05ef3587e4"}], "snippet": "388.         {\n389.             this.channelCount = channelCount;\n390. >         }\n391. \n392.         @Override\n"}, {"level": 0, "filename": "presto-main/src/main/java/com/facebook/presto/operator/index/IndexLoader.java", "line_number": 378, "column_number": -1, "description": "", "node_tags": [], "snippet": "375.         private void clearCachedData()\n376.         {\n377. >             indexSnapshotReference.set(new IndexSnapshot(new EmptyLookupSource(outputTypes.size()), new EmptyLookupSource(indexTypes.size())));\n378.             indexSnapshotBuilder.reset();\n379.         }\n"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/operator/index/IndexSnapshot.java", "line_number": 33, "column_number": -1, "description": "start of procedure IndexSnapshot(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "IndexSnapshot.<init>(IndexLoader$EmptyLookupSource,IndexLoader$EmptyLookupSource)"}, {"tag": "name_id", "value": "com.facebook.presto.operator.index.IndexSnapshot.<init>(com.facebook.presto.operator.index.IndexLoad.637a934a74fbe33e91d30b2d1dc6f459"}], "snippet": "30.     private final LookupSource missingKeys;\n31. \n32. >     public IndexSnapshot(LookupSource values, LookupSource missingKeys)\n33.     {\n34.         this.values = requireNonNull(values, \"values is null\");\n"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/operator/index/IndexSnapshot.java", "line_number": 34, "column_number": -1, "description": "", "node_tags": [], "snippet": "31. \n32.     public IndexSnapshot(LookupSource values, LookupSource missingKeys)\n33. >     {\n34.         this.values = requireNonNull(values, \"values is null\");\n35.         this.missingKeys = requireNonNull(missingKeys, \"missingKeys is null\");\n"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/operator/index/IndexSnapshot.java", "line_number": 35, "column_number": -1, "description": "", "node_tags": [], "snippet": "32.     public IndexSnapshot(LookupSource values, LookupSource missingKeys)\n33.     {\n34. >         this.values = requireNonNull(values, \"values is null\");\n35.         this.missingKeys = requireNonNull(missingKeys, \"missingKeys is null\");\n36.     }\n"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/operator/index/IndexSnapshot.java", "line_number": 36, "column_number": -1, "description": "", "node_tags": [], "snippet": "33.     {\n34.         this.values = requireNonNull(values, \"values is null\");\n35. >         this.missingKeys = requireNonNull(missingKeys, \"missingKeys is null\");\n36.     }\n37. \n"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/operator/index/IndexSnapshot.java", "line_number": 37, "column_number": -1, "description": "return from a call to IndexSnapshot.<init>(IndexLoader$EmptyLookupSource,IndexLoader$EmptyLookupSource)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "IndexSnapshot.<init>(IndexLoader$EmptyLookupSource,IndexLoader$EmptyLookupSource)"}, {"tag": "name_id", "value": "com.facebook.presto.operator.index.IndexSnapshot.<init>(com.facebook.presto.operator.index.IndexLoad.637a934a74fbe33e91d30b2d1dc6f459"}], "snippet": "34.         this.values = requireNonNull(values, \"values is null\");\n35.         this.missingKeys = requireNonNull(missingKeys, \"missingKeys is null\");\n36. >     }\n37. \n38.     @Override\n"}]}, {"url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-hive/src/test/java/com/facebook/presto/hive/AbstractTestHiveFileFormats.java", "rawCode": "/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage com.facebook.presto.hive;\n\nimport com.facebook.presto.block.BlockSerdeUtil;\nimport com.facebook.presto.hive.metastore.StorageFormat;\nimport com.facebook.presto.spi.ConnectorPageSource;\nimport com.facebook.presto.spi.ConnectorSession;\nimport com.facebook.presto.spi.Page;\nimport com.facebook.presto.spi.PageBuilder;\nimport com.facebook.presto.spi.RecordCursor;\nimport com.facebook.presto.spi.block.Block;\nimport com.facebook.presto.spi.block.BlockBuilder;\nimport com.facebook.presto.spi.block.BlockBuilderStatus;\nimport com.facebook.presto.spi.type.ArrayType;\nimport com.facebook.presto.spi.type.CharType;\nimport com.facebook.presto.spi.type.DateType;\nimport com.facebook.presto.spi.type.DecimalType;\nimport com.facebook.presto.spi.type.Decimals;\nimport com.facebook.presto.spi.type.RowType;\nimport com.facebook.presto.spi.type.SqlDate;\nimport com.facebook.presto.spi.type.SqlDecimal;\nimport com.facebook.presto.spi.type.SqlTimestamp;\nimport com.facebook.presto.spi.type.SqlVarbinary;\nimport com.facebook.presto.spi.type.TimestampType;\nimport com.facebook.presto.spi.type.Type;\nimport com.facebook.presto.testing.MaterializedResult;\nimport com.facebook.presto.testing.MaterializedRow;\nimport com.facebook.presto.tests.StructuralTestUtil;\nimport com.google.common.base.Joiner;\nimport com.google.common.collect.ImmutableList;\nimport com.google.common.collect.ImmutableMap;\nimport io.airlift.slice.DynamicSliceOutput;\nimport io.airlift.slice.Slice;\nimport io.airlift.slice.SliceOutput;\nimport io.airlift.slice.Slices;\nimport org.apache.hadoop.conf.Configuration;\nimport org.apache.hadoop.fs.Path;\nimport org.apache.hadoop.hive.common.type.HiveChar;\nimport org.apache.hadoop.hive.common.type.HiveDecimal;\nimport org.apache.hadoop.hive.common.type.HiveVarchar;\nimport org.apache.hadoop.hive.ql.exec.FileSinkOperator.RecordWriter;\nimport org.apache.hadoop.hive.ql.io.HiveOutputFormat;\nimport org.apache.hadoop.hive.serde2.SerDe;\nimport org.apache.hadoop.hive.serde2.objectinspector.ObjectInspector;\nimport org.apache.hadoop.hive.serde2.objectinspector.ObjectInspector.Category;\nimport org.apache.hadoop.hive.serde2.objectinspector.SettableStructObjectInspector;\nimport org.apache.hadoop.hive.serde2.objectinspector.StructField;\nimport org.apache.hadoop.hive.serde2.objectinspector.primitive.JavaHiveCharObjectInspector;\nimport org.apache.hadoop.hive.serde2.objectinspector.primitive.JavaHiveDecimalObjectInspector;\nimport org.apache.hadoop.hive.serde2.typeinfo.DecimalTypeInfo;\nimport org.apache.hadoop.io.Text;\nimport org.apache.hadoop.io.Writable;\nimport org.apache.hadoop.mapred.FileSplit;\nimport org.apache.hadoop.mapred.JobConf;\nimport org.joda.time.DateTime;\nimport org.joda.time.DateTimeZone;\nimport org.joda.time.format.DateTimeFormat;\nimport org.testng.annotations.Test;\n\nimport java.io.File;\nimport java.io.IOException;\nimport java.math.BigDecimal;\nimport java.math.BigInteger;\nimport java.sql.Date;\nimport java.sql.Timestamp;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.Optional;\nimport java.util.Properties;\nimport java.util.concurrent.TimeUnit;\n\nimport static com.facebook.presto.hive.HdfsConfigurationUpdater.configureCompression;\nimport static com.facebook.presto.hive.HiveColumnHandle.ColumnType.PARTITION_KEY;\nimport static com.facebook.presto.hive.HiveColumnHandle.ColumnType.REGULAR;\nimport static com.facebook.presto.hive.HivePartitionKey.HIVE_DEFAULT_DYNAMIC_PARTITION;\nimport static com.facebook.presto.hive.HiveTestUtils.SESSION;\nimport static com.facebook.presto.hive.HiveTestUtils.TYPE_MANAGER;\nimport static com.facebook.presto.hive.HiveTestUtils.mapType;\nimport static com.facebook.presto.hive.HiveUtil.isStructuralType;\nimport static com.facebook.presto.hive.util.SerDeUtils.serializeObject;\nimport static com.facebook.presto.spi.type.BigintType.BIGINT;\nimport static com.facebook.presto.spi.type.BooleanType.BOOLEAN;\nimport static com.facebook.presto.spi.type.CharType.createCharType;\nimport static com.facebook.presto.spi.type.Chars.isCharType;\nimport static com.facebook.presto.spi.type.DoubleType.DOUBLE;\nimport static com.facebook.presto.spi.type.IntegerType.INTEGER;\nimport static com.facebook.presto.spi.type.RealType.REAL;\nimport static com.facebook.presto.spi.type.SmallintType.SMALLINT;\nimport static com.facebook.presto.spi.type.TinyintType.TINYINT;\nimport static com.facebook.presto.spi.type.VarbinaryType.VARBINARY;\nimport static com.facebook.presto.spi.type.VarcharType.createUnboundedVarcharType;\nimport static com.facebook.presto.spi.type.VarcharType.createVarcharType;\nimport static com.facebook.presto.spi.type.Varchars.isVarcharType;\nimport static com.facebook.presto.testing.MaterializedResult.materializeSourceDataStream;\nimport static com.facebook.presto.tests.StructuralTestUtil.arrayBlockOf;\nimport static com.facebook.presto.tests.StructuralTestUtil.decimalArrayBlockOf;\nimport static com.facebook.presto.tests.StructuralTestUtil.decimalMapBlockOf;\nimport static com.facebook.presto.tests.StructuralTestUtil.mapBlockOf;\nimport static com.facebook.presto.tests.StructuralTestUtil.rowBlockOf;\nimport static com.google.common.base.Preconditions.checkArgument;\nimport static com.google.common.base.Predicates.not;\nimport static com.google.common.base.Strings.padEnd;\nimport static com.google.common.collect.Iterables.filter;\nimport static com.google.common.collect.Iterables.transform;\nimport static java.lang.Float.intBitsToFloat;\nimport static java.nio.charset.StandardCharsets.UTF_8;\nimport static java.util.Arrays.fill;\nimport static java.util.Objects.requireNonNull;\nimport static java.util.stream.Collectors.toList;\nimport static org.apache.hadoop.hive.serde2.objectinspector.ObjectInspectorFactory.getStandardListObjectInspector;\nimport static org.apache.hadoop.hive.serde2.objectinspector.ObjectInspectorFactory.getStandardMapObjectInspector;\nimport static org.apache.hadoop.hive.serde2.objectinspector.ObjectInspectorFactory.getStandardStructObjectInspector;\nimport static org.apache.hadoop.hive.serde2.objectinspector.primitive.PrimitiveObjectInspectorFactory.javaBooleanObjectInspector;\nimport static org.apache.hadoop.hive.serde2.objectinspector.primitive.PrimitiveObjectInspectorFactory.javaByteArrayObjectInspector;\nimport static org.apache.hadoop.hive.serde2.objectinspector.primitive.PrimitiveObjectInspectorFactory.javaByteObjectInspector;\nimport static org.apache.hadoop.hive.serde2.objectinspector.primitive.PrimitiveObjectInspectorFactory.javaDateObjectInspector;\nimport static org.apache.hadoop.hive.serde2.objectinspector.primitive.PrimitiveObjectInspectorFactory.javaDoubleObjectInspector;\nimport static org.apache.hadoop.hive.serde2.objectinspector.primitive.PrimitiveObjectInspectorFactory.javaFloatObjectInspector;\nimport static org.apache.hadoop.hive.serde2.objectinspector.primitive.PrimitiveObjectInspectorFactory.javaHiveVarcharObjectInspector;\nimport static org.apache.hadoop.hive.serde2.objectinspector.primitive.PrimitiveObjectInspectorFactory.javaIntObjectInspector;\nimport static org.apache.hadoop.hive.serde2.objectinspector.primitive.PrimitiveObjectInspectorFactory.javaLongObjectInspector;\nimport static org.apache.hadoop.hive.serde2.objectinspector.primitive.PrimitiveObjectInspectorFactory.javaShortObjectInspector;\nimport static org.apache.hadoop.hive.serde2.objectinspector.primitive.PrimitiveObjectInspectorFactory.javaStringObjectInspector;\nimport static org.apache.hadoop.hive.serde2.objectinspector.primitive.PrimitiveObjectInspectorFactory.javaTimestampObjectInspector;\nimport static org.apache.hadoop.hive.serde2.typeinfo.TypeInfoFactory.getCharTypeInfo;\nimport static org.joda.time.DateTimeZone.UTC;\nimport static org.testng.Assert.assertEquals;\nimport static org.testng.Assert.assertFalse;\nimport static org.testng.Assert.assertTrue;\n\n@Test(groups = \"hive\")\npublic abstract class AbstractTestHiveFileFormats\n{\n    private static final double EPSILON = 0.001;\n\n    private static final long DATE_MILLIS_UTC = new DateTime(2011, 5, 6, 0, 0, UTC).getMillis();\n    private static final long DATE_DAYS = TimeUnit.MILLISECONDS.toDays(DATE_MILLIS_UTC);\n    private static final String DATE_STRING = DateTimeFormat.forPattern(\"yyyy-MM-dd\").withZoneUTC().print(DATE_MILLIS_UTC);\n    private static final Date SQL_DATE = new Date(UTC.getMillisKeepLocal(DateTimeZone.getDefault(), DATE_MILLIS_UTC));\n\n    private static final long TIMESTAMP = new DateTime(2011, 5, 6, 7, 8, 9, 123).getMillis();\n    private static final String TIMESTAMP_STRING = DateTimeFormat.forPattern(\"yyyy-MM-dd HH:mm:ss.SSS\").print(TIMESTAMP);\n\n    private static final String VARCHAR_MAX_LENGTH_STRING;\n\n    static {\n        char[] varcharMaxLengthCharArray = new char[HiveVarchar.MAX_VARCHAR_LENGTH];\n        fill(varcharMaxLengthCharArray, 'a');\n        VARCHAR_MAX_LENGTH_STRING = new String(varcharMaxLengthCharArray);\n    }\n\n    private static final JavaHiveDecimalObjectInspector DECIMAL_INSPECTOR_PRECISION_2 =\n            new JavaHiveDecimalObjectInspector(new DecimalTypeInfo(2, 1));\n    private static final JavaHiveDecimalObjectInspector DECIMAL_INSPECTOR_PRECISION_4 =\n            new JavaHiveDecimalObjectInspector(new DecimalTypeInfo(4, 2));\n    private static final JavaHiveDecimalObjectInspector DECIMAL_INSPECTOR_PRECISION_8 =\n            new JavaHiveDecimalObjectInspector(new DecimalTypeInfo(8, 4));\n    private static final JavaHiveDecimalObjectInspector DECIMAL_INSPECTOR_PRECISION_17 =\n            new JavaHiveDecimalObjectInspector(new DecimalTypeInfo(17, 8));\n    private static final JavaHiveDecimalObjectInspector DECIMAL_INSPECTOR_PRECISION_18 =\n            new JavaHiveDecimalObjectInspector(new DecimalTypeInfo(18, 8));\n    private static final JavaHiveDecimalObjectInspector DECIMAL_INSPECTOR_PRECISION_38 =\n            new JavaHiveDecimalObjectInspector(new DecimalTypeInfo(38, 16));\n\n    private static final DecimalType DECIMAL_TYPE_PRECISION_2 = DecimalType.createDecimalType(2, 1);\n    private static final DecimalType DECIMAL_TYPE_PRECISION_4 = DecimalType.createDecimalType(4, 2);\n    private static final DecimalType DECIMAL_TYPE_PRECISION_8 = DecimalType.createDecimalType(8, 4);\n    private static final DecimalType DECIMAL_TYPE_PRECISION_17 = DecimalType.createDecimalType(17, 8);\n    private static final DecimalType DECIMAL_TYPE_PRECISION_18 = DecimalType.createDecimalType(18, 8);\n    private static final DecimalType DECIMAL_TYPE_PRECISION_38 = DecimalType.createDecimalType(38, 16);\n\n    private static final HiveDecimal WRITE_DECIMAL_PRECISION_2 = HiveDecimal.create(new BigDecimal(\"-1.2\"));\n    private static final HiveDecimal WRITE_DECIMAL_PRECISION_4 = HiveDecimal.create(new BigDecimal(\"12.3\"));\n    private static final HiveDecimal WRITE_DECIMAL_PRECISION_8 = HiveDecimal.create(new BigDecimal(\"-1234.5678\"));\n    private static final HiveDecimal WRITE_DECIMAL_PRECISION_17 = HiveDecimal.create(new BigDecimal(\"123456789.1234\"));\n    private static final HiveDecimal WRITE_DECIMAL_PRECISION_18 = HiveDecimal.create(new BigDecimal(\"-1234567890.12345678\"));\n    private static final HiveDecimal WRITE_DECIMAL_PRECISION_38 = HiveDecimal.create(new BigDecimal(\"1234567890123456789012.12345678\"));\n\n    private static final BigDecimal EXPECTED_DECIMAL_PRECISION_2 = new BigDecimal(\"-1.2\");\n    private static final BigDecimal EXPECTED_DECIMAL_PRECISION_4 = new BigDecimal(\"12.30\");\n    private static final BigDecimal EXPECTED_DECIMAL_PRECISION_8 = new BigDecimal(\"-1234.5678\");\n    private static final BigDecimal EXPECTED_DECIMAL_PRECISION_17 = new BigDecimal(\"123456789.12340000\");\n    private static final BigDecimal EXPECTED_DECIMAL_PRECISION_18 = new BigDecimal(\"-1234567890.12345678\");\n    private static final BigDecimal EXPECTED_DECIMAL_PRECISION_38 = new BigDecimal(\"1234567890123456789012.1234567800000000\");\n\n    private static final JavaHiveCharObjectInspector CHAR_INSPECTOR_LENGTH_10 =\n            new JavaHiveCharObjectInspector(getCharTypeInfo(10));\n\n    // TODO: support null values and determine if timestamp and binary are allowed as partition keys\n    public static final List<TestColumn> TEST_COLUMNS = ImmutableList.<TestColumn>builder()\n            .add(new TestColumn(\"p_empty_string\", javaStringObjectInspector, \"\", Slices.EMPTY_SLICE, true))\n            .add(new TestColumn(\"p_string\", javaStringObjectInspector, \"test\", Slices.utf8Slice(\"test\"), true))\n            .add(new TestColumn(\"p_empty_varchar\", javaHiveVarcharObjectInspector, \"\", Slices.EMPTY_SLICE, true))\n            .add(new TestColumn(\"p_varchar\", javaHiveVarcharObjectInspector, \"test\", Slices.utf8Slice(\"test\"), true))\n            .add(new TestColumn(\"p_varchar_max_length\", javaHiveVarcharObjectInspector, VARCHAR_MAX_LENGTH_STRING, Slices.utf8Slice(VARCHAR_MAX_LENGTH_STRING), true))\n            .add(new TestColumn(\"p_char_10\", CHAR_INSPECTOR_LENGTH_10, \"test\", Slices.utf8Slice(\"test\"), true))\n            .add(new TestColumn(\"p_tinyint\", javaByteObjectInspector, \"1\", (byte) 1, true))\n            .add(new TestColumn(\"p_smallint\", javaShortObjectInspector, \"2\", (short) 2, true))\n            .add(new TestColumn(\"p_int\", javaIntObjectInspector, \"3\", 3, true))\n            .add(new TestColumn(\"p_bigint\", javaLongObjectInspector, \"4\", 4L, true))\n            .add(new TestColumn(\"p_float\", javaFloatObjectInspector, \"5.1\", 5.1f, true))\n            .add(new TestColumn(\"p_double\", javaDoubleObjectInspector, \"6.2\", 6.2, true))\n            .add(new TestColumn(\"p_boolean\", javaBooleanObjectInspector, \"true\", true, true))\n            .add(new TestColumn(\"p_date\", javaDateObjectInspector, DATE_STRING, DATE_DAYS, true))\n            .add(new TestColumn(\"p_timestamp\", javaTimestampObjectInspector, TIMESTAMP_STRING, TIMESTAMP, true))\n            .add(new TestColumn(\"p_decimal_precision_2\", DECIMAL_INSPECTOR_PRECISION_2, WRITE_DECIMAL_PRECISION_2.toString(), EXPECTED_DECIMAL_PRECISION_2, true))\n            .add(new TestColumn(\"p_decimal_precision_4\", DECIMAL_INSPECTOR_PRECISION_4, WRITE_DECIMAL_PRECISION_4.toString(), EXPECTED_DECIMAL_PRECISION_4, true))\n            .add(new TestColumn(\"p_decimal_precision_8\", DECIMAL_INSPECTOR_PRECISION_8, WRITE_DECIMAL_PRECISION_8.toString(), EXPECTED_DECIMAL_PRECISION_8, true))\n            .add(new TestColumn(\"p_decimal_precision_17\", DECIMAL_INSPECTOR_PRECISION_17, WRITE_DECIMAL_PRECISION_17.toString(), EXPECTED_DECIMAL_PRECISION_17, true))\n            .add(new TestColumn(\"p_decimal_precision_18\", DECIMAL_INSPECTOR_PRECISION_18, WRITE_DECIMAL_PRECISION_18.toString(), EXPECTED_DECIMAL_PRECISION_18, true))\n            .add(new TestColumn(\"p_decimal_precision_38\", DECIMAL_INSPECTOR_PRECISION_38, WRITE_DECIMAL_PRECISION_38.toString() + \"BD\", EXPECTED_DECIMAL_PRECISION_38, true))\n//            .add(new TestColumn(\"p_binary\", javaByteArrayObjectInspector, \"test2\", Slices.utf8Slice(\"test2\"), true))\n            .add(new TestColumn(\"p_null_string\", javaStringObjectInspector, HIVE_DEFAULT_DYNAMIC_PARTITION, null, true))\n            .add(new TestColumn(\"p_null_varchar\", javaHiveVarcharObjectInspector, HIVE_DEFAULT_DYNAMIC_PARTITION, null, true))\n            .add(new TestColumn(\"p_null_char\", CHAR_INSPECTOR_LENGTH_10, HIVE_DEFAULT_DYNAMIC_PARTITION, null, true))\n            .add(new TestColumn(\"p_null_tinyint\", javaByteObjectInspector, HIVE_DEFAULT_DYNAMIC_PARTITION, null, true))\n            .add(new TestColumn(\"p_null_smallint\", javaShortObjectInspector, HIVE_DEFAULT_DYNAMIC_PARTITION, null, true))\n            .add(new TestColumn(\"p_null_int\", javaIntObjectInspector, HIVE_DEFAULT_DYNAMIC_PARTITION, null, true))\n            .add(new TestColumn(\"p_null_bigint\", javaLongObjectInspector, HIVE_DEFAULT_DYNAMIC_PARTITION, null, true))\n            .add(new TestColumn(\"p_null_float\", javaFloatObjectInspector, HIVE_DEFAULT_DYNAMIC_PARTITION, null, true))\n            .add(new TestColumn(\"p_null_double\", javaDoubleObjectInspector, HIVE_DEFAULT_DYNAMIC_PARTITION, null, true))\n            .add(new TestColumn(\"p_null_boolean\", javaBooleanObjectInspector, HIVE_DEFAULT_DYNAMIC_PARTITION, null, true))\n            .add(new TestColumn(\"p_null_date\", javaDateObjectInspector, HIVE_DEFAULT_DYNAMIC_PARTITION, null, true))\n            .add(new TestColumn(\"p_null_timestamp\", javaTimestampObjectInspector, HIVE_DEFAULT_DYNAMIC_PARTITION, null, true))\n            .add(new TestColumn(\"p_null_decimal_precision_2\", DECIMAL_INSPECTOR_PRECISION_2, HIVE_DEFAULT_DYNAMIC_PARTITION, null, true))\n            .add(new TestColumn(\"p_null_decimal_precision_4\", DECIMAL_INSPECTOR_PRECISION_4, HIVE_DEFAULT_DYNAMIC_PARTITION, null, true))\n            .add(new TestColumn(\"p_null_decimal_precision_8\", DECIMAL_INSPECTOR_PRECISION_8, HIVE_DEFAULT_DYNAMIC_PARTITION, null, true))\n            .add(new TestColumn(\"p_null_decimal_precision_17\", DECIMAL_INSPECTOR_PRECISION_17, HIVE_DEFAULT_DYNAMIC_PARTITION, null, true))\n            .add(new TestColumn(\"p_null_decimal_precision_18\", DECIMAL_INSPECTOR_PRECISION_18, HIVE_DEFAULT_DYNAMIC_PARTITION, null, true))\n            .add(new TestColumn(\"p_null_decimal_precision_38\", DECIMAL_INSPECTOR_PRECISION_38, HIVE_DEFAULT_DYNAMIC_PARTITION, null, true))\n\n//            .add(new TestColumn(\"p_null_binary\", javaByteArrayObjectInspector, HIVE_DEFAULT_DYNAMIC_PARTITION, null, true))\n            .add(new TestColumn(\"t_null_string\", javaStringObjectInspector, null, null))\n            .add(new TestColumn(\"t_null_varchar\", javaHiveVarcharObjectInspector, null, null))\n            .add(new TestColumn(\"t_null_char\", CHAR_INSPECTOR_LENGTH_10, null, null))\n            .add(new TestColumn(\"t_null_array_int\", getStandardListObjectInspector(javaIntObjectInspector), null, null))\n            .add(new TestColumn(\"t_null_decimal_precision_2\", DECIMAL_INSPECTOR_PRECISION_2, null, null))\n            .add(new TestColumn(\"t_null_decimal_precision_4\", DECIMAL_INSPECTOR_PRECISION_4, null, null))\n            .add(new TestColumn(\"t_null_decimal_precision_8\", DECIMAL_INSPECTOR_PRECISION_8, null, null))\n            .add(new TestColumn(\"t_null_decimal_precision_17\", DECIMAL_INSPECTOR_PRECISION_17, null, null))\n            .add(new TestColumn(\"t_null_decimal_precision_18\", DECIMAL_INSPECTOR_PRECISION_18, null, null))\n            .add(new TestColumn(\"t_null_decimal_precision_38\", DECIMAL_INSPECTOR_PRECISION_38, null, null))\n            .add(new TestColumn(\"t_empty_string\", javaStringObjectInspector, \"\", Slices.EMPTY_SLICE))\n            .add(new TestColumn(\"t_string\", javaStringObjectInspector, \"test\", Slices.utf8Slice(\"test\")))\n            .add(new TestColumn(\"t_empty_varchar\", javaHiveVarcharObjectInspector, new HiveVarchar(\"\", HiveVarchar.MAX_VARCHAR_LENGTH), Slices.EMPTY_SLICE))\n            .add(new TestColumn(\"t_varchar\", javaHiveVarcharObjectInspector, new HiveVarchar(\"test\", HiveVarchar.MAX_VARCHAR_LENGTH), Slices.utf8Slice(\"test\")))\n            .add(new TestColumn(\"t_varchar_max_length\", javaHiveVarcharObjectInspector, new HiveVarchar(VARCHAR_MAX_LENGTH_STRING, HiveVarchar.MAX_VARCHAR_LENGTH), Slices.utf8Slice(VARCHAR_MAX_LENGTH_STRING)))\n            .add(new TestColumn(\"t_char\", CHAR_INSPECTOR_LENGTH_10, \"test\", Slices.utf8Slice(\"test\"), true))\n            .add(new TestColumn(\"t_tinyint\", javaByteObjectInspector, (byte) 1, (byte) 1))\n            .add(new TestColumn(\"t_smallint\", javaShortObjectInspector, (short) 2, (short) 2))\n            .add(new TestColumn(\"t_int\", javaIntObjectInspector, 3, 3))\n            .add(new TestColumn(\"t_bigint\", javaLongObjectInspector, 4L, 4L))\n            .add(new TestColumn(\"t_float\", javaFloatObjectInspector, 5.1f, 5.1f))\n            .add(new TestColumn(\"t_double\", javaDoubleObjectInspector, 6.2, 6.2))\n            .add(new TestColumn(\"t_boolean_true\", javaBooleanObjectInspector, true, true))\n            .add(new TestColumn(\"t_boolean_false\", javaBooleanObjectInspector, false, false))\n            .add(new TestColumn(\"t_date\", javaDateObjectInspector, SQL_DATE, DATE_DAYS))\n            .add(new TestColumn(\"t_timestamp\", javaTimestampObjectInspector, new Timestamp(TIMESTAMP), TIMESTAMP))\n            .add(new TestColumn(\"t_decimal_precision_2\", DECIMAL_INSPECTOR_PRECISION_2, WRITE_DECIMAL_PRECISION_2, EXPECTED_DECIMAL_PRECISION_2))\n            .add(new TestColumn(\"t_decimal_precision_4\", DECIMAL_INSPECTOR_PRECISION_4, WRITE_DECIMAL_PRECISION_4, EXPECTED_DECIMAL_PRECISION_4))\n            .add(new TestColumn(\"t_decimal_precision_8\", DECIMAL_INSPECTOR_PRECISION_8, WRITE_DECIMAL_PRECISION_8, EXPECTED_DECIMAL_PRECISION_8))\n            .add(new TestColumn(\"t_decimal_precision_17\", DECIMAL_INSPECTOR_PRECISION_17, WRITE_DECIMAL_PRECISION_17, EXPECTED_DECIMAL_PRECISION_17))\n            .add(new TestColumn(\"t_decimal_precision_18\", DECIMAL_INSPECTOR_PRECISION_18, WRITE_DECIMAL_PRECISION_18, EXPECTED_DECIMAL_PRECISION_18))\n            .add(new TestColumn(\"t_decimal_precision_38\", DECIMAL_INSPECTOR_PRECISION_38, WRITE_DECIMAL_PRECISION_38, EXPECTED_DECIMAL_PRECISION_38))\n            .add(new TestColumn(\"t_binary\", javaByteArrayObjectInspector, Slices.utf8Slice(\"test2\").getBytes(), Slices.utf8Slice(\"test2\")))\n            .add(new TestColumn(\"t_map_string\",\n                    getStandardMapObjectInspector(javaStringObjectInspector, javaStringObjectInspector),\n                    ImmutableMap.of(\"test\", \"test\"),\n                    mapBlockOf(createUnboundedVarcharType(), createUnboundedVarcharType(), \"test\", \"test\")))\n            .add(new TestColumn(\"t_map_tinyint\",\n                    getStandardMapObjectInspector(javaByteObjectInspector, javaByteObjectInspector),\n                    ImmutableMap.of((byte) 1, (byte) 1),\n                    mapBlockOf(TINYINT, TINYINT, (byte) 1, (byte) 1)))\n            .add(new TestColumn(\"t_map_varchar\",\n                    getStandardMapObjectInspector(javaHiveVarcharObjectInspector, javaHiveVarcharObjectInspector),\n                    ImmutableMap.of(new HiveVarchar(\"test\", HiveVarchar.MAX_VARCHAR_LENGTH), new HiveVarchar(\"test\", HiveVarchar.MAX_VARCHAR_LENGTH)),\n                    mapBlockOf(createVarcharType(HiveVarchar.MAX_VARCHAR_LENGTH), createVarcharType(HiveVarchar.MAX_VARCHAR_LENGTH), \"test\", \"test\")))\n            .add(new TestColumn(\"t_map_char\",\n                    getStandardMapObjectInspector(CHAR_INSPECTOR_LENGTH_10, CHAR_INSPECTOR_LENGTH_10),\n                    ImmutableMap.of(new HiveChar(\"test\", 10), new HiveChar(\"test\", 10)),\n                    mapBlockOf(createCharType(10), createCharType(10), \"test\", \"test\")))\n            .add(new TestColumn(\"t_map_smallint\",\n                    getStandardMapObjectInspector(javaShortObjectInspector, javaShortObjectInspector),\n                    ImmutableMap.of((short) 2, (short) 2),\n                    mapBlockOf(SMALLINT, SMALLINT, (short) 2, (short) 2)))\n            .add(new TestColumn(\"t_map_null_key\", getStandardMapObjectInspector(javaLongObjectInspector, javaLongObjectInspector), asMap(new Long[] {null, 2L}, new Long[] {0L,\n                    3L}), mapBlockOf(BIGINT, BIGINT, 2, 3)))\n            .add(new TestColumn(\"t_map_int\", getStandardMapObjectInspector(javaIntObjectInspector, javaIntObjectInspector), ImmutableMap.of(3, 3), mapBlockOf(INTEGER, INTEGER, 3, 3)))\n            .add(new TestColumn(\"t_map_bigint\", getStandardMapObjectInspector(javaLongObjectInspector, javaLongObjectInspector), ImmutableMap.of(4L, 4L), mapBlockOf(BIGINT, BIGINT, 4L, 4L)))\n            .add(new TestColumn(\"t_map_float\", getStandardMapObjectInspector(javaFloatObjectInspector, javaFloatObjectInspector), ImmutableMap.of(5.0f, 5.0f), mapBlockOf(REAL, REAL, 5.0f, 5.0f)))\n            .add(new TestColumn(\"t_map_double\", getStandardMapObjectInspector(javaDoubleObjectInspector, javaDoubleObjectInspector), ImmutableMap.of(6.0, 6.0), mapBlockOf(DOUBLE, DOUBLE, 6.0, 6.0)))\n            .add(new TestColumn(\"t_map_boolean\",\n                    getStandardMapObjectInspector(javaBooleanObjectInspector, javaBooleanObjectInspector),\n                    ImmutableMap.of(true, true),\n                    mapBlockOf(BOOLEAN, BOOLEAN, true, true)))\n            .add(new TestColumn(\"t_map_date\",\n                    getStandardMapObjectInspector(javaDateObjectInspector, javaDateObjectInspector),\n                    ImmutableMap.of(SQL_DATE, SQL_DATE),\n                    mapBlockOf(DateType.DATE, DateType.DATE, DATE_DAYS, DATE_DAYS)))\n            .add(new TestColumn(\"t_map_timestamp\",\n                    getStandardMapObjectInspector(javaTimestampObjectInspector, javaTimestampObjectInspector),\n                    ImmutableMap.of(new Timestamp(TIMESTAMP), new Timestamp(TIMESTAMP)),\n                    mapBlockOf(TimestampType.TIMESTAMP, TimestampType.TIMESTAMP, TIMESTAMP, TIMESTAMP)))\n            .add(new TestColumn(\"t_map_decimal_precision_2\",\n                    getStandardMapObjectInspector(DECIMAL_INSPECTOR_PRECISION_2, DECIMAL_INSPECTOR_PRECISION_2),\n                    ImmutableMap.of(WRITE_DECIMAL_PRECISION_2, WRITE_DECIMAL_PRECISION_2),\n                    StructuralTestUtil.decimalMapBlockOf(DECIMAL_TYPE_PRECISION_2, EXPECTED_DECIMAL_PRECISION_2)))\n            .add(new TestColumn(\"t_map_decimal_precision_4\",\n                    getStandardMapObjectInspector(DECIMAL_INSPECTOR_PRECISION_4, DECIMAL_INSPECTOR_PRECISION_4),\n                    ImmutableMap.of(WRITE_DECIMAL_PRECISION_4, WRITE_DECIMAL_PRECISION_4),\n                    decimalMapBlockOf(DECIMAL_TYPE_PRECISION_4, EXPECTED_DECIMAL_PRECISION_4)))\n            .add(new TestColumn(\"t_map_decimal_precision_8\",\n                    getStandardMapObjectInspector(DECIMAL_INSPECTOR_PRECISION_8, DECIMAL_INSPECTOR_PRECISION_8),\n                    ImmutableMap.of(WRITE_DECIMAL_PRECISION_8, WRITE_DECIMAL_PRECISION_8),\n                    decimalMapBlockOf(DECIMAL_TYPE_PRECISION_8, EXPECTED_DECIMAL_PRECISION_8)))\n            .add(new TestColumn(\"t_map_decimal_precision_17\",\n                    getStandardMapObjectInspector(DECIMAL_INSPECTOR_PRECISION_17, DECIMAL_INSPECTOR_PRECISION_17),\n                    ImmutableMap.of(WRITE_DECIMAL_PRECISION_17, WRITE_DECIMAL_PRECISION_17),\n                    decimalMapBlockOf(DECIMAL_TYPE_PRECISION_17, EXPECTED_DECIMAL_PRECISION_17)))\n            .add(new TestColumn(\"t_map_decimal_precision_18\",\n                    getStandardMapObjectInspector(DECIMAL_INSPECTOR_PRECISION_18, DECIMAL_INSPECTOR_PRECISION_18),\n                    ImmutableMap.of(WRITE_DECIMAL_PRECISION_18, WRITE_DECIMAL_PRECISION_18),\n                    decimalMapBlockOf(DECIMAL_TYPE_PRECISION_18, EXPECTED_DECIMAL_PRECISION_18)))\n            .add(new TestColumn(\"t_map_decimal_precision_38\",\n                    getStandardMapObjectInspector(DECIMAL_INSPECTOR_PRECISION_38, DECIMAL_INSPECTOR_PRECISION_38),\n                    ImmutableMap.of(WRITE_DECIMAL_PRECISION_38, WRITE_DECIMAL_PRECISION_38),\n                    decimalMapBlockOf(DECIMAL_TYPE_PRECISION_38, EXPECTED_DECIMAL_PRECISION_38)))\n            .add(new TestColumn(\"t_array_empty\", getStandardListObjectInspector(javaStringObjectInspector), ImmutableList.of(), arrayBlockOf(createUnboundedVarcharType())))\n            .add(new TestColumn(\"t_array_string\", getStandardListObjectInspector(javaStringObjectInspector), ImmutableList.of(\"test\"), arrayBlockOf(createUnboundedVarcharType(), \"test\")))\n            .add(new TestColumn(\"t_array_tinyint\", getStandardListObjectInspector(javaByteObjectInspector), ImmutableList.of((byte) 1), arrayBlockOf(TINYINT, (byte) 1)))\n            .add(new TestColumn(\"t_array_smallint\", getStandardListObjectInspector(javaShortObjectInspector), ImmutableList.of((short) 2), arrayBlockOf(SMALLINT, (short) 2)))\n            .add(new TestColumn(\"t_array_int\", getStandardListObjectInspector(javaIntObjectInspector), ImmutableList.of(3), arrayBlockOf(INTEGER, 3)))\n            .add(new TestColumn(\"t_array_bigint\", getStandardListObjectInspector(javaLongObjectInspector), ImmutableList.of(4L), arrayBlockOf(BIGINT, 4L)))\n            .add(new TestColumn(\"t_array_float\", getStandardListObjectInspector(javaFloatObjectInspector), ImmutableList.of(5.0f), arrayBlockOf(REAL, 5.0f)))\n            .add(new TestColumn(\"t_array_double\", getStandardListObjectInspector(javaDoubleObjectInspector), ImmutableList.of(6.0), StructuralTestUtil.arrayBlockOf(DOUBLE, 6.0)))\n            .add(new TestColumn(\"t_array_boolean\", getStandardListObjectInspector(javaBooleanObjectInspector), ImmutableList.of(true), arrayBlockOf(BOOLEAN, true)))\n            .add(new TestColumn(\n                    \"t_array_varchar\",\n                    getStandardListObjectInspector(javaHiveVarcharObjectInspector),\n                    ImmutableList.of(new HiveVarchar(\"test\", HiveVarchar.MAX_VARCHAR_LENGTH)),\n                    arrayBlockOf(createVarcharType(HiveVarchar.MAX_VARCHAR_LENGTH), \"test\")))\n            .add(new TestColumn(\n                    \"t_array_char\",\n                    getStandardListObjectInspector(CHAR_INSPECTOR_LENGTH_10),\n                    ImmutableList.of(new HiveChar(\"test\", 10)),\n                    arrayBlockOf(createCharType(10), \"test\")))\n            .add(new TestColumn(\"t_array_date\",\n                    getStandardListObjectInspector(javaDateObjectInspector),\n                    ImmutableList.of(SQL_DATE),\n                    arrayBlockOf(DateType.DATE, DATE_DAYS)))\n            .add(new TestColumn(\"t_array_timestamp\",\n                    getStandardListObjectInspector(javaTimestampObjectInspector),\n                    ImmutableList.of(new Timestamp(TIMESTAMP)),\n                    StructuralTestUtil.arrayBlockOf(TimestampType.TIMESTAMP, TIMESTAMP)))\n            .add(new TestColumn(\"t_array_decimal_precision_2\",\n                    getStandardListObjectInspector(DECIMAL_INSPECTOR_PRECISION_2),\n                    ImmutableList.of(WRITE_DECIMAL_PRECISION_2),\n                    decimalArrayBlockOf(DECIMAL_TYPE_PRECISION_2, EXPECTED_DECIMAL_PRECISION_2)))\n            .add(new TestColumn(\"t_array_decimal_precision_4\",\n                    getStandardListObjectInspector(DECIMAL_INSPECTOR_PRECISION_4),\n                    ImmutableList.of(WRITE_DECIMAL_PRECISION_4),\n                    decimalArrayBlockOf(DECIMAL_TYPE_PRECISION_4, EXPECTED_DECIMAL_PRECISION_4)))\n            .add(new TestColumn(\"t_array_decimal_precision_8\",\n                    getStandardListObjectInspector(DECIMAL_INSPECTOR_PRECISION_8),\n                    ImmutableList.of(WRITE_DECIMAL_PRECISION_8),\n                    decimalArrayBlockOf(DECIMAL_TYPE_PRECISION_8, EXPECTED_DECIMAL_PRECISION_8)))\n            .add(new TestColumn(\"t_array_decimal_precision_17\",\n                    getStandardListObjectInspector(DECIMAL_INSPECTOR_PRECISION_17),\n                    ImmutableList.of(WRITE_DECIMAL_PRECISION_17),\n                    decimalArrayBlockOf(DECIMAL_TYPE_PRECISION_17, EXPECTED_DECIMAL_PRECISION_17)))\n            .add(new TestColumn(\"t_array_decimal_precision_18\",\n                    getStandardListObjectInspector(DECIMAL_INSPECTOR_PRECISION_18),\n                    ImmutableList.of(WRITE_DECIMAL_PRECISION_18),\n                    decimalArrayBlockOf(DECIMAL_TYPE_PRECISION_18, EXPECTED_DECIMAL_PRECISION_18)))\n            .add(new TestColumn(\"t_array_decimal_precision_38\",\n                    getStandardListObjectInspector(DECIMAL_INSPECTOR_PRECISION_38),\n                    ImmutableList.of(WRITE_DECIMAL_PRECISION_38),\n                    decimalArrayBlockOf(DECIMAL_TYPE_PRECISION_38, EXPECTED_DECIMAL_PRECISION_38)))\n            .add(new TestColumn(\"t_struct_bigint\",\n                    getStandardStructObjectInspector(ImmutableList.of(\"s_bigint\"), ImmutableList.of(javaLongObjectInspector)),\n                    new Long[] {1L},\n                    rowBlockOf(ImmutableList.of(BIGINT), 1)))\n            .add(new TestColumn(\"t_complex\",\n                    getStandardMapObjectInspector(\n                            javaStringObjectInspector,\n                            getStandardListObjectInspector(\n                                    getStandardStructObjectInspector(\n                                            ImmutableList.of(\"s_int\"),\n                                            ImmutableList.of(javaIntObjectInspector)))),\n                    ImmutableMap.of(\"test\", ImmutableList.<Object>of(new Integer[] {1})),\n                    mapBlockOf(createUnboundedVarcharType(), new ArrayType(new RowType(ImmutableList.of(INTEGER), Optional.empty())),\n                            \"test\", arrayBlockOf(new RowType(ImmutableList.of(INTEGER), Optional.empty()), rowBlockOf(ImmutableList.of(INTEGER), 1L)))))\n            .add(new TestColumn(\"t_map_null_key_complex_value\",\n                    getStandardMapObjectInspector(\n                            javaStringObjectInspector,\n                            getStandardMapObjectInspector(javaLongObjectInspector, javaBooleanObjectInspector)),\n                    asMap(new String[] {null, \"k\"}, new ImmutableMap[] {ImmutableMap.of(15L, true), ImmutableMap.of(16L, false)}),\n                    mapBlockOf(createUnboundedVarcharType(), mapType(BIGINT, BOOLEAN), \"k\", mapBlockOf(BIGINT, BOOLEAN, 16L, false))))\n            .add(new TestColumn(\"t_map_null_key_complex_key_value\",\n                    getStandardMapObjectInspector(\n                            getStandardListObjectInspector(javaStringObjectInspector),\n                            getStandardMapObjectInspector(javaLongObjectInspector, javaBooleanObjectInspector)),\n                    asMap(new ImmutableList[] {null, ImmutableList.of(\"k\", \"ka\")}, new ImmutableMap[] {ImmutableMap.of(15L, true), ImmutableMap.of(16L, false)}),\n                    mapBlockOf(new ArrayType(createUnboundedVarcharType()), mapType(BIGINT, BOOLEAN), arrayBlockOf(createUnboundedVarcharType(), \"k\", \"ka\"), mapBlockOf(BIGINT, BOOLEAN, 16L, false))))\n            .add(new TestColumn(\"t_struct_nested\", getStandardStructObjectInspector(ImmutableList.of(\"struct_field\"),\n                    ImmutableList.of(getStandardListObjectInspector(javaStringObjectInspector))), ImmutableList.of(ImmutableList.of(\"1\", \"2\", \"3\")), rowBlockOf(ImmutableList.of(new ArrayType(createUnboundedVarcharType())), arrayBlockOf(createUnboundedVarcharType(), \"1\", \"2\", \"3\"))))\n            .add(new TestColumn(\"t_struct_null\", getStandardStructObjectInspector(ImmutableList.of(\"struct_field_null\", \"struct_field_null2\"),\n                    ImmutableList.of(javaStringObjectInspector, javaStringObjectInspector)), Arrays.asList(null, null), rowBlockOf(ImmutableList.of(createUnboundedVarcharType(), createUnboundedVarcharType()), null, null)))\n            .add(new TestColumn(\"t_struct_non_nulls_after_nulls\", getStandardStructObjectInspector(ImmutableList.of(\"struct_non_nulls_after_nulls1\", \"struct_non_nulls_after_nulls2\"),\n                    ImmutableList.of(javaIntObjectInspector, javaStringObjectInspector)), Arrays.asList(null, \"some string\"), rowBlockOf(ImmutableList.of(INTEGER, createUnboundedVarcharType()), null, \"some string\")))\n            .add(new TestColumn(\"t_nested_struct_non_nulls_after_nulls\",\n                    getStandardStructObjectInspector(\n                            ImmutableList.of(\"struct_field1\", \"struct_field2\", \"strict_field3\"),\n                            ImmutableList.of(\n                                    javaIntObjectInspector,\n                                    javaStringObjectInspector,\n                                    getStandardStructObjectInspector(\n                                            ImmutableList.of(\"nested_struct_field1\", \"nested_struct_field2\"),\n                                            ImmutableList.of(javaIntObjectInspector, javaStringObjectInspector)))),\n                    Arrays.asList(null, \"some string\", Arrays.asList(null, \"nested_string2\")),\n                    rowBlockOf(\n                            ImmutableList.of(\n                                    INTEGER,\n                                    createUnboundedVarcharType(),\n                                    new RowType(ImmutableList.of(INTEGER, createUnboundedVarcharType()), Optional.empty())),\n                            null, \"some string\", rowBlockOf(ImmutableList.of(INTEGER, createUnboundedVarcharType()), null, \"nested_string2\"))))\n            .add(new TestColumn(\"t_map_null_value\",\n                    getStandardMapObjectInspector(javaStringObjectInspector, javaStringObjectInspector),\n                    asMap(new String[] {\"k1\", \"k2\", \"k3\"}, new String[] {\"v1\", null, \"v3\"}),\n                    mapBlockOf(createUnboundedVarcharType(), createUnboundedVarcharType(), new String[] {\"k1\", \"k2\", \"k3\"}, new String[] {\"v1\", null, \"v3\"})))\n            .add(new TestColumn(\"t_array_string_starting_with_nulls\", getStandardListObjectInspector(javaStringObjectInspector), Arrays.asList(null, \"test\"), arrayBlockOf(createUnboundedVarcharType(), null, \"test\")))\n            .add(new TestColumn(\"t_array_string_with_nulls_in_between\", getStandardListObjectInspector(javaStringObjectInspector), Arrays.asList(\"test-1\", null, \"test-2\"), arrayBlockOf(createUnboundedVarcharType(), \"test-1\", null, \"test-2\")))\n            .add(new TestColumn(\"t_array_string_ending_with_nulls\", getStandardListObjectInspector(javaStringObjectInspector), Arrays.asList(\"test\", null), arrayBlockOf(createUnboundedVarcharType(), \"test\", null)))\n            .add(new TestColumn(\"t_array_string_all_nulls\", getStandardListObjectInspector(javaStringObjectInspector), Arrays.asList(null, null, null), arrayBlockOf(createUnboundedVarcharType(), null, null, null)))\n            .build();\n\n    private static <K, V> Map<K, V> asMap(K[] keys, V[] values)\n    {\n        checkArgument(keys.length == values.length, \"array lengths don't match\");\n        Map<K, V> map = new HashMap<>();\n        int len = keys.length;\n        for (int i = 0; i < len; i++) {\n            map.put(keys[i], values[i]);\n        }\n        return map;\n    }\n\n    protected List<HiveColumnHandle> getColumnHandles(List<TestColumn> testColumns)\n    {\n        List<HiveColumnHandle> columns = new ArrayList<>();\n        int nextHiveColumnIndex = 0;\n        for (int i = 0; i < testColumns.size(); i++) {\n            TestColumn testColumn = testColumns.get(i);\n            int columnIndex = testColumn.isPartitionKey() ? -1 : nextHiveColumnIndex++;\n\n            HiveType hiveType = HiveType.valueOf(testColumn.getObjectInspector().getTypeName());\n            columns.add(new HiveColumnHandle(testColumn.getName(), hiveType, hiveType.getTypeSignature(), columnIndex, testColumn.isPartitionKey() ? PARTITION_KEY : REGULAR, Optional.empty()));\n        }\n        return columns;\n    }\n\n    public static FileSplit createTestFile(\n            String filePath,\n            HiveStorageFormat storageFormat,\n            HiveCompressionCodec compressionCodec,\n            List<TestColumn> testColumns,\n            ConnectorSession session,\n            int numRows,\n            HiveFileWriterFactory fileWriterFactory)\n            throws Exception\n    {\n        // filter out partition keys, which are not written to the file\n        testColumns = ImmutableList.copyOf(filter(testColumns, not(TestColumn::isPartitionKey)));\n\n        List<Type> types = testColumns.stream()\n                .map(TestColumn::getType)\n                .map(HiveType::valueOf)\n                .map(type -> type.getType(TYPE_MANAGER))\n                .collect(toList());\n\n        PageBuilder pageBuilder = new PageBuilder(types);\n\n        for (int rowNumber = 0; rowNumber < numRows; rowNumber++) {\n            pageBuilder.declarePosition();\n            for (int columnNumber = 0; columnNumber < testColumns.size(); columnNumber++) {\n                serializeObject(\n                        types.get(columnNumber),\n                        pageBuilder.getBlockBuilder(columnNumber),\n                        testColumns.get(columnNumber).getWriteValue(),\n                        testColumns.get(columnNumber).getObjectInspector(),\n                        false);\n            }\n        }\n        Page page = pageBuilder.build();\n\n        JobConf jobConf = new JobConf();\n        configureCompression(jobConf, compressionCodec);\n\n        Properties tableProperties = new Properties();\n        tableProperties.setProperty(\"columns\", Joiner.on(',').join(transform(testColumns, TestColumn::getName)));\n        tableProperties.setProperty(\"columns.types\", Joiner.on(',').join(transform(testColumns, TestColumn::getType)));\n\n        Optional<HiveFileWriter> fileWriter = fileWriterFactory.createFileWriter(\n                new Path(filePath),\n                testColumns.stream()\n                        .map(TestColumn::getName)\n                        .collect(toList()),\n                StorageFormat.fromHiveStorageFormat(storageFormat),\n                tableProperties,\n                jobConf,\n                session);\n\n        HiveFileWriter hiveFileWriter = fileWriter.orElseThrow(() -> new IllegalArgumentException(\"fileWriterFactory\"));\n        hiveFileWriter.appendRows(page);\n        hiveFileWriter.commit();\n\n        return new FileSplit(new Path(filePath), 0, new File(filePath).length(), new String[0]);\n    }\n\n    public static FileSplit createTestFile(\n            String filePath,\n            HiveStorageFormat storageFormat,\n            HiveCompressionCodec compressionCodec,\n            List<TestColumn> testColumns,\n            int numRows)\n            throws Exception\n    {\n        HiveOutputFormat<?, ?> outputFormat = newInstance(storageFormat.getOutputFormat(), HiveOutputFormat.class);\n        @SuppressWarnings(\"deprecation\") SerDe serDe = newInstance(storageFormat.getSerDe(), SerDe.class);\n\n        // filter out partition keys, which are not written to the file\n        testColumns = ImmutableList.copyOf(filter(testColumns, not(TestColumn::isPartitionKey)));\n\n        Properties tableProperties = new Properties();\n        tableProperties.setProperty(\"columns\", Joiner.on(',').join(transform(testColumns, TestColumn::getName)));\n        tableProperties.setProperty(\"columns.types\", Joiner.on(',').join(transform(testColumns, TestColumn::getType)));\n        serDe.initialize(new Configuration(), tableProperties);\n\n        JobConf jobConf = new JobConf();\n        configureCompression(jobConf, compressionCodec);\n\n        RecordWriter recordWriter = outputFormat.getHiveRecordWriter(\n                jobConf,\n                new Path(filePath),\n                Text.class,\n                compressionCodec != HiveCompressionCodec.NONE,\n                tableProperties,\n                () -> {});\n\n        try {\n            serDe.initialize(new Configuration(), tableProperties);\n\n            SettableStructObjectInspector objectInspector = getStandardStructObjectInspector(\n                    ImmutableList.copyOf(transform(testColumns, TestColumn::getName)),\n                    ImmutableList.copyOf(transform(testColumns, TestColumn::getObjectInspector)));\n\n            Object row = objectInspector.create();\n\n            List<StructField> fields = ImmutableList.copyOf(objectInspector.getAllStructFieldRefs());\n\n            for (int rowNumber = 0; rowNumber < numRows; rowNumber++) {\n                for (int i = 0; i < testColumns.size(); i++) {\n                    Object writeValue = testColumns.get(i).getWriteValue();\n                    if (writeValue instanceof Slice) {\n                        writeValue = ((Slice) writeValue).getBytes();\n                    }\n                    objectInspector.setStructFieldData(row, fields.get(i), writeValue);\n                }\n\n                Writable record = serDe.serialize(row, objectInspector);\n                recordWriter.write(record);\n            }\n        }\n        finally {\n            recordWriter.close(false);\n        }\n\n        // todo to test with compression, the file must be renamed with the compression extension\n        Path path = new Path(filePath);\n        path.getFileSystem(new Configuration()).setVerifyChecksum(true);\n        File file = new File(filePath);\n        return new FileSplit(path, 0, file.length(), new String[0]);\n    }\n\n    private static <T> T newInstance(String className, Class<T> superType)\n            throws ReflectiveOperationException\n    {\n        return HiveStorageFormat.class.getClassLoader().loadClass(className).asSubclass(superType).newInstance();\n    }\n\n    protected void checkCursor(RecordCursor cursor, List<TestColumn> testColumns, int rowCount)\n            throws IOException\n    {\n        for (int row = 0; row < rowCount; row++) {\n            assertTrue(cursor.advanceNextPosition());\n            for (int i = 0, testColumnsSize = testColumns.size(); i < testColumnsSize; i++) {\n                TestColumn testColumn = testColumns.get(i);\n\n                Object fieldFromCursor;\n                Type type = HiveType.valueOf(testColumn.getObjectInspector().getTypeName()).getType(TYPE_MANAGER);\n                if (cursor.isNull(i)) {\n                    fieldFromCursor = null;\n                }\n                else if (BOOLEAN.equals(type)) {\n                    fieldFromCursor = cursor.getBoolean(i);\n                }\n                else if (TINYINT.equals(type)) {\n                    fieldFromCursor = cursor.getLong(i);\n                }\n                else if (SMALLINT.equals(type)) {\n                    fieldFromCursor = cursor.getLong(i);\n                }\n                else if (INTEGER.equals(type)) {\n                    fieldFromCursor = cursor.getLong(i);\n                }\n                else if (BIGINT.equals(type)) {\n                    fieldFromCursor = cursor.getLong(i);\n                }\n                else if (REAL.equals(type)) {\n                    fieldFromCursor = cursor.getLong(i);\n                }\n                else if (DOUBLE.equals(type)) {\n                    fieldFromCursor = cursor.getDouble(i);\n                }\n                else if (isVarcharType(type)) {\n                    fieldFromCursor = cursor.getSlice(i);\n                }\n                else if (isCharType(type)) {\n                    fieldFromCursor = cursor.getSlice(i);\n                }\n                else if (VARBINARY.equals(type)) {\n                    fieldFromCursor = cursor.getSlice(i);\n                }\n                else if (DateType.DATE.equals(type)) {\n                    fieldFromCursor = cursor.getLong(i);\n                }\n                else if (TimestampType.TIMESTAMP.equals(type)) {\n                    fieldFromCursor = cursor.getLong(i);\n                }\n                else if (isStructuralType(type)) {\n                    fieldFromCursor = cursor.getObject(i);\n                }\n                else if (type instanceof DecimalType) {\n                    DecimalType decimalType = (DecimalType) type;\n                    if (decimalType.isShort()) {\n                        fieldFromCursor = new BigDecimal(BigInteger.valueOf(cursor.getLong(i)), decimalType.getScale());\n                    }\n                    else {\n                        fieldFromCursor = new BigDecimal(Decimals.decodeUnscaledValue(cursor.getSlice(i)), decimalType.getScale());\n                    }\n                }\n                else {\n                    throw new RuntimeException(\"unknown type\");\n                }\n\n                if (fieldFromCursor == null) {\n                    assertEquals(null, testColumn.getExpectedValue(), String.format(\"Expected null for column %s\", testColumn.getName()));\n                }\n                else if (testColumn.getObjectInspector().getTypeName().equals(\"float\")) {\n                    int intBits = (int) ((long) fieldFromCursor);\n                    assertEquals(intBitsToFloat(intBits), (float) testColumn.getExpectedValue(), (float) EPSILON);\n                }\n                else if (testColumn.getObjectInspector().getTypeName().equals(\"double\")) {\n                    assertEquals((double) fieldFromCursor, (double) testColumn.getExpectedValue(), EPSILON);\n                }\n                else if (testColumn.getObjectInspector().getTypeName().equals(\"tinyint\")) {\n                    assertEquals(((Number) fieldFromCursor).byteValue(), testColumn.getExpectedValue());\n                }\n                else if (testColumn.getObjectInspector().getTypeName().equals(\"smallint\")) {\n                    assertEquals(((Number) fieldFromCursor).shortValue(), testColumn.getExpectedValue());\n                }\n                else if (testColumn.getObjectInspector().getTypeName().equals(\"int\")) {\n                    assertEquals(((Number) fieldFromCursor).intValue(), testColumn.getExpectedValue());\n                }\n                else if (testColumn.getObjectInspector().getCategory() == Category.PRIMITIVE) {\n                    assertEquals(fieldFromCursor, testColumn.getExpectedValue(), String.format(\"Wrong value for column %s\", testColumn.getName()));\n                }\n                else {\n                    Block expected = (Block) testColumn.getExpectedValue();\n                    Block actual = (Block) fieldFromCursor;\n                    assertBlockEquals(actual, expected, String.format(\"Wrong value for column %s\", testColumn.getName()));\n                }\n            }\n        }\n        assertFalse(cursor.advanceNextPosition());\n    }\n\n    protected void checkPageSource(ConnectorPageSource pageSource, List<TestColumn> testColumns, List<Type> types, int rowCount)\n            throws IOException\n    {\n        try {\n            MaterializedResult result = materializeSourceDataStream(SESSION, pageSource, types);\n            assertEquals(result.getMaterializedRows().size(), rowCount);\n            for (MaterializedRow row : result) {\n                for (int i = 0, testColumnsSize = testColumns.size(); i < testColumnsSize; i++) {\n                    TestColumn testColumn = testColumns.get(i);\n                    Type type = types.get(i);\n\n                    Object actualValue = row.getField(i);\n                    Object expectedValue = testColumn.getExpectedValue();\n\n                    if (expectedValue instanceof Slice) {\n                        expectedValue = ((Slice) expectedValue).toStringUtf8();\n                    }\n\n                    if (actualValue == null || expectedValue == null) {\n                        assertEquals(actualValue, expectedValue, \"Wrong value for column \" + testColumn.getName());\n                    }\n                    else if (testColumn.getObjectInspector().getTypeName().equals(\"float\")) {\n                        assertEquals((float) actualValue, (float) expectedValue, EPSILON, \"Wrong value for column \" + testColumn.getName());\n                    }\n                    else if (testColumn.getObjectInspector().getTypeName().equals(\"double\")) {\n                        assertEquals((double) actualValue, (double) expectedValue, EPSILON, \"Wrong value for column \" + testColumn.getName());\n                    }\n                    else if (testColumn.getObjectInspector().getTypeName().equals(\"date\")) {\n                        SqlDate expectedDate = new SqlDate(((Long) expectedValue).intValue());\n                        assertEquals(actualValue, expectedDate, \"Wrong value for column \" + testColumn.getName());\n                    }\n                    else if (testColumn.getObjectInspector().getTypeName().equals(\"int\") ||\n                            testColumn.getObjectInspector().getTypeName().equals(\"smallint\") ||\n                            testColumn.getObjectInspector().getTypeName().equals(\"tinyint\")) {\n                        assertEquals(actualValue, expectedValue);\n                    }\n                    else if (testColumn.getObjectInspector().getTypeName().equals(\"timestamp\")) {\n                        SqlTimestamp expectedTimestamp = new SqlTimestamp((Long) expectedValue, SESSION.getTimeZoneKey());\n                        assertEquals(actualValue, expectedTimestamp, \"Wrong value for column \" + testColumn.getName());\n                    }\n                    else if (testColumn.getObjectInspector().getTypeName().startsWith(\"char\")) {\n                        assertEquals(actualValue, padEnd((String) expectedValue, ((CharType) type).getLength(), ' '), \"Wrong value for column \" + testColumn.getName());\n                    }\n                    else if (testColumn.getObjectInspector().getCategory() == Category.PRIMITIVE) {\n                        if (expectedValue instanceof Slice) {\n                            expectedValue = ((Slice) expectedValue).toStringUtf8();\n                        }\n\n                        if (actualValue instanceof Slice) {\n                            actualValue = ((Slice) actualValue).toStringUtf8();\n                        }\n                        if (actualValue instanceof SqlVarbinary) {\n                            actualValue = new String(((SqlVarbinary) actualValue).getBytes(), UTF_8);\n                        }\n\n                        if (actualValue instanceof SqlDecimal) {\n                            actualValue = new BigDecimal(actualValue.toString());\n                        }\n                        assertEquals(actualValue, expectedValue, \"Wrong value for column \" + testColumn.getName());\n                    }\n                    else {\n                        BlockBuilder builder = type.createBlockBuilder(new BlockBuilderStatus(), 1);\n                        type.writeObject(builder, expectedValue);\n                        expectedValue = type.getObjectValue(SESSION, builder.build(), 0);\n                        assertEquals(actualValue, expectedValue, \"Wrong value for column \" + testColumn.getName());\n                    }\n                }\n            }\n        }\n        finally {\n            pageSource.close();\n        }\n    }\n\n    private static void assertBlockEquals(Block actual, Block expected, String message)\n    {\n        assertEquals(blockToSlice(actual), blockToSlice(expected), message);\n    }\n\n    private static Slice blockToSlice(Block block)\n    {\n        // This function is strictly for testing use only\n        SliceOutput sliceOutput = new DynamicSliceOutput(1000);\n        BlockSerdeUtil.writeBlock(sliceOutput, block);\n        return sliceOutput.slice();\n    }\n\n    public static final class TestColumn\n    {\n        private final String name;\n        private final ObjectInspector objectInspector;\n        private final Object writeValue;\n        private final Object expectedValue;\n        private final boolean partitionKey;\n\n        public TestColumn(String name, ObjectInspector objectInspector, Object writeValue, Object expectedValue)\n        {\n            this(name, objectInspector, writeValue, expectedValue, false);\n        }\n\n        public TestColumn(String name, ObjectInspector objectInspector, Object writeValue, Object expectedValue, boolean partitionKey)\n        {\n            this.name = requireNonNull(name, \"name is null\");\n            this.objectInspector = requireNonNull(objectInspector, \"objectInspector is null\");\n            this.writeValue = writeValue;\n            this.expectedValue = expectedValue;\n            this.partitionKey = partitionKey;\n        }\n\n        public String getName()\n        {\n            return name;\n        }\n\n        public String getType()\n        {\n            return objectInspector.getTypeName();\n        }\n\n        public ObjectInspector getObjectInspector()\n        {\n            return objectInspector;\n        }\n\n        public Object getWriteValue()\n        {\n            return writeValue;\n        }\n\n        public Object getExpectedValue()\n        {\n            return expectedValue;\n        }\n\n        public boolean isPartitionKey()\n        {\n            return partitionKey;\n        }\n\n        @Override\n        public String toString()\n        {\n            StringBuilder sb = new StringBuilder(\"TestColumn{\");\n            sb.append(\"name='\").append(name).append('\\'');\n            sb.append(\", objectInspector=\").append(objectInspector);\n            sb.append(\", writeValue=\").append(writeValue);\n            sb.append(\", expectedValue=\").append(expectedValue);\n            sb.append(\", partitionKey=\").append(partitionKey);\n            sb.append('}');\n            return sb.toString();\n        }\n    }\n}\n", "methodName": "Slice AbstractTestHiveFileFormats.blockToSlice(Block)", "exampleID": 66, "dataset": "infer", "filepath": "presto-hive/src/test/java/com/facebook/presto/hive/AbstractTestHiveFileFormats.java", "source": "io.airlift.slice.DynamicSliceOutput", "sourceLine": 785, "qualifier": "Resource of type $$io.airlift.slice.DynamicSliceOutput/$ acquired by call to @@new()/@ is not released", "steps": [{"line": 54, "source": "io.airlift.slice.DynamicSliceOutput", "filepath": "presto-main/src/main/java/com/facebook/presto/block/BlockSerdeUtil.java", "methodName": "BlockSerdeUtil.writeBlock", "exampleID": 67}], "line_number": 785, "records": [{"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/block/BlockSerdeUtil.java", "line_number": 54, "column_number": -1, "description": "start of procedure writeBlock(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void BlockSerdeUtil.writeBlock(DynamicSliceOutput,Block)"}, {"tag": "name_id", "value": "com.facebook.presto.block.BlockSerdeUtil.writeBlock(io.airlift.slice.DynamicSliceOutput,com.facebook.77061ab7d3bf052c3d7b51ec2301ffd8"}], "snippet": "    public static void writeBlock(SliceOutput output, Block block)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/block/BlockSerdeUtil.java", "methodName": "writeBlock"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/block/BlockSerdeUtil.java", "line_number": 56, "column_number": -1, "description": "Skipping getEncoding(): abstract method", "node_tags": [], "snippet": "        BlockEncoding encoding = block.getEncoding();", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/block/BlockSerdeUtil.java", "methodName": "writeBlock"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/block/BlockSerdeUtil.java", "line_number": 57, "column_number": -1, "description": "", "node_tags": [], "snippet": "        BlockEncodingManager.writeBlockEncodingInternal(output, encoding);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/block/BlockSerdeUtil.java", "methodName": "writeBlock"}, {"level": 2, "filename": "presto-main/src/main/java/com/facebook/presto/block/BlockEncodingManager.java", "line_number": 116, "column_number": -1, "description": "start of procedure writeBlockEncodingInternal(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void BlockEncodingManager.writeBlockEncodingInternal(SliceOutput,BlockEncoding)"}, {"tag": "name_id", "value": "com.facebook.presto.block.BlockEncodingManager.writeBlockEncodingInternal(io.airlift.slice.SliceOutp.939600c3172e43bdd25d512ded7b8681"}], "snippet": "    public static void writeBlockEncodingInternal(SliceOutput output, BlockEncoding encoding)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/block/BlockEncodingManager.java", "methodName": "writeBlockEncodingInternal"}, {"level": 2, "filename": "presto-main/src/main/java/com/facebook/presto/block/BlockEncodingManager.java", "line_number": 118, "column_number": -1, "description": "", "node_tags": [], "snippet": "        WriteOnlyBlockEncodingManager.INSTANCE.writeBlockEncoding(output, encoding);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/block/BlockEncodingManager.java", "methodName": "writeBlockEncodingInternal"}, {"level": 3, "filename": "presto-main/src/main/java/com/facebook/presto/block/BlockEncodingManager.java", "line_number": 137, "column_number": -1, "description": "start of procedure writeBlockEncoding(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void BlockEncodingManager$WriteOnlyBlockEncodingManager.writeBlockEncoding(SliceOutput,BlockEncoding)"}, {"tag": "name_id", "value": "com.facebook.presto.block.BlockEncodingManager$WriteOnlyBlockEncodingManager.writeBlockEncoding(io.a.0985cc67daedb0ae9c1db787a0e8e649"}], "snippet": "        public void writeBlockEncoding(SliceOutput output, BlockEncoding encoding)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/block/BlockEncodingManager.java", "methodName": "writeBlockEncoding"}, {"level": 3, "filename": "presto-main/src/main/java/com/facebook/presto/block/BlockEncodingManager.java", "line_number": 140, "column_number": -1, "description": "Skipping getName(): abstract method", "node_tags": [], "snippet": "            String encodingName = encoding.getName();", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/block/BlockEncodingManager.java", "methodName": "writeBlockEncoding"}, {"level": 3, "filename": "presto-main/src/main/java/com/facebook/presto/block/BlockEncodingManager.java", "line_number": 143, "column_number": -1, "description": "Skipping getFactory(): abstract method", "node_tags": [], "snippet": "            BlockEncodingFactory<BlockEncoding> blockEncoding = encoding.getFactory();", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/block/BlockEncodingManager.java", "methodName": "writeBlockEncoding"}, {"level": 3, "filename": "presto-main/src/main/java/com/facebook/presto/block/BlockEncodingManager.java", "line_number": 146, "column_number": -1, "description": "", "node_tags": [], "snippet": "            writeLengthPrefixedString(output, encodingName);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/block/BlockEncodingManager.java", "methodName": "writeBlockEncoding"}, {"level": 4, "filename": "presto-main/src/main/java/com/facebook/presto/block/BlockEncodingManager.java", "line_number": 161, "column_number": -1, "description": "start of procedure writeLengthPrefixedString(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void BlockEncodingManager.writeLengthPrefixedString(SliceOutput,String)"}, {"tag": "name_id", "value": "com.facebook.presto.block.BlockEncodingManager.writeLengthPrefixedString(io.airlift.slice.SliceOutpu.095b68644fee0e2da54373c32688f4f7"}], "snippet": "    private static void writeLengthPrefixedString(SliceOutput output, String value)", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/block/BlockEncodingManager.java", "methodName": "writeLengthPrefixedString"}, {"level": 4, "filename": "presto-main/src/main/java/com/facebook/presto/block/BlockEncodingManager.java", "line_number": 163, "column_number": -1, "description": "Skipping getBytes(...): unknown method", "node_tags": [], "snippet": "        byte[] bytes = value.getBytes(UTF_8);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/block/BlockEncodingManager.java", "methodName": "writeLengthPrefixedString"}, {"level": 4, "filename": "presto-main/src/main/java/com/facebook/presto/block/BlockEncodingManager.java", "line_number": 164, "column_number": -1, "description": "Skipping writeInt(...): unknown method", "node_tags": [], "snippet": "        output.writeInt(bytes.length);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/block/BlockEncodingManager.java", "methodName": "writeLengthPrefixedString"}, {"level": 4, "filename": "presto-main/src/main/java/com/facebook/presto/block/BlockEncodingManager.java", "line_number": 165, "column_number": -1, "description": "Skipping writeBytes(...): unknown method", "node_tags": [], "snippet": "        output.writeBytes(bytes);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/block/BlockEncodingManager.java", "methodName": "writeLengthPrefixedString"}, {"level": 4, "filename": "presto-main/src/main/java/com/facebook/presto/block/BlockEncodingManager.java", "line_number": 166, "column_number": -1, "description": "return from a call to void BlockEncodingManager.writeLengthPrefixedString(SliceOutput,String)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "void BlockEncodingManager.writeLengthPrefixedString(SliceOutput,String)"}, {"tag": "name_id", "value": "com.facebook.presto.block.BlockEncodingManager.writeLengthPrefixedString(io.airlift.slice.SliceOutpu.095b68644fee0e2da54373c32688f4f7"}], "snippet": "    }", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/block/BlockEncodingManager.java", "methodName": "writeLengthPrefixedString"}, {"level": 3, "filename": "presto-main/src/main/java/com/facebook/presto/block/BlockEncodingManager.java", "line_number": 149, "column_number": -1, "description": "Skipping writeEncoding(...): abstract method", "node_tags": [], "snippet": "            blockEncoding.writeEncoding(this, output, encoding);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/block/BlockEncodingManager.java", "methodName": "writeBlockEncoding"}, {"level": 3, "filename": "presto-main/src/main/java/com/facebook/presto/block/BlockEncodingManager.java", "line_number": 150, "column_number": -1, "description": "return from a call to void BlockEncodingManager$WriteOnlyBlockEncodingManager.writeBlockEncoding(SliceOutput,BlockEncoding)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "void BlockEncodingManager$WriteOnlyBlockEncodingManager.writeBlockEncoding(SliceOutput,BlockEncoding)"}, {"tag": "name_id", "value": "com.facebook.presto.block.BlockEncodingManager$WriteOnlyBlockEncodingManager.writeBlockEncoding(io.a.0985cc67daedb0ae9c1db787a0e8e649"}], "snippet": "        }", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/block/BlockEncodingManager.java", "methodName": "writeBlockEncoding"}, {"level": 2, "filename": "presto-main/src/main/java/com/facebook/presto/block/BlockEncodingManager.java", "line_number": 119, "column_number": -1, "description": "return from a call to void BlockEncodingManager.writeBlockEncodingInternal(SliceOutput,BlockEncoding)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "void BlockEncodingManager.writeBlockEncodingInternal(SliceOutput,BlockEncoding)"}, {"tag": "name_id", "value": "com.facebook.presto.block.BlockEncodingManager.writeBlockEncodingInternal(io.airlift.slice.SliceOutp.939600c3172e43bdd25d512ded7b8681"}], "snippet": "    }", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/block/BlockEncodingManager.java", "methodName": "writeBlockEncodingInternal"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/block/BlockSerdeUtil.java", "line_number": 58, "column_number": -1, "description": "Skipping writeBlock(...): abstract method", "node_tags": [], "snippet": "        encoding.writeBlock(output, block);", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/block/BlockSerdeUtil.java", "methodName": "writeBlock"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/block/BlockSerdeUtil.java", "line_number": 59, "column_number": -1, "description": "return from a call to void BlockSerdeUtil.writeBlock(DynamicSliceOutput,Block)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "void BlockSerdeUtil.writeBlock(DynamicSliceOutput,Block)"}, {"tag": "name_id", "value": "com.facebook.presto.block.BlockSerdeUtil.writeBlock(io.airlift.slice.DynamicSliceOutput,com.facebook.77061ab7d3bf052c3d7b51ec2301ffd8"}], "snippet": "    }", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/block/BlockSerdeUtil.java", "methodName": "writeBlock"}], "combined_records": [{"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/block/BlockSerdeUtil.java", "line_number": 57, "column_number": -1, "description": "start of procedure writeBlock(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void BlockSerdeUtil.writeBlock(DynamicSliceOutput,Block)"}, {"tag": "name_id", "value": "com.facebook.presto.block.BlockSerdeUtil.writeBlock(io.airlift.slice.DynamicSliceOutput,com.facebook.77061ab7d3bf052c3d7b51ec2301ffd8"}], "snippet": "52.    // This class is only used in LiteralInterpreter for magic literal. Most likely, you shouldn't use it from anywhere else.\n53.    public static void writeBlock(SliceOutput output, Block block)\n54.>     {\n55.        BlockEncoding encoding = block.getEncoding();\n56.>         BlockEncodingManager.writeBlockEncodingInternal(output, encoding);\n57.>         encoding.writeBlock(output, block);\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/block/BlockSerdeUtil.java", "methodName": "writeBlock", "line_numbers": [54, 56, 57]}, {"level": 2, "filename": "presto-main/src/main/java/com/facebook/presto/block/BlockEncodingManager.java", "line_number": 118, "column_number": -1, "description": "start of procedure writeBlockEncodingInternal(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void BlockEncodingManager.writeBlockEncodingInternal(SliceOutput,BlockEncoding)"}, {"tag": "name_id", "value": "com.facebook.presto.block.BlockEncodingManager.writeBlockEncodingInternal(io.airlift.slice.SliceOutp.939600c3172e43bdd25d512ded7b8681"}], "snippet": "114.     */\n115.    public static void writeBlockEncodingInternal(SliceOutput output, BlockEncoding encoding)\n116.>     {\n117.        WriteOnlyBlockEncodingManager.INSTANCE.writeBlockEncoding(output, encoding);\n118.    }\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/block/BlockEncodingManager.java", "methodName": "writeBlockEncodingInternal", "line_numbers": [116, 118]}, {"level": 3, "filename": "presto-main/src/main/java/com/facebook/presto/block/BlockEncodingManager.java", "line_number": 146, "column_number": -1, "description": "start of procedure writeBlockEncoding(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void BlockEncodingManager$WriteOnlyBlockEncodingManager.writeBlockEncoding(SliceOutput,BlockEncoding)"}, {"tag": "name_id", "value": "com.facebook.presto.block.BlockEncodingManager$WriteOnlyBlockEncodingManager.writeBlockEncoding(io.a.0985cc67daedb0ae9c1db787a0e8e649"}], "snippet": "135.        @Override\n136.        public void writeBlockEncoding(SliceOutput output, BlockEncoding encoding)\n137.>         {\n138.            // get the encoding name\n139.            String encodingName = encoding.getName();\n140.> \n141.            // look up the encoding factory\n142.            BlockEncodingFactory<BlockEncoding> blockEncoding = encoding.getFactory();\n143.> \n144.            // write the name to the output\n145.            writeLengthPrefixedString(output, encodingName);\n146.> \n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/block/BlockEncodingManager.java", "methodName": "writeBlockEncoding", "line_numbers": [137, 140, 143, 146]}, {"level": 4, "filename": "presto-main/src/main/java/com/facebook/presto/block/BlockEncodingManager.java", "line_number": 166, "column_number": -1, "description": "start of procedure writeLengthPrefixedString(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void BlockEncodingManager.writeLengthPrefixedString(SliceOutput,String)"}, {"tag": "name_id", "value": "com.facebook.presto.block.BlockEncodingManager.writeLengthPrefixedString(io.airlift.slice.SliceOutpu.095b68644fee0e2da54373c32688f4f7"}], "snippet": "159.\n160.    private static void writeLengthPrefixedString(SliceOutput output, String value)\n161.>     {\n162.        byte[] bytes = value.getBytes(UTF_8);\n163.>         output.writeInt(bytes.length);\n164.>         output.writeBytes(bytes);\n165.    }\n166.}\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/block/BlockEncodingManager.java", "methodName": "writeLengthPrefixedString", "line_numbers": [161, 163, 164, 165, 166]}, {"level": 3, "filename": "presto-main/src/main/java/com/facebook/presto/block/BlockEncodingManager.java", "line_number": 150, "column_number": -1, "description": "Skipping writeEncoding(...): abstract method", "node_tags": [], "snippet": "147.            // write the encoding to the output\n148.            blockEncoding.writeEncoding(this, output, encoding);\n149.        }\n150.    }\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/block/BlockEncodingManager.java", "methodName": "writeBlockEncoding", "line_numbers": [149, 150]}, {"level": 2, "filename": "presto-main/src/main/java/com/facebook/presto/block/BlockEncodingManager.java", "line_number": 119, "column_number": -1, "description": "return from a call to void BlockEncodingManager.writeBlockEncodingInternal(SliceOutput,BlockEncoding)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "void BlockEncodingManager.writeBlockEncodingInternal(SliceOutput,BlockEncoding)"}, {"tag": "name_id", "value": "com.facebook.presto.block.BlockEncodingManager.writeBlockEncodingInternal(io.airlift.slice.SliceOutp.939600c3172e43bdd25d512ded7b8681"}], "snippet": "117.        WriteOnlyBlockEncodingManager.INSTANCE.writeBlockEncoding(output, encoding);\n118.    }\n119.> \n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/block/BlockEncodingManager.java", "methodName": "writeBlockEncodingInternal", "line_numbers": [119]}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/block/BlockSerdeUtil.java", "line_number": 59, "column_number": -1, "description": "Skipping writeBlock(...): abstract method", "node_tags": [], "snippet": "56.        BlockEncodingManager.writeBlockEncodingInternal(output, encoding);\n57.        encoding.writeBlock(output, block);\n58.    }\n59.}\n", "url": "https://github.com/prestodb/presto/blob/b46d506a062f487cc81348f00ebf681cfdc92693/presto-main/src/main/java/com/facebook/presto/block/BlockSerdeUtil.java", "methodName": "writeBlock", "line_numbers": [58, 59]}], "infer_explore": [{"level": 0, "filename": "presto-hive/src/test/java/com/facebook/presto/hive/AbstractTestHiveFileFormats.java", "line_number": 782, "column_number": -1, "description": "start of procedure blockToSlice(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "Slice AbstractTestHiveFileFormats.blockToSlice(Block)"}, {"tag": "name_id", "value": "com.facebook.presto.hive.AbstractTestHiveFileFormats.blockToSlice(com.facebook.presto.spi.block.Bloc.f0cbc95441737e79bd23bfee86d19eb8"}], "snippet": "779.     }\n780. \n781. >     private static Slice blockToSlice(Block block)\n782.     {\n783.         // This function is strictly for testing use only\n"}, {"level": 0, "filename": "presto-hive/src/test/java/com/facebook/presto/hive/AbstractTestHiveFileFormats.java", "line_number": 785, "column_number": -1, "description": "Skipping DynamicSliceOutput(...): unknown method", "node_tags": [], "snippet": "782.     {\n783.         // This function is strictly for testing use only\n784. >         SliceOutput sliceOutput = new DynamicSliceOutput(1000);\n785.         BlockSerdeUtil.writeBlock(sliceOutput, block);\n786.         return sliceOutput.slice();\n"}, {"level": 0, "filename": "presto-hive/src/test/java/com/facebook/presto/hive/AbstractTestHiveFileFormats.java", "line_number": 786, "column_number": -1, "description": "", "node_tags": [], "snippet": "783.         // This function is strictly for testing use only\n784.         SliceOutput sliceOutput = new DynamicSliceOutput(1000);\n785. >         BlockSerdeUtil.writeBlock(sliceOutput, block);\n786.         return sliceOutput.slice();\n787.     }\n"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/block/BlockSerdeUtil.java", "line_number": 54, "column_number": -1, "description": "start of procedure writeBlock(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void BlockSerdeUtil.writeBlock(DynamicSliceOutput,Block)"}, {"tag": "name_id", "value": "com.facebook.presto.block.BlockSerdeUtil.writeBlock(io.airlift.slice.DynamicSliceOutput,com.facebook.77061ab7d3bf052c3d7b51ec2301ffd8"}], "snippet": "51. \n52.     // This class is only used in LiteralInterpreter for magic literal. Most likely, you shouldn't use it from anywhere else.\n53. >     public static void writeBlock(SliceOutput output, Block block)\n54.     {\n55.         BlockEncoding encoding = block.getEncoding();\n"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/block/BlockSerdeUtil.java", "line_number": 56, "column_number": -1, "description": "Skipping getEncoding(): abstract method", "node_tags": [], "snippet": "53.     public static void writeBlock(SliceOutput output, Block block)\n54.     {\n55. >         BlockEncoding encoding = block.getEncoding();\n56.         BlockEncodingManager.writeBlockEncodingInternal(output, encoding);\n57.         encoding.writeBlock(output, block);\n"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/block/BlockSerdeUtil.java", "line_number": 57, "column_number": -1, "description": "", "node_tags": [], "snippet": "54.     {\n55.         BlockEncoding encoding = block.getEncoding();\n56. >         BlockEncodingManager.writeBlockEncodingInternal(output, encoding);\n57.         encoding.writeBlock(output, block);\n58.     }\n"}, {"level": 2, "filename": "presto-main/src/main/java/com/facebook/presto/block/BlockEncodingManager.java", "line_number": 116, "column_number": -1, "description": "start of procedure writeBlockEncodingInternal(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void BlockEncodingManager.writeBlockEncodingInternal(SliceOutput,BlockEncoding)"}, {"tag": "name_id", "value": "com.facebook.presto.block.BlockEncodingManager.writeBlockEncodingInternal(io.airlift.slice.SliceOutp.939600c3172e43bdd25d512ded7b8681"}], "snippet": "113.      * For example, LiteralInterpreter.toExpression serializes data to produce literals.\n114.      */\n115. >     public static void writeBlockEncodingInternal(SliceOutput output, BlockEncoding encoding)\n116.     {\n117.         WriteOnlyBlockEncodingManager.INSTANCE.writeBlockEncoding(output, encoding);\n"}, {"level": 2, "filename": "presto-main/src/main/java/com/facebook/presto/block/BlockEncodingManager.java", "line_number": 118, "column_number": -1, "description": "", "node_tags": [], "snippet": "115.     public static void writeBlockEncodingInternal(SliceOutput output, BlockEncoding encoding)\n116.     {\n117. >         WriteOnlyBlockEncodingManager.INSTANCE.writeBlockEncoding(output, encoding);\n118.     }\n119. \n"}, {"level": 3, "filename": "presto-main/src/main/java/com/facebook/presto/block/BlockEncodingManager.java", "line_number": 137, "column_number": -1, "description": "start of procedure writeBlockEncoding(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void BlockEncodingManager$WriteOnlyBlockEncodingManager.writeBlockEncoding(SliceOutput,BlockEncoding)"}, {"tag": "name_id", "value": "com.facebook.presto.block.BlockEncodingManager$WriteOnlyBlockEncodingManager.writeBlockEncoding(io.a.0985cc67daedb0ae9c1db787a0e8e649"}], "snippet": "134. \n135.         @Override\n136. >         public void writeBlockEncoding(SliceOutput output, BlockEncoding encoding)\n137.         {\n138.             // get the encoding name\n"}, {"level": 3, "filename": "presto-main/src/main/java/com/facebook/presto/block/BlockEncodingManager.java", "line_number": 140, "column_number": -1, "description": "Skipping getName(): abstract method", "node_tags": [], "snippet": "137.         {\n138.             // get the encoding name\n139. >             String encodingName = encoding.getName();\n140. \n141.             // look up the encoding factory\n"}, {"level": 3, "filename": "presto-main/src/main/java/com/facebook/presto/block/BlockEncodingManager.java", "line_number": 143, "column_number": -1, "description": "Skipping getFactory(): abstract method", "node_tags": [], "snippet": "140. \n141.             // look up the encoding factory\n142. >             BlockEncodingFactory<BlockEncoding> blockEncoding = encoding.getFactory();\n143. \n144.             // write the name to the output\n"}, {"level": 3, "filename": "presto-main/src/main/java/com/facebook/presto/block/BlockEncodingManager.java", "line_number": 146, "column_number": -1, "description": "", "node_tags": [], "snippet": "143. \n144.             // write the name to the output\n145. >             writeLengthPrefixedString(output, encodingName);\n146. \n147.             // write the encoding to the output\n"}, {"level": 4, "filename": "presto-main/src/main/java/com/facebook/presto/block/BlockEncodingManager.java", "line_number": 161, "column_number": -1, "description": "start of procedure writeLengthPrefixedString(...)", "node_tags": [{"tag": "kind", "value": "procedure_start"}, {"tag": "name", "value": "void BlockEncodingManager.writeLengthPrefixedString(SliceOutput,String)"}, {"tag": "name_id", "value": "com.facebook.presto.block.BlockEncodingManager.writeLengthPrefixedString(io.airlift.slice.SliceOutpu.095b68644fee0e2da54373c32688f4f7"}], "snippet": "158.     }\n159. \n160. >     private static void writeLengthPrefixedString(SliceOutput output, String value)\n161.     {\n162.         byte[] bytes = value.getBytes(UTF_8);\n"}, {"level": 4, "filename": "presto-main/src/main/java/com/facebook/presto/block/BlockEncodingManager.java", "line_number": 163, "column_number": -1, "description": "Skipping getBytes(...): unknown method", "node_tags": [], "snippet": "160.     private static void writeLengthPrefixedString(SliceOutput output, String value)\n161.     {\n162. >         byte[] bytes = value.getBytes(UTF_8);\n163.         output.writeInt(bytes.length);\n164.         output.writeBytes(bytes);\n"}, {"level": 4, "filename": "presto-main/src/main/java/com/facebook/presto/block/BlockEncodingManager.java", "line_number": 164, "column_number": -1, "description": "Skipping writeInt(...): unknown method", "node_tags": [], "snippet": "161.     {\n162.         byte[] bytes = value.getBytes(UTF_8);\n163. >         output.writeInt(bytes.length);\n164.         output.writeBytes(bytes);\n165.     }\n"}, {"level": 4, "filename": "presto-main/src/main/java/com/facebook/presto/block/BlockEncodingManager.java", "line_number": 165, "column_number": -1, "description": "Skipping writeBytes(...): unknown method", "node_tags": [], "snippet": "162.         byte[] bytes = value.getBytes(UTF_8);\n163.         output.writeInt(bytes.length);\n164. >         output.writeBytes(bytes);\n165.     }\n166. }\n"}, {"level": 4, "filename": "presto-main/src/main/java/com/facebook/presto/block/BlockEncodingManager.java", "line_number": 166, "column_number": -1, "description": "return from a call to void BlockEncodingManager.writeLengthPrefixedString(SliceOutput,String)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "void BlockEncodingManager.writeLengthPrefixedString(SliceOutput,String)"}, {"tag": "name_id", "value": "com.facebook.presto.block.BlockEncodingManager.writeLengthPrefixedString(io.airlift.slice.SliceOutpu.095b68644fee0e2da54373c32688f4f7"}], "snippet": "163.         output.writeInt(bytes.length);\n164.         output.writeBytes(bytes);\n165. >     }\n166. }\n167. \n"}, {"level": 3, "filename": "presto-main/src/main/java/com/facebook/presto/block/BlockEncodingManager.java", "line_number": 149, "column_number": -1, "description": "Skipping writeEncoding(...): abstract method", "node_tags": [], "snippet": "146. \n147.             // write the encoding to the output\n148. >             blockEncoding.writeEncoding(this, output, encoding);\n149.         }\n150.     }\n"}, {"level": 3, "filename": "presto-main/src/main/java/com/facebook/presto/block/BlockEncodingManager.java", "line_number": 150, "column_number": -1, "description": "return from a call to void BlockEncodingManager$WriteOnlyBlockEncodingManager.writeBlockEncoding(SliceOutput,BlockEncoding)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "void BlockEncodingManager$WriteOnlyBlockEncodingManager.writeBlockEncoding(SliceOutput,BlockEncoding)"}, {"tag": "name_id", "value": "com.facebook.presto.block.BlockEncodingManager$WriteOnlyBlockEncodingManager.writeBlockEncoding(io.a.0985cc67daedb0ae9c1db787a0e8e649"}], "snippet": "147.             // write the encoding to the output\n148.             blockEncoding.writeEncoding(this, output, encoding);\n149. >         }\n150.     }\n151. \n"}, {"level": 2, "filename": "presto-main/src/main/java/com/facebook/presto/block/BlockEncodingManager.java", "line_number": 119, "column_number": -1, "description": "return from a call to void BlockEncodingManager.writeBlockEncodingInternal(SliceOutput,BlockEncoding)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "void BlockEncodingManager.writeBlockEncodingInternal(SliceOutput,BlockEncoding)"}, {"tag": "name_id", "value": "com.facebook.presto.block.BlockEncodingManager.writeBlockEncodingInternal(io.airlift.slice.SliceOutp.939600c3172e43bdd25d512ded7b8681"}], "snippet": "116.     {\n117.         WriteOnlyBlockEncodingManager.INSTANCE.writeBlockEncoding(output, encoding);\n118. >     }\n119. \n120.     private static class WriteOnlyBlockEncodingManager\n"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/block/BlockSerdeUtil.java", "line_number": 58, "column_number": -1, "description": "Skipping writeBlock(...): abstract method", "node_tags": [], "snippet": "55.         BlockEncoding encoding = block.getEncoding();\n56.         BlockEncodingManager.writeBlockEncodingInternal(output, encoding);\n57. >         encoding.writeBlock(output, block);\n58.     }\n59. }\n"}, {"level": 1, "filename": "presto-main/src/main/java/com/facebook/presto/block/BlockSerdeUtil.java", "line_number": 59, "column_number": -1, "description": "return from a call to void BlockSerdeUtil.writeBlock(DynamicSliceOutput,Block)", "node_tags": [{"tag": "kind", "value": "procedure_end"}, {"tag": "name", "value": "void BlockSerdeUtil.writeBlock(DynamicSliceOutput,Block)"}, {"tag": "name_id", "value": "com.facebook.presto.block.BlockSerdeUtil.writeBlock(io.airlift.slice.DynamicSliceOutput,com.facebook.77061ab7d3bf052c3d7b51ec2301ffd8"}], "snippet": "56.         BlockEncodingManager.writeBlockEncodingInternal(output, encoding);\n57.         encoding.writeBlock(output, block);\n58. >     }\n59. }\n60. \n"}, {"level": 0, "filename": "presto-hive/src/test/java/com/facebook/presto/hive/AbstractTestHiveFileFormats.java", "line_number": 787, "column_number": -1, "description": "Skipping slice(): unknown method", "node_tags": [], "snippet": "784.         SliceOutput sliceOutput = new DynamicSliceOutput(1000);\n785.         BlockSerdeUtil.writeBlock(sliceOutput, block);\n786. >         return sliceOutput.slice();\n787.     }\n788. \n"}]}]