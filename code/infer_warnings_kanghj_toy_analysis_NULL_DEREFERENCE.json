[{"url": "https://github.com/xxx/toy_analysis/blob/8dab428880c995f4cfe31440cf8720868d4456a4/src/main/java/null_deref/Standard.java", "rawCode": "package null_deref;\n\npublic class Standard {\n\n\tpublic void unsafe() {\n\t\tString nullValue = 1 ==1? null : \"unreachable\";\n\t\tnullValue.contentEquals(\"\");\n\t\tif (nullValue == null) {\n\t\t\tSystem.out.println(\"NPE when performing contentEquals\");\n\t\t}\n\t}\n\t\n\tpublic void safe() {\n\t\tString nullValue = 1 ==1? null : \"unreachable\";\n\t\t\n\t\tif (nullValue == null) {\n\t\t\tSystem.out.println(\"no NPE\");\n\t\t} else {\n\t\t\tnullValue.contentEquals(\"\");\n\t\t}\n\t}\n\t\n\t\n}\n", "methodName": "null_deref.Standard.unsafe():void", "exampleID": 0, "dataset": "infer", "filepath": "src/main/java/null_deref/Standard.java", "line": 7, "sink": "nullValue", "source": "nullValue", "sourceLine": 6, "qualifier": "$$nullValue/$ could be null, and is @@dereferenced/@", "steps": [{"line": 6, "source": "nullValue", "filepath": "src/main/java/null_deref/Standard.java", "methodName": "null_deref.Standard.unsafe():void", "exampleID": 1}], "line_number": 6, "records": [], "combined_records": [], "infer_explore": [{"level": 0, "filename": "src/main/java/null_deref/Standard.java", "line_number": 5, "column_number": -1, "description": "start of procedure unsafe()", "snippet": "2. public class Standard {\n3. \n4. > \tpublic void unsafe() {\n5. \t\tString nullValue = 1 ==1? null : \"unreachable\";\n6. \t\tnullValue.contentEquals(\"\");\n"}, {"level": 0, "filename": "src/main/java/null_deref/Standard.java", "line_number": 6, "column_number": -1, "description": "", "snippet": "3. \n4. \tpublic void unsafe() {\n5. > \t\tString nullValue = 1 ==1? null : \"unreachable\";\n6. \t\tnullValue.contentEquals(\"\");\n7. \t\tif (nullValue == null) {\n"}, {"level": 0, "filename": "src/main/java/null_deref/Standard.java", "line_number": 7, "column_number": -1, "description": "", "snippet": "4. \tpublic void unsafe() {\n5. \t\tString nullValue = 1 ==1? null : \"unreachable\";\n6. > \t\tnullValue.contentEquals(\"\");\n7. \t\tif (nullValue == null) {\n8. \t\t\tSystem.out.println(\"NPE when performing contentEquals\");\n"}]}, {"url": "https://github.com/xxx/toy_analysis/blob/8dab428880c995f4cfe31440cf8720868d4456a4/src/main/java/null_deref/Fields2.java", "rawCode": "package null_deref;\n\npublic class Fields2 {\n\n\n\tpublic void safe(String anotherString) {\n\t\tObjectWithFields obj = new ObjectWithFields(5);\t \n\t\tobj.getNonNull().compareTo(anotherString);\n\t\t// check the source code of `getNonNull` and the constructor of ObjectWithFields to determine if \n\t\t// it is possible for getNonNull to return null;\n\t}\n\t\n\tpublic void safe2() {\n\t\tObjectWithFields obj = new ObjectWithFields(10);\n\t\tobj.getNonNull().toString();\n\t\t// check the source code of `getNonNull` and the constructor of ObjectWithFields to determine if \n\t\t// it is possible for getNonNull to return null;\n\t}\n\t\n\tpublic void unsafe3() {\n\t\tObjectWithFields obj = new ObjectWithFields(10);\t\n\t\tobj.getNullableValue().toString();\n\t\t// check the source code of `getNullableValue` and the constructor of ObjectWithFields to determine if \n\t\t// it is possible for getNullableValue to return null;\n\t}\n\t\n\tpublic void unsafe(String anotherString) {\n\t\tObjectWithFields obj = new ObjectWithFields(5);\n\t\tobj.getNull().compareTo(anotherString);\n\t}\n\t\n\tpublic void unsafe2(String anotherString) {\n\t\tObjectWithFields obj = new ObjectWithFields(1);\n\t\tif (obj.getNull() == null) {\n\t\t\tobj.getNull().compareTo(anotherString);\n\t\t}\n\t}\n\t\n}\n", "methodName": "null_deref.Fields2.safe(java.lang.String):void", "exampleID": 2, "dataset": "infer", "filepath": "src/main/java/null_deref/Fields2.java", "line": 8, "sink": "getNonNull(obj)", "source": "getNonNull(obj)", "sourceLine": 8, "qualifier": "$$getNonNull(obj)/$ could return null, and is @@dereferenced/@", "steps": [{"line": 35, "source": "getNonNull(obj)", "filepath": "src/main/java/null_deref/ObjectWithFields.java", "methodName": "ObjectWithFields.getNonNull", "exampleID": 3}], "line_number": 8, "records": [{"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 35, "column_number": -1, "description": "start of procedure getNonNull()", "snippet": "\tpublic String getNonNull() {", "url": "https://github.com/xxx/toy_analysis/blob/8dab428880c995f4cfe31440cf8720868d4456a4/src/main/java/null_deref/ObjectWithFields.java", "methodName": "getNonNull"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 36, "column_number": -1, "description": "return from a call to String ObjectWithFields.getNonNull()", "snippet": "\t\treturn this.nonNull;", "url": "https://github.com/xxx/toy_analysis/blob/8dab428880c995f4cfe31440cf8720868d4456a4/src/main/java/null_deref/ObjectWithFields.java", "methodName": "getNonNull"}], "combined_records": [{"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 36, "column_number": -1, "description": "start of procedure getNonNull()", "snippet": "32.\t\n33.\tpublic String getNonNull() {\n34.> \t\treturn this.nonNull;\n35.\t}\n", "url": "https://github.com/xxx/toy_analysis/blob/8dab428880c995f4cfe31440cf8720868d4456a4/src/main/java/null_deref/ObjectWithFields.java", "methodName": "getNonNull", "line_numbers": [35, 36]}], "infer_explore": [{"level": 0, "filename": "src/main/java/null_deref/Fields2.java", "line_number": 6, "column_number": -1, "description": "start of procedure safe(...)", "snippet": "3. \n4. \n5. > \tpublic void safe(String anotherString) {\n6. \t\tObjectWithFields obj = new ObjectWithFields(5);\t \n7. \t\tobj.getNonNull().compareTo(anotherString);\n"}, {"level": 0, "filename": "src/main/java/null_deref/Fields2.java", "line_number": 7, "column_number": -1, "description": "", "snippet": "4. \n5. \tpublic void safe(String anotherString) {\n6. > \t\tObjectWithFields obj = new ObjectWithFields(5);\t \n7. \t\tobj.getNonNull().compareTo(anotherString);\n8. \t\t// check the source code of `getNonNull` and the constructor of ObjectWithFields to determine if \n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 9, "column_number": -1, "description": "start of procedure ObjectWithFields(...)", "snippet": "6. \tprivate String nullableValue;\n7. \t\n8. > \tpublic ObjectWithFields(int times) {\n9. \t\tif (times <= 0) throw new RuntimeException();\n10. \t\tStringBuilder sb = new StringBuilder();\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 5, "column_number": -1, "description": "", "snippet": "2. public class ObjectWithFields {\n3. \t\n4. > \tprivate String nonNull = null;\n5. \tprivate final String nullValue = null;\n6. \tprivate String nullableValue;\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 6, "column_number": -1, "description": "", "snippet": "3. \t\n4. \tprivate String nonNull = null;\n5. > \tprivate final String nullValue = null;\n6. \tprivate String nullableValue;\n7. \t\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 10, "column_number": -1, "description": "Taking false branch", "snippet": "7. \t\n8. \tpublic ObjectWithFields(int times) {\n9. > \t\tif (times <= 0) throw new RuntimeException();\n10. \t\tStringBuilder sb = new StringBuilder();\n11. \t\tfor (int i = 0; i < times; i ++) {\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 11, "column_number": -1, "description": "Skipping StringBuilder(): unknown method", "snippet": "8. \tpublic ObjectWithFields(int times) {\n9. \t\tif (times <= 0) throw new RuntimeException();\n10. > \t\tStringBuilder sb = new StringBuilder();\n11. \t\tfor (int i = 0; i < times; i ++) {\n12. \t\t\tsb.append(\"non-empty string\");\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 12, "column_number": -1, "description": "Taking true branch", "snippet": "9. \t\tif (times <= 0) throw new RuntimeException();\n10. \t\tStringBuilder sb = new StringBuilder();\n11. > \t\tfor (int i = 0; i < times; i ++) {\n12. \t\t\tsb.append(\"non-empty string\");\n13. \t\t}\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 13, "column_number": -1, "description": "Skipping append(...): unknown method", "snippet": "10. \t\tStringBuilder sb = new StringBuilder();\n11. \t\tfor (int i = 0; i < times; i ++) {\n12. > \t\t\tsb.append(\"non-empty string\");\n13. \t\t}\n14. \t\tif (sb.length() >= 0) {\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 12, "column_number": -1, "description": "Taking false branch", "snippet": "9. \t\tif (times <= 0) throw new RuntimeException();\n10. \t\tStringBuilder sb = new StringBuilder();\n11. > \t\tfor (int i = 0; i < times; i ++) {\n12. \t\t\tsb.append(\"non-empty string\");\n13. \t\t}\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 15, "column_number": -1, "description": "Taking false branch", "snippet": "12. \t\t\tsb.append(\"non-empty string\");\n13. \t\t}\n14. > \t\tif (sb.length() >= 0) {\n15. \t\t\t// nonNull is always set to be non-null\n16. \t\t\tnonNull = sb.toString();\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 20, "column_number": -1, "description": "", "snippet": "17. \t\t}\n18. \t\t\n19. > \t\tnullableValue = null;\n20. \t}\n21. \t\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 21, "column_number": -1, "description": "return from a call to ObjectWithFields.<init>(int)", "snippet": "18. \t\t\n19. \t\tnullableValue = null;\n20. > \t}\n21. \t\n22. \tpublic void setNullableValue(String value) {\n"}, {"level": 0, "filename": "src/main/java/null_deref/Fields2.java", "line_number": 8, "column_number": -1, "description": "", "snippet": "5. \tpublic void safe(String anotherString) {\n6. \t\tObjectWithFields obj = new ObjectWithFields(5);\t \n7. > \t\tobj.getNonNull().compareTo(anotherString);\n8. \t\t// check the source code of `getNonNull` and the constructor of ObjectWithFields to determine if \n9. \t\t// it is possible for getNonNull to return null;\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 35, "column_number": -1, "description": "start of procedure getNonNull()", "snippet": "32. \t}\n33. \t\n34. > \tpublic String getNonNull() {\n35. \t\treturn this.nonNull;\n36. \t}\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 36, "column_number": -1, "description": "return from a call to String ObjectWithFields.getNonNull()", "snippet": "33. \t\n34. \tpublic String getNonNull() {\n35. > \t\treturn this.nonNull;\n36. \t}\n37. \t\n"}, {"level": 0, "filename": "src/main/java/null_deref/Fields2.java", "line_number": 8, "column_number": -1, "description": "", "snippet": "5. \tpublic void safe(String anotherString) {\n6. \t\tObjectWithFields obj = new ObjectWithFields(5);\t \n7. > \t\tobj.getNonNull().compareTo(anotherString);\n8. \t\t// check the source code of `getNonNull` and the constructor of ObjectWithFields to determine if \n9. \t\t// it is possible for getNonNull to return null;\n"}]}, {"url": "https://github.com/xxx/toy_analysis/blob/8dab428880c995f4cfe31440cf8720868d4456a4/src/main/java/null_deref/Fields.java", "rawCode": "package null_deref;\n\npublic class Fields {\n\n\n\t\n\tpublic void safe(String anotherString) {\n\t\tObjectWithFields obj = new ObjectWithFields(1);\n\t\tobj.getNonNull().compareTo(anotherString);\n\t\t// check the source code of `getNonNull` and the constructor of ObjectWithFields to determine if \n\t\t// it is possible for getNonNull to return null; \n\t}\n\t\n\tpublic void unsafe(String anotherString) {\n\t\tObjectWithFields obj = new ObjectWithFields(1);\n\t\tobj.getNull().compareTo(anotherString);\n\t}\n\t\n\tpublic void unsafe2(String anotherString) {\n\t\tObjectWithFields obj = new ObjectWithFields(1);\n\t\tif (obj.getNull() == null) {\n\t\t\tobj.getNull().equals(anotherString);\n\t\t}\n\t}\n\t\n}\n", "methodName": "null_deref.Fields.safe(java.lang.String):void", "exampleID": 4, "dataset": "infer", "filepath": "src/main/java/null_deref/Fields.java", "line": 9, "sink": "getNonNull(obj)", "source": "getNonNull(obj)", "sourceLine": 9, "qualifier": "$$getNonNull(obj)/$ could return null, and is @@dereferenced/@", "steps": [{"line": 35, "source": "getNonNull(obj)", "filepath": "src/main/java/null_deref/ObjectWithFields.java", "methodName": "ObjectWithFields.getNonNull", "exampleID": 5}], "line_number": 9, "records": [{"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 35, "column_number": -1, "description": "start of procedure getNonNull()", "snippet": "\tpublic String getNonNull() {", "url": "https://github.com/xxx/toy_analysis/blob/8dab428880c995f4cfe31440cf8720868d4456a4/src/main/java/null_deref/ObjectWithFields.java", "methodName": "getNonNull"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 36, "column_number": -1, "description": "return from a call to String ObjectWithFields.getNonNull()", "snippet": "\t\treturn this.nonNull;", "url": "https://github.com/xxx/toy_analysis/blob/8dab428880c995f4cfe31440cf8720868d4456a4/src/main/java/null_deref/ObjectWithFields.java", "methodName": "getNonNull"}], "combined_records": [{"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 36, "column_number": -1, "description": "start of procedure getNonNull()", "snippet": "32.\t\n33.\tpublic String getNonNull() {\n34.> \t\treturn this.nonNull;\n35.\t}\n", "url": "https://github.com/xxx/toy_analysis/blob/8dab428880c995f4cfe31440cf8720868d4456a4/src/main/java/null_deref/ObjectWithFields.java", "methodName": "getNonNull", "line_numbers": [35, 36]}], "infer_explore": [{"level": 0, "filename": "src/main/java/null_deref/Fields.java", "line_number": 7, "column_number": -1, "description": "start of procedure safe(...)", "snippet": "4. \n5. \t\n6. > \tpublic void safe(String anotherString) {\n7. \t\tObjectWithFields obj = new ObjectWithFields(1);\n8. \t\tobj.getNonNull().compareTo(anotherString);\n"}, {"level": 0, "filename": "src/main/java/null_deref/Fields.java", "line_number": 8, "column_number": -1, "description": "", "snippet": "5. \t\n6. \tpublic void safe(String anotherString) {\n7. > \t\tObjectWithFields obj = new ObjectWithFields(1);\n8. \t\tobj.getNonNull().compareTo(anotherString);\n9. \t\t// check the source code of `getNonNull` and the constructor of ObjectWithFields to determine if \n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 9, "column_number": -1, "description": "start of procedure ObjectWithFields(...)", "snippet": "6. \tprivate String nullableValue;\n7. \t\n8. > \tpublic ObjectWithFields(int times) {\n9. \t\tif (times <= 0) throw new RuntimeException();\n10. \t\tStringBuilder sb = new StringBuilder();\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 5, "column_number": -1, "description": "", "snippet": "2. public class ObjectWithFields {\n3. \t\n4. > \tprivate String nonNull = null;\n5. \tprivate final String nullValue = null;\n6. \tprivate String nullableValue;\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 6, "column_number": -1, "description": "", "snippet": "3. \t\n4. \tprivate String nonNull = null;\n5. > \tprivate final String nullValue = null;\n6. \tprivate String nullableValue;\n7. \t\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 10, "column_number": -1, "description": "Taking false branch", "snippet": "7. \t\n8. \tpublic ObjectWithFields(int times) {\n9. > \t\tif (times <= 0) throw new RuntimeException();\n10. \t\tStringBuilder sb = new StringBuilder();\n11. \t\tfor (int i = 0; i < times; i ++) {\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 11, "column_number": -1, "description": "Skipping StringBuilder(): unknown method", "snippet": "8. \tpublic ObjectWithFields(int times) {\n9. \t\tif (times <= 0) throw new RuntimeException();\n10. > \t\tStringBuilder sb = new StringBuilder();\n11. \t\tfor (int i = 0; i < times; i ++) {\n12. \t\t\tsb.append(\"non-empty string\");\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 12, "column_number": -1, "description": "Taking true branch", "snippet": "9. \t\tif (times <= 0) throw new RuntimeException();\n10. \t\tStringBuilder sb = new StringBuilder();\n11. > \t\tfor (int i = 0; i < times; i ++) {\n12. \t\t\tsb.append(\"non-empty string\");\n13. \t\t}\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 13, "column_number": -1, "description": "Skipping append(...): unknown method", "snippet": "10. \t\tStringBuilder sb = new StringBuilder();\n11. \t\tfor (int i = 0; i < times; i ++) {\n12. > \t\t\tsb.append(\"non-empty string\");\n13. \t\t}\n14. \t\tif (sb.length() >= 0) {\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 12, "column_number": -1, "description": "Taking false branch", "snippet": "9. \t\tif (times <= 0) throw new RuntimeException();\n10. \t\tStringBuilder sb = new StringBuilder();\n11. > \t\tfor (int i = 0; i < times; i ++) {\n12. \t\t\tsb.append(\"non-empty string\");\n13. \t\t}\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 15, "column_number": -1, "description": "Taking false branch", "snippet": "12. \t\t\tsb.append(\"non-empty string\");\n13. \t\t}\n14. > \t\tif (sb.length() >= 0) {\n15. \t\t\t// nonNull is always set to be non-null\n16. \t\t\tnonNull = sb.toString();\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 20, "column_number": -1, "description": "", "snippet": "17. \t\t}\n18. \t\t\n19. > \t\tnullableValue = null;\n20. \t}\n21. \t\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 21, "column_number": -1, "description": "return from a call to ObjectWithFields.<init>(int)", "snippet": "18. \t\t\n19. \t\tnullableValue = null;\n20. > \t}\n21. \t\n22. \tpublic void setNullableValue(String value) {\n"}, {"level": 0, "filename": "src/main/java/null_deref/Fields.java", "line_number": 9, "column_number": -1, "description": "", "snippet": "6. \tpublic void safe(String anotherString) {\n7. \t\tObjectWithFields obj = new ObjectWithFields(1);\n8. > \t\tobj.getNonNull().compareTo(anotherString);\n9. \t\t// check the source code of `getNonNull` and the constructor of ObjectWithFields to determine if \n10. \t\t// it is possible for getNonNull to return null; \n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 35, "column_number": -1, "description": "start of procedure getNonNull()", "snippet": "32. \t}\n33. \t\n34. > \tpublic String getNonNull() {\n35. \t\treturn this.nonNull;\n36. \t}\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 36, "column_number": -1, "description": "return from a call to String ObjectWithFields.getNonNull()", "snippet": "33. \t\n34. \tpublic String getNonNull() {\n35. > \t\treturn this.nonNull;\n36. \t}\n37. \t\n"}, {"level": 0, "filename": "src/main/java/null_deref/Fields.java", "line_number": 9, "column_number": -1, "description": "", "snippet": "6. \tpublic void safe(String anotherString) {\n7. \t\tObjectWithFields obj = new ObjectWithFields(1);\n8. > \t\tobj.getNonNull().compareTo(anotherString);\n9. \t\t// check the source code of `getNonNull` and the constructor of ObjectWithFields to determine if \n10. \t\t// it is possible for getNonNull to return null; \n"}]}, {"url": "https://github.com/xxx/toy_analysis/blob/8dab428880c995f4cfe31440cf8720868d4456a4/src/main/java/null_deref/NonStandardNullChecks.java", "rawCode": "package null_deref;\n\nimport java.util.Map;\nimport java.util.Objects;\nimport java.util.function.Supplier;\n\npublic class NonStandardNullChecks {\n\t\n\tpublic void safe() {\n\t\tString nullValue = null;\n\t\tif (Objects.nonNull(nullValue)) {\n\t\t\tnullValue.compareTo(\"since the nonNull check will fail, this block of code is unreachable\");\n\t\t}\n\t}\n\t\n\tpublic String decorateText(Object text) {\n\t\t// simplified from https://github.com/microsoft/azure-maven-plugins\n\t\tSupplier<String> dft = null;\n\t\tString result = null;\n\t\tif (text instanceof String) {\n\t\t\tresult = (String) text;\n\t\t}\n\n\t\treturn Objects.nonNull(dft) ? dft.get() : result;\n\t}\n\n\n\tpublic char[] get(Map<String, String> db, String name) {\n\t\t// simplified from https://github.com/tronprotocol/java-tron\n\t\tString bytesCapsule = db.containsKey(name) ? db.get(name): null;\n\t\tif (Objects.nonNull(bytesCapsule)) {\n\t\t\treturn bytesCapsule.toCharArray();\n\t\t}\n\t\treturn null;\n\t}\n\t\n\tpublic void unsafe() {\n\t\tString nullValue = null;\n\t\tif (Objects.isNull(nullValue)) {\n\t\t\tnullValue.toString();\n\t\t}\n\t}\n\n\n}\n", "methodName": "null_deref.NonStandardNullChecks.safe():void", "exampleID": 6, "dataset": "infer", "filepath": "src/main/java/null_deref/NonStandardNullChecks.java", "line": 12, "sink": "nullValue", "source": "nullValue", "sourceLine": 10, "qualifier": "$$nullValue/$ could be null, and is @@dereferenced/@", "steps": [{"line": 10, "source": "nullValue", "filepath": "src/main/java/null_deref/NonStandardNullChecks.java", "methodName": "null_deref.NonStandardNullChecks.safe():void", "exampleID": 7}], "line_number": 10, "records": [], "combined_records": [], "infer_explore": [{"level": 0, "filename": "src/main/java/null_deref/NonStandardNullChecks.java", "line_number": 9, "column_number": -1, "description": "start of procedure safe()", "snippet": "6. public class NonStandardNullChecks {\n7. \t\n8. > \tpublic void safe() {\n9. \t\tString nullValue = null;\n10. \t\tif (Objects.nonNull(nullValue)) {\n"}, {"level": 0, "filename": "src/main/java/null_deref/NonStandardNullChecks.java", "line_number": 10, "column_number": -1, "description": "", "snippet": "7. \t\n8. \tpublic void safe() {\n9. > \t\tString nullValue = null;\n10. \t\tif (Objects.nonNull(nullValue)) {\n11. \t\t\tnullValue.compareTo(\"since the nonNull check will fail, this block of code is unreachable\");\n"}, {"level": 0, "filename": "src/main/java/null_deref/NonStandardNullChecks.java", "line_number": 11, "column_number": -1, "description": "Taking true branch", "snippet": "8. \tpublic void safe() {\n9. \t\tString nullValue = null;\n10. > \t\tif (Objects.nonNull(nullValue)) {\n11. \t\t\tnullValue.compareTo(\"since the nonNull check will fail, this block of code is unreachable\");\n12. \t\t}\n"}, {"level": 0, "filename": "src/main/java/null_deref/NonStandardNullChecks.java", "line_number": 12, "column_number": -1, "description": "", "snippet": "9. \t\tString nullValue = null;\n10. \t\tif (Objects.nonNull(nullValue)) {\n11. > \t\t\tnullValue.compareTo(\"since the nonNull check will fail, this block of code is unreachable\");\n12. \t\t}\n13. \t}\n"}]}, {"url": "https://github.com/xxx/toy_analysis/blob/8dab428880c995f4cfe31440cf8720868d4456a4/src/main/java/null_deref/EnvUtils.java", "rawCode": "package null_deref;\n\nimport java.util.Arrays;\nimport java.util.List;\nimport java.util.Map;\n\npublic class EnvUtils {\n\tstatic String selfAmoryTag;\n\tstatic String selfVipserverTag;\n\tstatic String selfLocationTag;\n\n\tpublic static void setSelfEnv(Map<String, List<String>> headers) {\n\t\tif (headers != null) {\n\t\t\theaders.put(\"amory\", Arrays.asList(\"hello\"));\n\t\t\tList<String> amoryTagTmp = headers.get(\"amory\");\n\n\t\t\tif (amoryTagTmp == null) {\n\t\t\t\tif (selfAmoryTag != null) {\n\t\t\t\t\tselfAmoryTag = null;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tString amoryTagTmpStr = listToString(amoryTagTmp);\n\t\t\t\tif (!amoryTagTmpStr.equals(selfAmoryTag)) {\n\t\t\t\t\tselfAmoryTag = amoryTagTmpStr;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic static void setVipserver(Map<String, List<String>> headers) {\n\t\tif (headers != null) {\n\t\t\theaders.put(\"vipserver\", Arrays.asList(\"hello\"));\n\t\t\tList<String> vipserverTagTmp = headers.get(\"vipserver\");\n\n\t\t\tif (vipserverTagTmp == null) {\n\t\t\t\tif (selfVipserverTag != null) {\n\t\t\t\t\tselfVipserverTag = null;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tString vipserverTagTmpStr = listToString(vipserverTagTmp);\n\t\t\t\tif (!vipserverTagTmpStr.equals(selfVipserverTag)) {\n\t\t\t\t\tselfVipserverTag = vipserverTagTmpStr;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic static void setLocation(Map<String, List<String>> headers) {\n\t\tif (headers != null) {\n\t\t\theaders.put(\"location\", Arrays.asList(\"hello\"));\n\t\t\tList<String> locationTagTmp = headers.get(\"location\");\n\n\t\t\tif (locationTagTmp == null) {\n\t\t\t\tif (selfLocationTag != null) {\n\t\t\t\t\tselfLocationTag = null;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tString location = listToString(locationTagTmp);\n\t\t\t\tif (!listToString(locationTagTmp).equals(selfLocationTag)) {\n\t\t\t\t\tselfLocationTag = location;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\n\tprivate static String listToString(List<String> list) {\n\t\tif (list == null || list.isEmpty()) {\n\t\t\treturn null;\n\t\t}\n\n\t\tStringBuilder result = new StringBuilder();\n\t\tfor (String string : list) {\n\t\t\tresult.append(string);\n\t\t\tresult.append(',');\n\t\t}\n\t\treturn result.substring(0, result.length() - 1);\n\t}\n}\n", "methodName": "null_deref.EnvUtils.setSelfEnv(java.util.Map):void", "exampleID": 8, "dataset": "infer", "filepath": "src/main/java/null_deref/EnvUtils.java", "line": 23, "sink": "amoryTagTmpStr", "source": "amoryTagTmpStr", "sourceLine": 22, "qualifier": "$$amoryTagTmpStr/$ could be null, and is @@dereferenced/@", "steps": [{"line": 67, "source": "amoryTagTmpStr", "filepath": "src/main/java/null_deref/EnvUtils.java", "methodName": "EnvUtils.listToString", "exampleID": 9}], "line_number": 22, "records": [{"level": 1, "filename": "src/main/java/null_deref/EnvUtils.java", "line_number": 67, "column_number": -1, "description": "start of procedure listToString(...)", "snippet": "\tprivate static String listToString(List<String> list) {", "url": "https://github.com/xxx/toy_analysis/blob/8dab428880c995f4cfe31440cf8720868d4456a4/src/main/java/null_deref/EnvUtils.java", "methodName": "listToString"}, {"level": 1, "filename": "src/main/java/null_deref/EnvUtils.java", "line_number": 68, "column_number": -1, "description": "Taking true branch", "snippet": "\t\tif (list == null || list.isEmpty()) {", "url": "https://github.com/xxx/toy_analysis/blob/8dab428880c995f4cfe31440cf8720868d4456a4/src/main/java/null_deref/EnvUtils.java", "methodName": "listToString"}, {"level": 1, "filename": "src/main/java/null_deref/EnvUtils.java", "line_number": 68, "column_number": -1, "description": "Taking true branch", "snippet": "\t\tif (list == null || list.isEmpty()) {", "url": "https://github.com/xxx/toy_analysis/blob/8dab428880c995f4cfe31440cf8720868d4456a4/src/main/java/null_deref/EnvUtils.java", "methodName": "listToString"}, {"level": 1, "filename": "src/main/java/null_deref/EnvUtils.java", "line_number": 69, "column_number": -1, "description": "", "snippet": "\t\t\treturn null;", "url": "https://github.com/xxx/toy_analysis/blob/8dab428880c995f4cfe31440cf8720868d4456a4/src/main/java/null_deref/EnvUtils.java", "methodName": "listToString"}, {"level": 1, "filename": "src/main/java/null_deref/EnvUtils.java", "line_number": 77, "column_number": -1, "description": "return from a call to String EnvUtils.listToString(List)", "snippet": "\t\treturn result.substring(0, result.length() - 1);", "url": "https://github.com/xxx/toy_analysis/blob/8dab428880c995f4cfe31440cf8720868d4456a4/src/main/java/null_deref/EnvUtils.java", "methodName": "listToString"}], "combined_records": [{"level": 1, "filename": "src/main/java/null_deref/EnvUtils.java", "line_number": 77, "column_number": -1, "description": "start of procedure listToString(...)", "snippet": "64.\n65.\tprivate static String listToString(List<String> list) {\n66.> \t\tif (list == null || list.isEmpty()) {\n67.> \t\t\treturn null;\n68.\t\t}\n69.\n70.\t\tStringBuilder result = new StringBuilder();\n71.\t\tfor (String string : list) {\n72.\t\t\tresult.append(string);\n73.\t\t\tresult.append(',');\n74.\t\t}\n75.\t\treturn result.substring(0, result.length() - 1);\n76.\t}\n", "url": "https://github.com/xxx/toy_analysis/blob/8dab428880c995f4cfe31440cf8720868d4456a4/src/main/java/null_deref/EnvUtils.java", "methodName": "listToString", "line_numbers": [67, 68, 68, 69, 77]}], "infer_explore": [{"level": 0, "filename": "src/main/java/null_deref/EnvUtils.java", "line_number": 12, "column_number": -1, "description": "start of procedure setSelfEnv(...)", "snippet": "9. \tstatic String selfLocationTag;\n10. \n11. > \tpublic static void setSelfEnv(Map<String, List<String>> headers) {\n12. \t\tif (headers != null) {\n13. \t\t\theaders.put(\"amory\", Arrays.asList(\"hello\"));\n"}, {"level": 0, "filename": "src/main/java/null_deref/EnvUtils.java", "line_number": 13, "column_number": -1, "description": "Taking true branch", "snippet": "10. \n11. \tpublic static void setSelfEnv(Map<String, List<String>> headers) {\n12. > \t\tif (headers != null) {\n13. \t\t\theaders.put(\"amory\", Arrays.asList(\"hello\"));\n14. \t\t\tList<String> amoryTagTmp = headers.get(\"amory\");\n"}, {"level": 0, "filename": "src/main/java/null_deref/EnvUtils.java", "line_number": 14, "column_number": -1, "description": "Skipping put(...): unknown method", "snippet": "11. \tpublic static void setSelfEnv(Map<String, List<String>> headers) {\n12. \t\tif (headers != null) {\n13. > \t\t\theaders.put(\"amory\", Arrays.asList(\"hello\"));\n14. \t\t\tList<String> amoryTagTmp = headers.get(\"amory\");\n15. \n"}, {"level": 0, "filename": "src/main/java/null_deref/EnvUtils.java", "line_number": 15, "column_number": -1, "description": "", "snippet": "12. \t\tif (headers != null) {\n13. \t\t\theaders.put(\"amory\", Arrays.asList(\"hello\"));\n14. > \t\t\tList<String> amoryTagTmp = headers.get(\"amory\");\n15. \n16. \t\t\tif (amoryTagTmp == null) {\n"}, {"level": 0, "filename": "src/main/java/null_deref/EnvUtils.java", "line_number": 17, "column_number": -1, "description": "Taking false branch", "snippet": "14. \t\t\tList<String> amoryTagTmp = headers.get(\"amory\");\n15. \n16. > \t\t\tif (amoryTagTmp == null) {\n17. \t\t\t\tif (selfAmoryTag != null) {\n18. \t\t\t\t\tselfAmoryTag = null;\n"}, {"level": 0, "filename": "src/main/java/null_deref/EnvUtils.java", "line_number": 22, "column_number": -1, "description": "", "snippet": "19. \t\t\t\t}\n20. \t\t\t} else {\n21. > \t\t\t\tString amoryTagTmpStr = listToString(amoryTagTmp);\n22. \t\t\t\tif (!amoryTagTmpStr.equals(selfAmoryTag)) {\n23. \t\t\t\t\tselfAmoryTag = amoryTagTmpStr;\n"}, {"level": 1, "filename": "src/main/java/null_deref/EnvUtils.java", "line_number": 67, "column_number": -1, "description": "start of procedure listToString(...)", "snippet": "64. \t\n65. \n66. > \tprivate static String listToString(List<String> list) {\n67. \t\tif (list == null || list.isEmpty()) {\n68. \t\t\treturn null;\n"}, {"level": 1, "filename": "src/main/java/null_deref/EnvUtils.java", "line_number": 68, "column_number": -1, "description": "Taking true branch", "snippet": "65. \n66. \tprivate static String listToString(List<String> list) {\n67. > \t\tif (list == null || list.isEmpty()) {\n68. \t\t\treturn null;\n69. \t\t}\n"}, {"level": 1, "filename": "src/main/java/null_deref/EnvUtils.java", "line_number": 68, "column_number": -1, "description": "Taking true branch", "snippet": "65. \n66. \tprivate static String listToString(List<String> list) {\n67. > \t\tif (list == null || list.isEmpty()) {\n68. \t\t\treturn null;\n69. \t\t}\n"}, {"level": 1, "filename": "src/main/java/null_deref/EnvUtils.java", "line_number": 69, "column_number": -1, "description": "", "snippet": "66. \tprivate static String listToString(List<String> list) {\n67. \t\tif (list == null || list.isEmpty()) {\n68. > \t\t\treturn null;\n69. \t\t}\n70. \n"}, {"level": 1, "filename": "src/main/java/null_deref/EnvUtils.java", "line_number": 77, "column_number": -1, "description": "return from a call to String EnvUtils.listToString(List)", "snippet": "74. \t\t\tresult.append(',');\n75. \t\t}\n76. > \t\treturn result.substring(0, result.length() - 1);\n77. \t}\n78. }\n"}, {"level": 0, "filename": "src/main/java/null_deref/EnvUtils.java", "line_number": 23, "column_number": -1, "description": "", "snippet": "20. \t\t\t} else {\n21. \t\t\t\tString amoryTagTmpStr = listToString(amoryTagTmp);\n22. > \t\t\t\tif (!amoryTagTmpStr.equals(selfAmoryTag)) {\n23. \t\t\t\t\tselfAmoryTag = amoryTagTmpStr;\n24. \t\t\t\t}\n"}]}, {"url": "https://github.com/xxx/toy_analysis/blob/8dab428880c995f4cfe31440cf8720868d4456a4/src/main/java/null_deref/NonStandardNullChecks2.java", "rawCode": "package null_deref;\n\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.nio.charset.StandardCharsets;\nimport java.util.Objects;\n\npublic class NonStandardNullChecks2 {\n\n\tpublic void safe2() {\n\t\tString anotherNull = null;\n\t\tif (Objects.nonNull(anotherNull)) {\n\t\t\tanotherNull.equals(\"with the nonNull guard, this block of code is unreachable\");\n\t\t}\n\t}\n\n\tpublic void unsafe2() {\n\t\tString anotherNull = null;\n\t\tif (Objects.isNull(anotherNull)) {\n\t\t\tanotherNull.toCharArray();\n\t\t}\n\t\n\t}\n\n}\n", "methodName": "null_deref.NonStandardNullChecks2.safe2():void", "exampleID": 10, "dataset": "infer", "filepath": "src/main/java/null_deref/NonStandardNullChecks2.java", "line": 15, "sink": "anotherNull", "source": "anotherNull", "sourceLine": 13, "qualifier": "$$anotherNull/$ could be null, and is @@dereferenced/@", "steps": [{"line": 13, "source": "anotherNull", "filepath": "src/main/java/null_deref/NonStandardNullChecks2.java", "methodName": "null_deref.NonStandardNullChecks2.safe2():void", "exampleID": 11}], "line_number": 13, "records": [], "combined_records": [], "infer_explore": [{"level": 0, "filename": "src/main/java/null_deref/NonStandardNullChecks2.java", "line_number": 12, "column_number": -1, "description": "start of procedure safe2()", "snippet": "9. public class NonStandardNullChecks2 {\n10. \n11. > \tpublic void safe2() {\n12. \t\tString anotherNull = null;\n13. \t\tif (Objects.nonNull(anotherNull)) {\n"}, {"level": 0, "filename": "src/main/java/null_deref/NonStandardNullChecks2.java", "line_number": 13, "column_number": -1, "description": "", "snippet": "10. \n11. \tpublic void safe2() {\n12. > \t\tString anotherNull = null;\n13. \t\tif (Objects.nonNull(anotherNull)) {\n14. \t\t\tanotherNull.equals(\"with the nonNull guard, this block of code is unreachable\");\n"}, {"level": 0, "filename": "src/main/java/null_deref/NonStandardNullChecks2.java", "line_number": 14, "column_number": -1, "description": "Taking true branch", "snippet": "11. \tpublic void safe2() {\n12. \t\tString anotherNull = null;\n13. > \t\tif (Objects.nonNull(anotherNull)) {\n14. \t\t\tanotherNull.equals(\"with the nonNull guard, this block of code is unreachable\");\n15. \t\t}\n"}, {"level": 0, "filename": "src/main/java/null_deref/NonStandardNullChecks2.java", "line_number": 15, "column_number": -1, "description": "", "snippet": "12. \t\tString anotherNull = null;\n13. \t\tif (Objects.nonNull(anotherNull)) {\n14. > \t\t\tanotherNull.equals(\"with the nonNull guard, this block of code is unreachable\");\n15. \t\t}\n16. \t}\n"}]}, {"url": "https://github.com/xxx/toy_analysis/blob/8dab428880c995f4cfe31440cf8720868d4456a4/src/main/java/null_deref/Fields2.java", "rawCode": "package null_deref;\n\npublic class Fields2 {\n\n\n\tpublic void safe(String anotherString) {\n\t\tObjectWithFields obj = new ObjectWithFields(5);\t \n\t\tobj.getNonNull().compareTo(anotherString);\n\t\t// check the source code of `getNonNull` and the constructor of ObjectWithFields to determine if \n\t\t// it is possible for getNonNull to return null;\n\t}\n\t\n\tpublic void safe2() {\n\t\tObjectWithFields obj = new ObjectWithFields(10);\n\t\tobj.getNonNull().toString();\n\t\t// check the source code of `getNonNull` and the constructor of ObjectWithFields to determine if \n\t\t// it is possible for getNonNull to return null;\n\t}\n\t\n\tpublic void unsafe3() {\n\t\tObjectWithFields obj = new ObjectWithFields(10);\t\n\t\tobj.getNullableValue().toString();\n\t\t// check the source code of `getNullableValue` and the constructor of ObjectWithFields to determine if \n\t\t// it is possible for getNullableValue to return null;\n\t}\n\t\n\tpublic void unsafe(String anotherString) {\n\t\tObjectWithFields obj = new ObjectWithFields(5);\n\t\tobj.getNull().compareTo(anotherString);\n\t}\n\t\n\tpublic void unsafe2(String anotherString) {\n\t\tObjectWithFields obj = new ObjectWithFields(1);\n\t\tif (obj.getNull() == null) {\n\t\t\tobj.getNull().compareTo(anotherString);\n\t\t}\n\t}\n\t\n}\n", "methodName": "null_deref.Fields2.safe2():void", "exampleID": 12, "dataset": "infer", "filepath": "src/main/java/null_deref/Fields2.java", "line": 15, "sink": "getNonNull(obj)", "source": "getNonNull(obj)", "sourceLine": 15, "qualifier": "$$getNonNull(obj)/$ could return null, and is @@dereferenced/@", "steps": [{"line": 35, "source": "getNonNull(obj)", "filepath": "src/main/java/null_deref/ObjectWithFields.java", "methodName": "ObjectWithFields.getNonNull", "exampleID": 13}], "line_number": 15, "records": [{"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 35, "column_number": -1, "description": "start of procedure getNonNull()", "snippet": "\tpublic String getNonNull() {", "url": "https://github.com/xxx/toy_analysis/blob/8dab428880c995f4cfe31440cf8720868d4456a4/src/main/java/null_deref/ObjectWithFields.java", "methodName": "getNonNull"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 36, "column_number": -1, "description": "return from a call to String ObjectWithFields.getNonNull()", "snippet": "\t\treturn this.nonNull;", "url": "https://github.com/xxx/toy_analysis/blob/8dab428880c995f4cfe31440cf8720868d4456a4/src/main/java/null_deref/ObjectWithFields.java", "methodName": "getNonNull"}], "combined_records": [{"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 36, "column_number": -1, "description": "start of procedure getNonNull()", "snippet": "32.\t\n33.\tpublic String getNonNull() {\n34.> \t\treturn this.nonNull;\n35.\t}\n", "url": "https://github.com/xxx/toy_analysis/blob/8dab428880c995f4cfe31440cf8720868d4456a4/src/main/java/null_deref/ObjectWithFields.java", "methodName": "getNonNull", "line_numbers": [35, 36]}], "infer_explore": [{"level": 0, "filename": "src/main/java/null_deref/Fields2.java", "line_number": 13, "column_number": -1, "description": "start of procedure safe2()", "snippet": "10. \t}\n11. \t\n12. > \tpublic void safe2() {\n13. \t\tObjectWithFields obj = new ObjectWithFields(10);\n14. \t\tobj.getNonNull().toString();\n"}, {"level": 0, "filename": "src/main/java/null_deref/Fields2.java", "line_number": 14, "column_number": -1, "description": "", "snippet": "11. \t\n12. \tpublic void safe2() {\n13. > \t\tObjectWithFields obj = new ObjectWithFields(10);\n14. \t\tobj.getNonNull().toString();\n15. \t\t// check the source code of `getNonNull` and the constructor of ObjectWithFields to determine if \n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 9, "column_number": -1, "description": "start of procedure ObjectWithFields(...)", "snippet": "6. \tprivate String nullableValue;\n7. \t\n8. > \tpublic ObjectWithFields(int times) {\n9. \t\tif (times <= 0) throw new RuntimeException();\n10. \t\tStringBuilder sb = new StringBuilder();\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 5, "column_number": -1, "description": "", "snippet": "2. public class ObjectWithFields {\n3. \t\n4. > \tprivate String nonNull = null;\n5. \tprivate final String nullValue = null;\n6. \tprivate String nullableValue;\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 6, "column_number": -1, "description": "", "snippet": "3. \t\n4. \tprivate String nonNull = null;\n5. > \tprivate final String nullValue = null;\n6. \tprivate String nullableValue;\n7. \t\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 10, "column_number": -1, "description": "Taking false branch", "snippet": "7. \t\n8. \tpublic ObjectWithFields(int times) {\n9. > \t\tif (times <= 0) throw new RuntimeException();\n10. \t\tStringBuilder sb = new StringBuilder();\n11. \t\tfor (int i = 0; i < times; i ++) {\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 11, "column_number": -1, "description": "Skipping StringBuilder(): unknown method", "snippet": "8. \tpublic ObjectWithFields(int times) {\n9. \t\tif (times <= 0) throw new RuntimeException();\n10. > \t\tStringBuilder sb = new StringBuilder();\n11. \t\tfor (int i = 0; i < times; i ++) {\n12. \t\t\tsb.append(\"non-empty string\");\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 12, "column_number": -1, "description": "Taking true branch", "snippet": "9. \t\tif (times <= 0) throw new RuntimeException();\n10. \t\tStringBuilder sb = new StringBuilder();\n11. > \t\tfor (int i = 0; i < times; i ++) {\n12. \t\t\tsb.append(\"non-empty string\");\n13. \t\t}\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 13, "column_number": -1, "description": "Skipping append(...): unknown method", "snippet": "10. \t\tStringBuilder sb = new StringBuilder();\n11. \t\tfor (int i = 0; i < times; i ++) {\n12. > \t\t\tsb.append(\"non-empty string\");\n13. \t\t}\n14. \t\tif (sb.length() >= 0) {\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 12, "column_number": -1, "description": "Taking false branch", "snippet": "9. \t\tif (times <= 0) throw new RuntimeException();\n10. \t\tStringBuilder sb = new StringBuilder();\n11. > \t\tfor (int i = 0; i < times; i ++) {\n12. \t\t\tsb.append(\"non-empty string\");\n13. \t\t}\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 15, "column_number": -1, "description": "Taking false branch", "snippet": "12. \t\t\tsb.append(\"non-empty string\");\n13. \t\t}\n14. > \t\tif (sb.length() >= 0) {\n15. \t\t\t// nonNull is always set to be non-null\n16. \t\t\tnonNull = sb.toString();\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 20, "column_number": -1, "description": "", "snippet": "17. \t\t}\n18. \t\t\n19. > \t\tnullableValue = null;\n20. \t}\n21. \t\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 21, "column_number": -1, "description": "return from a call to ObjectWithFields.<init>(int)", "snippet": "18. \t\t\n19. \t\tnullableValue = null;\n20. > \t}\n21. \t\n22. \tpublic void setNullableValue(String value) {\n"}, {"level": 0, "filename": "src/main/java/null_deref/Fields2.java", "line_number": 15, "column_number": -1, "description": "", "snippet": "12. \tpublic void safe2() {\n13. \t\tObjectWithFields obj = new ObjectWithFields(10);\n14. > \t\tobj.getNonNull().toString();\n15. \t\t// check the source code of `getNonNull` and the constructor of ObjectWithFields to determine if \n16. \t\t// it is possible for getNonNull to return null;\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 35, "column_number": -1, "description": "start of procedure getNonNull()", "snippet": "32. \t}\n33. \t\n34. > \tpublic String getNonNull() {\n35. \t\treturn this.nonNull;\n36. \t}\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 36, "column_number": -1, "description": "return from a call to String ObjectWithFields.getNonNull()", "snippet": "33. \t\n34. \tpublic String getNonNull() {\n35. > \t\treturn this.nonNull;\n36. \t}\n37. \t\n"}, {"level": 0, "filename": "src/main/java/null_deref/Fields2.java", "line_number": 15, "column_number": -1, "description": "", "snippet": "12. \tpublic void safe2() {\n13. \t\tObjectWithFields obj = new ObjectWithFields(10);\n14. > \t\tobj.getNonNull().toString();\n15. \t\t// check the source code of `getNonNull` and the constructor of ObjectWithFields to determine if \n16. \t\t// it is possible for getNonNull to return null;\n"}]}, {"url": "https://github.com/xxx/toy_analysis/blob/8dab428880c995f4cfe31440cf8720868d4456a4/src/main/java/null_deref/Fields.java", "rawCode": "package null_deref;\n\npublic class Fields {\n\n\n\t\n\tpublic void safe(String anotherString) {\n\t\tObjectWithFields obj = new ObjectWithFields(1);\n\t\tobj.getNonNull().compareTo(anotherString);\n\t\t// check the source code of `getNonNull` and the constructor of ObjectWithFields to determine if \n\t\t// it is possible for getNonNull to return null; \n\t}\n\t\n\tpublic void unsafe(String anotherString) {\n\t\tObjectWithFields obj = new ObjectWithFields(1);\n\t\tobj.getNull().compareTo(anotherString);\n\t}\n\t\n\tpublic void unsafe2(String anotherString) {\n\t\tObjectWithFields obj = new ObjectWithFields(1);\n\t\tif (obj.getNull() == null) {\n\t\t\tobj.getNull().equals(anotherString);\n\t\t}\n\t}\n\t\n}\n", "methodName": "null_deref.Fields.unsafe(java.lang.String):void", "exampleID": 14, "dataset": "infer", "filepath": "src/main/java/null_deref/Fields.java", "line": 16, "sink": "getNull(obj)", "source": "getNull(obj)", "sourceLine": 16, "qualifier": "$$getNull(obj)/$ could return null, and is @@dereferenced/@", "steps": [{"line": 31, "source": "getNull(obj)", "filepath": "src/main/java/null_deref/ObjectWithFields.java", "methodName": "ObjectWithFields.getNull", "exampleID": 15}], "line_number": 16, "records": [{"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 31, "column_number": -1, "description": "start of procedure getNull()", "snippet": "\tpublic String getNull() {", "url": "https://github.com/xxx/toy_analysis/blob/8dab428880c995f4cfe31440cf8720868d4456a4/src/main/java/null_deref/ObjectWithFields.java", "methodName": "getNull"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 32, "column_number": -1, "description": "return from a call to String ObjectWithFields.getNull()", "snippet": "\t\treturn this.nullValue;", "url": "https://github.com/xxx/toy_analysis/blob/8dab428880c995f4cfe31440cf8720868d4456a4/src/main/java/null_deref/ObjectWithFields.java", "methodName": "getNull"}], "combined_records": [{"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 32, "column_number": -1, "description": "start of procedure getNull()", "snippet": "28.\t\n29.\tpublic String getNull() {\n30.> \t\treturn this.nullValue;\n31.\t}\n", "url": "https://github.com/xxx/toy_analysis/blob/8dab428880c995f4cfe31440cf8720868d4456a4/src/main/java/null_deref/ObjectWithFields.java", "methodName": "getNull", "line_numbers": [31, 32]}], "infer_explore": [{"level": 0, "filename": "src/main/java/null_deref/Fields.java", "line_number": 14, "column_number": -1, "description": "start of procedure unsafe(...)", "snippet": "11. \t}\n12. \t\n13. > \tpublic void unsafe(String anotherString) {\n14. \t\tObjectWithFields obj = new ObjectWithFields(1);\n15. \t\tobj.getNull().compareTo(anotherString);\n"}, {"level": 0, "filename": "src/main/java/null_deref/Fields.java", "line_number": 15, "column_number": -1, "description": "", "snippet": "12. \t\n13. \tpublic void unsafe(String anotherString) {\n14. > \t\tObjectWithFields obj = new ObjectWithFields(1);\n15. \t\tobj.getNull().compareTo(anotherString);\n16. \t}\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 9, "column_number": -1, "description": "start of procedure ObjectWithFields(...)", "snippet": "6. \tprivate String nullableValue;\n7. \t\n8. > \tpublic ObjectWithFields(int times) {\n9. \t\tif (times <= 0) throw new RuntimeException();\n10. \t\tStringBuilder sb = new StringBuilder();\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 5, "column_number": -1, "description": "", "snippet": "2. public class ObjectWithFields {\n3. \t\n4. > \tprivate String nonNull = null;\n5. \tprivate final String nullValue = null;\n6. \tprivate String nullableValue;\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 6, "column_number": -1, "description": "", "snippet": "3. \t\n4. \tprivate String nonNull = null;\n5. > \tprivate final String nullValue = null;\n6. \tprivate String nullableValue;\n7. \t\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 10, "column_number": -1, "description": "Taking false branch", "snippet": "7. \t\n8. \tpublic ObjectWithFields(int times) {\n9. > \t\tif (times <= 0) throw new RuntimeException();\n10. \t\tStringBuilder sb = new StringBuilder();\n11. \t\tfor (int i = 0; i < times; i ++) {\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 11, "column_number": -1, "description": "Skipping StringBuilder(): unknown method", "snippet": "8. \tpublic ObjectWithFields(int times) {\n9. \t\tif (times <= 0) throw new RuntimeException();\n10. > \t\tStringBuilder sb = new StringBuilder();\n11. \t\tfor (int i = 0; i < times; i ++) {\n12. \t\t\tsb.append(\"non-empty string\");\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 12, "column_number": -1, "description": "Taking true branch", "snippet": "9. \t\tif (times <= 0) throw new RuntimeException();\n10. \t\tStringBuilder sb = new StringBuilder();\n11. > \t\tfor (int i = 0; i < times; i ++) {\n12. \t\t\tsb.append(\"non-empty string\");\n13. \t\t}\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 13, "column_number": -1, "description": "Skipping append(...): unknown method", "snippet": "10. \t\tStringBuilder sb = new StringBuilder();\n11. \t\tfor (int i = 0; i < times; i ++) {\n12. > \t\t\tsb.append(\"non-empty string\");\n13. \t\t}\n14. \t\tif (sb.length() >= 0) {\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 12, "column_number": -1, "description": "Taking false branch", "snippet": "9. \t\tif (times <= 0) throw new RuntimeException();\n10. \t\tStringBuilder sb = new StringBuilder();\n11. > \t\tfor (int i = 0; i < times; i ++) {\n12. \t\t\tsb.append(\"non-empty string\");\n13. \t\t}\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 15, "column_number": -1, "description": "Taking true branch", "snippet": "12. \t\t\tsb.append(\"non-empty string\");\n13. \t\t}\n14. > \t\tif (sb.length() >= 0) {\n15. \t\t\t// nonNull is always set to be non-null\n16. \t\t\tnonNull = sb.toString();\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 17, "column_number": -1, "description": "", "snippet": "14. \t\tif (sb.length() >= 0) {\n15. \t\t\t// nonNull is always set to be non-null\n16. > \t\t\tnonNull = sb.toString();\n17. \t\t}\n18. \t\t\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 20, "column_number": -1, "description": "", "snippet": "17. \t\t}\n18. \t\t\n19. > \t\tnullableValue = null;\n20. \t}\n21. \t\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 21, "column_number": -1, "description": "return from a call to ObjectWithFields.<init>(int)", "snippet": "18. \t\t\n19. \t\tnullableValue = null;\n20. > \t}\n21. \t\n22. \tpublic void setNullableValue(String value) {\n"}, {"level": 0, "filename": "src/main/java/null_deref/Fields.java", "line_number": 16, "column_number": -1, "description": "", "snippet": "13. \tpublic void unsafe(String anotherString) {\n14. \t\tObjectWithFields obj = new ObjectWithFields(1);\n15. > \t\tobj.getNull().compareTo(anotherString);\n16. \t}\n17. \t\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 31, "column_number": -1, "description": "start of procedure getNull()", "snippet": "28. \t}\n29. \t\n30. > \tpublic String getNull() {\n31. \t\treturn this.nullValue;\n32. \t}\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 32, "column_number": -1, "description": "return from a call to String ObjectWithFields.getNull()", "snippet": "29. \t\n30. \tpublic String getNull() {\n31. > \t\treturn this.nullValue;\n32. \t}\n33. \t\n"}, {"level": 0, "filename": "src/main/java/null_deref/Fields.java", "line_number": 16, "column_number": -1, "description": "", "snippet": "13. \tpublic void unsafe(String anotherString) {\n14. \t\tObjectWithFields obj = new ObjectWithFields(1);\n15. > \t\tobj.getNull().compareTo(anotherString);\n16. \t}\n17. \t\n"}]}, {"url": "https://github.com/xxx/toy_analysis/blob/8dab428880c995f4cfe31440cf8720868d4456a4/src/main/java/null_deref/NonStandardNullChecks.java", "rawCode": "package null_deref;\n\nimport java.util.Map;\nimport java.util.Objects;\nimport java.util.function.Supplier;\n\npublic class NonStandardNullChecks {\n\t\n\tpublic void safe() {\n\t\tString nullValue = null;\n\t\tif (Objects.nonNull(nullValue)) {\n\t\t\tnullValue.compareTo(\"since the nonNull check will fail, this block of code is unreachable\");\n\t\t}\n\t}\n\t\n\tpublic String decorateText(Object text) {\n\t\t// simplified from https://github.com/microsoft/azure-maven-plugins\n\t\tSupplier<String> dft = null;\n\t\tString result = null;\n\t\tif (text instanceof String) {\n\t\t\tresult = (String) text;\n\t\t}\n\n\t\treturn Objects.nonNull(dft) ? dft.get() : result;\n\t}\n\n\n\tpublic char[] get(Map<String, String> db, String name) {\n\t\t// simplified from https://github.com/tronprotocol/java-tron\n\t\tString bytesCapsule = db.containsKey(name) ? db.get(name): null;\n\t\tif (Objects.nonNull(bytesCapsule)) {\n\t\t\treturn bytesCapsule.toCharArray();\n\t\t}\n\t\treturn null;\n\t}\n\t\n\tpublic void unsafe() {\n\t\tString nullValue = null;\n\t\tif (Objects.isNull(nullValue)) {\n\t\t\tnullValue.toString();\n\t\t}\n\t}\n\n\n}\n", "methodName": "null_deref.NonStandardNullChecks.decorateText(java.lang.Object):java.lang.String", "exampleID": 16, "dataset": "infer", "filepath": "src/main/java/null_deref/NonStandardNullChecks.java", "line": 24, "sink": "dft", "source": "dft", "sourceLine": 18, "qualifier": "$$dft/$ could be null, and is @@dereferenced/@", "steps": [{"line": 18, "source": "dft", "filepath": "src/main/java/null_deref/NonStandardNullChecks.java", "methodName": "null_deref.NonStandardNullChecks.decorateText(java.lang.Object):java.lang.String", "exampleID": 17}], "line_number": 18, "records": [], "combined_records": [], "infer_explore": [{"level": 0, "filename": "src/main/java/null_deref/NonStandardNullChecks.java", "line_number": 16, "column_number": -1, "description": "start of procedure decorateText(...)", "snippet": "13. \t}\n14. \t\n15. > \tpublic String decorateText(Object text) {\n16. \t\t// simplified from https://github.com/microsoft/azure-maven-plugins\n17. \t\tSupplier<String> dft = null;\n"}, {"level": 0, "filename": "src/main/java/null_deref/NonStandardNullChecks.java", "line_number": 18, "column_number": -1, "description": "", "snippet": "15. \tpublic String decorateText(Object text) {\n16. \t\t// simplified from https://github.com/microsoft/azure-maven-plugins\n17. > \t\tSupplier<String> dft = null;\n18. \t\tString result = null;\n19. \t\tif (text instanceof String) {\n"}, {"level": 0, "filename": "src/main/java/null_deref/NonStandardNullChecks.java", "line_number": 19, "column_number": -1, "description": "", "snippet": "16. \t\t// simplified from https://github.com/microsoft/azure-maven-plugins\n17. \t\tSupplier<String> dft = null;\n18. > \t\tString result = null;\n19. \t\tif (text instanceof String) {\n20. \t\t\tresult = (String) text;\n"}, {"level": 0, "filename": "src/main/java/null_deref/NonStandardNullChecks.java", "line_number": 20, "column_number": -1, "description": "Taking true branch", "snippet": "17. \t\tSupplier<String> dft = null;\n18. \t\tString result = null;\n19. > \t\tif (text instanceof String) {\n20. \t\t\tresult = (String) text;\n21. \t\t}\n"}, {"level": 0, "filename": "src/main/java/null_deref/NonStandardNullChecks.java", "line_number": 21, "column_number": -1, "description": "", "snippet": "18. \t\tString result = null;\n19. \t\tif (text instanceof String) {\n20. > \t\t\tresult = (String) text;\n21. \t\t}\n22. \n"}, {"level": 0, "filename": "src/main/java/null_deref/NonStandardNullChecks.java", "line_number": 24, "column_number": -1, "description": "Taking true branch", "snippet": "21. \t\t}\n22. \n23. > \t\treturn Objects.nonNull(dft) ? dft.get() : result;\n24. \t}\n25. \n"}]}, {"url": "https://github.com/xxx/toy_analysis/blob/8dab428880c995f4cfe31440cf8720868d4456a4/src/main/java/null_deref/Fields.java", "rawCode": "package null_deref;\n\npublic class Fields {\n\n\n\t\n\tpublic void safe(String anotherString) {\n\t\tObjectWithFields obj = new ObjectWithFields(1);\n\t\tobj.getNonNull().compareTo(anotherString);\n\t\t// check the source code of `getNonNull` and the constructor of ObjectWithFields to determine if \n\t\t// it is possible for getNonNull to return null; \n\t}\n\t\n\tpublic void unsafe(String anotherString) {\n\t\tObjectWithFields obj = new ObjectWithFields(1);\n\t\tobj.getNull().compareTo(anotherString);\n\t}\n\t\n\tpublic void unsafe2(String anotherString) {\n\t\tObjectWithFields obj = new ObjectWithFields(1);\n\t\tif (obj.getNull() == null) {\n\t\t\tobj.getNull().equals(anotherString);\n\t\t}\n\t}\n\t\n}\n", "methodName": "null_deref.Fields.unsafe2(java.lang.String):void", "exampleID": 18, "dataset": "infer", "filepath": "src/main/java/null_deref/Fields.java", "line": 22, "sink": "getNull(obj)", "source": "getNull(obj)", "sourceLine": 22, "qualifier": "$$getNull(obj)/$ could return null, and is @@dereferenced/@", "steps": [{"line": 31, "source": "getNull(obj)", "filepath": "src/main/java/null_deref/ObjectWithFields.java", "methodName": "ObjectWithFields.getNull", "exampleID": 19}], "line_number": 22, "records": [{"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 31, "column_number": -1, "description": "start of procedure getNull()", "snippet": "\tpublic String getNull() {", "url": "https://github.com/xxx/toy_analysis/blob/8dab428880c995f4cfe31440cf8720868d4456a4/src/main/java/null_deref/ObjectWithFields.java", "methodName": "getNull"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 32, "column_number": -1, "description": "return from a call to String ObjectWithFields.getNull()", "snippet": "\t\treturn this.nullValue;", "url": "https://github.com/xxx/toy_analysis/blob/8dab428880c995f4cfe31440cf8720868d4456a4/src/main/java/null_deref/ObjectWithFields.java", "methodName": "getNull"}], "combined_records": [{"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 32, "column_number": -1, "description": "start of procedure getNull()", "snippet": "28.\t\n29.\tpublic String getNull() {\n30.> \t\treturn this.nullValue;\n31.\t}\n", "url": "https://github.com/xxx/toy_analysis/blob/8dab428880c995f4cfe31440cf8720868d4456a4/src/main/java/null_deref/ObjectWithFields.java", "methodName": "getNull", "line_numbers": [31, 32]}], "infer_explore": [{"level": 0, "filename": "src/main/java/null_deref/Fields.java", "line_number": 19, "column_number": -1, "description": "start of procedure unsafe2(...)", "snippet": "16. \t}\n17. \t\n18. > \tpublic void unsafe2(String anotherString) {\n19. \t\tObjectWithFields obj = new ObjectWithFields(1);\n20. \t\tif (obj.getNull() == null) {\n"}, {"level": 0, "filename": "src/main/java/null_deref/Fields.java", "line_number": 20, "column_number": -1, "description": "", "snippet": "17. \t\n18. \tpublic void unsafe2(String anotherString) {\n19. > \t\tObjectWithFields obj = new ObjectWithFields(1);\n20. \t\tif (obj.getNull() == null) {\n21. \t\t\tobj.getNull().equals(anotherString);\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 9, "column_number": -1, "description": "start of procedure ObjectWithFields(...)", "snippet": "6. \tprivate String nullableValue;\n7. \t\n8. > \tpublic ObjectWithFields(int times) {\n9. \t\tif (times <= 0) throw new RuntimeException();\n10. \t\tStringBuilder sb = new StringBuilder();\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 5, "column_number": -1, "description": "", "snippet": "2. public class ObjectWithFields {\n3. \t\n4. > \tprivate String nonNull = null;\n5. \tprivate final String nullValue = null;\n6. \tprivate String nullableValue;\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 6, "column_number": -1, "description": "", "snippet": "3. \t\n4. \tprivate String nonNull = null;\n5. > \tprivate final String nullValue = null;\n6. \tprivate String nullableValue;\n7. \t\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 10, "column_number": -1, "description": "Taking false branch", "snippet": "7. \t\n8. \tpublic ObjectWithFields(int times) {\n9. > \t\tif (times <= 0) throw new RuntimeException();\n10. \t\tStringBuilder sb = new StringBuilder();\n11. \t\tfor (int i = 0; i < times; i ++) {\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 11, "column_number": -1, "description": "Skipping StringBuilder(): unknown method", "snippet": "8. \tpublic ObjectWithFields(int times) {\n9. \t\tif (times <= 0) throw new RuntimeException();\n10. > \t\tStringBuilder sb = new StringBuilder();\n11. \t\tfor (int i = 0; i < times; i ++) {\n12. \t\t\tsb.append(\"non-empty string\");\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 12, "column_number": -1, "description": "Taking true branch", "snippet": "9. \t\tif (times <= 0) throw new RuntimeException();\n10. \t\tStringBuilder sb = new StringBuilder();\n11. > \t\tfor (int i = 0; i < times; i ++) {\n12. \t\t\tsb.append(\"non-empty string\");\n13. \t\t}\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 13, "column_number": -1, "description": "Skipping append(...): unknown method", "snippet": "10. \t\tStringBuilder sb = new StringBuilder();\n11. \t\tfor (int i = 0; i < times; i ++) {\n12. > \t\t\tsb.append(\"non-empty string\");\n13. \t\t}\n14. \t\tif (sb.length() >= 0) {\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 12, "column_number": -1, "description": "Taking false branch", "snippet": "9. \t\tif (times <= 0) throw new RuntimeException();\n10. \t\tStringBuilder sb = new StringBuilder();\n11. > \t\tfor (int i = 0; i < times; i ++) {\n12. \t\t\tsb.append(\"non-empty string\");\n13. \t\t}\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 15, "column_number": -1, "description": "Taking true branch", "snippet": "12. \t\t\tsb.append(\"non-empty string\");\n13. \t\t}\n14. > \t\tif (sb.length() >= 0) {\n15. \t\t\t// nonNull is always set to be non-null\n16. \t\t\tnonNull = sb.toString();\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 17, "column_number": -1, "description": "", "snippet": "14. \t\tif (sb.length() >= 0) {\n15. \t\t\t// nonNull is always set to be non-null\n16. > \t\t\tnonNull = sb.toString();\n17. \t\t}\n18. \t\t\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 20, "column_number": -1, "description": "", "snippet": "17. \t\t}\n18. \t\t\n19. > \t\tnullableValue = null;\n20. \t}\n21. \t\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 21, "column_number": -1, "description": "return from a call to ObjectWithFields.<init>(int)", "snippet": "18. \t\t\n19. \t\tnullableValue = null;\n20. > \t}\n21. \t\n22. \tpublic void setNullableValue(String value) {\n"}, {"level": 0, "filename": "src/main/java/null_deref/Fields.java", "line_number": 21, "column_number": -1, "description": "", "snippet": "18. \tpublic void unsafe2(String anotherString) {\n19. \t\tObjectWithFields obj = new ObjectWithFields(1);\n20. > \t\tif (obj.getNull() == null) {\n21. \t\t\tobj.getNull().equals(anotherString);\n22. \t\t}\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 31, "column_number": -1, "description": "start of procedure getNull()", "snippet": "28. \t}\n29. \t\n30. > \tpublic String getNull() {\n31. \t\treturn this.nullValue;\n32. \t}\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 32, "column_number": -1, "description": "return from a call to String ObjectWithFields.getNull()", "snippet": "29. \t\n30. \tpublic String getNull() {\n31. > \t\treturn this.nullValue;\n32. \t}\n33. \t\n"}, {"level": 0, "filename": "src/main/java/null_deref/Fields.java", "line_number": 21, "column_number": -1, "description": "Taking true branch", "snippet": "18. \tpublic void unsafe2(String anotherString) {\n19. \t\tObjectWithFields obj = new ObjectWithFields(1);\n20. > \t\tif (obj.getNull() == null) {\n21. \t\t\tobj.getNull().equals(anotherString);\n22. \t\t}\n"}, {"level": 0, "filename": "src/main/java/null_deref/Fields.java", "line_number": 22, "column_number": -1, "description": "", "snippet": "19. \t\tObjectWithFields obj = new ObjectWithFields(1);\n20. \t\tif (obj.getNull() == null) {\n21. > \t\t\tobj.getNull().equals(anotherString);\n22. \t\t}\n23. \t}\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 31, "column_number": -1, "description": "start of procedure getNull()", "snippet": "28. \t}\n29. \t\n30. > \tpublic String getNull() {\n31. \t\treturn this.nullValue;\n32. \t}\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 32, "column_number": -1, "description": "return from a call to String ObjectWithFields.getNull()", "snippet": "29. \t\n30. \tpublic String getNull() {\n31. > \t\treturn this.nullValue;\n32. \t}\n33. \t\n"}, {"level": 0, "filename": "src/main/java/null_deref/Fields.java", "line_number": 22, "column_number": -1, "description": "", "snippet": "19. \t\tObjectWithFields obj = new ObjectWithFields(1);\n20. \t\tif (obj.getNull() == null) {\n21. > \t\t\tobj.getNull().equals(anotherString);\n22. \t\t}\n23. \t}\n"}]}, {"url": "https://github.com/xxx/toy_analysis/blob/8dab428880c995f4cfe31440cf8720868d4456a4/src/main/java/null_deref/NonStandardNullChecks2.java", "rawCode": "package null_deref;\n\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.nio.charset.StandardCharsets;\nimport java.util.Objects;\n\npublic class NonStandardNullChecks2 {\n\n\tpublic void safe2() {\n\t\tString anotherNull = null;\n\t\tif (Objects.nonNull(anotherNull)) {\n\t\t\tanotherNull.equals(\"with the nonNull guard, this block of code is unreachable\");\n\t\t}\n\t}\n\n\tpublic void unsafe2() {\n\t\tString anotherNull = null;\n\t\tif (Objects.isNull(anotherNull)) {\n\t\t\tanotherNull.toCharArray();\n\t\t}\n\t\n\t}\n\n}\n", "methodName": "null_deref.NonStandardNullChecks2.unsafe2():void", "exampleID": 20, "dataset": "infer", "filepath": "src/main/java/null_deref/NonStandardNullChecks2.java", "line": 22, "sink": "anotherNull", "source": "anotherNull", "sourceLine": 20, "qualifier": "$$anotherNull/$ could be null, and is @@dereferenced/@", "steps": [{"line": 20, "source": "anotherNull", "filepath": "src/main/java/null_deref/NonStandardNullChecks2.java", "methodName": "null_deref.NonStandardNullChecks2.unsafe2():void", "exampleID": 21}], "line_number": 20, "records": [], "combined_records": [], "infer_explore": [{"level": 0, "filename": "src/main/java/null_deref/NonStandardNullChecks2.java", "line_number": 19, "column_number": -1, "description": "start of procedure unsafe2()", "snippet": "16. \t}\n17. \n18. > \tpublic void unsafe2() {\n19. \t\tString anotherNull = null;\n20. \t\tif (Objects.isNull(anotherNull)) {\n"}, {"level": 0, "filename": "src/main/java/null_deref/NonStandardNullChecks2.java", "line_number": 20, "column_number": -1, "description": "", "snippet": "17. \n18. \tpublic void unsafe2() {\n19. > \t\tString anotherNull = null;\n20. \t\tif (Objects.isNull(anotherNull)) {\n21. \t\t\tanotherNull.toCharArray();\n"}, {"level": 0, "filename": "src/main/java/null_deref/NonStandardNullChecks2.java", "line_number": 21, "column_number": -1, "description": "Taking true branch", "snippet": "18. \tpublic void unsafe2() {\n19. \t\tString anotherNull = null;\n20. > \t\tif (Objects.isNull(anotherNull)) {\n21. \t\t\tanotherNull.toCharArray();\n22. \t\t}\n"}, {"level": 0, "filename": "src/main/java/null_deref/NonStandardNullChecks2.java", "line_number": 22, "column_number": -1, "description": "", "snippet": "19. \t\tString anotherNull = null;\n20. \t\tif (Objects.isNull(anotherNull)) {\n21. > \t\t\tanotherNull.toCharArray();\n22. \t\t}\n23. \t\n"}]}, {"url": "https://github.com/xxx/toy_analysis/blob/8dab428880c995f4cfe31440cf8720868d4456a4/src/main/java/null_deref/Fields2.java", "rawCode": "package null_deref;\n\npublic class Fields2 {\n\n\n\tpublic void safe(String anotherString) {\n\t\tObjectWithFields obj = new ObjectWithFields(5);\t \n\t\tobj.getNonNull().compareTo(anotherString);\n\t\t// check the source code of `getNonNull` and the constructor of ObjectWithFields to determine if \n\t\t// it is possible for getNonNull to return null;\n\t}\n\t\n\tpublic void safe2() {\n\t\tObjectWithFields obj = new ObjectWithFields(10);\n\t\tobj.getNonNull().toString();\n\t\t// check the source code of `getNonNull` and the constructor of ObjectWithFields to determine if \n\t\t// it is possible for getNonNull to return null;\n\t}\n\t\n\tpublic void unsafe3() {\n\t\tObjectWithFields obj = new ObjectWithFields(10);\t\n\t\tobj.getNullableValue().toString();\n\t\t// check the source code of `getNullableValue` and the constructor of ObjectWithFields to determine if \n\t\t// it is possible for getNullableValue to return null;\n\t}\n\t\n\tpublic void unsafe(String anotherString) {\n\t\tObjectWithFields obj = new ObjectWithFields(5);\n\t\tobj.getNull().compareTo(anotherString);\n\t}\n\t\n\tpublic void unsafe2(String anotherString) {\n\t\tObjectWithFields obj = new ObjectWithFields(1);\n\t\tif (obj.getNull() == null) {\n\t\t\tobj.getNull().compareTo(anotherString);\n\t\t}\n\t}\n\t\n}\n", "methodName": "null_deref.Fields2.unsafe3():void", "exampleID": 22, "dataset": "infer", "filepath": "src/main/java/null_deref/Fields2.java", "line": 22, "sink": "getNullableValue(obj)", "source": "getNullableValue(obj)", "sourceLine": 22, "qualifier": "$$getNullableValue(obj)/$ could return null, and is @@dereferenced/@", "steps": [{"line": 27, "source": "getNullableValue(obj)", "filepath": "src/main/java/null_deref/ObjectWithFields.java", "methodName": "ObjectWithFields.getNullableValue", "exampleID": 23}], "line_number": 22, "records": [{"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 27, "column_number": -1, "description": "start of procedure getNullableValue()", "snippet": "\tpublic String getNullableValue() {", "url": "https://github.com/xxx/toy_analysis/blob/8dab428880c995f4cfe31440cf8720868d4456a4/src/main/java/null_deref/ObjectWithFields.java", "methodName": "getNullableValue"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 28, "column_number": -1, "description": "return from a call to String ObjectWithFields.getNullableValue()", "snippet": "\t\treturn nullableValue;", "url": "https://github.com/xxx/toy_analysis/blob/8dab428880c995f4cfe31440cf8720868d4456a4/src/main/java/null_deref/ObjectWithFields.java", "methodName": "getNullableValue"}], "combined_records": [{"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 28, "column_number": -1, "description": "start of procedure getNullableValue()", "snippet": "24.\t\n25.\tpublic String getNullableValue() {\n26.> \t\treturn nullableValue;\n27.\t}\n", "url": "https://github.com/xxx/toy_analysis/blob/8dab428880c995f4cfe31440cf8720868d4456a4/src/main/java/null_deref/ObjectWithFields.java", "methodName": "getNullableValue", "line_numbers": [27, 28]}], "infer_explore": [{"level": 0, "filename": "src/main/java/null_deref/Fields2.java", "line_number": 20, "column_number": -1, "description": "start of procedure unsafe3()", "snippet": "17. \t}\n18. \t\n19. > \tpublic void unsafe3() {\n20. \t\tObjectWithFields obj = new ObjectWithFields(10);\t\n21. \t\tobj.getNullableValue().toString();\n"}, {"level": 0, "filename": "src/main/java/null_deref/Fields2.java", "line_number": 21, "column_number": -1, "description": "", "snippet": "18. \t\n19. \tpublic void unsafe3() {\n20. > \t\tObjectWithFields obj = new ObjectWithFields(10);\t\n21. \t\tobj.getNullableValue().toString();\n22. \t\t// check the source code of `getNullableValue` and the constructor of ObjectWithFields to determine if \n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 9, "column_number": -1, "description": "start of procedure ObjectWithFields(...)", "snippet": "6. \tprivate String nullableValue;\n7. \t\n8. > \tpublic ObjectWithFields(int times) {\n9. \t\tif (times <= 0) throw new RuntimeException();\n10. \t\tStringBuilder sb = new StringBuilder();\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 5, "column_number": -1, "description": "", "snippet": "2. public class ObjectWithFields {\n3. \t\n4. > \tprivate String nonNull = null;\n5. \tprivate final String nullValue = null;\n6. \tprivate String nullableValue;\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 6, "column_number": -1, "description": "", "snippet": "3. \t\n4. \tprivate String nonNull = null;\n5. > \tprivate final String nullValue = null;\n6. \tprivate String nullableValue;\n7. \t\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 10, "column_number": -1, "description": "Taking false branch", "snippet": "7. \t\n8. \tpublic ObjectWithFields(int times) {\n9. > \t\tif (times <= 0) throw new RuntimeException();\n10. \t\tStringBuilder sb = new StringBuilder();\n11. \t\tfor (int i = 0; i < times; i ++) {\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 11, "column_number": -1, "description": "Skipping StringBuilder(): unknown method", "snippet": "8. \tpublic ObjectWithFields(int times) {\n9. \t\tif (times <= 0) throw new RuntimeException();\n10. > \t\tStringBuilder sb = new StringBuilder();\n11. \t\tfor (int i = 0; i < times; i ++) {\n12. \t\t\tsb.append(\"non-empty string\");\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 12, "column_number": -1, "description": "Taking true branch", "snippet": "9. \t\tif (times <= 0) throw new RuntimeException();\n10. \t\tStringBuilder sb = new StringBuilder();\n11. > \t\tfor (int i = 0; i < times; i ++) {\n12. \t\t\tsb.append(\"non-empty string\");\n13. \t\t}\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 13, "column_number": -1, "description": "Skipping append(...): unknown method", "snippet": "10. \t\tStringBuilder sb = new StringBuilder();\n11. \t\tfor (int i = 0; i < times; i ++) {\n12. > \t\t\tsb.append(\"non-empty string\");\n13. \t\t}\n14. \t\tif (sb.length() >= 0) {\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 12, "column_number": -1, "description": "Taking false branch", "snippet": "9. \t\tif (times <= 0) throw new RuntimeException();\n10. \t\tStringBuilder sb = new StringBuilder();\n11. > \t\tfor (int i = 0; i < times; i ++) {\n12. \t\t\tsb.append(\"non-empty string\");\n13. \t\t}\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 15, "column_number": -1, "description": "Taking true branch", "snippet": "12. \t\t\tsb.append(\"non-empty string\");\n13. \t\t}\n14. > \t\tif (sb.length() >= 0) {\n15. \t\t\t// nonNull is always set to be non-null\n16. \t\t\tnonNull = sb.toString();\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 17, "column_number": -1, "description": "", "snippet": "14. \t\tif (sb.length() >= 0) {\n15. \t\t\t// nonNull is always set to be non-null\n16. > \t\t\tnonNull = sb.toString();\n17. \t\t}\n18. \t\t\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 20, "column_number": -1, "description": "", "snippet": "17. \t\t}\n18. \t\t\n19. > \t\tnullableValue = null;\n20. \t}\n21. \t\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 21, "column_number": -1, "description": "return from a call to ObjectWithFields.<init>(int)", "snippet": "18. \t\t\n19. \t\tnullableValue = null;\n20. > \t}\n21. \t\n22. \tpublic void setNullableValue(String value) {\n"}, {"level": 0, "filename": "src/main/java/null_deref/Fields2.java", "line_number": 22, "column_number": -1, "description": "", "snippet": "19. \tpublic void unsafe3() {\n20. \t\tObjectWithFields obj = new ObjectWithFields(10);\t\n21. > \t\tobj.getNullableValue().toString();\n22. \t\t// check the source code of `getNullableValue` and the constructor of ObjectWithFields to determine if \n23. \t\t// it is possible for getNullableValue to return null;\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 27, "column_number": -1, "description": "start of procedure getNullableValue()", "snippet": "24. \t}\n25. \t\n26. > \tpublic String getNullableValue() {\n27. \t\treturn nullableValue;\n28. \t}\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 28, "column_number": -1, "description": "return from a call to String ObjectWithFields.getNullableValue()", "snippet": "25. \t\n26. \tpublic String getNullableValue() {\n27. > \t\treturn nullableValue;\n28. \t}\n29. \t\n"}, {"level": 0, "filename": "src/main/java/null_deref/Fields2.java", "line_number": 22, "column_number": -1, "description": "", "snippet": "19. \tpublic void unsafe3() {\n20. \t\tObjectWithFields obj = new ObjectWithFields(10);\t\n21. > \t\tobj.getNullableValue().toString();\n22. \t\t// check the source code of `getNullableValue` and the constructor of ObjectWithFields to determine if \n23. \t\t// it is possible for getNullableValue to return null;\n"}]}, {"url": "https://github.com/xxx/toy_analysis/blob/8dab428880c995f4cfe31440cf8720868d4456a4/src/main/java/null_deref/Fields2.java", "rawCode": "package null_deref;\n\npublic class Fields2 {\n\n\n\tpublic void safe(String anotherString) {\n\t\tObjectWithFields obj = new ObjectWithFields(5);\t \n\t\tobj.getNonNull().compareTo(anotherString);\n\t\t// check the source code of `getNonNull` and the constructor of ObjectWithFields to determine if \n\t\t// it is possible for getNonNull to return null;\n\t}\n\t\n\tpublic void safe2() {\n\t\tObjectWithFields obj = new ObjectWithFields(10);\n\t\tobj.getNonNull().toString();\n\t\t// check the source code of `getNonNull` and the constructor of ObjectWithFields to determine if \n\t\t// it is possible for getNonNull to return null;\n\t}\n\t\n\tpublic void unsafe3() {\n\t\tObjectWithFields obj = new ObjectWithFields(10);\t\n\t\tobj.getNullableValue().toString();\n\t\t// check the source code of `getNullableValue` and the constructor of ObjectWithFields to determine if \n\t\t// it is possible for getNullableValue to return null;\n\t}\n\t\n\tpublic void unsafe(String anotherString) {\n\t\tObjectWithFields obj = new ObjectWithFields(5);\n\t\tobj.getNull().compareTo(anotherString);\n\t}\n\t\n\tpublic void unsafe2(String anotherString) {\n\t\tObjectWithFields obj = new ObjectWithFields(1);\n\t\tif (obj.getNull() == null) {\n\t\t\tobj.getNull().compareTo(anotherString);\n\t\t}\n\t}\n\t\n}\n", "methodName": "null_deref.Fields2.unsafe(java.lang.String):void", "exampleID": 24, "dataset": "infer", "filepath": "src/main/java/null_deref/Fields2.java", "line": 29, "sink": "getNull(obj)", "source": "getNull(obj)", "sourceLine": 29, "qualifier": "$$getNull(obj)/$ could return null, and is @@dereferenced/@", "steps": [{"line": 31, "source": "getNull(obj)", "filepath": "src/main/java/null_deref/ObjectWithFields.java", "methodName": "ObjectWithFields.getNull", "exampleID": 25}], "line_number": 29, "records": [{"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 31, "column_number": -1, "description": "start of procedure getNull()", "snippet": "\tpublic String getNull() {", "url": "https://github.com/xxx/toy_analysis/blob/8dab428880c995f4cfe31440cf8720868d4456a4/src/main/java/null_deref/ObjectWithFields.java", "methodName": "getNull"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 32, "column_number": -1, "description": "return from a call to String ObjectWithFields.getNull()", "snippet": "\t\treturn this.nullValue;", "url": "https://github.com/xxx/toy_analysis/blob/8dab428880c995f4cfe31440cf8720868d4456a4/src/main/java/null_deref/ObjectWithFields.java", "methodName": "getNull"}], "combined_records": [{"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 32, "column_number": -1, "description": "start of procedure getNull()", "snippet": "28.\t\n29.\tpublic String getNull() {\n30.> \t\treturn this.nullValue;\n31.\t}\n", "url": "https://github.com/xxx/toy_analysis/blob/8dab428880c995f4cfe31440cf8720868d4456a4/src/main/java/null_deref/ObjectWithFields.java", "methodName": "getNull", "line_numbers": [31, 32]}], "infer_explore": [{"level": 0, "filename": "src/main/java/null_deref/Fields2.java", "line_number": 27, "column_number": -1, "description": "start of procedure unsafe(...)", "snippet": "24. \t}\n25. \t\n26. > \tpublic void unsafe(String anotherString) {\n27. \t\tObjectWithFields obj = new ObjectWithFields(5);\n28. \t\tobj.getNull().compareTo(anotherString);\n"}, {"level": 0, "filename": "src/main/java/null_deref/Fields2.java", "line_number": 28, "column_number": -1, "description": "", "snippet": "25. \t\n26. \tpublic void unsafe(String anotherString) {\n27. > \t\tObjectWithFields obj = new ObjectWithFields(5);\n28. \t\tobj.getNull().compareTo(anotherString);\n29. \t}\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 9, "column_number": -1, "description": "start of procedure ObjectWithFields(...)", "snippet": "6. \tprivate String nullableValue;\n7. \t\n8. > \tpublic ObjectWithFields(int times) {\n9. \t\tif (times <= 0) throw new RuntimeException();\n10. \t\tStringBuilder sb = new StringBuilder();\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 5, "column_number": -1, "description": "", "snippet": "2. public class ObjectWithFields {\n3. \t\n4. > \tprivate String nonNull = null;\n5. \tprivate final String nullValue = null;\n6. \tprivate String nullableValue;\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 6, "column_number": -1, "description": "", "snippet": "3. \t\n4. \tprivate String nonNull = null;\n5. > \tprivate final String nullValue = null;\n6. \tprivate String nullableValue;\n7. \t\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 10, "column_number": -1, "description": "Taking false branch", "snippet": "7. \t\n8. \tpublic ObjectWithFields(int times) {\n9. > \t\tif (times <= 0) throw new RuntimeException();\n10. \t\tStringBuilder sb = new StringBuilder();\n11. \t\tfor (int i = 0; i < times; i ++) {\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 11, "column_number": -1, "description": "Skipping StringBuilder(): unknown method", "snippet": "8. \tpublic ObjectWithFields(int times) {\n9. \t\tif (times <= 0) throw new RuntimeException();\n10. > \t\tStringBuilder sb = new StringBuilder();\n11. \t\tfor (int i = 0; i < times; i ++) {\n12. \t\t\tsb.append(\"non-empty string\");\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 12, "column_number": -1, "description": "Taking true branch", "snippet": "9. \t\tif (times <= 0) throw new RuntimeException();\n10. \t\tStringBuilder sb = new StringBuilder();\n11. > \t\tfor (int i = 0; i < times; i ++) {\n12. \t\t\tsb.append(\"non-empty string\");\n13. \t\t}\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 13, "column_number": -1, "description": "Skipping append(...): unknown method", "snippet": "10. \t\tStringBuilder sb = new StringBuilder();\n11. \t\tfor (int i = 0; i < times; i ++) {\n12. > \t\t\tsb.append(\"non-empty string\");\n13. \t\t}\n14. \t\tif (sb.length() >= 0) {\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 12, "column_number": -1, "description": "Taking false branch", "snippet": "9. \t\tif (times <= 0) throw new RuntimeException();\n10. \t\tStringBuilder sb = new StringBuilder();\n11. > \t\tfor (int i = 0; i < times; i ++) {\n12. \t\t\tsb.append(\"non-empty string\");\n13. \t\t}\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 15, "column_number": -1, "description": "Taking true branch", "snippet": "12. \t\t\tsb.append(\"non-empty string\");\n13. \t\t}\n14. > \t\tif (sb.length() >= 0) {\n15. \t\t\t// nonNull is always set to be non-null\n16. \t\t\tnonNull = sb.toString();\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 17, "column_number": -1, "description": "", "snippet": "14. \t\tif (sb.length() >= 0) {\n15. \t\t\t// nonNull is always set to be non-null\n16. > \t\t\tnonNull = sb.toString();\n17. \t\t}\n18. \t\t\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 20, "column_number": -1, "description": "", "snippet": "17. \t\t}\n18. \t\t\n19. > \t\tnullableValue = null;\n20. \t}\n21. \t\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 21, "column_number": -1, "description": "return from a call to ObjectWithFields.<init>(int)", "snippet": "18. \t\t\n19. \t\tnullableValue = null;\n20. > \t}\n21. \t\n22. \tpublic void setNullableValue(String value) {\n"}, {"level": 0, "filename": "src/main/java/null_deref/Fields2.java", "line_number": 29, "column_number": -1, "description": "", "snippet": "26. \tpublic void unsafe(String anotherString) {\n27. \t\tObjectWithFields obj = new ObjectWithFields(5);\n28. > \t\tobj.getNull().compareTo(anotherString);\n29. \t}\n30. \t\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 31, "column_number": -1, "description": "start of procedure getNull()", "snippet": "28. \t}\n29. \t\n30. > \tpublic String getNull() {\n31. \t\treturn this.nullValue;\n32. \t}\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 32, "column_number": -1, "description": "return from a call to String ObjectWithFields.getNull()", "snippet": "29. \t\n30. \tpublic String getNull() {\n31. > \t\treturn this.nullValue;\n32. \t}\n33. \t\n"}, {"level": 0, "filename": "src/main/java/null_deref/Fields2.java", "line_number": 29, "column_number": -1, "description": "", "snippet": "26. \tpublic void unsafe(String anotherString) {\n27. \t\tObjectWithFields obj = new ObjectWithFields(5);\n28. > \t\tobj.getNull().compareTo(anotherString);\n29. \t}\n30. \t\n"}]}, {"url": "https://github.com/xxx/toy_analysis/blob/8dab428880c995f4cfe31440cf8720868d4456a4/src/main/java/null_deref/NonStandardNullChecks.java", "rawCode": "package null_deref;\n\nimport java.util.Map;\nimport java.util.Objects;\nimport java.util.function.Supplier;\n\npublic class NonStandardNullChecks {\n\t\n\tpublic void safe() {\n\t\tString nullValue = null;\n\t\tif (Objects.nonNull(nullValue)) {\n\t\t\tnullValue.compareTo(\"since the nonNull check will fail, this block of code is unreachable\");\n\t\t}\n\t}\n\t\n\tpublic String decorateText(Object text) {\n\t\t// simplified from https://github.com/microsoft/azure-maven-plugins\n\t\tSupplier<String> dft = null;\n\t\tString result = null;\n\t\tif (text instanceof String) {\n\t\t\tresult = (String) text;\n\t\t}\n\n\t\treturn Objects.nonNull(dft) ? dft.get() : result;\n\t}\n\n\n\tpublic char[] get(Map<String, String> db, String name) {\n\t\t// simplified from https://github.com/tronprotocol/java-tron\n\t\tString bytesCapsule = db.containsKey(name) ? db.get(name): null;\n\t\tif (Objects.nonNull(bytesCapsule)) {\n\t\t\treturn bytesCapsule.toCharArray();\n\t\t}\n\t\treturn null;\n\t}\n\t\n\tpublic void unsafe() {\n\t\tString nullValue = null;\n\t\tif (Objects.isNull(nullValue)) {\n\t\t\tnullValue.toString();\n\t\t}\n\t}\n\n\n}\n", "methodName": "null_deref.NonStandardNullChecks.get(java.util.Map,java.lang.String):char[]", "exampleID": 26, "dataset": "infer", "filepath": "src/main/java/null_deref/NonStandardNullChecks.java", "line": 32, "sink": "bytesCapsule", "source": "bytesCapsule", "sourceLine": 30, "qualifier": "$$bytesCapsule/$ could be null, and is @@dereferenced/@", "steps": [{"line": 30, "source": "bytesCapsule", "filepath": "src/main/java/null_deref/NonStandardNullChecks.java", "methodName": "null_deref.NonStandardNullChecks.get(java.util.Map,java.lang.String):char[]", "exampleID": 27}], "line_number": 30, "records": [], "combined_records": [], "infer_explore": [{"level": 0, "filename": "src/main/java/null_deref/NonStandardNullChecks.java", "line_number": 28, "column_number": -1, "description": "start of procedure get(...)", "snippet": "25. \n26. \n27. > \tpublic char[] get(Map<String, String> db, String name) {\n28. \t\t// simplified from https://github.com/tronprotocol/java-tron\n29. \t\tString bytesCapsule = db.containsKey(name) ? db.get(name): null;\n"}, {"level": 0, "filename": "src/main/java/null_deref/NonStandardNullChecks.java", "line_number": 30, "column_number": -1, "description": "Taking false branch", "snippet": "27. \tpublic char[] get(Map<String, String> db, String name) {\n28. \t\t// simplified from https://github.com/tronprotocol/java-tron\n29. > \t\tString bytesCapsule = db.containsKey(name) ? db.get(name): null;\n30. \t\tif (Objects.nonNull(bytesCapsule)) {\n31. \t\t\treturn bytesCapsule.toCharArray();\n"}, {"level": 0, "filename": "src/main/java/null_deref/NonStandardNullChecks.java", "line_number": 31, "column_number": -1, "description": "Taking true branch", "snippet": "28. \t\t// simplified from https://github.com/tronprotocol/java-tron\n29. \t\tString bytesCapsule = db.containsKey(name) ? db.get(name): null;\n30. > \t\tif (Objects.nonNull(bytesCapsule)) {\n31. \t\t\treturn bytesCapsule.toCharArray();\n32. \t\t}\n"}, {"level": 0, "filename": "src/main/java/null_deref/NonStandardNullChecks.java", "line_number": 32, "column_number": -1, "description": "", "snippet": "29. \t\tString bytesCapsule = db.containsKey(name) ? db.get(name): null;\n30. \t\tif (Objects.nonNull(bytesCapsule)) {\n31. > \t\t\treturn bytesCapsule.toCharArray();\n32. \t\t}\n33. \t\treturn null;\n"}]}, {"url": "https://github.com/xxx/toy_analysis/blob/8dab428880c995f4cfe31440cf8720868d4456a4/src/main/java/null_deref/EnvUtils.java", "rawCode": "package null_deref;\n\nimport java.util.Arrays;\nimport java.util.List;\nimport java.util.Map;\n\npublic class EnvUtils {\n\tstatic String selfAmoryTag;\n\tstatic String selfVipserverTag;\n\tstatic String selfLocationTag;\n\n\tpublic static void setSelfEnv(Map<String, List<String>> headers) {\n\t\tif (headers != null) {\n\t\t\theaders.put(\"amory\", Arrays.asList(\"hello\"));\n\t\t\tList<String> amoryTagTmp = headers.get(\"amory\");\n\n\t\t\tif (amoryTagTmp == null) {\n\t\t\t\tif (selfAmoryTag != null) {\n\t\t\t\t\tselfAmoryTag = null;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tString amoryTagTmpStr = listToString(amoryTagTmp);\n\t\t\t\tif (!amoryTagTmpStr.equals(selfAmoryTag)) {\n\t\t\t\t\tselfAmoryTag = amoryTagTmpStr;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic static void setVipserver(Map<String, List<String>> headers) {\n\t\tif (headers != null) {\n\t\t\theaders.put(\"vipserver\", Arrays.asList(\"hello\"));\n\t\t\tList<String> vipserverTagTmp = headers.get(\"vipserver\");\n\n\t\t\tif (vipserverTagTmp == null) {\n\t\t\t\tif (selfVipserverTag != null) {\n\t\t\t\t\tselfVipserverTag = null;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tString vipserverTagTmpStr = listToString(vipserverTagTmp);\n\t\t\t\tif (!vipserverTagTmpStr.equals(selfVipserverTag)) {\n\t\t\t\t\tselfVipserverTag = vipserverTagTmpStr;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic static void setLocation(Map<String, List<String>> headers) {\n\t\tif (headers != null) {\n\t\t\theaders.put(\"location\", Arrays.asList(\"hello\"));\n\t\t\tList<String> locationTagTmp = headers.get(\"location\");\n\n\t\t\tif (locationTagTmp == null) {\n\t\t\t\tif (selfLocationTag != null) {\n\t\t\t\t\tselfLocationTag = null;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tString location = listToString(locationTagTmp);\n\t\t\t\tif (!listToString(locationTagTmp).equals(selfLocationTag)) {\n\t\t\t\t\tselfLocationTag = location;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\n\tprivate static String listToString(List<String> list) {\n\t\tif (list == null || list.isEmpty()) {\n\t\t\treturn null;\n\t\t}\n\n\t\tStringBuilder result = new StringBuilder();\n\t\tfor (String string : list) {\n\t\t\tresult.append(string);\n\t\t\tresult.append(',');\n\t\t}\n\t\treturn result.substring(0, result.length() - 1);\n\t}\n}\n", "methodName": "null_deref.EnvUtils.setVipserver(java.util.Map):void", "exampleID": 28, "dataset": "infer", "filepath": "src/main/java/null_deref/EnvUtils.java", "line": 41, "sink": "vipserverTagTmpStr", "source": "vipserverTagTmpStr", "sourceLine": 40, "qualifier": "$$vipserverTagTmpStr/$ could be null, and is @@dereferenced/@", "steps": [{"line": 67, "source": "vipserverTagTmpStr", "filepath": "src/main/java/null_deref/EnvUtils.java", "methodName": "EnvUtils.listToString", "exampleID": 29}], "line_number": 40, "records": [{"level": 1, "filename": "src/main/java/null_deref/EnvUtils.java", "line_number": 67, "column_number": -1, "description": "start of procedure listToString(...)", "snippet": "\tprivate static String listToString(List<String> list) {", "url": "https://github.com/xxx/toy_analysis/blob/8dab428880c995f4cfe31440cf8720868d4456a4/src/main/java/null_deref/EnvUtils.java", "methodName": "listToString"}, {"level": 1, "filename": "src/main/java/null_deref/EnvUtils.java", "line_number": 68, "column_number": -1, "description": "Taking true branch", "snippet": "\t\tif (list == null || list.isEmpty()) {", "url": "https://github.com/xxx/toy_analysis/blob/8dab428880c995f4cfe31440cf8720868d4456a4/src/main/java/null_deref/EnvUtils.java", "methodName": "listToString"}, {"level": 1, "filename": "src/main/java/null_deref/EnvUtils.java", "line_number": 68, "column_number": -1, "description": "Taking true branch", "snippet": "\t\tif (list == null || list.isEmpty()) {", "url": "https://github.com/xxx/toy_analysis/blob/8dab428880c995f4cfe31440cf8720868d4456a4/src/main/java/null_deref/EnvUtils.java", "methodName": "listToString"}, {"level": 1, "filename": "src/main/java/null_deref/EnvUtils.java", "line_number": 69, "column_number": -1, "description": "", "snippet": "\t\t\treturn null;", "url": "https://github.com/xxx/toy_analysis/blob/8dab428880c995f4cfe31440cf8720868d4456a4/src/main/java/null_deref/EnvUtils.java", "methodName": "listToString"}, {"level": 1, "filename": "src/main/java/null_deref/EnvUtils.java", "line_number": 77, "column_number": -1, "description": "return from a call to String EnvUtils.listToString(List)", "snippet": "\t\treturn result.substring(0, result.length() - 1);", "url": "https://github.com/xxx/toy_analysis/blob/8dab428880c995f4cfe31440cf8720868d4456a4/src/main/java/null_deref/EnvUtils.java", "methodName": "listToString"}], "combined_records": [{"level": 1, "filename": "src/main/java/null_deref/EnvUtils.java", "line_number": 77, "column_number": -1, "description": "start of procedure listToString(...)", "snippet": "64.\n65.\tprivate static String listToString(List<String> list) {\n66.> \t\tif (list == null || list.isEmpty()) {\n67.> \t\t\treturn null;\n68.\t\t}\n69.\n70.\t\tStringBuilder result = new StringBuilder();\n71.\t\tfor (String string : list) {\n72.\t\t\tresult.append(string);\n73.\t\t\tresult.append(',');\n74.\t\t}\n75.\t\treturn result.substring(0, result.length() - 1);\n76.\t}\n", "url": "https://github.com/xxx/toy_analysis/blob/8dab428880c995f4cfe31440cf8720868d4456a4/src/main/java/null_deref/EnvUtils.java", "methodName": "listToString", "line_numbers": [67, 68, 68, 69, 77]}], "infer_explore": [{"level": 0, "filename": "src/main/java/null_deref/EnvUtils.java", "line_number": 30, "column_number": -1, "description": "start of procedure setVipserver(...)", "snippet": "27. \t}\n28. \n29. > \tpublic static void setVipserver(Map<String, List<String>> headers) {\n30. \t\tif (headers != null) {\n31. \t\t\theaders.put(\"vipserver\", Arrays.asList(\"hello\"));\n"}, {"level": 0, "filename": "src/main/java/null_deref/EnvUtils.java", "line_number": 31, "column_number": -1, "description": "Taking true branch", "snippet": "28. \n29. \tpublic static void setVipserver(Map<String, List<String>> headers) {\n30. > \t\tif (headers != null) {\n31. \t\t\theaders.put(\"vipserver\", Arrays.asList(\"hello\"));\n32. \t\t\tList<String> vipserverTagTmp = headers.get(\"vipserver\");\n"}, {"level": 0, "filename": "src/main/java/null_deref/EnvUtils.java", "line_number": 32, "column_number": -1, "description": "Skipping put(...): unknown method", "snippet": "29. \tpublic static void setVipserver(Map<String, List<String>> headers) {\n30. \t\tif (headers != null) {\n31. > \t\t\theaders.put(\"vipserver\", Arrays.asList(\"hello\"));\n32. \t\t\tList<String> vipserverTagTmp = headers.get(\"vipserver\");\n33. \n"}, {"level": 0, "filename": "src/main/java/null_deref/EnvUtils.java", "line_number": 33, "column_number": -1, "description": "", "snippet": "30. \t\tif (headers != null) {\n31. \t\t\theaders.put(\"vipserver\", Arrays.asList(\"hello\"));\n32. > \t\t\tList<String> vipserverTagTmp = headers.get(\"vipserver\");\n33. \n34. \t\t\tif (vipserverTagTmp == null) {\n"}, {"level": 0, "filename": "src/main/java/null_deref/EnvUtils.java", "line_number": 35, "column_number": -1, "description": "Taking false branch", "snippet": "32. \t\t\tList<String> vipserverTagTmp = headers.get(\"vipserver\");\n33. \n34. > \t\t\tif (vipserverTagTmp == null) {\n35. \t\t\t\tif (selfVipserverTag != null) {\n36. \t\t\t\t\tselfVipserverTag = null;\n"}, {"level": 0, "filename": "src/main/java/null_deref/EnvUtils.java", "line_number": 40, "column_number": -1, "description": "", "snippet": "37. \t\t\t\t}\n38. \t\t\t} else {\n39. > \t\t\t\tString vipserverTagTmpStr = listToString(vipserverTagTmp);\n40. \t\t\t\tif (!vipserverTagTmpStr.equals(selfVipserverTag)) {\n41. \t\t\t\t\tselfVipserverTag = vipserverTagTmpStr;\n"}, {"level": 1, "filename": "src/main/java/null_deref/EnvUtils.java", "line_number": 67, "column_number": -1, "description": "start of procedure listToString(...)", "snippet": "64. \t\n65. \n66. > \tprivate static String listToString(List<String> list) {\n67. \t\tif (list == null || list.isEmpty()) {\n68. \t\t\treturn null;\n"}, {"level": 1, "filename": "src/main/java/null_deref/EnvUtils.java", "line_number": 68, "column_number": -1, "description": "Taking true branch", "snippet": "65. \n66. \tprivate static String listToString(List<String> list) {\n67. > \t\tif (list == null || list.isEmpty()) {\n68. \t\t\treturn null;\n69. \t\t}\n"}, {"level": 1, "filename": "src/main/java/null_deref/EnvUtils.java", "line_number": 68, "column_number": -1, "description": "Taking true branch", "snippet": "65. \n66. \tprivate static String listToString(List<String> list) {\n67. > \t\tif (list == null || list.isEmpty()) {\n68. \t\t\treturn null;\n69. \t\t}\n"}, {"level": 1, "filename": "src/main/java/null_deref/EnvUtils.java", "line_number": 69, "column_number": -1, "description": "", "snippet": "66. \tprivate static String listToString(List<String> list) {\n67. \t\tif (list == null || list.isEmpty()) {\n68. > \t\t\treturn null;\n69. \t\t}\n70. \n"}, {"level": 1, "filename": "src/main/java/null_deref/EnvUtils.java", "line_number": 77, "column_number": -1, "description": "return from a call to String EnvUtils.listToString(List)", "snippet": "74. \t\t\tresult.append(',');\n75. \t\t}\n76. > \t\treturn result.substring(0, result.length() - 1);\n77. \t}\n78. }\n"}, {"level": 0, "filename": "src/main/java/null_deref/EnvUtils.java", "line_number": 41, "column_number": -1, "description": "", "snippet": "38. \t\t\t} else {\n39. \t\t\t\tString vipserverTagTmpStr = listToString(vipserverTagTmp);\n40. > \t\t\t\tif (!vipserverTagTmpStr.equals(selfVipserverTag)) {\n41. \t\t\t\t\tselfVipserverTag = vipserverTagTmpStr;\n42. \t\t\t\t}\n"}]}, {"url": "https://github.com/xxx/toy_analysis/blob/8dab428880c995f4cfe31440cf8720868d4456a4/src/main/java/null_deref/Fields2.java", "rawCode": "package null_deref;\n\npublic class Fields2 {\n\n\n\tpublic void safe(String anotherString) {\n\t\tObjectWithFields obj = new ObjectWithFields(5);\t \n\t\tobj.getNonNull().compareTo(anotherString);\n\t\t// check the source code of `getNonNull` and the constructor of ObjectWithFields to determine if \n\t\t// it is possible for getNonNull to return null;\n\t}\n\t\n\tpublic void safe2() {\n\t\tObjectWithFields obj = new ObjectWithFields(10);\n\t\tobj.getNonNull().toString();\n\t\t// check the source code of `getNonNull` and the constructor of ObjectWithFields to determine if \n\t\t// it is possible for getNonNull to return null;\n\t}\n\t\n\tpublic void unsafe3() {\n\t\tObjectWithFields obj = new ObjectWithFields(10);\t\n\t\tobj.getNullableValue().toString();\n\t\t// check the source code of `getNullableValue` and the constructor of ObjectWithFields to determine if \n\t\t// it is possible for getNullableValue to return null;\n\t}\n\t\n\tpublic void unsafe(String anotherString) {\n\t\tObjectWithFields obj = new ObjectWithFields(5);\n\t\tobj.getNull().compareTo(anotherString);\n\t}\n\t\n\tpublic void unsafe2(String anotherString) {\n\t\tObjectWithFields obj = new ObjectWithFields(1);\n\t\tif (obj.getNull() == null) {\n\t\t\tobj.getNull().compareTo(anotherString);\n\t\t}\n\t}\n\t\n}\n", "methodName": "null_deref.Fields2.unsafe2(java.lang.String):void", "exampleID": 30, "dataset": "infer", "filepath": "src/main/java/null_deref/Fields2.java", "line": 35, "sink": "getNull(obj)", "source": "getNull(obj)", "sourceLine": 35, "qualifier": "$$getNull(obj)/$ could return null, and is @@dereferenced/@", "steps": [{"line": 31, "source": "getNull(obj)", "filepath": "src/main/java/null_deref/ObjectWithFields.java", "methodName": "ObjectWithFields.getNull", "exampleID": 31}], "line_number": 35, "records": [{"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 31, "column_number": -1, "description": "start of procedure getNull()", "snippet": "\tpublic String getNull() {", "url": "https://github.com/xxx/toy_analysis/blob/8dab428880c995f4cfe31440cf8720868d4456a4/src/main/java/null_deref/ObjectWithFields.java", "methodName": "getNull"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 32, "column_number": -1, "description": "return from a call to String ObjectWithFields.getNull()", "snippet": "\t\treturn this.nullValue;", "url": "https://github.com/xxx/toy_analysis/blob/8dab428880c995f4cfe31440cf8720868d4456a4/src/main/java/null_deref/ObjectWithFields.java", "methodName": "getNull"}], "combined_records": [{"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 32, "column_number": -1, "description": "start of procedure getNull()", "snippet": "28.\t\n29.\tpublic String getNull() {\n30.> \t\treturn this.nullValue;\n31.\t}\n", "url": "https://github.com/xxx/toy_analysis/blob/8dab428880c995f4cfe31440cf8720868d4456a4/src/main/java/null_deref/ObjectWithFields.java", "methodName": "getNull", "line_numbers": [31, 32]}], "infer_explore": [{"level": 0, "filename": "src/main/java/null_deref/Fields2.java", "line_number": 32, "column_number": -1, "description": "start of procedure unsafe2(...)", "snippet": "29. \t}\n30. \t\n31. > \tpublic void unsafe2(String anotherString) {\n32. \t\tObjectWithFields obj = new ObjectWithFields(1);\n33. \t\tif (obj.getNull() == null) {\n"}, {"level": 0, "filename": "src/main/java/null_deref/Fields2.java", "line_number": 33, "column_number": -1, "description": "", "snippet": "30. \t\n31. \tpublic void unsafe2(String anotherString) {\n32. > \t\tObjectWithFields obj = new ObjectWithFields(1);\n33. \t\tif (obj.getNull() == null) {\n34. \t\t\tobj.getNull().compareTo(anotherString);\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 9, "column_number": -1, "description": "start of procedure ObjectWithFields(...)", "snippet": "6. \tprivate String nullableValue;\n7. \t\n8. > \tpublic ObjectWithFields(int times) {\n9. \t\tif (times <= 0) throw new RuntimeException();\n10. \t\tStringBuilder sb = new StringBuilder();\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 5, "column_number": -1, "description": "", "snippet": "2. public class ObjectWithFields {\n3. \t\n4. > \tprivate String nonNull = null;\n5. \tprivate final String nullValue = null;\n6. \tprivate String nullableValue;\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 6, "column_number": -1, "description": "", "snippet": "3. \t\n4. \tprivate String nonNull = null;\n5. > \tprivate final String nullValue = null;\n6. \tprivate String nullableValue;\n7. \t\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 10, "column_number": -1, "description": "Taking false branch", "snippet": "7. \t\n8. \tpublic ObjectWithFields(int times) {\n9. > \t\tif (times <= 0) throw new RuntimeException();\n10. \t\tStringBuilder sb = new StringBuilder();\n11. \t\tfor (int i = 0; i < times; i ++) {\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 11, "column_number": -1, "description": "Skipping StringBuilder(): unknown method", "snippet": "8. \tpublic ObjectWithFields(int times) {\n9. \t\tif (times <= 0) throw new RuntimeException();\n10. > \t\tStringBuilder sb = new StringBuilder();\n11. \t\tfor (int i = 0; i < times; i ++) {\n12. \t\t\tsb.append(\"non-empty string\");\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 12, "column_number": -1, "description": "Taking true branch", "snippet": "9. \t\tif (times <= 0) throw new RuntimeException();\n10. \t\tStringBuilder sb = new StringBuilder();\n11. > \t\tfor (int i = 0; i < times; i ++) {\n12. \t\t\tsb.append(\"non-empty string\");\n13. \t\t}\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 13, "column_number": -1, "description": "Skipping append(...): unknown method", "snippet": "10. \t\tStringBuilder sb = new StringBuilder();\n11. \t\tfor (int i = 0; i < times; i ++) {\n12. > \t\t\tsb.append(\"non-empty string\");\n13. \t\t}\n14. \t\tif (sb.length() >= 0) {\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 12, "column_number": -1, "description": "Taking false branch", "snippet": "9. \t\tif (times <= 0) throw new RuntimeException();\n10. \t\tStringBuilder sb = new StringBuilder();\n11. > \t\tfor (int i = 0; i < times; i ++) {\n12. \t\t\tsb.append(\"non-empty string\");\n13. \t\t}\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 15, "column_number": -1, "description": "Taking true branch", "snippet": "12. \t\t\tsb.append(\"non-empty string\");\n13. \t\t}\n14. > \t\tif (sb.length() >= 0) {\n15. \t\t\t// nonNull is always set to be non-null\n16. \t\t\tnonNull = sb.toString();\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 17, "column_number": -1, "description": "", "snippet": "14. \t\tif (sb.length() >= 0) {\n15. \t\t\t// nonNull is always set to be non-null\n16. > \t\t\tnonNull = sb.toString();\n17. \t\t}\n18. \t\t\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 20, "column_number": -1, "description": "", "snippet": "17. \t\t}\n18. \t\t\n19. > \t\tnullableValue = null;\n20. \t}\n21. \t\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 21, "column_number": -1, "description": "return from a call to ObjectWithFields.<init>(int)", "snippet": "18. \t\t\n19. \t\tnullableValue = null;\n20. > \t}\n21. \t\n22. \tpublic void setNullableValue(String value) {\n"}, {"level": 0, "filename": "src/main/java/null_deref/Fields2.java", "line_number": 34, "column_number": -1, "description": "", "snippet": "31. \tpublic void unsafe2(String anotherString) {\n32. \t\tObjectWithFields obj = new ObjectWithFields(1);\n33. > \t\tif (obj.getNull() == null) {\n34. \t\t\tobj.getNull().compareTo(anotherString);\n35. \t\t}\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 31, "column_number": -1, "description": "start of procedure getNull()", "snippet": "28. \t}\n29. \t\n30. > \tpublic String getNull() {\n31. \t\treturn this.nullValue;\n32. \t}\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 32, "column_number": -1, "description": "return from a call to String ObjectWithFields.getNull()", "snippet": "29. \t\n30. \tpublic String getNull() {\n31. > \t\treturn this.nullValue;\n32. \t}\n33. \t\n"}, {"level": 0, "filename": "src/main/java/null_deref/Fields2.java", "line_number": 34, "column_number": -1, "description": "Taking true branch", "snippet": "31. \tpublic void unsafe2(String anotherString) {\n32. \t\tObjectWithFields obj = new ObjectWithFields(1);\n33. > \t\tif (obj.getNull() == null) {\n34. \t\t\tobj.getNull().compareTo(anotherString);\n35. \t\t}\n"}, {"level": 0, "filename": "src/main/java/null_deref/Fields2.java", "line_number": 35, "column_number": -1, "description": "", "snippet": "32. \t\tObjectWithFields obj = new ObjectWithFields(1);\n33. \t\tif (obj.getNull() == null) {\n34. > \t\t\tobj.getNull().compareTo(anotherString);\n35. \t\t}\n36. \t}\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 31, "column_number": -1, "description": "start of procedure getNull()", "snippet": "28. \t}\n29. \t\n30. > \tpublic String getNull() {\n31. \t\treturn this.nullValue;\n32. \t}\n"}, {"level": 1, "filename": "src/main/java/null_deref/ObjectWithFields.java", "line_number": 32, "column_number": -1, "description": "return from a call to String ObjectWithFields.getNull()", "snippet": "29. \t\n30. \tpublic String getNull() {\n31. > \t\treturn this.nullValue;\n32. \t}\n33. \t\n"}, {"level": 0, "filename": "src/main/java/null_deref/Fields2.java", "line_number": 35, "column_number": -1, "description": "", "snippet": "32. \t\tObjectWithFields obj = new ObjectWithFields(1);\n33. \t\tif (obj.getNull() == null) {\n34. > \t\t\tobj.getNull().compareTo(anotherString);\n35. \t\t}\n36. \t}\n"}]}, {"url": "https://github.com/xxx/toy_analysis/blob/8dab428880c995f4cfe31440cf8720868d4456a4/src/main/java/null_deref/NonStandardNullChecks.java", "rawCode": "package null_deref;\n\nimport java.util.Map;\nimport java.util.Objects;\nimport java.util.function.Supplier;\n\npublic class NonStandardNullChecks {\n\t\n\tpublic void safe() {\n\t\tString nullValue = null;\n\t\tif (Objects.nonNull(nullValue)) {\n\t\t\tnullValue.compareTo(\"since the nonNull check will fail, this block of code is unreachable\");\n\t\t}\n\t}\n\t\n\tpublic String decorateText(Object text) {\n\t\t// simplified from https://github.com/microsoft/azure-maven-plugins\n\t\tSupplier<String> dft = null;\n\t\tString result = null;\n\t\tif (text instanceof String) {\n\t\t\tresult = (String) text;\n\t\t}\n\n\t\treturn Objects.nonNull(dft) ? dft.get() : result;\n\t}\n\n\n\tpublic char[] get(Map<String, String> db, String name) {\n\t\t// simplified from https://github.com/tronprotocol/java-tron\n\t\tString bytesCapsule = db.containsKey(name) ? db.get(name): null;\n\t\tif (Objects.nonNull(bytesCapsule)) {\n\t\t\treturn bytesCapsule.toCharArray();\n\t\t}\n\t\treturn null;\n\t}\n\t\n\tpublic void unsafe() {\n\t\tString nullValue = null;\n\t\tif (Objects.isNull(nullValue)) {\n\t\t\tnullValue.toString();\n\t\t}\n\t}\n\n\n}\n", "methodName": "null_deref.NonStandardNullChecks.unsafe():void", "exampleID": 32, "dataset": "infer", "filepath": "src/main/java/null_deref/NonStandardNullChecks.java", "line": 40, "sink": "nullValue", "source": "nullValue", "sourceLine": 38, "qualifier": "$$nullValue/$ could be null, and is @@dereferenced/@", "steps": [{"line": 38, "source": "nullValue", "filepath": "src/main/java/null_deref/NonStandardNullChecks.java", "methodName": "null_deref.NonStandardNullChecks.unsafe():void", "exampleID": 33}], "line_number": 38, "records": [], "combined_records": [], "infer_explore": [{"level": 0, "filename": "src/main/java/null_deref/NonStandardNullChecks.java", "line_number": 37, "column_number": -1, "description": "start of procedure unsafe()", "snippet": "34. \t}\n35. \t\n36. > \tpublic void unsafe() {\n37. \t\tString nullValue = null;\n38. \t\tif (Objects.isNull(nullValue)) {\n"}, {"level": 0, "filename": "src/main/java/null_deref/NonStandardNullChecks.java", "line_number": 38, "column_number": -1, "description": "", "snippet": "35. \t\n36. \tpublic void unsafe() {\n37. > \t\tString nullValue = null;\n38. \t\tif (Objects.isNull(nullValue)) {\n39. \t\t\tnullValue.toString();\n"}, {"level": 0, "filename": "src/main/java/null_deref/NonStandardNullChecks.java", "line_number": 39, "column_number": -1, "description": "Taking true branch", "snippet": "36. \tpublic void unsafe() {\n37. \t\tString nullValue = null;\n38. > \t\tif (Objects.isNull(nullValue)) {\n39. \t\t\tnullValue.toString();\n40. \t\t}\n"}, {"level": 0, "filename": "src/main/java/null_deref/NonStandardNullChecks.java", "line_number": 40, "column_number": -1, "description": "", "snippet": "37. \t\tString nullValue = null;\n38. \t\tif (Objects.isNull(nullValue)) {\n39. > \t\t\tnullValue.toString();\n40. \t\t}\n41. \t}\n"}]}, {"url": "https://github.com/xxx/toy_analysis/blob/8dab428880c995f4cfe31440cf8720868d4456a4/src/main/java/null_deref/EnvUtils.java", "rawCode": "package null_deref;\n\nimport java.util.Arrays;\nimport java.util.List;\nimport java.util.Map;\n\npublic class EnvUtils {\n\tstatic String selfAmoryTag;\n\tstatic String selfVipserverTag;\n\tstatic String selfLocationTag;\n\n\tpublic static void setSelfEnv(Map<String, List<String>> headers) {\n\t\tif (headers != null) {\n\t\t\theaders.put(\"amory\", Arrays.asList(\"hello\"));\n\t\t\tList<String> amoryTagTmp = headers.get(\"amory\");\n\n\t\t\tif (amoryTagTmp == null) {\n\t\t\t\tif (selfAmoryTag != null) {\n\t\t\t\t\tselfAmoryTag = null;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tString amoryTagTmpStr = listToString(amoryTagTmp);\n\t\t\t\tif (!amoryTagTmpStr.equals(selfAmoryTag)) {\n\t\t\t\t\tselfAmoryTag = amoryTagTmpStr;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic static void setVipserver(Map<String, List<String>> headers) {\n\t\tif (headers != null) {\n\t\t\theaders.put(\"vipserver\", Arrays.asList(\"hello\"));\n\t\t\tList<String> vipserverTagTmp = headers.get(\"vipserver\");\n\n\t\t\tif (vipserverTagTmp == null) {\n\t\t\t\tif (selfVipserverTag != null) {\n\t\t\t\t\tselfVipserverTag = null;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tString vipserverTagTmpStr = listToString(vipserverTagTmp);\n\t\t\t\tif (!vipserverTagTmpStr.equals(selfVipserverTag)) {\n\t\t\t\t\tselfVipserverTag = vipserverTagTmpStr;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic static void setLocation(Map<String, List<String>> headers) {\n\t\tif (headers != null) {\n\t\t\theaders.put(\"location\", Arrays.asList(\"hello\"));\n\t\t\tList<String> locationTagTmp = headers.get(\"location\");\n\n\t\t\tif (locationTagTmp == null) {\n\t\t\t\tif (selfLocationTag != null) {\n\t\t\t\t\tselfLocationTag = null;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tString location = listToString(locationTagTmp);\n\t\t\t\tif (!listToString(locationTagTmp).equals(selfLocationTag)) {\n\t\t\t\t\tselfLocationTag = location;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\n\tprivate static String listToString(List<String> list) {\n\t\tif (list == null || list.isEmpty()) {\n\t\t\treturn null;\n\t\t}\n\n\t\tStringBuilder result = new StringBuilder();\n\t\tfor (String string : list) {\n\t\t\tresult.append(string);\n\t\t\tresult.append(',');\n\t\t}\n\t\treturn result.substring(0, result.length() - 1);\n\t}\n}\n", "methodName": "null_deref.EnvUtils.setLocation(java.util.Map):void", "exampleID": 34, "dataset": "infer", "filepath": "src/main/java/null_deref/EnvUtils.java", "line": 59, "sink": "listToString(locationTagTmp)", "source": "listToString(locationTagTmp)", "sourceLine": 59, "qualifier": "$$listToString(locationTagTmp)/$ could return null, and is @@dereferenced/@", "steps": [{"line": 67, "source": "listToString(locationTagTmp)", "filepath": "src/main/java/null_deref/EnvUtils.java", "methodName": "EnvUtils.listToString", "exampleID": 35}], "line_number": 59, "records": [{"level": 1, "filename": "src/main/java/null_deref/EnvUtils.java", "line_number": 67, "column_number": -1, "description": "start of procedure listToString(...)", "snippet": "\tprivate static String listToString(List<String> list) {", "url": "https://github.com/xxx/toy_analysis/blob/8dab428880c995f4cfe31440cf8720868d4456a4/src/main/java/null_deref/EnvUtils.java", "methodName": "listToString"}, {"level": 1, "filename": "src/main/java/null_deref/EnvUtils.java", "line_number": 68, "column_number": -1, "description": "Taking true branch", "snippet": "\t\tif (list == null || list.isEmpty()) {", "url": "https://github.com/xxx/toy_analysis/blob/8dab428880c995f4cfe31440cf8720868d4456a4/src/main/java/null_deref/EnvUtils.java", "methodName": "listToString"}, {"level": 1, "filename": "src/main/java/null_deref/EnvUtils.java", "line_number": 68, "column_number": -1, "description": "Taking true branch", "snippet": "\t\tif (list == null || list.isEmpty()) {", "url": "https://github.com/xxx/toy_analysis/blob/8dab428880c995f4cfe31440cf8720868d4456a4/src/main/java/null_deref/EnvUtils.java", "methodName": "listToString"}, {"level": 1, "filename": "src/main/java/null_deref/EnvUtils.java", "line_number": 69, "column_number": -1, "description": "", "snippet": "\t\t\treturn null;", "url": "https://github.com/xxx/toy_analysis/blob/8dab428880c995f4cfe31440cf8720868d4456a4/src/main/java/null_deref/EnvUtils.java", "methodName": "listToString"}, {"level": 1, "filename": "src/main/java/null_deref/EnvUtils.java", "line_number": 77, "column_number": -1, "description": "return from a call to String EnvUtils.listToString(List)", "snippet": "\t\treturn result.substring(0, result.length() - 1);", "url": "https://github.com/xxx/toy_analysis/blob/8dab428880c995f4cfe31440cf8720868d4456a4/src/main/java/null_deref/EnvUtils.java", "methodName": "listToString"}], "combined_records": [{"level": 1, "filename": "src/main/java/null_deref/EnvUtils.java", "line_number": 77, "column_number": -1, "description": "start of procedure listToString(...)", "snippet": "64.\n65.\tprivate static String listToString(List<String> list) {\n66.> \t\tif (list == null || list.isEmpty()) {\n67.> \t\t\treturn null;\n68.\t\t}\n69.\n70.\t\tStringBuilder result = new StringBuilder();\n71.\t\tfor (String string : list) {\n72.\t\t\tresult.append(string);\n73.\t\t\tresult.append(',');\n74.\t\t}\n75.\t\treturn result.substring(0, result.length() - 1);\n76.\t}\n", "url": "https://github.com/xxx/toy_analysis/blob/8dab428880c995f4cfe31440cf8720868d4456a4/src/main/java/null_deref/EnvUtils.java", "methodName": "listToString", "line_numbers": [67, 68, 68, 69, 77]}], "infer_explore": [{"level": 0, "filename": "src/main/java/null_deref/EnvUtils.java", "line_number": 48, "column_number": -1, "description": "start of procedure setLocation(...)", "snippet": "45. \t}\n46. \n47. > \tpublic static void setLocation(Map<String, List<String>> headers) {\n48. \t\tif (headers != null) {\n49. \t\t\theaders.put(\"location\", Arrays.asList(\"hello\"));\n"}, {"level": 0, "filename": "src/main/java/null_deref/EnvUtils.java", "line_number": 49, "column_number": -1, "description": "Taking true branch", "snippet": "46. \n47. \tpublic static void setLocation(Map<String, List<String>> headers) {\n48. > \t\tif (headers != null) {\n49. \t\t\theaders.put(\"location\", Arrays.asList(\"hello\"));\n50. \t\t\tList<String> locationTagTmp = headers.get(\"location\");\n"}, {"level": 0, "filename": "src/main/java/null_deref/EnvUtils.java", "line_number": 50, "column_number": -1, "description": "Skipping put(...): unknown method", "snippet": "47. \tpublic static void setLocation(Map<String, List<String>> headers) {\n48. \t\tif (headers != null) {\n49. > \t\t\theaders.put(\"location\", Arrays.asList(\"hello\"));\n50. \t\t\tList<String> locationTagTmp = headers.get(\"location\");\n51. \n"}, {"level": 0, "filename": "src/main/java/null_deref/EnvUtils.java", "line_number": 51, "column_number": -1, "description": "", "snippet": "48. \t\tif (headers != null) {\n49. \t\t\theaders.put(\"location\", Arrays.asList(\"hello\"));\n50. > \t\t\tList<String> locationTagTmp = headers.get(\"location\");\n51. \n52. \t\t\tif (locationTagTmp == null) {\n"}, {"level": 0, "filename": "src/main/java/null_deref/EnvUtils.java", "line_number": 53, "column_number": -1, "description": "Taking false branch", "snippet": "50. \t\t\tList<String> locationTagTmp = headers.get(\"location\");\n51. \n52. > \t\t\tif (locationTagTmp == null) {\n53. \t\t\t\tif (selfLocationTag != null) {\n54. \t\t\t\t\tselfLocationTag = null;\n"}, {"level": 0, "filename": "src/main/java/null_deref/EnvUtils.java", "line_number": 58, "column_number": -1, "description": "", "snippet": "55. \t\t\t\t}\n56. \t\t\t} else {\n57. > \t\t\t\tString location = listToString(locationTagTmp);\n58. \t\t\t\tif (!listToString(locationTagTmp).equals(selfLocationTag)) {\n59. \t\t\t\t\tselfLocationTag = location;\n"}, {"level": 1, "filename": "src/main/java/null_deref/EnvUtils.java", "line_number": 67, "column_number": -1, "description": "start of procedure listToString(...)", "snippet": "64. \t\n65. \n66. > \tprivate static String listToString(List<String> list) {\n67. \t\tif (list == null || list.isEmpty()) {\n68. \t\t\treturn null;\n"}, {"level": 1, "filename": "src/main/java/null_deref/EnvUtils.java", "line_number": 68, "column_number": -1, "description": "Taking true branch", "snippet": "65. \n66. \tprivate static String listToString(List<String> list) {\n67. > \t\tif (list == null || list.isEmpty()) {\n68. \t\t\treturn null;\n69. \t\t}\n"}, {"level": 1, "filename": "src/main/java/null_deref/EnvUtils.java", "line_number": 68, "column_number": -1, "description": "Taking true branch", "snippet": "65. \n66. \tprivate static String listToString(List<String> list) {\n67. > \t\tif (list == null || list.isEmpty()) {\n68. \t\t\treturn null;\n69. \t\t}\n"}, {"level": 1, "filename": "src/main/java/null_deref/EnvUtils.java", "line_number": 69, "column_number": -1, "description": "", "snippet": "66. \tprivate static String listToString(List<String> list) {\n67. \t\tif (list == null || list.isEmpty()) {\n68. > \t\t\treturn null;\n69. \t\t}\n70. \n"}, {"level": 1, "filename": "src/main/java/null_deref/EnvUtils.java", "line_number": 77, "column_number": -1, "description": "return from a call to String EnvUtils.listToString(List)", "snippet": "74. \t\t\tresult.append(',');\n75. \t\t}\n76. > \t\treturn result.substring(0, result.length() - 1);\n77. \t}\n78. }\n"}, {"level": 0, "filename": "src/main/java/null_deref/EnvUtils.java", "line_number": 59, "column_number": -1, "description": "", "snippet": "56. \t\t\t} else {\n57. \t\t\t\tString location = listToString(locationTagTmp);\n58. > \t\t\t\tif (!listToString(locationTagTmp).equals(selfLocationTag)) {\n59. \t\t\t\t\tselfLocationTag = location;\n60. \t\t\t\t}\n"}, {"level": 1, "filename": "src/main/java/null_deref/EnvUtils.java", "line_number": 67, "column_number": -1, "description": "start of procedure listToString(...)", "snippet": "64. \t\n65. \n66. > \tprivate static String listToString(List<String> list) {\n67. \t\tif (list == null || list.isEmpty()) {\n68. \t\t\treturn null;\n"}, {"level": 1, "filename": "src/main/java/null_deref/EnvUtils.java", "line_number": 68, "column_number": -1, "description": "Taking true branch", "snippet": "65. \n66. \tprivate static String listToString(List<String> list) {\n67. > \t\tif (list == null || list.isEmpty()) {\n68. \t\t\treturn null;\n69. \t\t}\n"}, {"level": 1, "filename": "src/main/java/null_deref/EnvUtils.java", "line_number": 68, "column_number": -1, "description": "Taking true branch", "snippet": "65. \n66. \tprivate static String listToString(List<String> list) {\n67. > \t\tif (list == null || list.isEmpty()) {\n68. \t\t\treturn null;\n69. \t\t}\n"}, {"level": 1, "filename": "src/main/java/null_deref/EnvUtils.java", "line_number": 69, "column_number": -1, "description": "", "snippet": "66. \tprivate static String listToString(List<String> list) {\n67. \t\tif (list == null || list.isEmpty()) {\n68. > \t\t\treturn null;\n69. \t\t}\n70. \n"}, {"level": 1, "filename": "src/main/java/null_deref/EnvUtils.java", "line_number": 77, "column_number": -1, "description": "return from a call to String EnvUtils.listToString(List)", "snippet": "74. \t\t\tresult.append(',');\n75. \t\t}\n76. > \t\treturn result.substring(0, result.length() - 1);\n77. \t}\n78. }\n"}, {"level": 0, "filename": "src/main/java/null_deref/EnvUtils.java", "line_number": 59, "column_number": -1, "description": "", "snippet": "56. \t\t\t} else {\n57. \t\t\t\tString location = listToString(locationTagTmp);\n58. > \t\t\t\tif (!listToString(locationTagTmp).equals(selfLocationTag)) {\n59. \t\t\t\t\tselfLocationTag = location;\n60. \t\t\t\t}\n"}]}]